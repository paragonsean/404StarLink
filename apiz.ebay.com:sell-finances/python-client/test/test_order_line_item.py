# coding: utf-8

"""
    eBay Finances API

    This API is used to retrieve seller payouts and monetary transaction details related to those payouts.

    The version of the OpenAPI document: v1.15.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_line_item import OrderLineItem

class TestOrderLineItem(unittest.TestCase):
    """OrderLineItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderLineItem:
        """Test OrderLineItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderLineItem`
        """
        model = OrderLineItem()
        if include_optional:
            return OrderLineItem(
                fee_basis_amount = openapi_client.models.amount.Amount(
                    converted_from_currency = '', 
                    converted_from_value = '', 
                    currency = '', 
                    exchange_rate = '', 
                    value = '', ),
                line_item_id = '',
                marketplace_fees = [
                    openapi_client.models.fee.Fee(
                        amount = openapi_client.models.amount.Amount(
                            converted_from_currency = '', 
                            converted_from_value = '', 
                            currency = '', 
                            exchange_rate = '', 
                            value = '', ), 
                        fee_jurisdiction = openapi_client.models.fee_jurisdiction.FeeJurisdiction(
                            region_name = '', 
                            region_type = '', ), 
                        fee_memo = '', 
                        fee_type = '', )
                    ]
            )
        else:
            return OrderLineItem(
        )
        """

    def testOrderLineItem(self):
        """Test OrderLineItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
