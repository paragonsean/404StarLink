# coding: utf-8

"""
    sms77.io API

    sms77.io Swagger API. Get your API-Key now at sms77.io.

    The version of the OpenAPI document: 1.0.0
    Contact: support@sms77.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sms200_response import Sms200Response

class TestSms200Response(unittest.TestCase):
    """Sms200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Sms200Response:
        """Test Sms200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Sms200Response`
        """
        model = Sms200Response()
        if include_optional:
            return Sms200Response(
                balance = 1.337,
                debug = '',
                messages = [
                    openapi_client.models.sms_200_response_messages_inner.Sms_200_response_messages_inner(
                        encoding = '', 
                        error = '', 
                        error_text = '', 
                        id = '', 
                        messages = [
                            ''
                            ], 
                        parts = 56, 
                        price = 56, 
                        recipient = '', 
                        sender = '', 
                        success = True, 
                        text = '', )
                    ],
                sms_type = 'economy',
                success = '',
                total_price = 1.337
            )
        else:
            return Sms200Response(
        )
        """

    def testSms200Response(self):
        """Test Sms200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
