# coding: utf-8

"""
    sms77.io API

    sms77.io Swagger API. Get your API-Key now at sms77.io.

    The version of the OpenAPI document: 1.0.0
    Contact: support@sms77.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictFloat, StrictInt, StrictStr, field_validator
from typing import Optional, Union
from typing_extensions import Annotated
from openapi_client.models.sms200_response import Sms200Response

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class SmsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def sms(
        self,
        text: Annotated[StrictStr, Field(description="The actual text message to send.")],
        to: Annotated[StrictStr, Field(description="The recipient number or group name.")],
        var_from: Annotated[Optional[StrictStr], Field(description="Set a custom sender name.")] = None,
        foreign_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="Identifier to return in callbacks.")] = None,
        label: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A custom label.")] = None,
        udh: Annotated[Optional[StrictStr], Field(description="A custom User Data Header.")] = None,
        delay: Annotated[Optional[StrictStr], Field(description="Date/Time for delayed dispatch.")] = None,
        debug: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Disable message sending.")] = None,
        no_reload: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Enable sending of duplicated messages within 180 seconds.")] = None,
        unicode: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Force unicode encoding. Reduces sms length to 70 chars.")] = None,
        flash: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Send as flash.")] = None,
        utf8: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Force UTF8 encoding.")] = None,
        details: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Attach message details to response.")] = None,
        return_msg_id: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Attach message ID to second row in a text response.")] = None,
        var_json: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Return a detailed JSON response.")] = None,
        performance_tracking: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Enable performance tracking for found URLs.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Sms200Response:
        """sms


        :param text: The actual text message to send. (required)
        :type text: str
        :param to: The recipient number or group name. (required)
        :type to: str
        :param var_from: Set a custom sender name.
        :type var_from: str
        :param foreign_id: Identifier to return in callbacks.
        :type foreign_id: str
        :param label: A custom label.
        :type label: str
        :param udh: A custom User Data Header.
        :type udh: str
        :param delay: Date/Time for delayed dispatch.
        :type delay: str
        :param debug: Disable message sending.
        :type debug: float
        :param no_reload: Enable sending of duplicated messages within 180 seconds.
        :type no_reload: float
        :param unicode: Force unicode encoding. Reduces sms length to 70 chars.
        :type unicode: float
        :param flash: Send as flash.
        :type flash: float
        :param utf8: Force UTF8 encoding.
        :type utf8: float
        :param details: Attach message details to response.
        :type details: float
        :param return_msg_id: Attach message ID to second row in a text response.
        :type return_msg_id: float
        :param var_json: Return a detailed JSON response.
        :type var_json: float
        :param performance_tracking: Enable performance tracking for found URLs.
        :type performance_tracking: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sms_serialize(
            text=text,
            to=to,
            var_from=var_from,
            foreign_id=foreign_id,
            label=label,
            udh=udh,
            delay=delay,
            debug=debug,
            no_reload=no_reload,
            unicode=unicode,
            flash=flash,
            utf8=utf8,
            details=details,
            return_msg_id=return_msg_id,
            var_json=var_json,
            performance_tracking=performance_tracking,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Sms200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sms_with_http_info(
        self,
        text: Annotated[StrictStr, Field(description="The actual text message to send.")],
        to: Annotated[StrictStr, Field(description="The recipient number or group name.")],
        var_from: Annotated[Optional[StrictStr], Field(description="Set a custom sender name.")] = None,
        foreign_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="Identifier to return in callbacks.")] = None,
        label: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A custom label.")] = None,
        udh: Annotated[Optional[StrictStr], Field(description="A custom User Data Header.")] = None,
        delay: Annotated[Optional[StrictStr], Field(description="Date/Time for delayed dispatch.")] = None,
        debug: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Disable message sending.")] = None,
        no_reload: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Enable sending of duplicated messages within 180 seconds.")] = None,
        unicode: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Force unicode encoding. Reduces sms length to 70 chars.")] = None,
        flash: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Send as flash.")] = None,
        utf8: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Force UTF8 encoding.")] = None,
        details: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Attach message details to response.")] = None,
        return_msg_id: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Attach message ID to second row in a text response.")] = None,
        var_json: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Return a detailed JSON response.")] = None,
        performance_tracking: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Enable performance tracking for found URLs.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Sms200Response]:
        """sms


        :param text: The actual text message to send. (required)
        :type text: str
        :param to: The recipient number or group name. (required)
        :type to: str
        :param var_from: Set a custom sender name.
        :type var_from: str
        :param foreign_id: Identifier to return in callbacks.
        :type foreign_id: str
        :param label: A custom label.
        :type label: str
        :param udh: A custom User Data Header.
        :type udh: str
        :param delay: Date/Time for delayed dispatch.
        :type delay: str
        :param debug: Disable message sending.
        :type debug: float
        :param no_reload: Enable sending of duplicated messages within 180 seconds.
        :type no_reload: float
        :param unicode: Force unicode encoding. Reduces sms length to 70 chars.
        :type unicode: float
        :param flash: Send as flash.
        :type flash: float
        :param utf8: Force UTF8 encoding.
        :type utf8: float
        :param details: Attach message details to response.
        :type details: float
        :param return_msg_id: Attach message ID to second row in a text response.
        :type return_msg_id: float
        :param var_json: Return a detailed JSON response.
        :type var_json: float
        :param performance_tracking: Enable performance tracking for found URLs.
        :type performance_tracking: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sms_serialize(
            text=text,
            to=to,
            var_from=var_from,
            foreign_id=foreign_id,
            label=label,
            udh=udh,
            delay=delay,
            debug=debug,
            no_reload=no_reload,
            unicode=unicode,
            flash=flash,
            utf8=utf8,
            details=details,
            return_msg_id=return_msg_id,
            var_json=var_json,
            performance_tracking=performance_tracking,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Sms200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sms_without_preload_content(
        self,
        text: Annotated[StrictStr, Field(description="The actual text message to send.")],
        to: Annotated[StrictStr, Field(description="The recipient number or group name.")],
        var_from: Annotated[Optional[StrictStr], Field(description="Set a custom sender name.")] = None,
        foreign_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="Identifier to return in callbacks.")] = None,
        label: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A custom label.")] = None,
        udh: Annotated[Optional[StrictStr], Field(description="A custom User Data Header.")] = None,
        delay: Annotated[Optional[StrictStr], Field(description="Date/Time for delayed dispatch.")] = None,
        debug: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Disable message sending.")] = None,
        no_reload: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Enable sending of duplicated messages within 180 seconds.")] = None,
        unicode: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Force unicode encoding. Reduces sms length to 70 chars.")] = None,
        flash: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Send as flash.")] = None,
        utf8: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Force UTF8 encoding.")] = None,
        details: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Attach message details to response.")] = None,
        return_msg_id: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Attach message ID to second row in a text response.")] = None,
        var_json: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Return a detailed JSON response.")] = None,
        performance_tracking: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Enable performance tracking for found URLs.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """sms


        :param text: The actual text message to send. (required)
        :type text: str
        :param to: The recipient number or group name. (required)
        :type to: str
        :param var_from: Set a custom sender name.
        :type var_from: str
        :param foreign_id: Identifier to return in callbacks.
        :type foreign_id: str
        :param label: A custom label.
        :type label: str
        :param udh: A custom User Data Header.
        :type udh: str
        :param delay: Date/Time for delayed dispatch.
        :type delay: str
        :param debug: Disable message sending.
        :type debug: float
        :param no_reload: Enable sending of duplicated messages within 180 seconds.
        :type no_reload: float
        :param unicode: Force unicode encoding. Reduces sms length to 70 chars.
        :type unicode: float
        :param flash: Send as flash.
        :type flash: float
        :param utf8: Force UTF8 encoding.
        :type utf8: float
        :param details: Attach message details to response.
        :type details: float
        :param return_msg_id: Attach message ID to second row in a text response.
        :type return_msg_id: float
        :param var_json: Return a detailed JSON response.
        :type var_json: float
        :param performance_tracking: Enable performance tracking for found URLs.
        :type performance_tracking: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sms_serialize(
            text=text,
            to=to,
            var_from=var_from,
            foreign_id=foreign_id,
            label=label,
            udh=udh,
            delay=delay,
            debug=debug,
            no_reload=no_reload,
            unicode=unicode,
            flash=flash,
            utf8=utf8,
            details=details,
            return_msg_id=return_msg_id,
            var_json=var_json,
            performance_tracking=performance_tracking,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Sms200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sms_serialize(
        self,
        text,
        to,
        var_from,
        foreign_id,
        label,
        udh,
        delay,
        debug,
        no_reload,
        unicode,
        flash,
        utf8,
        details,
        return_msg_id,
        var_json,
        performance_tracking,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if text is not None:
            
            _query_params.append(('text', text))
            
        if to is not None:
            
            _query_params.append(('to', to))
            
        if var_from is not None:
            
            _query_params.append(('from', var_from))
            
        if foreign_id is not None:
            
            _query_params.append(('foreign_id', foreign_id))
            
        if label is not None:
            
            _query_params.append(('label', label))
            
        if udh is not None:
            
            _query_params.append(('udh', udh))
            
        if delay is not None:
            
            _query_params.append(('delay', delay))
            
        if debug is not None:
            
            _query_params.append(('debug', debug))
            
        if no_reload is not None:
            
            _query_params.append(('no_reload', no_reload))
            
        if unicode is not None:
            
            _query_params.append(('unicode', unicode))
            
        if flash is not None:
            
            _query_params.append(('flash', flash))
            
        if utf8 is not None:
            
            _query_params.append(('utf8', utf8))
            
        if details is not None:
            
            _query_params.append(('details', details))
            
        if return_msg_id is not None:
            
            _query_params.append(('return_msg_id', return_msg_id))
            
        if var_json is not None:
            
            _query_params.append(('json', var_json))
            
        if performance_tracking is not None:
            
            _query_params.append(('performance_tracking', performance_tracking))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'text/plain'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sms',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


