# coding: utf-8

"""
    MotaWord API

    Use MotaWord API to post and track your translation projects.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.user_api import UserApi


class TestUserApi(unittest.TestCase):
    """UserApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UserApi()

    def tearDown(self) -> None:
        pass

    def test_approve_vendor_application(self) -> None:
        """Test case for approve_vendor_application

        """
        pass

    def test_create_user(self) -> None:
        """Test case for create_user

        Create a new user
        """
        pass

    def test_delete_account(self) -> None:
        """Test case for delete_account

        Delete your account
        """
        pass

    def test_delete_user_account(self) -> None:
        """Test case for delete_user_account

        Delete requester account
        """
        pass

    def test_downgrade_proofreader(self) -> None:
        """Test case for downgrade_proofreader

        """
        pass

    def test_downgrade_user_proofreader(self) -> None:
        """Test case for downgrade_user_proofreader

        """
        pass

    def test_freeze_account(self) -> None:
        """Test case for freeze_account

        Freeze account
        """
        pass

    def test_freeze_user_account(self) -> None:
        """Test case for freeze_user_account

        Freeze requester account for project notifications
        """
        pass

    def test_get_all_vendor_tags(self) -> None:
        """Test case for get_all_vendor_tags

        Returns all vendor tags for vendors filter
        """
        pass

    def test_get_earnings(self) -> None:
        """Test case for get_earnings

        View your vendor earnings
        """
        pass

    def test_get_filtered_vendors(self) -> None:
        """Test case for get_filtered_vendors

        Filter vendors based on provided parameters
        """
        pass

    def test_get_me(self) -> None:
        """Test case for get_me

        View your account info
        """
        pass

    def test_get_payment_info(self) -> None:
        """Test case for get_payment_info

        View your payment and billing info
        """
        pass

    def test_get_permissions(self) -> None:
        """Test case for get_permissions

        View your permissions
        """
        pass

    def test_get_responsivity(self) -> None:
        """Test case for get_responsivity

        View your vendor responsiveness
        """
        pass

    def test_get_stats(self) -> None:
        """Test case for get_stats

        View your account statistics
        """
        pass

    def test_get_this_user_groups(self) -> None:
        """Test case for get_this_user_groups

        Returns a list of user groups that this user belongs to.
        """
        pass

    def test_get_user(self) -> None:
        """Test case for get_user

        Get user information, including client or vendor specific info.
        """
        pass

    def test_get_user_earnings(self) -> None:
        """Test case for get_user_earnings

        Returns your vendor earnings. Includes real-time earnings from ongoing projects, and fixed earnings from completed projects. Also includes total earnings and string edits.
        """
        pass

    def test_get_user_groups(self) -> None:
        """Test case for get_user_groups

        View your user groups
        """
        pass

    def test_get_user_payment_info(self) -> None:
        """Test case for get_user_payment_info

        View user's payment and billing info
        """
        pass

    def test_get_user_permissions(self) -> None:
        """Test case for get_user_permissions

        Returns a list of permissions that this user is authorized for.
        """
        pass

    def test_get_user_popular_pairs(self) -> None:
        """Test case for get_user_popular_pairs

        Returns the language pairs that the user has ordered most.
        """
        pass

    def test_get_user_project_stats(self) -> None:
        """Test case for get_user_project_stats

        Returns a user's project statistics.
        """
        pass

    def test_get_user_responsivity(self) -> None:
        """Test case for get_user_responsivity

        Returns a user's vendor responsivity stats
        """
        pass

    def test_get_user_stats(self) -> None:
        """Test case for get_user_stats

        Returns a user's client and vendor statistics. This used to be called \"summary\" (\\@deprecated).
        """
        pass

    def test_get_users(self) -> None:
        """Test case for get_users

        Get a list of platform users
        """
        pass

    def test_log_location(self) -> None:
        """Test case for log_location

        Log user's current location. This data is used in our Intelligent Project Manager for various data analysis, including project prioritization for vendors and account validation.
        """
        pass

    def test_make_proofreader(self) -> None:
        """Test case for make_proofreader

        """
        pass

    def test_make_user_proofreader(self) -> None:
        """Test case for make_user_proofreader

        """
        pass

    def test_reject_vendor_application(self) -> None:
        """Test case for reject_vendor_application

        """
        pass

    def test_send_email_confirmation(self) -> None:
        """Test case for send_email_confirmation

        Sends email confirmation email for current user
        """
        pass

    def test_send_password_reminder(self) -> None:
        """Test case for send_password_reminder

        Sends password reset email to the user's registered email address
        """
        pass

    def test_send_user_email_confirmation(self) -> None:
        """Test case for send_user_email_confirmation

        Sends email confirmation email for a user
        """
        pass

    def test_subscribe_notification(self) -> None:
        """Test case for subscribe_notification

        Subscribe to push notifications
        """
        pass

    def test_subscribe_user_notification(self) -> None:
        """Test case for subscribe_user_notification

        """
        pass

    def test_suspend_user(self) -> None:
        """Test case for suspend_user

        """
        pass

    def test_unfreeze_account(self) -> None:
        """Test case for unfreeze_account

        Defreeze your account
        """
        pass

    def test_unfreeze_user_account(self) -> None:
        """Test case for unfreeze_user_account

        Unfreeze requester account for project notifications
        """
        pass

    def test_unsubscribe_notification(self) -> None:
        """Test case for unsubscribe_notification

        """
        pass

    def test_unsubscribe_user_notification(self) -> None:
        """Test case for unsubscribe_user_notification

        """
        pass

    def test_update_me(self) -> None:
        """Test case for update_me

        Update your account info
        """
        pass

    def test_update_password(self) -> None:
        """Test case for update_password

        Update your account password
        """
        pass

    def test_update_payment_info(self) -> None:
        """Test case for update_payment_info

        Update payment info
        """
        pass

    def test_update_user(self) -> None:
        """Test case for update_user

        """
        pass

    def test_update_user_group(self) -> None:
        """Test case for update_user_group

        """
        pass

    def test_update_user_payment_info(self) -> None:
        """Test case for update_user_payment_info

        Update user payment info
        """
        pass

    def test_upload_profile_picture(self) -> None:
        """Test case for upload_profile_picture

        Upload profile picture
        """
        pass

    def test_upload_user_profile_picture(self) -> None:
        """Test case for upload_user_profile_picture

        """
        pass


if __name__ == '__main__':
    unittest.main()
