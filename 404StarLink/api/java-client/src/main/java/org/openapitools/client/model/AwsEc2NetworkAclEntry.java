/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AwsEc2NetworkAclEntryIcmpTypeCode;
import org.openapitools.client.model.AwsEc2NetworkAclEntryPortRange;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A rule for the network ACL. Each rule allows or denies access based on the IP address, traffic direction, port, and protocol.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:04:47.881442-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsEc2NetworkAclEntry {
  public static final String SERIALIZED_NAME_CIDR_BLOCK = "CidrBlock";
  @SerializedName(SERIALIZED_NAME_CIDR_BLOCK)
  private String cidrBlock;

  public static final String SERIALIZED_NAME_EGRESS = "Egress";
  @SerializedName(SERIALIZED_NAME_EGRESS)
  private Boolean egress;

  public static final String SERIALIZED_NAME_ICMP_TYPE_CODE = "IcmpTypeCode";
  @SerializedName(SERIALIZED_NAME_ICMP_TYPE_CODE)
  private AwsEc2NetworkAclEntryIcmpTypeCode icmpTypeCode;

  public static final String SERIALIZED_NAME_IPV6_CIDR_BLOCK = "Ipv6CidrBlock";
  @SerializedName(SERIALIZED_NAME_IPV6_CIDR_BLOCK)
  private String ipv6CidrBlock;

  public static final String SERIALIZED_NAME_PORT_RANGE = "PortRange";
  @SerializedName(SERIALIZED_NAME_PORT_RANGE)
  private AwsEc2NetworkAclEntryPortRange portRange;

  public static final String SERIALIZED_NAME_PROTOCOL = "Protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private String protocol;

  public static final String SERIALIZED_NAME_RULE_ACTION = "RuleAction";
  @SerializedName(SERIALIZED_NAME_RULE_ACTION)
  private String ruleAction;

  public static final String SERIALIZED_NAME_RULE_NUMBER = "RuleNumber";
  @SerializedName(SERIALIZED_NAME_RULE_NUMBER)
  private Integer ruleNumber;

  public AwsEc2NetworkAclEntry() {
  }

  public AwsEc2NetworkAclEntry cidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
    return this;
  }

  /**
   * Get cidrBlock
   * @return cidrBlock
   */
  @javax.annotation.Nullable
  public String getCidrBlock() {
    return cidrBlock;
  }

  public void setCidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
  }


  public AwsEc2NetworkAclEntry egress(Boolean egress) {
    this.egress = egress;
    return this;
  }

  /**
   * Get egress
   * @return egress
   */
  @javax.annotation.Nullable
  public Boolean getEgress() {
    return egress;
  }

  public void setEgress(Boolean egress) {
    this.egress = egress;
  }


  public AwsEc2NetworkAclEntry icmpTypeCode(AwsEc2NetworkAclEntryIcmpTypeCode icmpTypeCode) {
    this.icmpTypeCode = icmpTypeCode;
    return this;
  }

  /**
   * Get icmpTypeCode
   * @return icmpTypeCode
   */
  @javax.annotation.Nullable
  public AwsEc2NetworkAclEntryIcmpTypeCode getIcmpTypeCode() {
    return icmpTypeCode;
  }

  public void setIcmpTypeCode(AwsEc2NetworkAclEntryIcmpTypeCode icmpTypeCode) {
    this.icmpTypeCode = icmpTypeCode;
  }


  public AwsEc2NetworkAclEntry ipv6CidrBlock(String ipv6CidrBlock) {
    this.ipv6CidrBlock = ipv6CidrBlock;
    return this;
  }

  /**
   * Get ipv6CidrBlock
   * @return ipv6CidrBlock
   */
  @javax.annotation.Nullable
  public String getIpv6CidrBlock() {
    return ipv6CidrBlock;
  }

  public void setIpv6CidrBlock(String ipv6CidrBlock) {
    this.ipv6CidrBlock = ipv6CidrBlock;
  }


  public AwsEc2NetworkAclEntry portRange(AwsEc2NetworkAclEntryPortRange portRange) {
    this.portRange = portRange;
    return this;
  }

  /**
   * Get portRange
   * @return portRange
   */
  @javax.annotation.Nullable
  public AwsEc2NetworkAclEntryPortRange getPortRange() {
    return portRange;
  }

  public void setPortRange(AwsEc2NetworkAclEntryPortRange portRange) {
    this.portRange = portRange;
  }


  public AwsEc2NetworkAclEntry protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

  /**
   * Get protocol
   * @return protocol
   */
  @javax.annotation.Nullable
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  public AwsEc2NetworkAclEntry ruleAction(String ruleAction) {
    this.ruleAction = ruleAction;
    return this;
  }

  /**
   * Get ruleAction
   * @return ruleAction
   */
  @javax.annotation.Nullable
  public String getRuleAction() {
    return ruleAction;
  }

  public void setRuleAction(String ruleAction) {
    this.ruleAction = ruleAction;
  }


  public AwsEc2NetworkAclEntry ruleNumber(Integer ruleNumber) {
    this.ruleNumber = ruleNumber;
    return this;
  }

  /**
   * Get ruleNumber
   * @return ruleNumber
   */
  @javax.annotation.Nullable
  public Integer getRuleNumber() {
    return ruleNumber;
  }

  public void setRuleNumber(Integer ruleNumber) {
    this.ruleNumber = ruleNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsEc2NetworkAclEntry awsEc2NetworkAclEntry = (AwsEc2NetworkAclEntry) o;
    return Objects.equals(this.cidrBlock, awsEc2NetworkAclEntry.cidrBlock) &&
        Objects.equals(this.egress, awsEc2NetworkAclEntry.egress) &&
        Objects.equals(this.icmpTypeCode, awsEc2NetworkAclEntry.icmpTypeCode) &&
        Objects.equals(this.ipv6CidrBlock, awsEc2NetworkAclEntry.ipv6CidrBlock) &&
        Objects.equals(this.portRange, awsEc2NetworkAclEntry.portRange) &&
        Objects.equals(this.protocol, awsEc2NetworkAclEntry.protocol) &&
        Objects.equals(this.ruleAction, awsEc2NetworkAclEntry.ruleAction) &&
        Objects.equals(this.ruleNumber, awsEc2NetworkAclEntry.ruleNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cidrBlock, egress, icmpTypeCode, ipv6CidrBlock, portRange, protocol, ruleAction, ruleNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsEc2NetworkAclEntry {\n");
    sb.append("    cidrBlock: ").append(toIndentedString(cidrBlock)).append("\n");
    sb.append("    egress: ").append(toIndentedString(egress)).append("\n");
    sb.append("    icmpTypeCode: ").append(toIndentedString(icmpTypeCode)).append("\n");
    sb.append("    ipv6CidrBlock: ").append(toIndentedString(ipv6CidrBlock)).append("\n");
    sb.append("    portRange: ").append(toIndentedString(portRange)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    ruleAction: ").append(toIndentedString(ruleAction)).append("\n");
    sb.append("    ruleNumber: ").append(toIndentedString(ruleNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CidrBlock");
    openapiFields.add("Egress");
    openapiFields.add("IcmpTypeCode");
    openapiFields.add("Ipv6CidrBlock");
    openapiFields.add("PortRange");
    openapiFields.add("Protocol");
    openapiFields.add("RuleAction");
    openapiFields.add("RuleNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsEc2NetworkAclEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsEc2NetworkAclEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsEc2NetworkAclEntry is not found in the empty JSON string", AwsEc2NetworkAclEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsEc2NetworkAclEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsEc2NetworkAclEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CidrBlock`
      if (jsonObj.get("CidrBlock") != null && !jsonObj.get("CidrBlock").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CidrBlock"));
      }
      // validate the optional field `Egress`
      if (jsonObj.get("Egress") != null && !jsonObj.get("Egress").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Egress"));
      }
      // validate the optional field `IcmpTypeCode`
      if (jsonObj.get("IcmpTypeCode") != null && !jsonObj.get("IcmpTypeCode").isJsonNull()) {
        AwsEc2NetworkAclEntryIcmpTypeCode.validateJsonElement(jsonObj.get("IcmpTypeCode"));
      }
      // validate the optional field `Ipv6CidrBlock`
      if (jsonObj.get("Ipv6CidrBlock") != null && !jsonObj.get("Ipv6CidrBlock").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Ipv6CidrBlock"));
      }
      // validate the optional field `PortRange`
      if (jsonObj.get("PortRange") != null && !jsonObj.get("PortRange").isJsonNull()) {
        AwsEc2NetworkAclEntryPortRange.validateJsonElement(jsonObj.get("PortRange"));
      }
      // validate the optional field `Protocol`
      if (jsonObj.get("Protocol") != null && !jsonObj.get("Protocol").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Protocol"));
      }
      // validate the optional field `RuleAction`
      if (jsonObj.get("RuleAction") != null && !jsonObj.get("RuleAction").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RuleAction"));
      }
      // validate the optional field `RuleNumber`
      if (jsonObj.get("RuleNumber") != null && !jsonObj.get("RuleNumber").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RuleNumber"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsEc2NetworkAclEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsEc2NetworkAclEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsEc2NetworkAclEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsEc2NetworkAclEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsEc2NetworkAclEntry>() {
           @Override
           public void write(JsonWriter out, AwsEc2NetworkAclEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsEc2NetworkAclEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsEc2NetworkAclEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsEc2NetworkAclEntry
   * @throws IOException if the JSON string is invalid with respect to AwsEc2NetworkAclEntry
   */
  public static AwsEc2NetworkAclEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsEc2NetworkAclEntry.class);
  }

  /**
   * Convert an instance of AwsEc2NetworkAclEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

