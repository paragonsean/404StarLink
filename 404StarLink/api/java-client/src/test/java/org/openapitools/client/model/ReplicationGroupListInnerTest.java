/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutomaticFailoverStatus;
import org.openapitools.client.model.DataTieringStatus;
import org.openapitools.client.model.IpDiscovery;
import org.openapitools.client.model.MultiAZStatus;
import org.openapitools.client.model.NetworkType;
import org.openapitools.client.model.ReplicationGroupConfigurationEndpoint;
import org.openapitools.client.model.ReplicationGroupGlobalReplicationGroupInfo;
import org.openapitools.client.model.ReplicationGroupPendingModifiedValues;
import org.openapitools.client.model.TransitEncryptionMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReplicationGroupListInner
 */
public class ReplicationGroupListInnerTest {
    private final ReplicationGroupListInner model = new ReplicationGroupListInner();

    /**
     * Model tests for ReplicationGroupListInner
     */
    @Test
    public void testReplicationGroupListInner() {
        // TODO: test ReplicationGroupListInner
    }

    /**
     * Test the property 'replicationGroupId'
     */
    @Test
    public void replicationGroupIdTest() {
        // TODO: test replicationGroupId
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'globalReplicationGroupInfo'
     */
    @Test
    public void globalReplicationGroupInfoTest() {
        // TODO: test globalReplicationGroupInfo
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'pendingModifiedValues'
     */
    @Test
    public void pendingModifiedValuesTest() {
        // TODO: test pendingModifiedValues
    }

    /**
     * Test the property 'memberClusters'
     */
    @Test
    public void memberClustersTest() {
        // TODO: test memberClusters
    }

    /**
     * Test the property 'nodeGroups'
     */
    @Test
    public void nodeGroupsTest() {
        // TODO: test nodeGroups
    }

    /**
     * Test the property 'snapshottingClusterId'
     */
    @Test
    public void snapshottingClusterIdTest() {
        // TODO: test snapshottingClusterId
    }

    /**
     * Test the property 'automaticFailover'
     */
    @Test
    public void automaticFailoverTest() {
        // TODO: test automaticFailover
    }

    /**
     * Test the property 'multiAZ'
     */
    @Test
    public void multiAZTest() {
        // TODO: test multiAZ
    }

    /**
     * Test the property 'configurationEndpoint'
     */
    @Test
    public void configurationEndpointTest() {
        // TODO: test configurationEndpoint
    }

    /**
     * Test the property 'snapshotRetentionLimit'
     */
    @Test
    public void snapshotRetentionLimitTest() {
        // TODO: test snapshotRetentionLimit
    }

    /**
     * Test the property 'snapshotWindow'
     */
    @Test
    public void snapshotWindowTest() {
        // TODO: test snapshotWindow
    }

    /**
     * Test the property 'clusterEnabled'
     */
    @Test
    public void clusterEnabledTest() {
        // TODO: test clusterEnabled
    }

    /**
     * Test the property 'cacheNodeType'
     */
    @Test
    public void cacheNodeTypeTest() {
        // TODO: test cacheNodeType
    }

    /**
     * Test the property 'authTokenEnabled'
     */
    @Test
    public void authTokenEnabledTest() {
        // TODO: test authTokenEnabled
    }

    /**
     * Test the property 'authTokenLastModifiedDate'
     */
    @Test
    public void authTokenLastModifiedDateTest() {
        // TODO: test authTokenLastModifiedDate
    }

    /**
     * Test the property 'transitEncryptionEnabled'
     */
    @Test
    public void transitEncryptionEnabledTest() {
        // TODO: test transitEncryptionEnabled
    }

    /**
     * Test the property 'atRestEncryptionEnabled'
     */
    @Test
    public void atRestEncryptionEnabledTest() {
        // TODO: test atRestEncryptionEnabled
    }

    /**
     * Test the property 'memberClustersOutpostArns'
     */
    @Test
    public void memberClustersOutpostArnsTest() {
        // TODO: test memberClustersOutpostArns
    }

    /**
     * Test the property 'kmsKeyId'
     */
    @Test
    public void kmsKeyIdTest() {
        // TODO: test kmsKeyId
    }

    /**
     * Test the property 'ARN'
     */
    @Test
    public void ARNTest() {
        // TODO: test ARN
    }

    /**
     * Test the property 'userGroupIds'
     */
    @Test
    public void userGroupIdsTest() {
        // TODO: test userGroupIds
    }

    /**
     * Test the property 'logDeliveryConfigurations'
     */
    @Test
    public void logDeliveryConfigurationsTest() {
        // TODO: test logDeliveryConfigurations
    }

    /**
     * Test the property 'replicationGroupCreateTime'
     */
    @Test
    public void replicationGroupCreateTimeTest() {
        // TODO: test replicationGroupCreateTime
    }

    /**
     * Test the property 'dataTiering'
     */
    @Test
    public void dataTieringTest() {
        // TODO: test dataTiering
    }

    /**
     * Test the property 'autoMinorVersionUpgrade'
     */
    @Test
    public void autoMinorVersionUpgradeTest() {
        // TODO: test autoMinorVersionUpgrade
    }

    /**
     * Test the property 'networkType'
     */
    @Test
    public void networkTypeTest() {
        // TODO: test networkType
    }

    /**
     * Test the property 'ipDiscovery'
     */
    @Test
    public void ipDiscoveryTest() {
        // TODO: test ipDiscovery
    }

    /**
     * Test the property 'transitEncryptionMode'
     */
    @Test
    public void transitEncryptionModeTest() {
        // TODO: test transitEncryptionMode
    }

}
