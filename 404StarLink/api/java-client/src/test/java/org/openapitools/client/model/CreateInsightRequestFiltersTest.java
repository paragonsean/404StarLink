/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateInsightRequestFilters
 */
public class CreateInsightRequestFiltersTest {
    private final CreateInsightRequestFilters model = new CreateInsightRequestFilters();

    /**
     * Model tests for CreateInsightRequestFilters
     */
    @Test
    public void testCreateInsightRequestFilters() {
        // TODO: test CreateInsightRequestFilters
    }

    /**
     * Test the property 'productArn'
     */
    @Test
    public void productArnTest() {
        // TODO: test productArn
    }

    /**
     * Test the property 'awsAccountId'
     */
    @Test
    public void awsAccountIdTest() {
        // TODO: test awsAccountId
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'generatorId'
     */
    @Test
    public void generatorIdTest() {
        // TODO: test generatorId
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'firstObservedAt'
     */
    @Test
    public void firstObservedAtTest() {
        // TODO: test firstObservedAt
    }

    /**
     * Test the property 'lastObservedAt'
     */
    @Test
    public void lastObservedAtTest() {
        // TODO: test lastObservedAt
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'severityProduct'
     */
    @Test
    public void severityProductTest() {
        // TODO: test severityProduct
    }

    /**
     * Test the property 'severityNormalized'
     */
    @Test
    public void severityNormalizedTest() {
        // TODO: test severityNormalized
    }

    /**
     * Test the property 'severityLabel'
     */
    @Test
    public void severityLabelTest() {
        // TODO: test severityLabel
    }

    /**
     * Test the property 'confidence'
     */
    @Test
    public void confidenceTest() {
        // TODO: test confidence
    }

    /**
     * Test the property 'criticality'
     */
    @Test
    public void criticalityTest() {
        // TODO: test criticality
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'recommendationText'
     */
    @Test
    public void recommendationTextTest() {
        // TODO: test recommendationText
    }

    /**
     * Test the property 'sourceUrl'
     */
    @Test
    public void sourceUrlTest() {
        // TODO: test sourceUrl
    }

    /**
     * Test the property 'productFields'
     */
    @Test
    public void productFieldsTest() {
        // TODO: test productFields
    }

    /**
     * Test the property 'productName'
     */
    @Test
    public void productNameTest() {
        // TODO: test productName
    }

    /**
     * Test the property 'companyName'
     */
    @Test
    public void companyNameTest() {
        // TODO: test companyName
    }

    /**
     * Test the property 'userDefinedFields'
     */
    @Test
    public void userDefinedFieldsTest() {
        // TODO: test userDefinedFields
    }

    /**
     * Test the property 'malwareName'
     */
    @Test
    public void malwareNameTest() {
        // TODO: test malwareName
    }

    /**
     * Test the property 'malwareType'
     */
    @Test
    public void malwareTypeTest() {
        // TODO: test malwareType
    }

    /**
     * Test the property 'malwarePath'
     */
    @Test
    public void malwarePathTest() {
        // TODO: test malwarePath
    }

    /**
     * Test the property 'malwareState'
     */
    @Test
    public void malwareStateTest() {
        // TODO: test malwareState
    }

    /**
     * Test the property 'networkDirection'
     */
    @Test
    public void networkDirectionTest() {
        // TODO: test networkDirection
    }

    /**
     * Test the property 'networkProtocol'
     */
    @Test
    public void networkProtocolTest() {
        // TODO: test networkProtocol
    }

    /**
     * Test the property 'networkSourceIpV4'
     */
    @Test
    public void networkSourceIpV4Test() {
        // TODO: test networkSourceIpV4
    }

    /**
     * Test the property 'networkSourceIpV6'
     */
    @Test
    public void networkSourceIpV6Test() {
        // TODO: test networkSourceIpV6
    }

    /**
     * Test the property 'networkSourcePort'
     */
    @Test
    public void networkSourcePortTest() {
        // TODO: test networkSourcePort
    }

    /**
     * Test the property 'networkSourceDomain'
     */
    @Test
    public void networkSourceDomainTest() {
        // TODO: test networkSourceDomain
    }

    /**
     * Test the property 'networkSourceMac'
     */
    @Test
    public void networkSourceMacTest() {
        // TODO: test networkSourceMac
    }

    /**
     * Test the property 'networkDestinationIpV4'
     */
    @Test
    public void networkDestinationIpV4Test() {
        // TODO: test networkDestinationIpV4
    }

    /**
     * Test the property 'networkDestinationIpV6'
     */
    @Test
    public void networkDestinationIpV6Test() {
        // TODO: test networkDestinationIpV6
    }

    /**
     * Test the property 'networkDestinationPort'
     */
    @Test
    public void networkDestinationPortTest() {
        // TODO: test networkDestinationPort
    }

    /**
     * Test the property 'networkDestinationDomain'
     */
    @Test
    public void networkDestinationDomainTest() {
        // TODO: test networkDestinationDomain
    }

    /**
     * Test the property 'processName'
     */
    @Test
    public void processNameTest() {
        // TODO: test processName
    }

    /**
     * Test the property 'processPath'
     */
    @Test
    public void processPathTest() {
        // TODO: test processPath
    }

    /**
     * Test the property 'processPid'
     */
    @Test
    public void processPidTest() {
        // TODO: test processPid
    }

    /**
     * Test the property 'processParentPid'
     */
    @Test
    public void processParentPidTest() {
        // TODO: test processParentPid
    }

    /**
     * Test the property 'processLaunchedAt'
     */
    @Test
    public void processLaunchedAtTest() {
        // TODO: test processLaunchedAt
    }

    /**
     * Test the property 'processTerminatedAt'
     */
    @Test
    public void processTerminatedAtTest() {
        // TODO: test processTerminatedAt
    }

    /**
     * Test the property 'threatIntelIndicatorType'
     */
    @Test
    public void threatIntelIndicatorTypeTest() {
        // TODO: test threatIntelIndicatorType
    }

    /**
     * Test the property 'threatIntelIndicatorValue'
     */
    @Test
    public void threatIntelIndicatorValueTest() {
        // TODO: test threatIntelIndicatorValue
    }

    /**
     * Test the property 'threatIntelIndicatorCategory'
     */
    @Test
    public void threatIntelIndicatorCategoryTest() {
        // TODO: test threatIntelIndicatorCategory
    }

    /**
     * Test the property 'threatIntelIndicatorLastObservedAt'
     */
    @Test
    public void threatIntelIndicatorLastObservedAtTest() {
        // TODO: test threatIntelIndicatorLastObservedAt
    }

    /**
     * Test the property 'threatIntelIndicatorSource'
     */
    @Test
    public void threatIntelIndicatorSourceTest() {
        // TODO: test threatIntelIndicatorSource
    }

    /**
     * Test the property 'threatIntelIndicatorSourceUrl'
     */
    @Test
    public void threatIntelIndicatorSourceUrlTest() {
        // TODO: test threatIntelIndicatorSourceUrl
    }

    /**
     * Test the property 'resourceType'
     */
    @Test
    public void resourceTypeTest() {
        // TODO: test resourceType
    }

    /**
     * Test the property 'resourceId'
     */
    @Test
    public void resourceIdTest() {
        // TODO: test resourceId
    }

    /**
     * Test the property 'resourcePartition'
     */
    @Test
    public void resourcePartitionTest() {
        // TODO: test resourcePartition
    }

    /**
     * Test the property 'resourceRegion'
     */
    @Test
    public void resourceRegionTest() {
        // TODO: test resourceRegion
    }

    /**
     * Test the property 'resourceTags'
     */
    @Test
    public void resourceTagsTest() {
        // TODO: test resourceTags
    }

    /**
     * Test the property 'resourceAwsEc2InstanceType'
     */
    @Test
    public void resourceAwsEc2InstanceTypeTest() {
        // TODO: test resourceAwsEc2InstanceType
    }

    /**
     * Test the property 'resourceAwsEc2InstanceImageId'
     */
    @Test
    public void resourceAwsEc2InstanceImageIdTest() {
        // TODO: test resourceAwsEc2InstanceImageId
    }

    /**
     * Test the property 'resourceAwsEc2InstanceIpV4Addresses'
     */
    @Test
    public void resourceAwsEc2InstanceIpV4AddressesTest() {
        // TODO: test resourceAwsEc2InstanceIpV4Addresses
    }

    /**
     * Test the property 'resourceAwsEc2InstanceIpV6Addresses'
     */
    @Test
    public void resourceAwsEc2InstanceIpV6AddressesTest() {
        // TODO: test resourceAwsEc2InstanceIpV6Addresses
    }

    /**
     * Test the property 'resourceAwsEc2InstanceKeyName'
     */
    @Test
    public void resourceAwsEc2InstanceKeyNameTest() {
        // TODO: test resourceAwsEc2InstanceKeyName
    }

    /**
     * Test the property 'resourceAwsEc2InstanceIamInstanceProfileArn'
     */
    @Test
    public void resourceAwsEc2InstanceIamInstanceProfileArnTest() {
        // TODO: test resourceAwsEc2InstanceIamInstanceProfileArn
    }

    /**
     * Test the property 'resourceAwsEc2InstanceVpcId'
     */
    @Test
    public void resourceAwsEc2InstanceVpcIdTest() {
        // TODO: test resourceAwsEc2InstanceVpcId
    }

    /**
     * Test the property 'resourceAwsEc2InstanceSubnetId'
     */
    @Test
    public void resourceAwsEc2InstanceSubnetIdTest() {
        // TODO: test resourceAwsEc2InstanceSubnetId
    }

    /**
     * Test the property 'resourceAwsEc2InstanceLaunchedAt'
     */
    @Test
    public void resourceAwsEc2InstanceLaunchedAtTest() {
        // TODO: test resourceAwsEc2InstanceLaunchedAt
    }

    /**
     * Test the property 'resourceAwsS3BucketOwnerId'
     */
    @Test
    public void resourceAwsS3BucketOwnerIdTest() {
        // TODO: test resourceAwsS3BucketOwnerId
    }

    /**
     * Test the property 'resourceAwsS3BucketOwnerName'
     */
    @Test
    public void resourceAwsS3BucketOwnerNameTest() {
        // TODO: test resourceAwsS3BucketOwnerName
    }

    /**
     * Test the property 'resourceAwsIamAccessKeyUserName'
     */
    @Test
    public void resourceAwsIamAccessKeyUserNameTest() {
        // TODO: test resourceAwsIamAccessKeyUserName
    }

    /**
     * Test the property 'resourceAwsIamAccessKeyPrincipalName'
     */
    @Test
    public void resourceAwsIamAccessKeyPrincipalNameTest() {
        // TODO: test resourceAwsIamAccessKeyPrincipalName
    }

    /**
     * Test the property 'resourceAwsIamAccessKeyStatus'
     */
    @Test
    public void resourceAwsIamAccessKeyStatusTest() {
        // TODO: test resourceAwsIamAccessKeyStatus
    }

    /**
     * Test the property 'resourceAwsIamAccessKeyCreatedAt'
     */
    @Test
    public void resourceAwsIamAccessKeyCreatedAtTest() {
        // TODO: test resourceAwsIamAccessKeyCreatedAt
    }

    /**
     * Test the property 'resourceAwsIamUserUserName'
     */
    @Test
    public void resourceAwsIamUserUserNameTest() {
        // TODO: test resourceAwsIamUserUserName
    }

    /**
     * Test the property 'resourceContainerName'
     */
    @Test
    public void resourceContainerNameTest() {
        // TODO: test resourceContainerName
    }

    /**
     * Test the property 'resourceContainerImageId'
     */
    @Test
    public void resourceContainerImageIdTest() {
        // TODO: test resourceContainerImageId
    }

    /**
     * Test the property 'resourceContainerImageName'
     */
    @Test
    public void resourceContainerImageNameTest() {
        // TODO: test resourceContainerImageName
    }

    /**
     * Test the property 'resourceContainerLaunchedAt'
     */
    @Test
    public void resourceContainerLaunchedAtTest() {
        // TODO: test resourceContainerLaunchedAt
    }

    /**
     * Test the property 'resourceDetailsOther'
     */
    @Test
    public void resourceDetailsOtherTest() {
        // TODO: test resourceDetailsOther
    }

    /**
     * Test the property 'complianceStatus'
     */
    @Test
    public void complianceStatusTest() {
        // TODO: test complianceStatus
    }

    /**
     * Test the property 'verificationState'
     */
    @Test
    public void verificationStateTest() {
        // TODO: test verificationState
    }

    /**
     * Test the property 'workflowState'
     */
    @Test
    public void workflowStateTest() {
        // TODO: test workflowState
    }

    /**
     * Test the property 'workflowStatus'
     */
    @Test
    public void workflowStatusTest() {
        // TODO: test workflowStatus
    }

    /**
     * Test the property 'recordState'
     */
    @Test
    public void recordStateTest() {
        // TODO: test recordState
    }

    /**
     * Test the property 'relatedFindingsProductArn'
     */
    @Test
    public void relatedFindingsProductArnTest() {
        // TODO: test relatedFindingsProductArn
    }

    /**
     * Test the property 'relatedFindingsId'
     */
    @Test
    public void relatedFindingsIdTest() {
        // TODO: test relatedFindingsId
    }

    /**
     * Test the property 'noteText'
     */
    @Test
    public void noteTextTest() {
        // TODO: test noteText
    }

    /**
     * Test the property 'noteUpdatedAt'
     */
    @Test
    public void noteUpdatedAtTest() {
        // TODO: test noteUpdatedAt
    }

    /**
     * Test the property 'noteUpdatedBy'
     */
    @Test
    public void noteUpdatedByTest() {
        // TODO: test noteUpdatedBy
    }

    /**
     * Test the property 'keyword'
     */
    @Test
    public void keywordTest() {
        // TODO: test keyword
    }

    /**
     * Test the property 'findingProviderFieldsConfidence'
     */
    @Test
    public void findingProviderFieldsConfidenceTest() {
        // TODO: test findingProviderFieldsConfidence
    }

    /**
     * Test the property 'findingProviderFieldsCriticality'
     */
    @Test
    public void findingProviderFieldsCriticalityTest() {
        // TODO: test findingProviderFieldsCriticality
    }

    /**
     * Test the property 'findingProviderFieldsRelatedFindingsId'
     */
    @Test
    public void findingProviderFieldsRelatedFindingsIdTest() {
        // TODO: test findingProviderFieldsRelatedFindingsId
    }

    /**
     * Test the property 'findingProviderFieldsRelatedFindingsProductArn'
     */
    @Test
    public void findingProviderFieldsRelatedFindingsProductArnTest() {
        // TODO: test findingProviderFieldsRelatedFindingsProductArn
    }

    /**
     * Test the property 'findingProviderFieldsSeverityLabel'
     */
    @Test
    public void findingProviderFieldsSeverityLabelTest() {
        // TODO: test findingProviderFieldsSeverityLabel
    }

    /**
     * Test the property 'findingProviderFieldsSeverityOriginal'
     */
    @Test
    public void findingProviderFieldsSeverityOriginalTest() {
        // TODO: test findingProviderFieldsSeverityOriginal
    }

    /**
     * Test the property 'findingProviderFieldsTypes'
     */
    @Test
    public void findingProviderFieldsTypesTest() {
        // TODO: test findingProviderFieldsTypes
    }

    /**
     * Test the property 'sample'
     */
    @Test
    public void sampleTest() {
        // TODO: test sample
    }

    /**
     * Test the property 'complianceSecurityControlId'
     */
    @Test
    public void complianceSecurityControlIdTest() {
        // TODO: test complianceSecurityControlId
    }

    /**
     * Test the property 'complianceAssociatedStandardsId'
     */
    @Test
    public void complianceAssociatedStandardsIdTest() {
        // TODO: test complianceAssociatedStandardsId
    }

}
