/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AwsAutoScalingLaunchConfigurationDetailsInstanceMonitoring;
import org.openapitools.client.model.AwsAutoScalingLaunchConfigurationDetailsMetadataOptions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AwsAutoScalingLaunchConfigurationDetails
 */
public class AwsAutoScalingLaunchConfigurationDetailsTest {
    private final AwsAutoScalingLaunchConfigurationDetails model = new AwsAutoScalingLaunchConfigurationDetails();

    /**
     * Model tests for AwsAutoScalingLaunchConfigurationDetails
     */
    @Test
    public void testAwsAutoScalingLaunchConfigurationDetails() {
        // TODO: test AwsAutoScalingLaunchConfigurationDetails
    }

    /**
     * Test the property 'associatePublicIpAddress'
     */
    @Test
    public void associatePublicIpAddressTest() {
        // TODO: test associatePublicIpAddress
    }

    /**
     * Test the property 'blockDeviceMappings'
     */
    @Test
    public void blockDeviceMappingsTest() {
        // TODO: test blockDeviceMappings
    }

    /**
     * Test the property 'classicLinkVpcId'
     */
    @Test
    public void classicLinkVpcIdTest() {
        // TODO: test classicLinkVpcId
    }

    /**
     * Test the property 'classicLinkVpcSecurityGroups'
     */
    @Test
    public void classicLinkVpcSecurityGroupsTest() {
        // TODO: test classicLinkVpcSecurityGroups
    }

    /**
     * Test the property 'createdTime'
     */
    @Test
    public void createdTimeTest() {
        // TODO: test createdTime
    }

    /**
     * Test the property 'ebsOptimized'
     */
    @Test
    public void ebsOptimizedTest() {
        // TODO: test ebsOptimized
    }

    /**
     * Test the property 'iamInstanceProfile'
     */
    @Test
    public void iamInstanceProfileTest() {
        // TODO: test iamInstanceProfile
    }

    /**
     * Test the property 'imageId'
     */
    @Test
    public void imageIdTest() {
        // TODO: test imageId
    }

    /**
     * Test the property 'instanceMonitoring'
     */
    @Test
    public void instanceMonitoringTest() {
        // TODO: test instanceMonitoring
    }

    /**
     * Test the property 'instanceType'
     */
    @Test
    public void instanceTypeTest() {
        // TODO: test instanceType
    }

    /**
     * Test the property 'kernelId'
     */
    @Test
    public void kernelIdTest() {
        // TODO: test kernelId
    }

    /**
     * Test the property 'keyName'
     */
    @Test
    public void keyNameTest() {
        // TODO: test keyName
    }

    /**
     * Test the property 'launchConfigurationName'
     */
    @Test
    public void launchConfigurationNameTest() {
        // TODO: test launchConfigurationName
    }

    /**
     * Test the property 'placementTenancy'
     */
    @Test
    public void placementTenancyTest() {
        // TODO: test placementTenancy
    }

    /**
     * Test the property 'ramdiskId'
     */
    @Test
    public void ramdiskIdTest() {
        // TODO: test ramdiskId
    }

    /**
     * Test the property 'securityGroups'
     */
    @Test
    public void securityGroupsTest() {
        // TODO: test securityGroups
    }

    /**
     * Test the property 'spotPrice'
     */
    @Test
    public void spotPriceTest() {
        // TODO: test spotPrice
    }

    /**
     * Test the property 'userData'
     */
    @Test
    public void userDataTest() {
        // TODO: test userData
    }

    /**
     * Test the property 'metadataOptions'
     */
    @Test
    public void metadataOptionsTest() {
        // TODO: test metadataOptions
    }

}
