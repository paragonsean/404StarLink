# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.repos_list_cache_info200_response_inner import ReposListCacheInfo200ResponseInner

class TestReposListCacheInfo200ResponseInner(unittest.TestCase):
    """ReposListCacheInfo200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReposListCacheInfo200ResponseInner:
        """Test ReposListCacheInfo200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReposListCacheInfo200ResponseInner`
        """
        model = ReposListCacheInfo200ResponseInner()
        if include_optional:
            return ReposListCacheInfo200ResponseInner(
                git = openapi_client.models.repos_list_cache_info_200_response_inner_git.repos_list_cache_info_200_response_inner_git(
                    last_sync = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    sync_status = 'offline', ),
                host = '',
                location = ''
            )
        else:
            return ReposListCacheInfo200ResponseInner(
                git = openapi_client.models.repos_list_cache_info_200_response_inner_git.repos_list_cache_info_200_response_inner_git(
                    last_sync = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    sync_status = 'offline', ),
                host = '',
                location = '',
        )
        """

    def testReposListCacheInfo200ResponseInner(self):
        """Test ReposListCacheInfo200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
