# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.file_commit import FileCommit

class TestFileCommit(unittest.TestCase):
    """FileCommit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FileCommit:
        """Test FileCommit
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FileCommit`
        """
        model = FileCommit()
        if include_optional:
            return FileCommit(
                commit = openapi_client.models.file_commit_commit.file_commit_commit(
                    author = openapi_client.models.file_commit_commit_author.file_commit_commit_author(
                        date = '', 
                        email = '', 
                        name = '', ), 
                    committer = openapi_client.models.file_commit_commit_author.file_commit_commit_author(
                        date = '', 
                        email = '', 
                        name = '', ), 
                    html_url = '', 
                    message = '', 
                    node_id = '', 
                    parents = [
                        openapi_client.models.commit_search_result_item_parents_inner.commit_search_result_item_parents_inner(
                            html_url = '', 
                            sha = '', 
                            url = '', )
                        ], 
                    sha = '', 
                    tree = openapi_client.models.file_commit_commit_tree.file_commit_commit_tree(
                        sha = '', 
                        url = '', ), 
                    url = '', 
                    verification = openapi_client.models.file_commit_commit_verification.file_commit_commit_verification(
                        payload = '', 
                        reason = '', 
                        signature = '', 
                        verified = True, ), ),
                content = openapi_client.models.file_commit_content.file_commit_content(
                    _links = openapi_client.models.file_commit_content__links.file_commit_content__links(
                        git = '', 
                        html = '', 
                        self = '', ), 
                    download_url = '', 
                    git_url = '', 
                    html_url = '', 
                    name = '', 
                    path = '', 
                    sha = '', 
                    size = 56, 
                    type = '', 
                    url = '', )
            )
        else:
            return FileCommit(
                commit = openapi_client.models.file_commit_commit.file_commit_commit(
                    author = openapi_client.models.file_commit_commit_author.file_commit_commit_author(
                        date = '', 
                        email = '', 
                        name = '', ), 
                    committer = openapi_client.models.file_commit_commit_author.file_commit_commit_author(
                        date = '', 
                        email = '', 
                        name = '', ), 
                    html_url = '', 
                    message = '', 
                    node_id = '', 
                    parents = [
                        openapi_client.models.commit_search_result_item_parents_inner.commit_search_result_item_parents_inner(
                            html_url = '', 
                            sha = '', 
                            url = '', )
                        ], 
                    sha = '', 
                    tree = openapi_client.models.file_commit_commit_tree.file_commit_commit_tree(
                        sha = '', 
                        url = '', ), 
                    url = '', 
                    verification = openapi_client.models.file_commit_commit_verification.file_commit_commit_verification(
                        payload = '', 
                        reason = '', 
                        signature = '', 
                        verified = True, ), ),
                content = openapi_client.models.file_commit_content.file_commit_content(
                    _links = openapi_client.models.file_commit_content__links.file_commit_content__links(
                        git = '', 
                        html = '', 
                        self = '', ), 
                    download_url = '', 
                    git_url = '', 
                    html_url = '', 
                    name = '', 
                    path = '', 
                    sha = '', 
                    size = 56, 
                    type = '', 
                    url = '', ),
        )
        """

    def testFileCommit(self):
        """Test FileCommit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
