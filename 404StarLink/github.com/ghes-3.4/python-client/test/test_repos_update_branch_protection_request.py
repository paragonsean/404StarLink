# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.repos_update_branch_protection_request import ReposUpdateBranchProtectionRequest

class TestReposUpdateBranchProtectionRequest(unittest.TestCase):
    """ReposUpdateBranchProtectionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReposUpdateBranchProtectionRequest:
        """Test ReposUpdateBranchProtectionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReposUpdateBranchProtectionRequest`
        """
        model = ReposUpdateBranchProtectionRequest()
        if include_optional:
            return ReposUpdateBranchProtectionRequest(
                allow_deletions = True,
                allow_force_pushes = True,
                block_creations = True,
                enforce_admins = True,
                required_conversation_resolution = True,
                required_linear_history = True,
                required_pull_request_reviews = openapi_client.models.repos_update_branch_protection_request_required_pull_request_reviews.repos_update_branch_protection_request_required_pull_request_reviews(
                    bypass_pull_request_allowances = openapi_client.models.repos_update_branch_protection_request_required_pull_request_reviews_bypass_pull_request_allowances.repos_update_branch_protection_request_required_pull_request_reviews_bypass_pull_request_allowances(
                        apps = [
                            ''
                            ], 
                        teams = [
                            ''
                            ], 
                        users = [
                            ''
                            ], ), 
                    dismiss_stale_reviews = True, 
                    dismissal_restrictions = openapi_client.models.repos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions.repos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions(), 
                    require_code_owner_reviews = True, 
                    required_approving_review_count = 56, ),
                required_status_checks = openapi_client.models.repos_update_branch_protection_request_required_status_checks.repos_update_branch_protection_request_required_status_checks(
                    checks = [
                        openapi_client.models.repos_update_branch_protection_request_required_status_checks_checks_inner.repos_update_branch_protection_request_required_status_checks_checks_inner(
                            app_id = 56, 
                            context = '', )
                        ], 
                    contexts = [
                        ''
                        ], 
                    strict = True, ),
                restrictions = openapi_client.models.repos_update_branch_protection_request_restrictions.repos_update_branch_protection_request_restrictions(
                    apps = [
                        ''
                        ], 
                    teams = [
                        ''
                        ], 
                    users = [
                        ''
                        ], )
            )
        else:
            return ReposUpdateBranchProtectionRequest(
                enforce_admins = True,
                required_pull_request_reviews = openapi_client.models.repos_update_branch_protection_request_required_pull_request_reviews.repos_update_branch_protection_request_required_pull_request_reviews(
                    bypass_pull_request_allowances = openapi_client.models.repos_update_branch_protection_request_required_pull_request_reviews_bypass_pull_request_allowances.repos_update_branch_protection_request_required_pull_request_reviews_bypass_pull_request_allowances(
                        apps = [
                            ''
                            ], 
                        teams = [
                            ''
                            ], 
                        users = [
                            ''
                            ], ), 
                    dismiss_stale_reviews = True, 
                    dismissal_restrictions = openapi_client.models.repos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions.repos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions(), 
                    require_code_owner_reviews = True, 
                    required_approving_review_count = 56, ),
                required_status_checks = openapi_client.models.repos_update_branch_protection_request_required_status_checks.repos_update_branch_protection_request_required_status_checks(
                    checks = [
                        openapi_client.models.repos_update_branch_protection_request_required_status_checks_checks_inner.repos_update_branch_protection_request_required_status_checks_checks_inner(
                            app_id = 56, 
                            context = '', )
                        ], 
                    contexts = [
                        ''
                        ], 
                    strict = True, ),
                restrictions = openapi_client.models.repos_update_branch_protection_request_restrictions.repos_update_branch_protection_request_restrictions(
                    apps = [
                        ''
                        ], 
                    teams = [
                        ''
                        ], 
                    users = [
                        ''
                        ], ),
        )
        """

    def testReposUpdateBranchProtectionRequest(self):
        """Test ReposUpdateBranchProtectionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
