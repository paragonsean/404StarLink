# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.repos_update_pull_request_review_protection_request import ReposUpdatePullRequestReviewProtectionRequest

class TestReposUpdatePullRequestReviewProtectionRequest(unittest.TestCase):
    """ReposUpdatePullRequestReviewProtectionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReposUpdatePullRequestReviewProtectionRequest:
        """Test ReposUpdatePullRequestReviewProtectionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReposUpdatePullRequestReviewProtectionRequest`
        """
        model = ReposUpdatePullRequestReviewProtectionRequest()
        if include_optional:
            return ReposUpdatePullRequestReviewProtectionRequest(
                bypass_pull_request_allowances = openapi_client.models.repos_update_branch_protection_request_required_pull_request_reviews_bypass_pull_request_allowances.repos_update_branch_protection_request_required_pull_request_reviews_bypass_pull_request_allowances(
                    apps = [
                        ''
                        ], 
                    teams = [
                        ''
                        ], 
                    users = [
                        ''
                        ], ),
                dismiss_stale_reviews = True,
                dismissal_restrictions = openapi_client.models.repos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions.repos_update_branch_protection_request_required_pull_request_reviews_dismissal_restrictions(
                    apps = [
                        ''
                        ], 
                    teams = [
                        ''
                        ], 
                    users = [
                        ''
                        ], ),
                require_code_owner_reviews = True,
                required_approving_review_count = 56
            )
        else:
            return ReposUpdatePullRequestReviewProtectionRequest(
        )
        """

    def testReposUpdatePullRequestReviewProtectionRequest(self):
        """Test ReposUpdatePullRequestReviewProtectionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
