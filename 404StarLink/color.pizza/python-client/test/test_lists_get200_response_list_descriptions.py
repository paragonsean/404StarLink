# coding: utf-8

"""
    Color Name API

    An API that provides names for colors based on their hex value

    The version of the OpenAPI document: 1.0.0
    Contact: color-name-api@elastiq.click
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.lists_get200_response_list_descriptions import ListsGet200ResponseListDescriptions

class TestListsGet200ResponseListDescriptions(unittest.TestCase):
    """ListsGet200ResponseListDescriptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListsGet200ResponseListDescriptions:
        """Test ListsGet200ResponseListDescriptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListsGet200ResponseListDescriptions`
        """
        model = ListsGet200ResponseListDescriptions()
        if include_optional:
            return ListsGet200ResponseListDescriptions(
                basic = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                best_of = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                chinese_traditional = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                default = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                french = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                html = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                japanese_traditional = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                le_corbusier = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                nbs_iscc = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                ntc = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                osxcrayons = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                ral = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                ridgway = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                risograph = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                sanzo_wada_i = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                thesaurus = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                werner = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                wikipedia = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                windows = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                x11 = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', ),
                xkcd = openapi_client.models.list_description.listDescription(
                    color_count = 56, 
                    description = '', 
                    key = '', 
                    license = '', 
                    source = '', 
                    title = '', 
                    url = '', )
            )
        else:
            return ListsGet200ResponseListDescriptions(
        )
        """

    def testListsGet200ResponseListDescriptions(self):
        """Test ListsGet200ResponseListDescriptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
