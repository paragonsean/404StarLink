/*
 * Amazon Lightsail
 * <p>Amazon Lightsail is the easiest way to get started with Amazon Web Services (Amazon Web Services) for developers who need to build websites or web applications. It includes everything you need to launch your project quickly - instances (virtual private servers), container services, storage buckets, managed databases, SSD-based block storage, static IP addresses, load balancers, content delivery network (CDN) distributions, DNS management of registered domains, and resource snapshots (backups) - for a low, predictable monthly price.</p> <p>You can manage your Lightsail resources using the Lightsail console, Lightsail API, Command Line Interface (CLI), or SDKs. For more information about Lightsail concepts and tasks, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli\">Amazon Lightsail Developer Guide</a>.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the Lightsail service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Lightsail service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lightsail.html\">Amazon Lightsail Endpoints and Quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.IpAddressType;
import org.openapitools.client.model.LoadBalancerLocation;
import org.openapitools.client.model.LoadBalancerProtocol;
import org.openapitools.client.model.LoadBalancerState;
import org.openapitools.client.model.ResourceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetLoadBalancerResultLoadBalancer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:08:53.071508-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetLoadBalancerResultLoadBalancer {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_SUPPORT_CODE = "supportCode";
  @SerializedName(SERIALIZED_NAME_SUPPORT_CODE)
  private String supportCode;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private LoadBalancerLocation location;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private ResourceType resourceType;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_DNS_NAME = "dnsName";
  @SerializedName(SERIALIZED_NAME_DNS_NAME)
  private String dnsName;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private LoadBalancerState state;

  public static final String SERIALIZED_NAME_PROTOCOL = "protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private LoadBalancerProtocol protocol;

  public static final String SERIALIZED_NAME_PUBLIC_PORTS = "publicPorts";
  @SerializedName(SERIALIZED_NAME_PUBLIC_PORTS)
  private List publicPorts;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_PATH = "healthCheckPath";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_PATH)
  private String healthCheckPath;

  public static final String SERIALIZED_NAME_INSTANCE_PORT = "instancePort";
  @SerializedName(SERIALIZED_NAME_INSTANCE_PORT)
  private Integer instancePort;

  public static final String SERIALIZED_NAME_INSTANCE_HEALTH_SUMMARY = "instanceHealthSummary";
  @SerializedName(SERIALIZED_NAME_INSTANCE_HEALTH_SUMMARY)
  private List instanceHealthSummary;

  public static final String SERIALIZED_NAME_TLS_CERTIFICATE_SUMMARIES = "tlsCertificateSummaries";
  @SerializedName(SERIALIZED_NAME_TLS_CERTIFICATE_SUMMARIES)
  private List tlsCertificateSummaries;

  public static final String SERIALIZED_NAME_CONFIGURATION_OPTIONS = "configurationOptions";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_OPTIONS)
  private Map configurationOptions;

  public static final String SERIALIZED_NAME_IP_ADDRESS_TYPE = "ipAddressType";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS_TYPE)
  private IpAddressType ipAddressType;

  public static final String SERIALIZED_NAME_HTTPS_REDIRECTION_ENABLED = "httpsRedirectionEnabled";
  @SerializedName(SERIALIZED_NAME_HTTPS_REDIRECTION_ENABLED)
  private Boolean httpsRedirectionEnabled;

  public static final String SERIALIZED_NAME_TLS_POLICY_NAME = "tlsPolicyName";
  @SerializedName(SERIALIZED_NAME_TLS_POLICY_NAME)
  private String tlsPolicyName;

  public GetLoadBalancerResultLoadBalancer() {
  }

  public GetLoadBalancerResultLoadBalancer name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetLoadBalancerResultLoadBalancer arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public GetLoadBalancerResultLoadBalancer supportCode(String supportCode) {
    this.supportCode = supportCode;
    return this;
  }

  /**
   * Get supportCode
   * @return supportCode
   */
  @javax.annotation.Nullable
  public String getSupportCode() {
    return supportCode;
  }

  public void setSupportCode(String supportCode) {
    this.supportCode = supportCode;
  }


  public GetLoadBalancerResultLoadBalancer createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public GetLoadBalancerResultLoadBalancer location(LoadBalancerLocation location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public LoadBalancerLocation getLocation() {
    return location;
  }

  public void setLocation(LoadBalancerLocation location) {
    this.location = location;
  }


  public GetLoadBalancerResultLoadBalancer resourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public ResourceType getResourceType() {
    return resourceType;
  }

  public void setResourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
  }


  public GetLoadBalancerResultLoadBalancer tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public GetLoadBalancerResultLoadBalancer dnsName(String dnsName) {
    this.dnsName = dnsName;
    return this;
  }

  /**
   * Get dnsName
   * @return dnsName
   */
  @javax.annotation.Nullable
  public String getDnsName() {
    return dnsName;
  }

  public void setDnsName(String dnsName) {
    this.dnsName = dnsName;
  }


  public GetLoadBalancerResultLoadBalancer state(LoadBalancerState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public LoadBalancerState getState() {
    return state;
  }

  public void setState(LoadBalancerState state) {
    this.state = state;
  }


  public GetLoadBalancerResultLoadBalancer protocol(LoadBalancerProtocol protocol) {
    this.protocol = protocol;
    return this;
  }

  /**
   * Get protocol
   * @return protocol
   */
  @javax.annotation.Nullable
  public LoadBalancerProtocol getProtocol() {
    return protocol;
  }

  public void setProtocol(LoadBalancerProtocol protocol) {
    this.protocol = protocol;
  }


  public GetLoadBalancerResultLoadBalancer publicPorts(List publicPorts) {
    this.publicPorts = publicPorts;
    return this;
  }

  /**
   * Get publicPorts
   * @return publicPorts
   */
  @javax.annotation.Nullable
  public List getPublicPorts() {
    return publicPorts;
  }

  public void setPublicPorts(List publicPorts) {
    this.publicPorts = publicPorts;
  }


  public GetLoadBalancerResultLoadBalancer healthCheckPath(String healthCheckPath) {
    this.healthCheckPath = healthCheckPath;
    return this;
  }

  /**
   * Get healthCheckPath
   * @return healthCheckPath
   */
  @javax.annotation.Nullable
  public String getHealthCheckPath() {
    return healthCheckPath;
  }

  public void setHealthCheckPath(String healthCheckPath) {
    this.healthCheckPath = healthCheckPath;
  }


  public GetLoadBalancerResultLoadBalancer instancePort(Integer instancePort) {
    this.instancePort = instancePort;
    return this;
  }

  /**
   * Get instancePort
   * @return instancePort
   */
  @javax.annotation.Nullable
  public Integer getInstancePort() {
    return instancePort;
  }

  public void setInstancePort(Integer instancePort) {
    this.instancePort = instancePort;
  }


  public GetLoadBalancerResultLoadBalancer instanceHealthSummary(List instanceHealthSummary) {
    this.instanceHealthSummary = instanceHealthSummary;
    return this;
  }

  /**
   * Get instanceHealthSummary
   * @return instanceHealthSummary
   */
  @javax.annotation.Nullable
  public List getInstanceHealthSummary() {
    return instanceHealthSummary;
  }

  public void setInstanceHealthSummary(List instanceHealthSummary) {
    this.instanceHealthSummary = instanceHealthSummary;
  }


  public GetLoadBalancerResultLoadBalancer tlsCertificateSummaries(List tlsCertificateSummaries) {
    this.tlsCertificateSummaries = tlsCertificateSummaries;
    return this;
  }

  /**
   * Get tlsCertificateSummaries
   * @return tlsCertificateSummaries
   */
  @javax.annotation.Nullable
  public List getTlsCertificateSummaries() {
    return tlsCertificateSummaries;
  }

  public void setTlsCertificateSummaries(List tlsCertificateSummaries) {
    this.tlsCertificateSummaries = tlsCertificateSummaries;
  }


  public GetLoadBalancerResultLoadBalancer configurationOptions(Map configurationOptions) {
    this.configurationOptions = configurationOptions;
    return this;
  }

  /**
   * Get configurationOptions
   * @return configurationOptions
   */
  @javax.annotation.Nullable
  public Map getConfigurationOptions() {
    return configurationOptions;
  }

  public void setConfigurationOptions(Map configurationOptions) {
    this.configurationOptions = configurationOptions;
  }


  public GetLoadBalancerResultLoadBalancer ipAddressType(IpAddressType ipAddressType) {
    this.ipAddressType = ipAddressType;
    return this;
  }

  /**
   * Get ipAddressType
   * @return ipAddressType
   */
  @javax.annotation.Nullable
  public IpAddressType getIpAddressType() {
    return ipAddressType;
  }

  public void setIpAddressType(IpAddressType ipAddressType) {
    this.ipAddressType = ipAddressType;
  }


  public GetLoadBalancerResultLoadBalancer httpsRedirectionEnabled(Boolean httpsRedirectionEnabled) {
    this.httpsRedirectionEnabled = httpsRedirectionEnabled;
    return this;
  }

  /**
   * Get httpsRedirectionEnabled
   * @return httpsRedirectionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getHttpsRedirectionEnabled() {
    return httpsRedirectionEnabled;
  }

  public void setHttpsRedirectionEnabled(Boolean httpsRedirectionEnabled) {
    this.httpsRedirectionEnabled = httpsRedirectionEnabled;
  }


  public GetLoadBalancerResultLoadBalancer tlsPolicyName(String tlsPolicyName) {
    this.tlsPolicyName = tlsPolicyName;
    return this;
  }

  /**
   * Get tlsPolicyName
   * @return tlsPolicyName
   */
  @javax.annotation.Nullable
  public String getTlsPolicyName() {
    return tlsPolicyName;
  }

  public void setTlsPolicyName(String tlsPolicyName) {
    this.tlsPolicyName = tlsPolicyName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetLoadBalancerResultLoadBalancer getLoadBalancerResultLoadBalancer = (GetLoadBalancerResultLoadBalancer) o;
    return Objects.equals(this.name, getLoadBalancerResultLoadBalancer.name) &&
        Objects.equals(this.arn, getLoadBalancerResultLoadBalancer.arn) &&
        Objects.equals(this.supportCode, getLoadBalancerResultLoadBalancer.supportCode) &&
        Objects.equals(this.createdAt, getLoadBalancerResultLoadBalancer.createdAt) &&
        Objects.equals(this.location, getLoadBalancerResultLoadBalancer.location) &&
        Objects.equals(this.resourceType, getLoadBalancerResultLoadBalancer.resourceType) &&
        Objects.equals(this.tags, getLoadBalancerResultLoadBalancer.tags) &&
        Objects.equals(this.dnsName, getLoadBalancerResultLoadBalancer.dnsName) &&
        Objects.equals(this.state, getLoadBalancerResultLoadBalancer.state) &&
        Objects.equals(this.protocol, getLoadBalancerResultLoadBalancer.protocol) &&
        Objects.equals(this.publicPorts, getLoadBalancerResultLoadBalancer.publicPorts) &&
        Objects.equals(this.healthCheckPath, getLoadBalancerResultLoadBalancer.healthCheckPath) &&
        Objects.equals(this.instancePort, getLoadBalancerResultLoadBalancer.instancePort) &&
        Objects.equals(this.instanceHealthSummary, getLoadBalancerResultLoadBalancer.instanceHealthSummary) &&
        Objects.equals(this.tlsCertificateSummaries, getLoadBalancerResultLoadBalancer.tlsCertificateSummaries) &&
        Objects.equals(this.configurationOptions, getLoadBalancerResultLoadBalancer.configurationOptions) &&
        Objects.equals(this.ipAddressType, getLoadBalancerResultLoadBalancer.ipAddressType) &&
        Objects.equals(this.httpsRedirectionEnabled, getLoadBalancerResultLoadBalancer.httpsRedirectionEnabled) &&
        Objects.equals(this.tlsPolicyName, getLoadBalancerResultLoadBalancer.tlsPolicyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, arn, supportCode, createdAt, location, resourceType, tags, dnsName, state, protocol, publicPorts, healthCheckPath, instancePort, instanceHealthSummary, tlsCertificateSummaries, configurationOptions, ipAddressType, httpsRedirectionEnabled, tlsPolicyName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetLoadBalancerResultLoadBalancer {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    supportCode: ").append(toIndentedString(supportCode)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    dnsName: ").append(toIndentedString(dnsName)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    publicPorts: ").append(toIndentedString(publicPorts)).append("\n");
    sb.append("    healthCheckPath: ").append(toIndentedString(healthCheckPath)).append("\n");
    sb.append("    instancePort: ").append(toIndentedString(instancePort)).append("\n");
    sb.append("    instanceHealthSummary: ").append(toIndentedString(instanceHealthSummary)).append("\n");
    sb.append("    tlsCertificateSummaries: ").append(toIndentedString(tlsCertificateSummaries)).append("\n");
    sb.append("    configurationOptions: ").append(toIndentedString(configurationOptions)).append("\n");
    sb.append("    ipAddressType: ").append(toIndentedString(ipAddressType)).append("\n");
    sb.append("    httpsRedirectionEnabled: ").append(toIndentedString(httpsRedirectionEnabled)).append("\n");
    sb.append("    tlsPolicyName: ").append(toIndentedString(tlsPolicyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("arn");
    openapiFields.add("supportCode");
    openapiFields.add("createdAt");
    openapiFields.add("location");
    openapiFields.add("resourceType");
    openapiFields.add("tags");
    openapiFields.add("dnsName");
    openapiFields.add("state");
    openapiFields.add("protocol");
    openapiFields.add("publicPorts");
    openapiFields.add("healthCheckPath");
    openapiFields.add("instancePort");
    openapiFields.add("instanceHealthSummary");
    openapiFields.add("tlsCertificateSummaries");
    openapiFields.add("configurationOptions");
    openapiFields.add("ipAddressType");
    openapiFields.add("httpsRedirectionEnabled");
    openapiFields.add("tlsPolicyName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetLoadBalancerResultLoadBalancer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetLoadBalancerResultLoadBalancer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetLoadBalancerResultLoadBalancer is not found in the empty JSON string", GetLoadBalancerResultLoadBalancer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetLoadBalancerResultLoadBalancer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetLoadBalancerResultLoadBalancer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `supportCode`
      if (jsonObj.get("supportCode") != null && !jsonObj.get("supportCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("supportCode"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        LoadBalancerLocation.validateJsonElement(jsonObj.get("location"));
      }
      // validate the optional field `resourceType`
      if (jsonObj.get("resourceType") != null && !jsonObj.get("resourceType").isJsonNull()) {
        ResourceType.validateJsonElement(jsonObj.get("resourceType"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `dnsName`
      if (jsonObj.get("dnsName") != null && !jsonObj.get("dnsName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("dnsName"));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        LoadBalancerState.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `protocol`
      if (jsonObj.get("protocol") != null && !jsonObj.get("protocol").isJsonNull()) {
        LoadBalancerProtocol.validateJsonElement(jsonObj.get("protocol"));
      }
      // validate the optional field `publicPorts`
      if (jsonObj.get("publicPorts") != null && !jsonObj.get("publicPorts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("publicPorts"));
      }
      // validate the optional field `healthCheckPath`
      if (jsonObj.get("healthCheckPath") != null && !jsonObj.get("healthCheckPath").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("healthCheckPath"));
      }
      // validate the optional field `instancePort`
      if (jsonObj.get("instancePort") != null && !jsonObj.get("instancePort").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("instancePort"));
      }
      // validate the optional field `instanceHealthSummary`
      if (jsonObj.get("instanceHealthSummary") != null && !jsonObj.get("instanceHealthSummary").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("instanceHealthSummary"));
      }
      // validate the optional field `tlsCertificateSummaries`
      if (jsonObj.get("tlsCertificateSummaries") != null && !jsonObj.get("tlsCertificateSummaries").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tlsCertificateSummaries"));
      }
      // validate the optional field `configurationOptions`
      if (jsonObj.get("configurationOptions") != null && !jsonObj.get("configurationOptions").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("configurationOptions"));
      }
      // validate the optional field `ipAddressType`
      if (jsonObj.get("ipAddressType") != null && !jsonObj.get("ipAddressType").isJsonNull()) {
        IpAddressType.validateJsonElement(jsonObj.get("ipAddressType"));
      }
      // validate the optional field `httpsRedirectionEnabled`
      if (jsonObj.get("httpsRedirectionEnabled") != null && !jsonObj.get("httpsRedirectionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("httpsRedirectionEnabled"));
      }
      // validate the optional field `tlsPolicyName`
      if (jsonObj.get("tlsPolicyName") != null && !jsonObj.get("tlsPolicyName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("tlsPolicyName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetLoadBalancerResultLoadBalancer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetLoadBalancerResultLoadBalancer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetLoadBalancerResultLoadBalancer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetLoadBalancerResultLoadBalancer.class));

       return (TypeAdapter<T>) new TypeAdapter<GetLoadBalancerResultLoadBalancer>() {
           @Override
           public void write(JsonWriter out, GetLoadBalancerResultLoadBalancer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetLoadBalancerResultLoadBalancer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetLoadBalancerResultLoadBalancer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetLoadBalancerResultLoadBalancer
   * @throws IOException if the JSON string is invalid with respect to GetLoadBalancerResultLoadBalancer
   */
  public static GetLoadBalancerResultLoadBalancer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetLoadBalancerResultLoadBalancer.class);
  }

  /**
   * Convert an instance of GetLoadBalancerResultLoadBalancer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

