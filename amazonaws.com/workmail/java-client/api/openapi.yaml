openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>WorkMail is a secure, managed business email and calendaring service\
    \ with support for existing desktop and mobile email clients. You can access your\
    \ email, contacts, and calendars using Microsoft Outlook, your browser, or other\
    \ native iOS and Android email applications. You can integrate WorkMail with your\
    \ existing corporate directory and control both the keys that encrypt your data\
    \ and the location in which your data is stored.</p> <p>The WorkMail API is designed\
    \ for the following scenarios:</p> <ul> <li> <p>Listing and describing organizations</p>\
    \ </li> </ul> <ul> <li> <p>Managing users</p> </li> </ul> <ul> <li> <p>Managing\
    \ groups</p> </li> </ul> <ul> <li> <p>Managing resources</p> </li> </ul> <p>All\
    \ WorkMail API operations are Amazon-authenticated and certificate-signed. They\
    \ not only require the use of the AWS SDK, but also allow for the exclusive use\
    \ of AWS Identity and Access Management users and roles to help facilitate access,\
    \ trust, and permission policies. By creating a role and allowing an IAM user\
    \ to access the WorkMail site, the IAM user gains full administrative visibility\
    \ into the entire WorkMail organization (or as set in the IAM policy). This includes,\
    \ but is not limited to, the ability to create, update, and delete users, groups,\
    \ and resources. This allows developers to perform the scenarios listed above,\
    \ as well as give users the ability to grant access on a selective basis using\
    \ the IAM model.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon WorkMail
  version: 2017-10-01
  x-release: v4
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: workmail
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workmail-2017-10-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/workmail/
servers:
- description: The Amazon WorkMail multi-region endpoint
  url: "http://workmail.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon WorkMail multi-region endpoint
  url: "https://workmail.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon WorkMail endpoint for China (Beijing) and China (Ningxia)
  url: "http://workmail.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon WorkMail endpoint for China (Beijing) and China (Ningxia)
  url: "https://workmail.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=WorkMailService.AssociateDelegateToResource:
    post:
      description: Adds a member (user or group) to the resource's set of delegates.
      operationId: AssociateDelegateToResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.AssociateDelegateToResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateDelegateToResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateDelegateToResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.AssociateMemberToGroup:
    post:
      description: Adds a member (user or group) to the group's set.
      operationId: AssociateMemberToGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.AssociateMemberToGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateMemberToGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateMemberToGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.AssumeImpersonationRole:
    post:
      description: Assumes an impersonation role for the given WorkMail organization.
        This method returns an authentication token you can use to make impersonated
        calls.
      operationId: AssumeImpersonationRole
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.AssumeImpersonationRole
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssumeImpersonationRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssumeImpersonationRoleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CancelMailboxExportJob:
    post:
      description: "<p>Cancels a mailbox export job.</p> <note> <p>If the mailbox\
        \ export job is near completion, it might not be possible to cancel it.</p>\
        \ </note>"
      operationId: CancelMailboxExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CancelMailboxExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelMailboxExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelMailboxExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CreateAlias:
    post:
      description: Adds an alias to the set of a given member (user or group) of WorkMail.
      operationId: CreateAlias
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CreateAlias
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAliasRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAliasResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressInUseException'
          description: EmailAddressInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
          description: MailDomainNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
          description: MailDomainStateException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CreateAvailabilityConfiguration:
    post:
      description: Creates an <code>AvailabilityConfiguration</code> for the given
        WorkMail organization and domain.
      operationId: CreateAvailabilityConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CreateAvailabilityConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAvailabilityConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAvailabilityConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
          description: NameAvailabilityException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CreateGroup:
    post:
      description: Creates a group that can be used in WorkMail by calling the <a>RegisterToWorkMail</a>
        operation.
      operationId: CreateGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CreateGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
          description: NameAvailabilityException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNameException'
          description: ReservedNameException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CreateImpersonationRole:
    post:
      description: "<p>Creates an impersonation role for the given WorkMail organization.</p>\
        \ <p> <i>Idempotency</i> ensures that an API request completes no more than\
        \ one time. With an idempotent request, if the original request completes\
        \ successfully, any subsequent retries also complete successfully without\
        \ performing any further actions.</p>"
      operationId: CreateImpersonationRole
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CreateImpersonationRole
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImpersonationRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImpersonationRoleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CreateMobileDeviceAccessRule:
    post:
      description: Creates a new mobile device access rule for the specified WorkMail
        organization.
      operationId: CreateMobileDeviceAccessRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CreateMobileDeviceAccessRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMobileDeviceAccessRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMobileDeviceAccessRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CreateOrganization:
    post:
      description: "<p>Creates a new WorkMail organization. Optionally, you can choose\
        \ to associate an existing AWS Directory Service directory with your organization.\
        \ If an AWS Directory Service directory ID is specified, the organization\
        \ alias must match the directory alias. If you choose not to associate an\
        \ existing directory with your organization, then we create a new WorkMail\
        \ directory for you. For more information, see <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/add_new_organization.html\"\
        >Adding an organization</a> in the <i>WorkMail Administrator Guide</i>.</p>\
        \ <p>You can associate multiple email domains with an organization, then choose\
        \ your default email domain from the WorkMail console. You can also associate\
        \ a domain that is managed in an Amazon Route 53 public hosted zone. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html\"\
        >Adding a domain</a> and <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/default_domain.html\"\
        >Choosing the default domain</a> in the <i>WorkMail Administrator Guide</i>.</p>\
        \ <p>Optionally, you can use a customer managed key from AWS Key Management\
        \ Service (AWS KMS) to encrypt email for your organization. If you don't associate\
        \ an AWS KMS key, WorkMail creates a default, AWS managed key for you.</p>"
      operationId: CreateOrganization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CreateOrganization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryInUseException'
          description: DirectoryInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
          description: NameAvailabilityException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CreateResource:
    post:
      description: Creates a new WorkMail resource.
      operationId: CreateResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CreateResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
          description: NameAvailabilityException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNameException'
          description: ReservedNameException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.CreateUser:
    post:
      description: Creates a user who can be used in WorkMail by calling the <a>RegisterToWorkMail</a>
        operation.
      operationId: CreateUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.CreateUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
          description: NameAvailabilityException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNameException'
          description: ReservedNameException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteAccessControlRule:
    post:
      description: "<p>Deletes an access control rule for the specified WorkMail organization.</p>\
        \ <note> <p>Deleting already deleted and non-existing rules does not produce\
        \ an error. In those cases, the service sends back an HTTP 200 response with\
        \ an empty HTTP body.</p> </note>"
      operationId: DeleteAccessControlRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteAccessControlRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccessControlRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccessControlRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteAlias:
    post:
      description: Remove one or more specified aliases from a set of aliases for
        a given user.
      operationId: DeleteAlias
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteAlias
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAliasRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAliasResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteAvailabilityConfiguration:
    post:
      description: Deletes the <code>AvailabilityConfiguration</code> for the given
        WorkMail organization and domain.
      operationId: DeleteAvailabilityConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteAvailabilityConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAvailabilityConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAvailabilityConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteEmailMonitoringConfiguration:
    post:
      description: Deletes the email monitoring configuration for a specified organization.
      operationId: DeleteEmailMonitoringConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteEmailMonitoringConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEmailMonitoringConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailMonitoringConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteGroup:
    post:
      description: Deletes a group from WorkMail.
      operationId: DeleteGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteImpersonationRole:
    post:
      description: Deletes an impersonation role for the given WorkMail organization.
      operationId: DeleteImpersonationRole
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteImpersonationRole
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImpersonationRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImpersonationRoleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteMailboxPermissions:
    post:
      description: Deletes permissions granted to a member (user or group).
      operationId: DeleteMailboxPermissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteMailboxPermissions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMailboxPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMailboxPermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteMobileDeviceAccessOverride:
    post:
      description: "<p>Deletes the mobile device access override for the given WorkMail\
        \ organization, user, and device.</p> <note> <p>Deleting already deleted and\
        \ non-existing overrides does not produce an error. In those cases, the service\
        \ sends back an HTTP 200 response with an empty HTTP body.</p> </note>"
      operationId: DeleteMobileDeviceAccessOverride
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteMobileDeviceAccessOverride
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMobileDeviceAccessOverrideRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMobileDeviceAccessOverrideResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteMobileDeviceAccessRule:
    post:
      description: "<p>Deletes a mobile device access rule for the specified WorkMail\
        \ organization.</p> <note> <p>Deleting already deleted and non-existing rules\
        \ does not produce an error. In those cases, the service sends back an HTTP\
        \ 200 response with an empty HTTP body.</p> </note>"
      operationId: DeleteMobileDeviceAccessRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteMobileDeviceAccessRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMobileDeviceAccessRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMobileDeviceAccessRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteOrganization:
    post:
      description: "Deletes an WorkMail organization and all underlying AWS resources\
        \ managed by WorkMail as part of the organization. You can choose whether\
        \ to delete the associated directory. For more information, see <a href=\"\
        https://docs.aws.amazon.com/workmail/latest/adminguide/remove_organization.html\"\
        >Removing an organization</a> in the <i>WorkMail Administrator Guide</i>."
      operationId: DeleteOrganization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteOrganization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOrganizationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrganizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteResource:
    post:
      description: Deletes the specified resource.
      operationId: DeleteResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteRetentionPolicy:
    post:
      description: Deletes the specified retention policy from the specified organization.
      operationId: DeleteRetentionPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteRetentionPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRetentionPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRetentionPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeleteUser:
    post:
      description: "<p>Deletes a user from WorkMail and all subsequent systems. Before\
        \ you can delete a user, the user state must be <code>DISABLED</code>. Use\
        \ the <a>DescribeUser</a> action to confirm the user state.</p> <p>Deleting\
        \ a user is permanent and cannot be undone. WorkMail archives user mailboxes\
        \ for 30 days before they are permanently removed.</p>"
      operationId: DeleteUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeleteUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeregisterFromWorkMail:
    post:
      description: "Mark a user, group, or resource as no longer used in WorkMail.\
        \ This action disassociates the mailbox and schedules it for clean-up. WorkMail\
        \ keeps mailboxes for 30 days before they are permanently removed. The functionality\
        \ in the console is <i>Disable</i>."
      operationId: DeregisterFromWorkMail
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeregisterFromWorkMail
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterFromWorkMailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterFromWorkMailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DeregisterMailDomain:
    post:
      description: "Removes a domain from WorkMail, stops email routing to WorkMail,\
        \ and removes the authorization allowing WorkMail use. SES keeps the domain\
        \ because other applications may use it. You must first remove any email address\
        \ used by WorkMail entities before you remove the domain."
      operationId: DeregisterMailDomain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DeregisterMailDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterMailDomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterMailDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainInUseException'
          description: MailDomainInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCustomSesConfigurationException'
          description: InvalidCustomSesConfigurationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DescribeEmailMonitoringConfiguration:
    post:
      description: Describes the current email monitoring configuration for a specified
        organization.
      operationId: DescribeEmailMonitoringConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DescribeEmailMonitoringConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEmailMonitoringConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEmailMonitoringConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DescribeGroup:
    post:
      description: Returns the data available for the group.
      operationId: DescribeGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DescribeGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DescribeInboundDmarcSettings:
    post:
      description: Lists the settings in a DMARC policy for a specified organization.
      operationId: DescribeInboundDmarcSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DescribeInboundDmarcSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInboundDmarcSettingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInboundDmarcSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DescribeMailboxExportJob:
    post:
      description: Describes the current status of a mailbox export job.
      operationId: DescribeMailboxExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DescribeMailboxExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMailboxExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMailboxExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DescribeOrganization:
    post:
      description: Provides more information regarding a given organization based
        on its identifier.
      operationId: DescribeOrganization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DescribeOrganization
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrganizationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DescribeResource:
    post:
      description: Returns the data available for the resource.
      operationId: DescribeResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DescribeResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DescribeUser:
    post:
      description: Provides information regarding the user.
      operationId: DescribeUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DescribeUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DisassociateDelegateFromResource:
    post:
      description: Removes a member from the resource's set of delegates.
      operationId: DisassociateDelegateFromResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DisassociateDelegateFromResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateDelegateFromResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateDelegateFromResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.DisassociateMemberFromGroup:
    post:
      description: Removes a member from a group.
      operationId: DisassociateMemberFromGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.DisassociateMemberFromGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateMemberFromGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateMemberFromGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.GetAccessControlEffect:
    post:
      description: "Gets the effects of an organization's access control rules as\
        \ they apply to a specified IPv4 address, access protocol action, and user\
        \ ID or impersonation role ID. You must provide either the user ID or impersonation\
        \ role ID. Impersonation role ID can only be used with Action EWS."
      operationId: GetAccessControlEffect
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.GetAccessControlEffect
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccessControlEffectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessControlEffectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.GetDefaultRetentionPolicy:
    post:
      description: Gets the default retention policy details for the specified organization.
      operationId: GetDefaultRetentionPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.GetDefaultRetentionPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDefaultRetentionPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefaultRetentionPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.GetImpersonationRole:
    post:
      description: Gets the impersonation role details for the given WorkMail organization.
      operationId: GetImpersonationRole
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.GetImpersonationRole
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetImpersonationRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImpersonationRoleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.GetImpersonationRoleEffect:
    post:
      description: Tests whether the given impersonation role can impersonate a target
        user.
      operationId: GetImpersonationRoleEffect
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.GetImpersonationRoleEffect
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetImpersonationRoleEffectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImpersonationRoleEffectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.GetMailDomain:
    post:
      description: "Gets details for a mail domain, including domain records required\
        \ to configure your domain with recommended security."
      operationId: GetMailDomain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.GetMailDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMailDomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMailDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
          description: MailDomainNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.GetMailboxDetails:
    post:
      description: Requests a user's mailbox details for a specified organization
        and user.
      operationId: GetMailboxDetails
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.GetMailboxDetails
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMailboxDetailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMailboxDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.GetMobileDeviceAccessEffect:
    post:
      description: Simulates the effect of the mobile device access rules for the
        given attributes of a sample access event. Use this method to test the effects
        of the current set of mobile device access rules for the WorkMail organization
        for a particular user's attributes.
      operationId: GetMobileDeviceAccessEffect
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.GetMobileDeviceAccessEffect
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMobileDeviceAccessEffectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMobileDeviceAccessEffectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.GetMobileDeviceAccessOverride:
    post:
      description: "Gets the mobile device access override for the given WorkMail\
        \ organization, user, and device."
      operationId: GetMobileDeviceAccessOverride
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.GetMobileDeviceAccessOverride
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMobileDeviceAccessOverrideRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMobileDeviceAccessOverrideResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListAccessControlRules:
    post:
      description: Lists the access control rules for the specified organization.
      operationId: ListAccessControlRules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListAccessControlRules
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccessControlRulesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessControlRulesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListAliases:
    post:
      description: Creates a paginated call to list the aliases associated with a
        given entity.
      operationId: ListAliases
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListAliases
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAliasesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAliasesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListAvailabilityConfigurations:
    post:
      description: List all the <code>AvailabilityConfiguration</code>'s for the given
        WorkMail organization.
      operationId: ListAvailabilityConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListAvailabilityConfigurations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAvailabilityConfigurationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAvailabilityConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListGroupMembers:
    post:
      description: Returns an overview of the members of a group. Users and groups
        can be members of a group.
      operationId: ListGroupMembers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListGroupMembers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGroupMembersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupMembersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListGroups:
    post:
      description: Returns summaries of the organization's groups.
      operationId: ListGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListImpersonationRoles:
    post:
      description: Lists all the impersonation roles for the given WorkMail organization.
      operationId: ListImpersonationRoles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListImpersonationRoles
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListImpersonationRolesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImpersonationRolesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListMailDomains:
    post:
      description: Lists the mail domains in a given WorkMail organization.
      operationId: ListMailDomains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListMailDomains
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMailDomainsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMailDomainsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListMailboxExportJobs:
    post:
      description: Lists the mailbox export jobs started for the specified organization
        within the last seven days.
      operationId: ListMailboxExportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListMailboxExportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMailboxExportJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMailboxExportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListMailboxPermissions:
    post:
      description: "Lists the mailbox permissions associated with a user, group, or\
        \ resource mailbox."
      operationId: ListMailboxPermissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListMailboxPermissions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMailboxPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMailboxPermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListMobileDeviceAccessOverrides:
    post:
      description: "Lists all the mobile device access overrides for any given combination\
        \ of WorkMail organization, user, or device."
      operationId: ListMobileDeviceAccessOverrides
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListMobileDeviceAccessOverrides
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMobileDeviceAccessOverridesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMobileDeviceAccessOverridesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListMobileDeviceAccessRules:
    post:
      description: Lists the mobile device access rules for the specified WorkMail
        organization.
      operationId: ListMobileDeviceAccessRules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListMobileDeviceAccessRules
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMobileDeviceAccessRulesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMobileDeviceAccessRulesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListOrganizations:
    post:
      description: Returns summaries of the customer's organizations.
      operationId: ListOrganizations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListOrganizations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOrganizationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListResourceDelegates:
    post:
      description: Lists the delegates associated with a resource. Users and groups
        can be resource delegates and answer requests on behalf of the resource.
      operationId: ListResourceDelegates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListResourceDelegates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceDelegatesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceDelegatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListResources:
    post:
      description: Returns summaries of the organization's resources.
      operationId: ListResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListTagsForResource:
    post:
      description: Lists the tags applied to an WorkMail organization resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ListUsers:
    post:
      description: Returns summaries of the organization's users.
      operationId: ListUsers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ListUsers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.PutAccessControlRule:
    post:
      description: "Adds a new access control rule for the specified organization.\
        \ The rule allows or denies access to the organization for the specified IPv4\
        \ addresses, access protocol actions, user IDs and impersonation IDs. Adding\
        \ a new rule with the same name as an existing rule replaces the older rule."
      operationId: PutAccessControlRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.PutAccessControlRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccessControlRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccessControlRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.PutEmailMonitoringConfiguration:
    post:
      description: Creates or updates the email monitoring configuration for a specified
        organization.
      operationId: PutEmailMonitoringConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.PutEmailMonitoringConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailMonitoringConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailMonitoringConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.PutInboundDmarcSettings:
    post:
      description: Enables or disables a DMARC policy for a given organization.
      operationId: PutInboundDmarcSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.PutInboundDmarcSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInboundDmarcSettingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInboundDmarcSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.PutMailboxPermissions:
    post:
      description: "Sets permissions for a user, group, or resource. This replaces\
        \ any pre-existing permissions."
      operationId: PutMailboxPermissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.PutMailboxPermissions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMailboxPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMailboxPermissionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.PutMobileDeviceAccessOverride:
    post:
      description: "Creates or updates a mobile device access override for the given\
        \ WorkMail organization, user, and device."
      operationId: PutMobileDeviceAccessOverride
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.PutMobileDeviceAccessOverride
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMobileDeviceAccessOverrideRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMobileDeviceAccessOverrideResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.PutRetentionPolicy:
    post:
      description: Puts a retention policy to the specified organization.
      operationId: PutRetentionPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.PutRetentionPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRetentionPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRetentionPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.RegisterMailDomain:
    post:
      description: "Registers a new domain in WorkMail and SES, and configures it\
        \ for use by WorkMail. Emails received by SES for this domain are routed to\
        \ the specified WorkMail organization, and WorkMail has permanent permission\
        \ to use the specified domain for sending your users' emails."
      operationId: RegisterMailDomain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.RegisterMailDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterMailDomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterMailDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainInUseException'
          description: MailDomainInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.RegisterToWorkMail:
    post:
      description: "<p>Registers an existing and disabled user, group, or resource\
        \ for WorkMail use by associating a mailbox and calendaring capabilities.\
        \ It performs no change if the user, group, or resource is enabled and fails\
        \ if the user, group, or resource is deleted. This operation results in the\
        \ accumulation of costs. For more information, see <a href=\"https://aws.amazon.com/workmail/pricing\"\
        >Pricing</a>. The equivalent console functionality for this operation is <i>Enable</i>.</p>\
        \ <p>Users can either be created by calling the <a>CreateUser</a> API operation\
        \ or they can be synchronized from your directory. For more information, see\
        \ <a>DeregisterFromWorkMail</a>.</p>"
      operationId: RegisterToWorkMail
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.RegisterToWorkMail
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterToWorkMailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterToWorkMailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressInUseException'
          description: EmailAddressInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyRegisteredException'
          description: EntityAlreadyRegisteredException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
          description: MailDomainNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
          description: MailDomainStateException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.ResetPassword:
    post:
      description: Allows the administrator to reset the password for a user.
      operationId: ResetPassword
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.ResetPassword
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
          description: InvalidPasswordException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.StartMailboxExportJob:
    post:
      description: "Starts a mailbox export job to export MIME-format email messages\
        \ and calendar items from the specified mailbox to the specified Amazon Simple\
        \ Storage Service (Amazon S3) bucket. For more information, see <a href=\"\
        https://docs.aws.amazon.com/workmail/latest/adminguide/mail-export.html\"\
        >Exporting mailbox content</a> in the <i>WorkMail Administrator Guide</i>."
      operationId: StartMailboxExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.StartMailboxExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMailboxExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMailboxExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.TagResource:
    post:
      description: Applies the specified tags to the specified WorkMailorganization
        resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.TestAvailabilityConfiguration:
    post:
      description: "<p>Performs a test on an availability provider to ensure that\
        \ access is allowed. For EWS, it verifies the provided credentials can be\
        \ used to successfully log in. For Lambda, it verifies that the Lambda function\
        \ can be invoked and that the resource access policy was configured to deny\
        \ anonymous access. An anonymous invocation is one done without providing\
        \ either a <code>SourceArn</code> or <code>SourceAccount</code> header.</p>\
        \ <note> <p>The request must contain either one provider definition (<code>EwsProvider</code>\
        \ or <code>LambdaProvider</code>) or the <code>DomainName</code> parameter.\
        \ If the <code>DomainName</code> parameter is provided, the configuration\
        \ stored under the <code>DomainName</code> will be tested.</p> </note>"
      operationId: TestAvailabilityConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.TestAvailabilityConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestAvailabilityConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestAvailabilityConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.UntagResource:
    post:
      description: Untags the specified tags from the specified WorkMail organization
        resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.UpdateAvailabilityConfiguration:
    post:
      description: Updates an existing <code>AvailabilityConfiguration</code> for
        the given WorkMail organization and domain.
      operationId: UpdateAvailabilityConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.UpdateAvailabilityConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAvailabilityConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAvailabilityConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.UpdateDefaultMailDomain:
    post:
      description: Updates the default mail domain for an organization. The default
        mail domain is used by the WorkMail AWS Console to suggest an email address
        when enabling a mail user. You can only have one default domain.
      operationId: UpdateDefaultMailDomain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.UpdateDefaultMailDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultMailDomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDefaultMailDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
          description: MailDomainNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
          description: MailDomainStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.UpdateImpersonationRole:
    post:
      description: Updates an impersonation role for the given WorkMail organization.
      operationId: UpdateImpersonationRole
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.UpdateImpersonationRole
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImpersonationRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateImpersonationRoleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.UpdateMailboxQuota:
    post:
      description: Updates a user's current mailbox quota for a specified organization
        and user.
      operationId: UpdateMailboxQuota
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.UpdateMailboxQuota
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMailboxQuotaRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMailboxQuotaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.UpdateMobileDeviceAccessRule:
    post:
      description: Updates a mobile device access rule for the specified WorkMail
        organization.
      operationId: UpdateMobileDeviceAccessRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.UpdateMobileDeviceAccessRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMobileDeviceAccessRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMobileDeviceAccessRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.UpdatePrimaryEmailAddress:
    post:
      description: "Updates the primary email for a user, group, or resource. The\
        \ current email is moved into the list of aliases (or swapped between an existing\
        \ alias and the current primary email), and the email provided in the input\
        \ is promoted as the primary."
      operationId: UpdatePrimaryEmailAddress
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.UpdatePrimaryEmailAddress
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePrimaryEmailAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePrimaryEmailAddressResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryServiceAuthenticationFailedException'
          description: DirectoryServiceAuthenticationFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressInUseException'
          description: EmailAddressInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
          description: MailDomainNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
          description: MailDomainStateException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=WorkMailService.UpdateResource:
    post:
      description: "Updates data for the resource. To have the latest information,\
        \ it must be preceded by a <a>DescribeResource</a> call. The dataset in the\
        \ request should be the one expected when performing another <code>DescribeResource</code>\
        \ call."
      operationId: UpdateResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - WorkMailService.UpdateResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
          description: DirectoryUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStateException'
          description: EntityStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidConfigurationException'
          description: InvalidConfigurationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressInUseException'
          description: EmailAddressInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainNotFoundException'
          description: MailDomainNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailDomainStateException'
          description: MailDomainStateException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityException'
          description: NameAvailabilityException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotFoundException'
          description: OrganizationNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStateException'
          description: OrganizationStateException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateDelegateToResourceResponse:
      properties: {}
      type: object
    AssociateDelegateToResourceRequest:
      example:
        EntityId: ""
        ResourceId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization under which the resource exists.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The resource for which members (users or groups) are associated.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The member (user or group) to associate to the resource.
      required:
      - EntityId
      - OrganizationId
      - ResourceId
      title: AssociateDelegateToResourceRequest
      type: object
    EntityNotFoundException: {}
    EntityStateException: {}
    InvalidParameterException: {}
    OrganizationNotFoundException: {}
    OrganizationStateException: {}
    AssociateMemberToGroupResponse:
      properties: {}
      type: object
    AssociateMemberToGroupRequest:
      example:
        MemberId: ""
        OrganizationId: ""
        GroupId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization under which the group exists.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The group to which the member (user or group) is associated.
        MemberId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The member (user or group) to associate to the group.
      required:
      - GroupId
      - MemberId
      - OrganizationId
      title: AssociateMemberToGroupRequest
      type: object
    DirectoryServiceAuthenticationFailedException: {}
    DirectoryUnavailableException: {}
    UnsupportedOperationException: {}
    AssumeImpersonationRoleResponse:
      example:
        ExpiresIn: ""
        Token: ""
      properties:
        Token:
          allOf:
          - $ref: '#/components/schemas/ImpersonationToken'
          - description: The authentication token for the impersonation role.
        ExpiresIn:
          allOf:
          - $ref: '#/components/schemas/ExpiresIn'
          - description: "The authentication token's validity, in seconds."
      type: object
    AssumeImpersonationRoleRequest:
      example:
        ImpersonationRoleId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization under which the impersonation role
              will be assumed.
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The impersonation role ID to assume.
      required:
      - ImpersonationRoleId
      - OrganizationId
      title: AssumeImpersonationRoleRequest
      type: object
    ResourceNotFoundException: {}
    CancelMailboxExportJobResponse:
      properties: {}
      type: object
    CancelMailboxExportJobRequest:
      example:
        OrganizationId: ""
        ClientToken: ""
        JobId: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyClientToken'
          - description: The idempotency token for the client request.
        JobId:
          allOf:
          - $ref: '#/components/schemas/MailboxExportJobId'
          - description: The job ID.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
      required:
      - ClientToken
      - JobId
      - OrganizationId
      title: CancelMailboxExportJobRequest
      type: object
    CreateAliasResponse:
      properties: {}
      type: object
    CreateAliasRequest:
      example:
        EntityId: ""
        Alias: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization under which the member (user or group) exists.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The member (user or group) to which this alias is added.
        Alias:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The alias to add to the member set.
      required:
      - Alias
      - EntityId
      - OrganizationId
      title: CreateAliasRequest
      type: object
    EmailAddressInUseException: {}
    MailDomainNotFoundException: {}
    MailDomainStateException: {}
    LimitExceededException: {}
    CreateAvailabilityConfigurationResponse:
      properties: {}
      type: object
    CreateAvailabilityConfigurationRequest:
      example:
        LambdaProvider:
          LambdaArn: ""
        DomainName: ""
        EwsProvider:
          EwsEndpoint: ""
          EwsPassword: ""
          EwsUsername: ""
        OrganizationId: ""
        ClientToken: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyClientToken'
          - description: An idempotent token that ensures that an API request is executed
              only once.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which the <code>AvailabilityConfiguration</code>
              will be created.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The domain to which the provider applies.
        EwsProvider:
          $ref: '#/components/schemas/CreateAvailabilityConfigurationRequest_EwsProvider'
        LambdaProvider:
          $ref: '#/components/schemas/CreateAvailabilityConfigurationRequest_LambdaProvider'
      required:
      - DomainName
      - OrganizationId
      title: CreateAvailabilityConfigurationRequest
      type: object
    NameAvailabilityException: {}
    CreateGroupResponse:
      example:
        GroupId: ""
      properties:
        GroupId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the group.
      type: object
    CreateGroupRequest:
      example:
        OrganizationId: ""
        Name: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization under which the group is to be created.
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the group.
      required:
      - Name
      - OrganizationId
      title: CreateGroupRequest
      type: object
    ReservedNameException: {}
    CreateImpersonationRoleResponse:
      example:
        ImpersonationRoleId: ""
      properties:
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The new impersonation role ID.
      type: object
    CreateImpersonationRoleRequest:
      example:
        Type: ""
        Description: ""
        OrganizationId: ""
        ClientToken: ""
        Rules: ""
        Name: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyClientToken'
          - description: The idempotency token for the client request.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization to create the new impersonation
              role within.
        Name:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleName'
          - description: The name of the new impersonation role.
        Type:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleType'
          - description: The impersonation role's type. The available impersonation
              role types are <code>READ_ONLY</code> or <code>FULL_ACCESS</code>.
        Description:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleDescription'
          - description: The description of the new impersonation role.
        Rules:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRuleList'
          - description: The list of rules for the impersonation role.
      required:
      - Name
      - OrganizationId
      - Rules
      - Type
      title: CreateImpersonationRoleRequest
      type: object
    CreateMobileDeviceAccessRuleResponse:
      example:
        MobileDeviceAccessRuleId: ""
      properties:
        MobileDeviceAccessRuleId:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          - description: The identifier for the newly created mobile device access
              rule.
      type: object
    CreateMobileDeviceAccessRuleRequest:
      example:
        NotDeviceModels: ""
        Description: ""
        DeviceOperatingSystems: ""
        OrganizationId: ""
        NotDeviceTypes: ""
        Name: ""
        DeviceModels: ""
        NotDeviceOperatingSystems: ""
        DeviceUserAgents: ""
        DeviceTypes: ""
        Effect: ""
        ClientToken: ""
        NotDeviceUserAgents: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization under which the rule will be created.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyClientToken'
          - description: The idempotency token for the client request.
        Name:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleName'
          - description: The rule name.
        Description:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          - description: The rule description.
        Effect:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          - description: The effect of the rule when it matches. Allowed values are
              <code>ALLOW</code> or <code>DENY</code>.
        DeviceTypes:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeList'
          - description: Device types that the rule will match.
        NotDeviceTypes:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeList'
          - description: Device types that the rule <b>will not</b> match. All other
              device types will match.
        DeviceModels:
          allOf:
          - $ref: '#/components/schemas/DeviceModelList'
          - description: Device models that the rule will match.
        NotDeviceModels:
          allOf:
          - $ref: '#/components/schemas/DeviceModelList'
          - description: Device models that the rule <b>will not</b> match. All other
              device models will match.
        DeviceOperatingSystems:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystemList'
          - description: Device operating systems that the rule will match.
        NotDeviceOperatingSystems:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystemList'
          - description: Device operating systems that the rule <b>will not</b> match.
              All other device operating systems will match.
        DeviceUserAgents:
          allOf:
          - $ref: '#/components/schemas/DeviceUserAgentList'
          - description: Device user agents that the rule will match.
        NotDeviceUserAgents:
          allOf:
          - $ref: '#/components/schemas/DeviceUserAgentList'
          - description: Device user agents that the rule <b>will not</b> match. All
              other device user agents will match.
      required:
      - Effect
      - Name
      - OrganizationId
      title: CreateMobileDeviceAccessRuleRequest
      type: object
    CreateOrganizationResponse:
      example:
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
      type: object
    CreateOrganizationRequest:
      example:
        Domains: ""
        DirectoryId: ""
        KmsKeyArn: ""
        Alias: ""
        ClientToken: ""
        EnableInteroperability: ""
      properties:
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          - description: The AWS Directory Service directory ID.
        Alias:
          allOf:
          - $ref: '#/components/schemas/OrganizationName'
          - description: The organization alias.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyClientToken'
          - description: The idempotency token associated with the request.
        Domains:
          allOf:
          - $ref: '#/components/schemas/Domains'
          - description: The email domains to associate with the organization.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of a customer managed key
              from AWS KMS.
        EnableInteroperability:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When <code>true</code>, allows organization interoperability\
              \ between WorkMail and Microsoft Exchange. If <code>true</code>, you\
              \ must include a AD Connector directory ID in the request."
      required:
      - Alias
      title: CreateOrganizationRequest
      type: object
    DirectoryInUseException: {}
    CreateResourceResponse:
      example:
        ResourceId: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The identifier of the new resource.
      type: object
    CreateResourceRequest:
      example:
        Type: ""
        OrganizationId: ""
        Name: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier associated with the organization for which
              the resource is created.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the new resource.
        Type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The type of the new resource. The available types are <code>equipment</code>
              and <code>room</code>.
      required:
      - Name
      - OrganizationId
      - Type
      title: CreateResourceRequest
      type: object
    CreateUserResponse:
      example:
        UserId: ""
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the new user.
      type: object
    CreateUserRequest:
      example:
        DisplayName: ""
        OrganizationId: ""
        Name: ""
        Password: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier of the organization for which the user is
              created.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name for the new user. WorkMail directory user names
              have a maximum length of 64. All others have a maximum length of 20.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The display name for the new user.
        Password:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: The password for the new user.
      required:
      - DisplayName
      - Name
      - OrganizationId
      - Password
      title: CreateUserRequest
      type: object
    InvalidPasswordException: {}
    DeleteAccessControlRuleResponse:
      properties: {}
      type: object
    DeleteAccessControlRuleRequest:
      example:
        OrganizationId: ""
        Name: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization.
        Name:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleName'
          - description: The name of the access control rule.
      required:
      - Name
      - OrganizationId
      title: DeleteAccessControlRuleRequest
      type: object
    DeleteAliasResponse:
      properties: {}
      type: object
    DeleteAliasRequest:
      example:
        EntityId: ""
        Alias: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the user
              exists.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the member (user or group) from which
              to have the aliases removed.
        Alias:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The aliases to be removed from the user's set of aliases.
              Duplicate entries in the list are collapsed into single entries (the
              list is transformed into a set).
      required:
      - Alias
      - EntityId
      - OrganizationId
      title: DeleteAliasRequest
      type: object
    DeleteAvailabilityConfigurationResponse:
      properties: {}
      type: object
    DeleteAvailabilityConfigurationRequest:
      example:
        DomainName: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which the <code>AvailabilityConfiguration</code>
              will be deleted.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The domain for which the <code>AvailabilityConfiguration</code>
              will be deleted.
      required:
      - DomainName
      - OrganizationId
      title: DeleteAvailabilityConfigurationRequest
      type: object
    DeleteEmailMonitoringConfigurationResponse:
      properties: {}
      type: object
    DeleteEmailMonitoringConfigurationRequest:
      example:
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The ID of the organization from which the email monitoring
              configuration is deleted.
      required:
      - OrganizationId
      title: DeleteEmailMonitoringConfigurationRequest
      type: object
    DeleteGroupResponse:
      properties: {}
      type: object
    DeleteGroupRequest:
      example:
        OrganizationId: ""
        GroupId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization that contains the group.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the group to be deleted.
      required:
      - GroupId
      - OrganizationId
      title: DeleteGroupRequest
      type: object
    DeleteImpersonationRoleResponse:
      properties: {}
      type: object
    DeleteImpersonationRoleRequest:
      example:
        ImpersonationRoleId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization from which to delete the impersonation
              role.
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The ID of the impersonation role to delete.
      required:
      - ImpersonationRoleId
      - OrganizationId
      title: DeleteImpersonationRoleRequest
      type: object
    DeleteMailboxPermissionsResponse:
      properties: {}
      type: object
    DeleteMailboxPermissionsRequest:
      example:
        EntityId: ""
        GranteeId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier of the organization under which the member
              (user or group) exists.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the member (user or group) that owns the
              mailbox.
        GranteeId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the member (user or group) for which to
              delete granted permissions.
      required:
      - EntityId
      - GranteeId
      - OrganizationId
      title: DeleteMailboxPermissionsRequest
      type: object
    DeleteMobileDeviceAccessOverrideResponse:
      properties: {}
      type: object
    DeleteMobileDeviceAccessOverrideRequest:
      example:
        UserId: ""
        DeviceId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which the access override will
              be deleted.
        UserId:
          allOf:
          - $ref: '#/components/schemas/EntityIdentifier'
          - description: "<p>The WorkMail user for which you want to delete the override.\
              \ Accepts the following types of user identities:</p> <ul> <li> <p>User\
              \ ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code>\
              \ </p> </li> <li> <p>Email address: <code>user@domain.tld</code> </p>\
              \ </li> <li> <p>User name: <code>user</code> </p> </li> </ul>"
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The mobile device for which you delete the override. <code>DeviceId</code>
              is case insensitive.
      required:
      - DeviceId
      - OrganizationId
      - UserId
      title: DeleteMobileDeviceAccessOverrideRequest
      type: object
    DeleteMobileDeviceAccessRuleResponse:
      properties: {}
      type: object
    DeleteMobileDeviceAccessRuleRequest:
      example:
        MobileDeviceAccessRuleId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization under which the rule will be deleted.
        MobileDeviceAccessRuleId:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          - description: The identifier of the rule to be deleted.
      required:
      - MobileDeviceAccessRuleId
      - OrganizationId
      title: DeleteMobileDeviceAccessRuleRequest
      type: object
    DeleteOrganizationResponse:
      example:
        State: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
        State:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state of the organization.
      type: object
    DeleteOrganizationRequest:
      example:
        DeleteDirectory: ""
        OrganizationId: ""
        ClientToken: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyClientToken'
          - description: The idempotency token associated with the request.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
        DeleteDirectory:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If true, deletes the AWS Directory Service directory associated\
              \ with the organization."
      required:
      - DeleteDirectory
      - OrganizationId
      title: DeleteOrganizationRequest
      type: object
    DeleteResourceResponse:
      properties: {}
      type: object
    DeleteResourceRequest:
      example:
        ResourceId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier associated with the organization from which
              the resource is deleted.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The identifier of the resource to be deleted.
      required:
      - OrganizationId
      - ResourceId
      title: DeleteResourceRequest
      type: object
    DeleteRetentionPolicyResponse:
      properties: {}
      type: object
    DeleteRetentionPolicyRequest:
      example:
        OrganizationId: ""
        Id: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
        Id:
          allOf:
          - $ref: '#/components/schemas/ShortString'
          - description: The retention policy ID.
      required:
      - Id
      - OrganizationId
      title: DeleteRetentionPolicyRequest
      type: object
    DeleteUserResponse:
      properties: {}
      type: object
    DeleteUserRequest:
      example:
        UserId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization that contains the user to be deleted.
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the user to be deleted.
      required:
      - OrganizationId
      - UserId
      title: DeleteUserRequest
      type: object
    DeregisterFromWorkMailResponse:
      properties: {}
      type: object
    DeregisterFromWorkMailRequest:
      example:
        EntityId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the WorkMail
              entity exists.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the member (user or group) to be updated.
      required:
      - EntityId
      - OrganizationId
      title: DeregisterFromWorkMailRequest
      type: object
    DeregisterMailDomainResponse:
      properties: {}
      type: object
    DeregisterMailDomainRequest:
      example:
        DomainName: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which the domain will be deregistered.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/WorkMailDomainName'
          - description: The domain to deregister in WorkMail and SES.
      required:
      - DomainName
      - OrganizationId
      title: DeregisterMailDomainRequest
      type: object
    MailDomainInUseException: {}
    InvalidCustomSesConfigurationException: {}
    DescribeEmailMonitoringConfigurationResponse:
      example:
        LogGroupArn: ""
        RoleArn: ""
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM Role associated
              with the email monitoring configuration.
        LogGroupArn:
          allOf:
          - $ref: '#/components/schemas/LogGroupArn'
          - description: The Amazon Resource Name (ARN) of the CloudWatch Log group
              associated with the email monitoring configuration.
      type: object
    DescribeEmailMonitoringConfigurationRequest:
      example:
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The ID of the organization for which the email monitoring
              configuration is described.
      required:
      - OrganizationId
      title: DescribeEmailMonitoringConfigurationRequest
      type: object
    DescribeGroupResponse:
      example:
        DisabledDate: ""
        Email: ""
        State: ""
        GroupId: ""
        Name: ""
        EnabledDate: ""
      properties:
        GroupId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the described group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the described group.
        Email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email of the described group.
        State:
          allOf:
          - $ref: '#/components/schemas/EntityState'
          - description: "The state of the user: enabled (registered to WorkMail)\
              \ or disabled (deregistered or never registered to WorkMail)."
        EnabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when a user was registered to WorkMail,\
              \ in UNIX epoch time format."
        DisabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when a user was deregistered from WorkMail,\
              \ in UNIX epoch time format."
      type: object
    DescribeGroupRequest:
      example:
        OrganizationId: ""
        GroupId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the group
              exists.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the group to be described.
      required:
      - GroupId
      - OrganizationId
      title: DescribeGroupRequest
      type: object
    DescribeInboundDmarcSettingsResponse:
      example:
        Enforced: ""
      properties:
        Enforced:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Lists the enforcement setting of the applied policy.
      type: object
    DescribeInboundDmarcSettingsRequest:
      example:
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: Lists the ID of the given organization.
      required:
      - OrganizationId
      title: DescribeInboundDmarcSettingsRequest
      type: object
    DescribeMailboxExportJobResponse:
      example:
        EntityId: ""
        Description: ""
        S3Path: ""
        KmsKeyArn: ""
        EndTime: ""
        State: ""
        ErrorInfo: ""
        EstimatedProgress: ""
        StartTime: ""
        S3Prefix: ""
        S3BucketName: ""
        RoleArn: ""
      properties:
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the user or resource associated with the
              mailbox.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The mailbox export job description.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the AWS Identity and Access Management (IAM) role
              that grants write permission to the Amazon Simple Storage Service (Amazon
              S3) bucket.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of the symmetric AWS Key Management
              Service (AWS KMS) key that encrypts the exported mailbox content.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the S3 bucket.
        S3Prefix:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          - description: The S3 bucket prefix.
        S3Path:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          - description: The path to the S3 bucket and file that the mailbox export
              job is exporting to.
        EstimatedProgress:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The estimated progress of the mailbox export job, in percentage\
              \ points."
        State:
          allOf:
          - $ref: '#/components/schemas/MailboxExportJobState'
          - description: The state of the mailbox export job.
        ErrorInfo:
          allOf:
          - $ref: '#/components/schemas/MailboxExportErrorInfo'
          - description: Error information for failed mailbox export jobs.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The mailbox export job start timestamp.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The mailbox export job end timestamp.
      type: object
    DescribeMailboxExportJobRequest:
      example:
        OrganizationId: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/MailboxExportJobId'
          - description: The mailbox export job ID.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
      required:
      - JobId
      - OrganizationId
      title: DescribeMailboxExportJobRequest
      type: object
    DescribeOrganizationResponse:
      example:
        DirectoryId: ""
        Alias: ""
        State: ""
        OrganizationId: ""
        DefaultMailDomain: ""
        ErrorMessage: ""
        ARN: ""
        DirectoryType: ""
        CompletedDate: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier of an organization.
        Alias:
          allOf:
          - $ref: '#/components/schemas/OrganizationName'
          - description: The alias for an organization.
        State:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state of an organization.
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the directory associated with an WorkMail
              organization.
        DirectoryType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of directory associated with the WorkMail organization.
        DefaultMailDomain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default mail domain associated with the organization.
        CompletedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date at which the organization became usable in the\
              \ WorkMail context, in UNIX epoch time format."
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: (Optional) The error message indicating if unexpected behavior
              was encountered with regards to the organization.
        ARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the organization.
      type: object
    DescribeOrganizationRequest:
      example:
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization to be described.
      required:
      - OrganizationId
      title: DescribeOrganizationRequest
      type: object
    DescribeResourceResponse:
      example:
        Type: ""
        DisabledDate: ""
        Email: ""
        ResourceId: ""
        State: ""
        Name: ""
        BookingOptions:
          AutoDeclineRecurringRequests: ""
          AutoAcceptRequests: ""
          AutoDeclineConflictingRequests: ""
        EnabledDate: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The identifier of the described resource.
        Email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email of the described resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the described resource.
        Type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The type of the described resource.
        BookingOptions:
          $ref: '#/components/schemas/DescribeResourceResponse_BookingOptions'
        State:
          allOf:
          - $ref: '#/components/schemas/EntityState'
          - description: "The state of the resource: enabled (registered to WorkMail),\
              \ disabled (deregistered or never registered to WorkMail), or deleted."
        EnabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when a resource was enabled for WorkMail,\
              \ in UNIX epoch time format."
        DisabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when a resource was disabled from WorkMail,\
              \ in UNIX epoch time format."
      type: object
    DescribeResourceRequest:
      example:
        ResourceId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier associated with the organization for which
              the resource is described.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The identifier of the resource to be described.
      required:
      - OrganizationId
      - ResourceId
      title: DescribeResourceRequest
      type: object
    DescribeUserResponse:
      example:
        DisabledDate: ""
        Email: ""
        UserId: ""
        State: ""
        UserRole: ""
        DisplayName: ""
        Name: ""
        EnabledDate: ""
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the described user.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name for the user.
        Email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email of the user.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The display name of the user.
        State:
          allOf:
          - $ref: '#/components/schemas/EntityState'
          - description: "The state of a user: enabled (registered to WorkMail) or\
              \ disabled (deregistered or never registered to WorkMail)."
        UserRole:
          allOf:
          - $ref: '#/components/schemas/UserRole'
          - description: "In certain cases, other entities are modeled as users. If\
              \ interoperability is enabled, resources are imported into WorkMail\
              \ as users. Because different WorkMail organizations rely on different\
              \ directory types, administrators can distinguish between an unregistered\
              \ user (account is disabled and has a user role) and the directory administrators.\
              \ The values are USER, RESOURCE, and SYSTEM_USER."
        EnabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time at which the user was enabled for WorkMailusage,\
              \ in UNIX epoch time format."
        DisabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time at which the user was disabled for WorkMail\
              \ usage, in UNIX epoch time format."
      type: object
    DescribeUserRequest:
      example:
        UserId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the user
              exists.
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the user to be described.
      required:
      - OrganizationId
      - UserId
      title: DescribeUserRequest
      type: object
    DisassociateDelegateFromResourceResponse:
      properties: {}
      type: object
    DisassociateDelegateFromResourceRequest:
      example:
        EntityId: ""
        ResourceId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the resource
              exists.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The identifier of the resource from which delegates'' set
              members are removed. '
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: "The identifier for the member (user, group) to be removed\
              \ from the resource's delegates."
      required:
      - EntityId
      - OrganizationId
      - ResourceId
      title: DisassociateDelegateFromResourceRequest
      type: object
    DisassociateMemberFromGroupResponse:
      properties: {}
      type: object
    DisassociateMemberFromGroupRequest:
      example:
        MemberId: ""
        OrganizationId: ""
        GroupId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the group
              exists.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the group from which members are removed.
        MemberId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the member to be removed to the group.
      required:
      - GroupId
      - MemberId
      - OrganizationId
      title: DisassociateMemberFromGroupRequest
      type: object
    GetAccessControlEffectResponse:
      example:
        MatchedRules: ""
        Effect: ""
      properties:
        Effect:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleEffect'
          - description: The rule effect.
        MatchedRules:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleNameList'
          - description: "The rules that match the given parameters, resulting in\
              \ an effect."
      type: object
    GetAccessControlEffectRequest:
      example:
        Action: ""
        ImpersonationRoleId: ""
        UserId: ""
        IpAddress: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization.
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          - description: The IPv4 address.
        Action:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleAction'
          - description: "The access protocol action. Valid values include <code>ActiveSync</code>,\
              \ <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>,\
              \ <code>WindowsOutlook</code>, and <code>WebMail</code>."
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The user ID.
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The impersonation role ID.
      required:
      - Action
      - IpAddress
      - OrganizationId
      title: GetAccessControlEffectRequest
      type: object
    GetDefaultRetentionPolicyResponse:
      example:
        FolderConfigurations: ""
        Description: ""
        Id: ""
        Name: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ShortString'
          - description: The retention policy ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/ShortString'
          - description: The retention policy name.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The retention policy description.
        FolderConfigurations:
          allOf:
          - $ref: '#/components/schemas/FolderConfigurations'
          - description: The retention policy folder configurations.
      type: object
    GetDefaultRetentionPolicyRequest:
      example:
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
      required:
      - OrganizationId
      title: GetDefaultRetentionPolicyRequest
      type: object
    GetImpersonationRoleResponse:
      example:
        Type: ""
        Description: ""
        ImpersonationRoleId: ""
        DateCreated: ""
        Rules: ""
        DateModified: ""
        Name: ""
      properties:
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The impersonation role ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleName'
          - description: The impersonation role name.
        Type:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleType'
          - description: The impersonation role type.
        Description:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleDescription'
          - description: The impersonation role description.
        Rules:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRuleList'
          - description: The list of rules for the given impersonation role.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when the impersonation role was created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when the impersonation role was last modified.
      type: object
    GetImpersonationRoleRequest:
      example:
        ImpersonationRoleId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization from which to retrieve the impersonation
              role.
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The impersonation role ID to retrieve.
      required:
      - ImpersonationRoleId
      - OrganizationId
      title: GetImpersonationRoleRequest
      type: object
    GetImpersonationRoleEffectResponse:
      example:
        MatchedRules: ""
        Type: ""
        Effect: ""
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleType'
          - description: The impersonation role type.
        Effect:
          allOf:
          - $ref: '#/components/schemas/AccessEffect'
          - description: ' <code/>Effect of the impersonation role on the target user
              based on its rules. Available effects are <code>ALLOW</code> or <code>DENY</code>.'
        MatchedRules:
          allOf:
          - $ref: '#/components/schemas/ImpersonationMatchedRuleList'
          - description: A list of the rules that match the input and produce the
              configured effect.
      type: object
    GetImpersonationRoleEffectRequest:
      example:
        ImpersonationRoleId: ""
        OrganizationId: ""
        TargetUser: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization where the impersonation role is
              defined.
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The impersonation role ID to test.
        TargetUser:
          allOf:
          - $ref: '#/components/schemas/EntityIdentifier'
          - description: "<p>The WorkMail organization user chosen to test the impersonation\
              \ role. The following identity formats are available:</p> <ul> <li>\
              \ <p>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code>\
              \ </p> </li> <li> <p>Email address: <code>user@domain.tld</code> </p>\
              \ </li> <li> <p>User name: <code>user</code> </p> </li> </ul>"
      required:
      - ImpersonationRoleId
      - OrganizationId
      - TargetUser
      title: GetImpersonationRoleEffectRequest
      type: object
    GetMailDomainResponse:
      example:
        IsTestDomain: ""
        IsDefault: ""
        OwnershipVerificationStatus: ""
        DkimVerificationStatus: ""
        Records: ""
      properties:
        Records:
          allOf:
          - $ref: '#/components/schemas/DnsRecords'
          - description: "A list of the DNS records that WorkMail recommends adding\
              \ in your DNS provider for the best user experience. The records configure\
              \ your domain with DMARC, SPF, DKIM, and direct incoming email traffic\
              \ to SES. See admin guide for more details."
        IsTestDomain:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether the domain is a test domain provided by\
              \ WorkMail, or a custom domain."
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the domain is the default domain for your
              organization.
        OwnershipVerificationStatus:
          allOf:
          - $ref: '#/components/schemas/DnsRecordVerificationStatus'
          - description: ' Indicates the status of the domain ownership verification.'
        DkimVerificationStatus:
          allOf:
          - $ref: '#/components/schemas/DnsRecordVerificationStatus'
          - description: Indicates the status of a DKIM verification.
      type: object
    GetMailDomainRequest:
      example:
        DomainName: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which the domain is retrieved.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/WorkMailDomainName'
          - description: The domain from which you want to retrieve details.
      required:
      - DomainName
      - OrganizationId
      title: GetMailDomainRequest
      type: object
    GetMailboxDetailsResponse:
      example:
        MailboxSize: ""
        MailboxQuota: ""
      properties:
        MailboxQuota:
          allOf:
          - $ref: '#/components/schemas/MailboxQuota'
          - description: "The maximum allowed mailbox size, in MB, for the specified\
              \ user."
        MailboxSize:
          allOf:
          - $ref: '#/components/schemas/MailboxSize'
          - description: "The current mailbox size, in MB, for the specified user."
      type: object
    GetMailboxDetailsRequest:
      example:
        UserId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization that contains the user
              whose mailbox details are being requested.
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the user whose mailbox details are being
              requested.
      required:
      - OrganizationId
      - UserId
      title: GetMailboxDetailsRequest
      type: object
    GetMobileDeviceAccessEffectResponse:
      example:
        MatchedRules: ""
        Effect: ""
      properties:
        Effect:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          - description: "The effect of the simulated access, <code>ALLOW</code> or\
              \ <code>DENY</code>, after evaluating mobile device access rules in\
              \ the WorkMail organization for the simulated user parameters."
        MatchedRules:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessMatchedRuleList'
          - description: A list of the rules which matched the simulated user input
              and produced the effect.
      type: object
    GetMobileDeviceAccessEffectRequest:
      example:
        DeviceModel: ""
        DeviceType: ""
        DeviceUserAgent: ""
        OrganizationId: ""
        DeviceOperatingSystem: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization to simulate the access effect for.
        DeviceType:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          - description: Device type the simulated user will report.
        DeviceModel:
          allOf:
          - $ref: '#/components/schemas/DeviceModel'
          - description: Device model the simulated user will report.
        DeviceOperatingSystem:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystem'
          - description: Device operating system the simulated user will report.
        DeviceUserAgent:
          allOf:
          - $ref: '#/components/schemas/DeviceUserAgent'
          - description: Device user agent the simulated user will report.
      required:
      - OrganizationId
      title: GetMobileDeviceAccessEffectRequest
      type: object
    GetMobileDeviceAccessOverrideResponse:
      example:
        Description: ""
        UserId: ""
        DeviceId: ""
        DateCreated: ""
        Effect: ""
        DateModified: ""
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The WorkMail user to which the access override applies.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The device to which the access override applies.
        Effect:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          - description: "The effect of the override, <code>ALLOW</code> or <code>DENY</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          - description: A description of the override.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date the override was first created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date the description was last modified.
      type: object
    GetMobileDeviceAccessOverrideRequest:
      example:
        UserId: ""
        DeviceId: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization to which you want to apply the
              override.
        UserId:
          allOf:
          - $ref: '#/components/schemas/EntityIdentifier'
          - description: "<p>Identifies the WorkMail user for the override. Accepts\
              \ the following types of user identities: </p> <ul> <li> <p>User ID:\
              \ <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code>\
              \ </p> </li> <li> <p>Email address: <code>user@domain.tld</code> </p>\
              \ </li> <li> <p>User name: <code>user</code> </p> </li> </ul>"
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The mobile device to which the override applies. <code>DeviceId</code>
              is case insensitive.
      required:
      - DeviceId
      - OrganizationId
      - UserId
      title: GetMobileDeviceAccessOverrideRequest
      type: object
    ListAccessControlRulesResponse:
      example:
        Rules: ""
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/AccessControlRulesList'
          - description: The access control rules.
      type: object
    ListAccessControlRulesRequest:
      example:
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization.
      required:
      - OrganizationId
      title: ListAccessControlRulesRequest
      type: object
    ListAliasesResponse:
      example:
        NextToken: ""
        Aliases: ""
      properties:
        Aliases:
          allOf:
          - $ref: '#/components/schemas/Aliases'
          - description: The entity's paginated aliases.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value is "null" when there are no more results to return.
      type: object
    ListAliasesRequest:
      example:
        EntityId: ""
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the entity
              exists.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the entity for which to list the aliases.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not contain any tokens.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      required:
      - EntityId
      - OrganizationId
      title: ListAliasesRequest
      type: object
    ListAvailabilityConfigurationsResponse:
      example:
        NextToken: ""
        AvailabilityConfigurations: ""
      properties:
        AvailabilityConfigurations:
          allOf:
          - $ref: '#/components/schemas/AvailabilityConfigurationList'
          - description: The list of <code>AvailabilityConfiguration</code>'s that
              exist for the specified WorkMail organization.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value is <code>null</code> when there are no further results to return.
      type: object
    ListAvailabilityConfigurationsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which the <code>AvailabilityConfiguration</code>'s
              will be listed.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not require a token.
      required:
      - OrganizationId
      title: ListAvailabilityConfigurationsRequest
      type: object
    ListGroupMembersResponse:
      example:
        NextToken: ""
        Members: ""
      properties:
        Members:
          allOf:
          - $ref: '#/components/schemas/Members'
          - description: The members associated to the group.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not contain any tokens.
      type: object
    ListGroupMembersRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
        GroupId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the group
              exists.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the group to which the members (users
              or groups) are associated.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The token to use to retrieve the next page of results.
              The first call does not contain any tokens.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      required:
      - GroupId
      - OrganizationId
      title: ListGroupMembersRequest
      type: object
    ListGroupsResponse:
      example:
        NextToken: ""
        Groups: ""
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/Groups'
          - description: The overview of groups for an organization.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value is "null" when there are no more results to return.
      type: object
    ListGroupsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the groups
              exist.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not contain any tokens.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      required:
      - OrganizationId
      title: ListGroupsRequest
      type: object
    ListImpersonationRolesResponse:
      example:
        NextToken: ""
        Roles: ""
      properties:
        Roles:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleList'
          - description: The list of impersonation roles under the given WorkMail
              organization.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to retrieve the next page of results. The value
              is <code>null</code> when there are no results to return.
      type: object
    ListImpersonationRolesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization to which the listed impersonation
              roles belong.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token used to retrieve the next page of results. The
              first call doesn't require a token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results returned in a single call.
      required:
      - OrganizationId
      title: ListImpersonationRolesRequest
      type: object
    ListMailDomainsResponse:
      example:
        NextToken: ""
        MailDomains: ""
      properties:
        MailDomains:
          allOf:
          - $ref: '#/components/schemas/MailDomains'
          - description: "The list of mail domain summaries, specifying domains that\
              \ exist in the specified WorkMail organization, along with the information\
              \ about whether the domain is or isn't the default."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value becomes <code>null</code> when there are no more results to return.
      type: object
    ListMailDomainsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which to list domains.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not require a token.
      required:
      - OrganizationId
      title: ListMailDomainsRequest
      type: object
    ListMailboxExportJobsResponse:
      example:
        NextToken: ""
        Jobs: ""
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/Jobs'
          - description: The mailbox export job details.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results.
      type: object
    ListMailboxExportJobsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      required:
      - OrganizationId
      title: ListMailboxExportJobsRequest
      type: object
    ListMailboxPermissionsResponse:
      example:
        NextToken: ""
        Permissions: ""
      properties:
        Permissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          - description: "One page of the user, group, or resource mailbox permissions."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value is "null" when there are no more results to return.
      type: object
    ListMailboxPermissionsRequest:
      example:
        EntityId: ""
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: "The identifier of the organization under which the user,\
              \ group, or resource exists."
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: "The identifier of the user, group, or resource for which\
              \ to list mailbox permissions."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not contain any tokens.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      required:
      - EntityId
      - OrganizationId
      title: ListMailboxPermissionsRequest
      type: object
    ListMobileDeviceAccessOverridesResponse:
      example:
        NextToken: ""
        Overrides: ""
      properties:
        Overrides:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessOverridesList'
          - description: The list of mobile device access overrides that exist for
              the specified WorkMail organization and user.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value is “null” when there are no more results to return.
      type: object
    ListMobileDeviceAccessOverridesRequest:
      example:
        NextToken: ""
        UserId: ""
        DeviceId: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization under which to list mobile device
              access overrides.
        UserId:
          allOf:
          - $ref: '#/components/schemas/EntityIdentifier'
          - description: "<p>The WorkMail user under which you list the mobile device\
              \ access overrides. Accepts the following types of user identities:</p>\
              \ <ul> <li> <p>User ID: <code>12345678-1234-1234-1234-123456789012</code>\
              \ or <code>S-1-1-12-1234567890-123456789-123456789-1234</code> </p>\
              \ </li> <li> <p>Email address: <code>user@domain.tld</code> </p> </li>\
              \ <li> <p>User name: <code>user</code> </p> </li> </ul>"
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The mobile device to which the access override applies.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not require a token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      required:
      - OrganizationId
      title: ListMobileDeviceAccessOverridesRequest
      type: object
    ListMobileDeviceAccessRulesResponse:
      example:
        Rules: ""
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRulesList'
          - description: The list of mobile device access rules that exist under the
              specified WorkMail organization.
      type: object
    ListMobileDeviceAccessRulesRequest:
      example:
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which to list the rules.
      required:
      - OrganizationId
      title: ListMobileDeviceAccessRulesRequest
      type: object
    ListOrganizationsResponse:
      example:
        OrganizationSummaries: ""
        NextToken: ""
      properties:
        OrganizationSummaries:
          allOf:
          - $ref: '#/components/schemas/OrganizationSummaries'
          - description: The overview of owned organizations presented as a list of
              organization summaries.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value is "null" when there are no more results to return.
      type: object
    ListOrganizationsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not contain any tokens.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      title: ListOrganizationsRequest
      type: object
    ListResourceDelegatesResponse:
      example:
        NextToken: ""
        Delegates: ""
      properties:
        Delegates:
          allOf:
          - $ref: '#/components/schemas/ResourceDelegates'
          - description: One page of the resource's delegates.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token used to paginate through the delegates associated\
              \ with a resource. While results are still available, it has an associated\
              \ value. When the last page is reached, the token is empty."
      type: object
    ListResourceDelegatesRequest:
      example:
        NextToken: ""
        ResourceId: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization that contains the resource
              for which delegates are listed.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier for the resource whose delegates are listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token used to paginate through the delegates associated
              with a resource.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of maximum results in a page.
      required:
      - OrganizationId
      - ResourceId
      title: ListResourceDelegatesRequest
      type: object
    ListResourcesResponse:
      example:
        NextToken: ""
        Resources: ""
      properties:
        Resources:
          allOf:
          - $ref: '#/components/schemas/Resources'
          - description: One page of the organization's resource representation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " The token used to paginate through all the organization's\
              \ resources. While results are still available, it has an associated\
              \ value. When the last page is reached, the token is empty."
      type: object
    ListResourcesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the resources
              exist.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not contain any tokens.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      required:
      - OrganizationId
      title: ListResourcesRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tag key-value pairs.
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceARN: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The resource ARN.
      required:
      - ResourceARN
      title: ListTagsForResourceRequest
      type: object
    ListUsersResponse:
      example:
        NextToken: ""
        Users: ""
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/Users'
          - description: The overview of users for an organization.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The token to use to retrieve the next page of results.
              This value is `null` when there are no more results to return.'
      type: object
    ListUsersRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization under which the users
              exist.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              first call does not contain any tokens.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
      required:
      - OrganizationId
      title: ListUsersRequest
      type: object
    PutAccessControlRuleResponse:
      properties: {}
      type: object
    PutAccessControlRuleRequest:
      example:
        NotIpRanges: ""
        NotUserIds: ""
        Description: ""
        Actions: ""
        NotActions: ""
        Effect: ""
        IpRanges: ""
        OrganizationId: ""
        ImpersonationRoleIds: ""
        NotImpersonationRoleIds: ""
        UserIds: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleName'
          - description: The rule name.
        Effect:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleEffect'
          - description: The rule effect.
        Description:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleDescription'
          - description: The rule description.
        IpRanges:
          allOf:
          - $ref: '#/components/schemas/IpRangeList'
          - description: IPv4 CIDR ranges to include in the rule.
        NotIpRanges:
          allOf:
          - $ref: '#/components/schemas/IpRangeList'
          - description: IPv4 CIDR ranges to exclude from the rule.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          - description: "Access protocol actions to include in the rule. Valid values\
              \ include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>,\
              \ <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>,\
              \ and <code>WebMail</code>."
        NotActions:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          - description: "Access protocol actions to exclude from the rule. Valid\
              \ values include <code>ActiveSync</code>, <code>AutoDiscover</code>,\
              \ <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>,\
              \ and <code>WebMail</code>."
        UserIds:
          allOf:
          - $ref: '#/components/schemas/UserIdList'
          - description: User IDs to include in the rule.
        NotUserIds:
          allOf:
          - $ref: '#/components/schemas/UserIdList'
          - description: User IDs to exclude from the rule.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier of the organization.
        ImpersonationRoleIds:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleIdList'
          - description: Impersonation role IDs to include in the rule.
        NotImpersonationRoleIds:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleIdList'
          - description: Impersonation role IDs to exclude from the rule.
      required:
      - Description
      - Effect
      - Name
      - OrganizationId
      title: PutAccessControlRuleRequest
      type: object
    PutEmailMonitoringConfigurationResponse:
      properties: {}
      type: object
    PutEmailMonitoringConfigurationRequest:
      example:
        OrganizationId: ""
        LogGroupArn: ""
        RoleArn: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The ID of the organization for which the email monitoring
              configuration is set.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM Role associated
              with the email monitoring configuration.
        LogGroupArn:
          allOf:
          - $ref: '#/components/schemas/LogGroupArn'
          - description: The Amazon Resource Name (ARN) of the CloudWatch Log group
              associated with the email monitoring configuration.
      required:
      - LogGroupArn
      - OrganizationId
      - RoleArn
      title: PutEmailMonitoringConfigurationRequest
      type: object
    PutInboundDmarcSettingsResponse:
      properties: {}
      type: object
    PutInboundDmarcSettingsRequest:
      example:
        OrganizationId: ""
        Enforced: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The ID of the organization that you are applying the DMARC
              policy to.
        Enforced:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Enforces or suspends a policy after it's applied.
      required:
      - Enforced
      - OrganizationId
      title: PutInboundDmarcSettingsRequest
      type: object
    PutMailboxPermissionsResponse:
      properties: {}
      type: object
    PutMailboxPermissionsRequest:
      example:
        EntityId: ""
        GranteeId: ""
        PermissionValues: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: "The identifier of the organization under which the user,\
              \ group, or resource exists."
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: "The identifier of the user, group, or resource for which\
              \ to update mailbox permissions."
        GranteeId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: "The identifier of the user, group, or resource to which\
              \ to grant the permissions."
        PermissionValues:
          allOf:
          - $ref: '#/components/schemas/PermissionValues'
          - description: "The permissions granted to the grantee. SEND_AS allows the\
              \ grantee to send email as the owner of the mailbox (the grantee is\
              \ not mentioned on these emails). SEND_ON_BEHALF allows the grantee\
              \ to send email on behalf of the owner of the mailbox (the grantee is\
              \ not mentioned as the physical sender of these emails). FULL_ACCESS\
              \ allows the grantee full access to the mailbox, irrespective of other\
              \ folder-level permissions set on the mailbox."
      required:
      - EntityId
      - GranteeId
      - OrganizationId
      - PermissionValues
      title: PutMailboxPermissionsRequest
      type: object
    PutMobileDeviceAccessOverrideResponse:
      properties: {}
      type: object
    PutMobileDeviceAccessOverrideRequest:
      example:
        Description: ""
        UserId: ""
        DeviceId: ""
        Effect: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: Identifies the WorkMail organization for which you create
              the override.
        UserId:
          allOf:
          - $ref: '#/components/schemas/EntityIdentifier'
          - description: "<p>The WorkMail user for which you create the override.\
              \ Accepts the following types of user identities:</p> <ul> <li> <p>User\
              \ ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code>\
              \ </p> </li> <li> <p>Email address: <code>user@domain.tld</code> </p>\
              \ </li> <li> <p>User name: <code>user</code> </p> </li> </ul>"
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The mobile device for which you create the override. <code>DeviceId</code>
              is case insensitive.
        Effect:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          - description: "The effect of the override, <code>ALLOW</code> or <code>DENY</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          - description: A description of the override.
      required:
      - DeviceId
      - Effect
      - OrganizationId
      - UserId
      title: PutMobileDeviceAccessOverrideRequest
      type: object
    PutRetentionPolicyResponse:
      properties: {}
      type: object
    PutRetentionPolicyRequest:
      example:
        FolderConfigurations: ""
        Description: ""
        OrganizationId: ""
        Id: ""
        Name: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The organization ID.
        Id:
          allOf:
          - $ref: '#/components/schemas/ShortString'
          - description: The retention policy ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/ShortString'
          - description: The retention policy name.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: The retention policy description.
        FolderConfigurations:
          allOf:
          - $ref: '#/components/schemas/FolderConfigurations'
          - description: The retention policy folder configurations.
      required:
      - FolderConfigurations
      - Name
      - OrganizationId
      title: PutRetentionPolicyRequest
      type: object
    RegisterMailDomainResponse:
      properties: {}
      type: object
    RegisterMailDomainRequest:
      example:
        DomainName: ""
        OrganizationId: ""
        ClientToken: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyClientToken'
          - description: Idempotency token used when retrying requests.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization under which you're creating the
              domain.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/WorkMailDomainName'
          - description: The name of the mail domain to create in WorkMail and SES.
      required:
      - DomainName
      - OrganizationId
      title: RegisterMailDomainRequest
      type: object
    RegisterToWorkMailResponse:
      properties: {}
      type: object
    RegisterToWorkMailRequest:
      example:
        EntityId: ""
        Email: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: "The identifier for the organization under which the user,\
              \ group, or resource exists."
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: "The identifier for the user, group, or resource to be updated."
        Email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: "The email for the user, group, or resource to be updated."
      required:
      - Email
      - EntityId
      - OrganizationId
      title: RegisterToWorkMailRequest
      type: object
    EntityAlreadyRegisteredException: {}
    ResetPasswordResponse:
      properties: {}
      type: object
    ResetPasswordRequest:
      example:
        UserId: ""
        OrganizationId: ""
        Password: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier of the organization that contains the user
              for which the password is reset.
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the user for whom the password is reset.
        Password:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: The new password for the user.
      required:
      - OrganizationId
      - Password
      - UserId
      title: ResetPasswordRequest
      type: object
    StartMailboxExportJobResponse:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/MailboxExportJobId'
          - description: The job ID.
      type: object
    StartMailboxExportJobRequest:
      example:
        EntityId: ""
        Description: ""
        KmsKeyArn: ""
        S3Prefix: ""
        OrganizationId: ""
        S3BucketName: ""
        ClientToken: ""
        RoleArn: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyClientToken'
          - description: The idempotency token for the client request.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier associated with the organization.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the user or resource associated with the
              mailbox.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The mailbox export job description.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the AWS Identity and Access Management (IAM) role
              that grants write permission to the S3 bucket.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of the symmetric AWS Key Management
              Service (AWS KMS) key that encrypts the exported mailbox content.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the S3 bucket.
        S3Prefix:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          - description: The S3 bucket prefix.
      required:
      - ClientToken
      - EntityId
      - KmsKeyArn
      - OrganizationId
      - RoleArn
      - S3BucketName
      - S3Prefix
      title: StartMailboxExportJobRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The resource ARN.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tag key-value pairs.
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    TooManyTagsException: {}
    TestAvailabilityConfigurationResponse:
      example:
        TestPassed: ""
        FailureReason: ""
      properties:
        TestPassed:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Boolean indicating whether the test passed or failed.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: String containing the reason for a failed test if <code>TestPassed</code>
              is false.
      type: object
    TestAvailabilityConfigurationRequest:
      example:
        LambdaProvider:
          LambdaArn: ""
        DomainName: ""
        EwsProvider:
          EwsEndpoint: ""
          EwsPassword: ""
          EwsUsername: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization where the availability provider
              will be tested.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: "The domain to which the provider applies. If this field\
              \ is provided, a stored availability provider associated to this domain\
              \ name will be tested."
        EwsProvider:
          $ref: '#/components/schemas/EwsAvailabilityProvider'
        LambdaProvider:
          $ref: '#/components/schemas/LambdaAvailabilityProvider'
      required:
      - OrganizationId
      title: TestAvailabilityConfigurationRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The resource ARN.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The tag keys.
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateAvailabilityConfigurationResponse:
      properties: {}
      type: object
    UpdateAvailabilityConfigurationRequest:
      example:
        LambdaProvider:
          LambdaArn: ""
        DomainName: ""
        EwsProvider:
          EwsEndpoint: ""
          EwsPassword: ""
          EwsUsername: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which the <code>AvailabilityConfiguration</code>
              will be updated.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The domain to which the provider applies the availability
              configuration.
        EwsProvider:
          $ref: '#/components/schemas/UpdateAvailabilityConfigurationRequest_EwsProvider'
        LambdaProvider:
          $ref: '#/components/schemas/UpdateAvailabilityConfigurationRequest_LambdaProvider'
      required:
      - DomainName
      - OrganizationId
      title: UpdateAvailabilityConfigurationRequest
      type: object
    UpdateDefaultMailDomainResponse:
      properties: {}
      type: object
    UpdateDefaultMailDomainRequest:
      example:
        DomainName: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization for which to list domains.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/WorkMailDomainName'
          - description: The domain name that will become the default domain.
      required:
      - DomainName
      - OrganizationId
      title: UpdateDefaultMailDomainRequest
      type: object
    UpdateImpersonationRoleResponse:
      properties: {}
      type: object
    UpdateImpersonationRoleRequest:
      example:
        Type: ""
        Description: ""
        ImpersonationRoleId: ""
        OrganizationId: ""
        Rules: ""
        Name: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization that contains the impersonation
              role to update.
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The ID of the impersonation role to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleName'
          - description: The updated impersonation role name.
        Type:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleType'
          - description: The updated impersonation role type.
        Description:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleDescription'
          - description: The updated impersonation role description.
        Rules:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRuleList'
          - description: The updated list of rules.
      required:
      - ImpersonationRoleId
      - Name
      - OrganizationId
      - Rules
      - Type
      title: UpdateImpersonationRoleRequest
      type: object
    UpdateMailboxQuotaResponse:
      properties: {}
      type: object
    UpdateMailboxQuotaRequest:
      example:
        UserId: ""
        MailboxQuota: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier for the organization that contains the user
              for whom to update the mailbox quota.
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifer for the user for whom to update the mailbox
              quota.
        MailboxQuota:
          allOf:
          - $ref: '#/components/schemas/MailboxQuota'
          - description: "The updated mailbox quota, in MB, for the specified user."
      required:
      - MailboxQuota
      - OrganizationId
      - UserId
      title: UpdateMailboxQuotaRequest
      type: object
    UpdateMobileDeviceAccessRuleResponse:
      properties: {}
      type: object
    UpdateMobileDeviceAccessRuleRequest:
      example:
        MobileDeviceAccessRuleId: ""
        NotDeviceModels: ""
        Description: ""
        DeviceOperatingSystems: ""
        OrganizationId: ""
        NotDeviceTypes: ""
        Name: ""
        DeviceModels: ""
        NotDeviceOperatingSystems: ""
        DeviceUserAgents: ""
        DeviceTypes: ""
        Effect: ""
        NotDeviceUserAgents: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The WorkMail organization under which the rule will be updated.
        MobileDeviceAccessRuleId:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          - description: The identifier of the rule to be updated.
        Name:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleName'
          - description: The updated rule name.
        Description:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          - description: The updated rule description.
        Effect:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          - description: The effect of the rule when it matches. Allowed values are
              <code>ALLOW</code> or <code>DENY</code>.
        DeviceTypes:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeList'
          - description: Device types that the updated rule will match.
        NotDeviceTypes:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeList'
          - description: Device types that the updated rule <b>will not</b> match.
              All other device types will match.
        DeviceModels:
          allOf:
          - $ref: '#/components/schemas/DeviceModelList'
          - description: Device models that the updated rule will match.
        NotDeviceModels:
          allOf:
          - $ref: '#/components/schemas/DeviceModelList'
          - description: Device models that the updated rule <b>will not</b> match.
              All other device models will match.
        DeviceOperatingSystems:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystemList'
          - description: Device operating systems that the updated rule will match.
        NotDeviceOperatingSystems:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystemList'
          - description: Device operating systems that the updated rule <b>will not</b>
              match. All other device operating systems will match.
        DeviceUserAgents:
          allOf:
          - $ref: '#/components/schemas/DeviceUserAgentList'
          - description: User agents that the updated rule will match.
        NotDeviceUserAgents:
          allOf:
          - $ref: '#/components/schemas/DeviceUserAgentList'
          - description: User agents that the updated rule <b>will not</b> match.
              All other user agents will match.
      required:
      - Effect
      - MobileDeviceAccessRuleId
      - Name
      - OrganizationId
      title: UpdateMobileDeviceAccessRuleRequest
      type: object
    UpdatePrimaryEmailAddressResponse:
      properties: {}
      type: object
    UpdatePrimaryEmailAddressRequest:
      example:
        EntityId: ""
        Email: ""
        OrganizationId: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: "The organization that contains the user, group, or resource\
              \ to update."
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: "The user, group, or resource to update."
        Email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The value of the email to be updated as primary.
      required:
      - Email
      - EntityId
      - OrganizationId
      title: UpdatePrimaryEmailAddressRequest
      type: object
    UpdateResourceResponse:
      properties: {}
      type: object
    UpdateResourceRequest:
      example:
        ResourceId: ""
        OrganizationId: ""
        Name: ""
        BookingOptions:
          AutoDeclineRecurringRequests: ""
          AutoAcceptRequests: ""
          AutoDeclineConflictingRequests: ""
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier associated with the organization for which
              the resource is updated.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The identifier of the resource to be updated.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the resource to be updated.
        BookingOptions:
          $ref: '#/components/schemas/UpdateResourceRequest_BookingOptions'
      required:
      - OrganizationId
      - ResourceId
      title: UpdateResourceRequest
      type: object
    InvalidConfigurationException: {}
    AccessControlRuleName:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    AccessControlRuleEffect:
      enum:
      - ALLOW
      - DENY
      type: string
    AccessControlRuleDescription:
      maxLength: 255
      minLength: 0
      pattern: "[\\u0020-\\u00FF]+"
      type: string
    IpRangeList:
      items:
        $ref: '#/components/schemas/IpRange'
      maxItems: 1024
      minItems: 0
      type: array
    ActionsList:
      items:
        $ref: '#/components/schemas/AccessControlRuleAction'
      maxItems: 10
      minItems: 0
      type: array
    UserIdList:
      items:
        $ref: '#/components/schemas/WorkMailIdentifier'
      maxItems: 10
      minItems: 0
      type: array
    Timestamp:
      format: date-time
      type: string
    ImpersonationRoleIdList:
      items:
        $ref: '#/components/schemas/ImpersonationRoleId'
      maxItems: 10
      minItems: 0
      type: array
    AccessControlRule:
      description: A rule that controls access to an WorkMail organization.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleName'
          - description: The rule name.
        Effect:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleEffect'
          - description: The rule effect.
        Description:
          allOf:
          - $ref: '#/components/schemas/AccessControlRuleDescription'
          - description: The rule description.
        IpRanges:
          allOf:
          - $ref: '#/components/schemas/IpRangeList'
          - description: IPv4 CIDR ranges to include in the rule.
        NotIpRanges:
          allOf:
          - $ref: '#/components/schemas/IpRangeList'
          - description: IPv4 CIDR ranges to exclude from the rule.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          - description: "Access protocol actions to include in the rule. Valid values\
              \ include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>,\
              \ <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>,\
              \ and <code>WebMail</code>."
        NotActions:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          - description: "Access protocol actions to exclude from the rule. Valid\
              \ values include <code>ActiveSync</code>, <code>AutoDiscover</code>,\
              \ <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>,\
              \ and <code>WebMail</code>."
        UserIds:
          allOf:
          - $ref: '#/components/schemas/UserIdList'
          - description: User IDs to include in the rule.
        NotUserIds:
          allOf:
          - $ref: '#/components/schemas/UserIdList'
          - description: User IDs to exclude from the rule.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date that the rule was created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date that the rule was modified.
        ImpersonationRoleIds:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleIdList'
          - description: Impersonation role IDs to include in the rule.
        NotImpersonationRoleIds:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleIdList'
          - description: Impersonation role IDs to exclude from the rule.
      type: object
    AccessControlRuleAction:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z]+"
      type: string
    AccessControlRuleNameList:
      items:
        $ref: '#/components/schemas/AccessControlRuleName'
      maxItems: 10
      minItems: 0
      type: array
    AccessControlRulesList:
      items:
        $ref: '#/components/schemas/AccessControlRule'
      maxItems: 10
      minItems: 0
      type: array
    AccessEffect:
      enum:
      - ALLOW
      - DENY
      type: string
    EmailAddress:
      maxLength: 254
      minLength: 1
      pattern: "[a-zA-Z0-9._%+-]{1,64}@[a-zA-Z0-9.-]+\\.[a-zA-Z-]{2,}"
      type: string
    Aliases:
      items:
        $ref: '#/components/schemas/EmailAddress'
      type: array
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      type: string
    OrganizationId:
      maxLength: 34
      minLength: 34
      pattern: "^m-[0-9a-f]{32}$"
      type: string
    ResourceId:
      maxLength: 34
      minLength: 34
      pattern: "^r-[0-9a-f]{32}$"
      type: string
    WorkMailIdentifier:
      maxLength: 256
      minLength: 12
      type: string
    ImpersonationRoleId:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    ImpersonationToken:
      maxLength: 256
      minLength: 1
      pattern: "[\\x21-\\x7e]+"
      type: string
    ExpiresIn:
      type: integer
    DomainName:
      maxLength: 255
      minLength: 3
      pattern: "[a-zA-Z0-9.-]+\\.[a-zA-Z-]{2,}"
      type: string
    AvailabilityProviderType:
      enum:
      - EWS
      - LAMBDA
      type: string
    RedactedEwsAvailabilityProvider:
      description: Describes an EWS based availability provider when returned from
        the service. It does not contain the password of the endpoint.
      properties:
        EwsEndpoint:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The endpoint of the remote EWS server.
        EwsUsername:
          allOf:
          - $ref: '#/components/schemas/ExternalUserName'
          - description: The username used to authenticate the remote EWS server.
      type: object
    LambdaAvailabilityProvider:
      description: Describes a Lambda based availability provider.
      example:
        LambdaArn: ""
      properties:
        LambdaArn:
          allOf:
          - $ref: '#/components/schemas/LambdaArn'
          - description: The Amazon Resource Name (ARN) of the Lambda that acts as
              the availability provider.
      required:
      - LambdaArn
      type: object
    AvailabilityConfiguration:
      description: List all the <code>AvailabilityConfiguration</code>'s for the given
        WorkMail organization.
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: Displays the domain to which the provider applies.
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/AvailabilityProviderType'
          - description: Displays the provider type that applies to this domain.
        EwsProvider:
          $ref: '#/components/schemas/AvailabilityConfiguration_EwsProvider'
        LambdaProvider:
          $ref: '#/components/schemas/AvailabilityConfiguration_LambdaProvider'
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time at which the availability configuration
              was created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time at which the availability configuration
              was last modified.
      type: object
    AvailabilityConfigurationList:
      items:
        $ref: '#/components/schemas/AvailabilityConfiguration'
      type: array
    Boolean:
      type: boolean
    BookingOptions:
      description: At least one delegate must be associated to the resource to disable
        automatic replies from the resource.
      properties:
        AutoAcceptRequests:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "The resource's ability to automatically reply to requests.\
              \ If disabled, delegates must be associated to the resource."
        AutoDeclineRecurringRequests:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The resource's ability to automatically decline any recurring
              requests.
        AutoDeclineConflictingRequests:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The resource's ability to automatically decline any conflicting
              requests.
      type: object
    BooleanObject:
      type: boolean
    IdempotencyClientToken:
      maxLength: 128
      minLength: 1
      pattern: "[\\x21-\\x7e]+"
      type: string
    MailboxExportJobId:
      maxLength: 63
      minLength: 1
      pattern: "[A-Za-z0-9-]+"
      type: string
    EwsAvailabilityProvider:
      description: Describes an EWS based availability provider. This is only used
        as input to the service.
      example:
        EwsEndpoint: ""
        EwsPassword: ""
        EwsUsername: ""
      properties:
        EwsEndpoint:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The endpoint of the remote EWS server.
        EwsUsername:
          allOf:
          - $ref: '#/components/schemas/ExternalUserName'
          - description: The username used to authenticate the remote EWS server.
        EwsPassword:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: The password used to authenticate the remote EWS server.
      required:
      - EwsEndpoint
      - EwsPassword
      - EwsUsername
      type: object
    GroupName:
      maxLength: 256
      minLength: 1
      pattern: "[\\u0020-\\u00FF]+"
      type: string
    ImpersonationRoleName:
      maxLength: 64
      minLength: 1
      pattern: "[^\\x00-\\x1F\\x7F\\x3C\\x3E\\x5C]+"
      type: string
    ImpersonationRoleType:
      enum:
      - FULL_ACCESS
      - READ_ONLY
      type: string
    ImpersonationRoleDescription:
      maxLength: 256
      minLength: 1
      pattern: "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F\\x3C\\x3E\\x5C]+"
      type: string
    ImpersonationRuleList:
      items:
        $ref: '#/components/schemas/ImpersonationRule'
      maxItems: 10
      minItems: 0
      type: array
    MobileDeviceAccessRuleName:
      maxLength: 64
      minLength: 1
      pattern: "[\\S\\s]+"
      type: string
    MobileDeviceAccessRuleDescription:
      maxLength: 256
      minLength: 1
      pattern: "[\\S\\s]+"
      type: string
    MobileDeviceAccessRuleEffect:
      enum:
      - ALLOW
      - DENY
      type: string
    DeviceTypeList:
      items:
        $ref: '#/components/schemas/DeviceType'
      maxItems: 10
      minItems: 1
      type: array
    DeviceModelList:
      items:
        $ref: '#/components/schemas/DeviceModel'
      maxItems: 10
      minItems: 1
      type: array
    DeviceOperatingSystemList:
      items:
        $ref: '#/components/schemas/DeviceOperatingSystem'
      maxItems: 10
      minItems: 1
      type: array
    DeviceUserAgentList:
      items:
        $ref: '#/components/schemas/DeviceUserAgent'
      maxItems: 10
      minItems: 1
      type: array
    MobileDeviceAccessRuleId:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    DirectoryId:
      maxLength: 12
      minLength: 12
      pattern: "^d-[0-9a-f]{10}$"
      type: string
    OrganizationName:
      maxLength: 62
      minLength: 1
      pattern: "^(?!d-)([\\da-zA-Z]+)([-][\\da-zA-Z]+)*"
      type: string
    Domains:
      items:
        $ref: '#/components/schemas/Domain'
      maxItems: 5
      minItems: 0
      type: array
    KmsKeyArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws:kms:[a-z0-9-]*:[a-z0-9-]+:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}"
      type: string
    ResourceName:
      maxLength: 20
      minLength: 1
      pattern: "[\\w\\-.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z0-9-]{2,})?"
      type: string
    ResourceType:
      enum:
      - ROOM
      - EQUIPMENT
      type: string
    UserName:
      maxLength: 64
      minLength: 1
      pattern: "[\\w\\-.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z0-9-]{2,})?"
      type: string
    String:
      maxLength: 256
      type: string
    Password:
      format: password
      maxLength: 256
      pattern: "[\\u0020-\\u00FF]+"
      type: string
    MemberType:
      enum:
      - GROUP
      - USER
      type: string
    Delegate:
      description: "The name of the attribute, which is one of the values defined\
        \ in the UserAttribute enumeration."
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the user or group associated as the resource's
              delegate.
        Type:
          allOf:
          - $ref: '#/components/schemas/MemberType'
          - description: "The type of the delegate: user or group."
      required:
      - Id
      - Type
      type: object
    EntityIdentifier:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z0-9._%+@-]+"
      type: string
    DeviceId:
      maxLength: 32
      minLength: 1
      pattern: "[A-Za-z0-9]+"
      type: string
    ShortString:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    WorkMailDomainName:
      maxLength: 209
      minLength: 3
      pattern: "[a-zA-Z0-9.-]+\\.[a-zA-Z-]{2,}"
      type: string
    RoleArn:
      maxLength: 2048
      minLength: 20
      type: string
    LogGroupArn:
      maxLength: 562
      minLength: 47
      pattern: "arn:aws:logs:[a-z\\-0-9]*:[0-9]{12}:log-group:([\\.\\-_/#A-Za-z0-9]+):\\\
        *$"
      type: string
    EntityState:
      enum:
      - ENABLED
      - DISABLED
      - DELETED
      type: string
    Description:
      maxLength: 1023
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    S3BucketName:
      maxLength: 63
      minLength: 1
      pattern: "[A-Za-z0-9.-]+"
      type: string
    S3ObjectKey:
      maxLength: 1023
      minLength: 1
      pattern: "[A-Za-z0-9!_.*'()/-]+"
      type: string
    Percentage:
      maximum: 100
      minimum: 0
      type: integer
    MailboxExportJobState:
      enum:
      - RUNNING
      - COMPLETED
      - FAILED
      - CANCELLED
      type: string
    MailboxExportErrorInfo:
      maxLength: 1024
      minLength: 1
      pattern: "[\\S\\s]*"
      type: string
    UserRole:
      enum:
      - USER
      - RESOURCE
      - SYSTEM_USER
      type: string
    DeviceModel:
      maxLength: 256
      minLength: 1
      pattern: "[\\u0020-\\u00FF]+"
      type: string
    DeviceOperatingSystem:
      maxLength: 256
      minLength: 1
      pattern: "[\\u0020-\\u00FF]+"
      type: string
    DeviceType:
      maxLength: 256
      minLength: 1
      pattern: "[\\u0020-\\u00FF]+"
      type: string
    DeviceUserAgent:
      maxLength: 256
      minLength: 1
      pattern: "[\\u0020-\\u00FF]+"
      type: string
    DnsRecord:
      description: A DNS record uploaded to your DNS provider.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The RFC 1035 record type. Possible values: <code>CNAME</code>,\
              \ <code>A</code>, <code>MX</code>."
        Hostname:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The DNS hostname.- For example, <code>domain.example.com</code>."
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value returned by the DNS for a query to that hostname
              and record type.
      type: object
    DnsRecordVerificationStatus:
      enum:
      - PENDING
      - VERIFIED
      - FAILED
      type: string
    DnsRecords:
      items:
        $ref: '#/components/schemas/DnsRecord'
      type: array
    HostedZoneId:
      maxLength: 32
      minLength: 1
      pattern: "[\\S\\s]*"
      type: string
    Domain:
      description: "<p>The domain to associate with an WorkMail organization.</p>\
        \ <p>When you configure a domain hosted in Amazon Route 53 (Route 53), all\
        \ recommended DNS records are added to the organization when you create it.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html\"\
        >Adding a domain</a> in the <i>WorkMail Administrator Guide</i>.</p>"
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The fully qualified domain name.
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/HostedZoneId'
          - description: The hosted zone ID for a domain hosted in Route 53. Required
              when configuring a domain hosted in Route 53.
      type: object
    Url:
      maxLength: 256
      pattern: "https?://[A-Za-z0-9.-]+(:[0-9]+)?/.*"
      type: string
    ExternalUserName:
      maxLength: 256
      pattern: "[\\u0020-\\u00FF]+"
      type: string
    FolderName:
      enum:
      - INBOX
      - DELETED_ITEMS
      - SENT_ITEMS
      - DRAFTS
      - JUNK_EMAIL
      type: string
    RetentionAction:
      enum:
      - NONE
      - DELETE
      - PERMANENTLY_DELETE
      type: string
    RetentionPeriod:
      maximum: 730
      minimum: 1
      type: integer
    FolderConfiguration:
      description: The configuration applied to an organization's folders by its retention
        policy.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FolderName'
          - description: The folder name.
        Action:
          allOf:
          - $ref: '#/components/schemas/RetentionAction'
          - description: The action to take on the folder contents at the end of the
              folder configuration period.
        Period:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          - description: The number of days for which the folder-configuration action
              applies.
      required:
      - Action
      - Name
      type: object
    FolderConfigurations:
      items:
        $ref: '#/components/schemas/FolderConfiguration'
      type: array
    IpAddress:
      maxLength: 15
      minLength: 1
      pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
      type: string
    ImpersonationMatchedRuleList:
      items:
        $ref: '#/components/schemas/ImpersonationMatchedRule'
      maxItems: 10
      minItems: 0
      type: array
    MailboxQuota:
      minimum: 1
      type: integer
    MailboxSize:
      format: double
      minimum: 0
      type: number
    MobileDeviceAccessMatchedRuleList:
      items:
        $ref: '#/components/schemas/MobileDeviceAccessMatchedRule'
      maxItems: 10
      minItems: 0
      type: array
    Group:
      description: The representation of an WorkMail group.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the group.
        Email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email of the group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the group.
        State:
          allOf:
          - $ref: '#/components/schemas/EntityState'
          - description: "The state of the group, which can be ENABLED, DISABLED,\
              \ or DELETED."
        EnabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date indicating when the group was enabled for WorkMail
              use.
        DisabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date indicating when the group was disabled from WorkMail
              use.
      type: object
    Groups:
      items:
        $ref: '#/components/schemas/Group'
      type: array
    ImpersonationRuleId:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    ImpersonationRuleName:
      maxLength: 64
      minLength: 1
      pattern: "[^\\x00-\\x1F\\x7F\\x3C\\x3E\\x5C]+"
      type: string
    ImpersonationMatchedRule:
      description: The impersonation rule that matched the input.
      properties:
        ImpersonationRuleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRuleId'
          - description: The ID of the rule that matched the input
        Name:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRuleName'
          - description: The name of the rule that matched the input.
      type: object
    ImpersonationRole:
      description: An impersonation role for the given WorkMail organization.
      properties:
        ImpersonationRoleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleId'
          - description: The identifier of the impersonation role.
        Name:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleName'
          - description: The impersonation role name.
        Type:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRoleType'
          - description: The impersonation role type.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when the impersonation role was created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when the impersonation role was last modified.
      type: object
    ImpersonationRoleList:
      items:
        $ref: '#/components/schemas/ImpersonationRole'
      maxItems: 20
      minItems: 0
      type: array
    ImpersonationRuleDescription:
      maxLength: 256
      minLength: 1
      pattern: "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F\\x3C\\x3E\\x5C]+"
      type: string
    TargetUsers:
      items:
        $ref: '#/components/schemas/EntityIdentifier'
      maxItems: 10
      minItems: 1
      type: array
    ImpersonationRule:
      description: The rules for the given impersonation role.
      properties:
        ImpersonationRuleId:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRuleId'
          - description: The identifier of the rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRuleName'
          - description: The rule name.
        Description:
          allOf:
          - $ref: '#/components/schemas/ImpersonationRuleDescription'
          - description: The rule description.
        Effect:
          allOf:
          - $ref: '#/components/schemas/AccessEffect'
          - description: The effect of the rule when it matches the input. Allowed
              effect values are <code>ALLOW</code> or <code>DENY</code>.
        TargetUsers:
          allOf:
          - $ref: '#/components/schemas/TargetUsers'
          - description: A list of user IDs that match the rule.
        NotTargetUsers:
          allOf:
          - $ref: '#/components/schemas/TargetUsers'
          - description: A list of user IDs that don't match the rule.
      required:
      - Effect
      - ImpersonationRuleId
      type: object
    IpRange:
      maxLength: 18
      minLength: 1
      pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$"
      type: string
    MailboxExportJob:
      description: "The details of a mailbox export job, including the user or resource\
        \ ID associated with the mailbox and the S3 bucket that the mailbox contents\
        \ are exported to."
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/MailboxExportJobId'
          - description: The identifier of the mailbox export job.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the user or resource associated with the
              mailbox.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The mailbox export job description.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the S3 bucket.
        S3Path:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          - description: The path to the S3 bucket and file that the mailbox export
              job exports to.
        EstimatedProgress:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The estimated progress of the mailbox export job, in percentage\
              \ points."
        State:
          allOf:
          - $ref: '#/components/schemas/MailboxExportJobState'
          - description: The state of the mailbox export job.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The mailbox export job start timestamp.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The mailbox export job end timestamp.
      type: object
    Jobs:
      items:
        $ref: '#/components/schemas/MailboxExportJob'
      type: array
    LambdaArn:
      maxLength: 256
      minLength: 49
      pattern: "arn:aws:lambda:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9\\\
        -_\\.]+(:(\\$LATEST|[a-zA-Z0-9\\-_]+))?"
      type: string
    NextToken:
      maxLength: 1024
      minLength: 1
      pattern: "[\\S\\s]*|[a-zA-Z0-9/+=]{1,1024}"
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    Members:
      items:
        $ref: '#/components/schemas/Member'
      type: array
    MailDomains:
      items:
        $ref: '#/components/schemas/MailDomainSummary'
      type: array
    Permissions:
      items:
        $ref: '#/components/schemas/Permission'
      type: array
    MobileDeviceAccessOverridesList:
      items:
        $ref: '#/components/schemas/MobileDeviceAccessOverride'
      type: array
    MobileDeviceAccessRulesList:
      items:
        $ref: '#/components/schemas/MobileDeviceAccessRule'
      maxItems: 10
      minItems: 0
      type: array
    OrganizationSummaries:
      items:
        $ref: '#/components/schemas/OrganizationSummary'
      type: array
    ResourceDelegates:
      items:
        $ref: '#/components/schemas/Delegate'
      type: array
    Resources:
      items:
        $ref: '#/components/schemas/Resource'
      type: array
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 0
      type: array
    Users:
      items:
        $ref: '#/components/schemas/User'
      type: array
    MailDomainSummary:
      description: The data for a given domain.
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The domain name.
        DefaultDomain:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the domain is default or not.
      type: object
    Member:
      description: The representation of a user or group.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the member.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the member.
        Type:
          allOf:
          - $ref: '#/components/schemas/MemberType'
          - description: A member can be a user or group.
        State:
          allOf:
          - $ref: '#/components/schemas/EntityState'
          - description: "The state of the member, which can be ENABLED, DISABLED,\
              \ or DELETED."
        EnabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date indicating when the member was enabled for WorkMail
              use.
        DisabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date indicating when the member was disabled from WorkMail
              use.
      type: object
    MobileDeviceAccessMatchedRule:
      description: The rule that a simulated user matches.
      properties:
        MobileDeviceAccessRuleId:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          - description: Identifier of the rule that a simulated user matches.
        Name:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleName'
          - description: Name of a rule that a simulated user matches.
      type: object
    MobileDeviceAccessOverride:
      description: The override object.
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The WorkMail user to which the access override applies.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The device to which the override applies.
        Effect:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          - description: "The effect of the override, <code>ALLOW</code> or <code>DENY</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          - description: A description of the override.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date the override was first created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date the override was last modified.
      type: object
    MobileDeviceAccessRule:
      description: A rule that controls access to mobile devices for an WorkMail group.
      properties:
        MobileDeviceAccessRuleId:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleId'
          - description: The ID assigned to a mobile access rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleName'
          - description: The name of a mobile access rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleDescription'
          - description: The description of a mobile access rule.
        Effect:
          allOf:
          - $ref: '#/components/schemas/MobileDeviceAccessRuleEffect'
          - description: The effect of the rule when it matches. Allowed values are
              <code>ALLOW</code> or <code>DENY</code>.
        DeviceTypes:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeList'
          - description: Device types that a rule will match.
        NotDeviceTypes:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeList'
          - description: Device types that a rule <b>will not</b> match. All other
              device types will match.
        DeviceModels:
          allOf:
          - $ref: '#/components/schemas/DeviceModelList'
          - description: Device models that a rule will match.
        NotDeviceModels:
          allOf:
          - $ref: '#/components/schemas/DeviceModelList'
          - description: Device models that a rule <b>will not</b> match. All other
              device models will match.
        DeviceOperatingSystems:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystemList'
          - description: Device operating systems that a rule will match.
        NotDeviceOperatingSystems:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystemList'
          - description: Device operating systems that a rule <b>will not</b> match.
              All other device types will match.
        DeviceUserAgents:
          allOf:
          - $ref: '#/components/schemas/DeviceUserAgentList'
          - description: Device user agents that a rule will match.
        NotDeviceUserAgents:
          allOf:
          - $ref: '#/components/schemas/DeviceUserAgentList'
          - description: Device user agents that a rule <b>will not</b> match. All
              other device user agents will match.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time at which an access rule was created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time at which an access rule was modified.
      type: object
    OrganizationSummary:
      description: The representation of an organization.
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          - description: The identifier associated with the organization.
        Alias:
          allOf:
          - $ref: '#/components/schemas/OrganizationName'
          - description: The alias associated with the organization.
        DefaultMailDomain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The default email domain associated with the organization.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message associated with the organization. It is
              only present if unexpected behavior has occurred with regards to the
              organization. It provides insight or solutions regarding unexpected
              behavior.
        State:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state associated with the organization.
      type: object
    PermissionValues:
      items:
        $ref: '#/components/schemas/PermissionType'
      type: array
    Permission:
      description: "Permission granted to a user, group, or resource to access a certain\
        \ aspect of another user, group, or resource mailbox."
      properties:
        GranteeId:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: "The identifier of the user, group, or resource to which\
              \ the permissions are granted."
        GranteeType:
          allOf:
          - $ref: '#/components/schemas/MemberType'
          - description: "The type of user, group, or resource referred to in GranteeId."
        PermissionValues:
          allOf:
          - $ref: '#/components/schemas/PermissionValues'
          - description: "The permissions granted to the grantee. SEND_AS allows the\
              \ grantee to send email as the owner of the mailbox (the grantee is\
              \ not mentioned on these emails). SEND_ON_BEHALF allows the grantee\
              \ to send email on behalf of the owner of the mailbox (the grantee is\
              \ not mentioned as the physical sender of these emails). FULL_ACCESS\
              \ allows the grantee full access to the mailbox, irrespective of other\
              \ folder-level permissions set on the mailbox."
      required:
      - GranteeId
      - GranteeType
      - PermissionValues
      type: object
    PermissionType:
      enum:
      - FULL_ACCESS
      - SEND_AS
      - SEND_ON_BEHALF
      type: string
    PolicyDescription:
      format: password
      maxLength: 256
      pattern: "[\\w\\d\\s\\S\\-!?=,.;:'_]+"
      type: string
    Resource:
      description: The representation of a resource.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the resource.
        Email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the resource.
        Type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The type of the resource: equipment or room."
        State:
          allOf:
          - $ref: '#/components/schemas/EntityState'
          - description: "The state of the resource, which can be ENABLED, DISABLED,\
              \ or DELETED."
        EnabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date indicating when the resource was enabled for WorkMail
              use.
        DisabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date indicating when the resource was disabled from WorkMail
              use.
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: Describes a tag applied to a resource.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key of the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the tag.
      required:
      - Key
      - Value
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    User:
      description: The representation of an WorkMail user.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WorkMailIdentifier'
          - description: The identifier of the user.
        Email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email of the user.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the user.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The display name of the user.
        State:
          allOf:
          - $ref: '#/components/schemas/EntityState'
          - description: "The state of the user, which can be ENABLED, DISABLED, or\
              \ DELETED."
        UserRole:
          allOf:
          - $ref: '#/components/schemas/UserRole'
          - description: The role of the user.
        EnabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date indicating when the user was enabled for WorkMail
              use.
        DisabledDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date indicating when the user was disabled from WorkMail
              use.
      type: object
    CreateAvailabilityConfigurationRequest_EwsProvider:
      allOf:
      - $ref: '#/components/schemas/EwsAvailabilityProvider'
      - description: "Exchange Web Services (EWS) availability provider definition.\
          \ The request must contain exactly one provider definition, either <code>EwsProvider</code>\
          \ or <code>LambdaProvider</code>."
      example:
        EwsEndpoint: ""
        EwsPassword: ""
        EwsUsername: ""
    CreateAvailabilityConfigurationRequest_LambdaProvider:
      allOf:
      - $ref: '#/components/schemas/LambdaAvailabilityProvider'
      - description: "Lambda availability provider definition. The request must contain\
          \ exactly one provider definition, either <code>EwsProvider</code> or <code>LambdaProvider</code>."
      example:
        LambdaArn: ""
    DescribeResourceResponse_BookingOptions:
      allOf:
      - $ref: '#/components/schemas/BookingOptions'
      - description: The booking options for the described resource.
      example:
        AutoDeclineRecurringRequests: ""
        AutoAcceptRequests: ""
        AutoDeclineConflictingRequests: ""
    UpdateAvailabilityConfigurationRequest_EwsProvider:
      allOf:
      - $ref: '#/components/schemas/EwsAvailabilityProvider'
      - description: "The EWS availability provider definition. The request must contain\
          \ exactly one provider definition, either <code>EwsProvider</code> or <code>LambdaProvider</code>.\
          \ The previously stored provider will be overridden by the one provided."
      example:
        EwsEndpoint: ""
        EwsPassword: ""
        EwsUsername: ""
    UpdateAvailabilityConfigurationRequest_LambdaProvider:
      allOf:
      - $ref: '#/components/schemas/LambdaAvailabilityProvider'
      - description: "The Lambda availability provider definition. The request must\
          \ contain exactly one provider definition, either <code>EwsProvider</code>\
          \ or <code>LambdaProvider</code>. The previously stored provider will be\
          \ overridden by the one provided."
      example:
        LambdaArn: ""
    UpdateResourceRequest_BookingOptions:
      allOf:
      - $ref: '#/components/schemas/BookingOptions'
      - description: The resource's booking options to be updated.
      example:
        AutoDeclineRecurringRequests: ""
        AutoAcceptRequests: ""
        AutoDeclineConflictingRequests: ""
    AvailabilityConfiguration_EwsProvider:
      allOf:
      - $ref: '#/components/schemas/RedactedEwsAvailabilityProvider'
      - description: "If <code>ProviderType</code> is <code>EWS</code>, then this\
          \ field contains <code>RedactedEwsAvailabilityProvider</code>. Otherwise,\
          \ it is not required."
    AvailabilityConfiguration_LambdaProvider:
      allOf:
      - $ref: '#/components/schemas/LambdaAvailabilityProvider'
      - description: "If ProviderType is <code>LAMBDA</code> then this field contains\
          \ <code>LambdaAvailabilityProvider</code>. Otherwise, it is not required."
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

