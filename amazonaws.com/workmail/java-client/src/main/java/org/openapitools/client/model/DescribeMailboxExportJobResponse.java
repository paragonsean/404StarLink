/*
 * Amazon WorkMail
 * <p>WorkMail is a secure, managed business email and calendaring service with support for existing desktop and mobile email clients. You can access your email, contacts, and calendars using Microsoft Outlook, your browser, or other native iOS and Android email applications. You can integrate WorkMail with your existing corporate directory and control both the keys that encrypt your data and the location in which your data is stored.</p> <p>The WorkMail API is designed for the following scenarios:</p> <ul> <li> <p>Listing and describing organizations</p> </li> </ul> <ul> <li> <p>Managing users</p> </li> </ul> <ul> <li> <p>Managing groups</p> </li> </ul> <ul> <li> <p>Managing resources</p> </li> </ul> <p>All WorkMail API operations are Amazon-authenticated and certificate-signed. They not only require the use of the AWS SDK, but also allow for the exclusive use of AWS Identity and Access Management users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the WorkMail site, the IAM user gains full administrative visibility into the entire WorkMail organization (or as set in the IAM policy). This includes, but is not limited to, the ability to create, update, and delete users, groups, and resources. This allows developers to perform the scenarios listed above, as well as give users the ability to grant access on a selective basis using the IAM model.</p>
 *
 * The version of the OpenAPI document: 2017-10-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.MailboxExportJobState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeMailboxExportJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:12:33.109694-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeMailboxExportJobResponse {
  public static final String SERIALIZED_NAME_ENTITY_ID = "EntityId";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private String entityId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_KMS_KEY_ARN = "KmsKeyArn";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ARN)
  private String kmsKeyArn;

  public static final String SERIALIZED_NAME_S3_BUCKET_NAME = "S3BucketName";
  @SerializedName(SERIALIZED_NAME_S3_BUCKET_NAME)
  private String s3BucketName;

  public static final String SERIALIZED_NAME_S3_PREFIX = "S3Prefix";
  @SerializedName(SERIALIZED_NAME_S3_PREFIX)
  private String s3Prefix;

  public static final String SERIALIZED_NAME_S3_PATH = "S3Path";
  @SerializedName(SERIALIZED_NAME_S3_PATH)
  private String s3Path;

  public static final String SERIALIZED_NAME_ESTIMATED_PROGRESS = "EstimatedProgress";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_PROGRESS)
  private Integer estimatedProgress;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private MailboxExportJobState state;

  public static final String SERIALIZED_NAME_ERROR_INFO = "ErrorInfo";
  @SerializedName(SERIALIZED_NAME_ERROR_INFO)
  private String errorInfo;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public DescribeMailboxExportJobResponse() {
  }

  public DescribeMailboxExportJobResponse entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Get entityId
   * @return entityId
   */
  @javax.annotation.Nullable
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public DescribeMailboxExportJobResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeMailboxExportJobResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeMailboxExportJobResponse kmsKeyArn(String kmsKeyArn) {
    this.kmsKeyArn = kmsKeyArn;
    return this;
  }

  /**
   * Get kmsKeyArn
   * @return kmsKeyArn
   */
  @javax.annotation.Nullable
  public String getKmsKeyArn() {
    return kmsKeyArn;
  }

  public void setKmsKeyArn(String kmsKeyArn) {
    this.kmsKeyArn = kmsKeyArn;
  }


  public DescribeMailboxExportJobResponse s3BucketName(String s3BucketName) {
    this.s3BucketName = s3BucketName;
    return this;
  }

  /**
   * Get s3BucketName
   * @return s3BucketName
   */
  @javax.annotation.Nullable
  public String getS3BucketName() {
    return s3BucketName;
  }

  public void setS3BucketName(String s3BucketName) {
    this.s3BucketName = s3BucketName;
  }


  public DescribeMailboxExportJobResponse s3Prefix(String s3Prefix) {
    this.s3Prefix = s3Prefix;
    return this;
  }

  /**
   * Get s3Prefix
   * @return s3Prefix
   */
  @javax.annotation.Nullable
  public String getS3Prefix() {
    return s3Prefix;
  }

  public void setS3Prefix(String s3Prefix) {
    this.s3Prefix = s3Prefix;
  }


  public DescribeMailboxExportJobResponse s3Path(String s3Path) {
    this.s3Path = s3Path;
    return this;
  }

  /**
   * Get s3Path
   * @return s3Path
   */
  @javax.annotation.Nullable
  public String getS3Path() {
    return s3Path;
  }

  public void setS3Path(String s3Path) {
    this.s3Path = s3Path;
  }


  public DescribeMailboxExportJobResponse estimatedProgress(Integer estimatedProgress) {
    this.estimatedProgress = estimatedProgress;
    return this;
  }

  /**
   * Get estimatedProgress
   * @return estimatedProgress
   */
  @javax.annotation.Nullable
  public Integer getEstimatedProgress() {
    return estimatedProgress;
  }

  public void setEstimatedProgress(Integer estimatedProgress) {
    this.estimatedProgress = estimatedProgress;
  }


  public DescribeMailboxExportJobResponse state(MailboxExportJobState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public MailboxExportJobState getState() {
    return state;
  }

  public void setState(MailboxExportJobState state) {
    this.state = state;
  }


  public DescribeMailboxExportJobResponse errorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

  /**
   * Get errorInfo
   * @return errorInfo
   */
  @javax.annotation.Nullable
  public String getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(String errorInfo) {
    this.errorInfo = errorInfo;
  }


  public DescribeMailboxExportJobResponse startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public DescribeMailboxExportJobResponse endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeMailboxExportJobResponse describeMailboxExportJobResponse = (DescribeMailboxExportJobResponse) o;
    return Objects.equals(this.entityId, describeMailboxExportJobResponse.entityId) &&
        Objects.equals(this.description, describeMailboxExportJobResponse.description) &&
        Objects.equals(this.roleArn, describeMailboxExportJobResponse.roleArn) &&
        Objects.equals(this.kmsKeyArn, describeMailboxExportJobResponse.kmsKeyArn) &&
        Objects.equals(this.s3BucketName, describeMailboxExportJobResponse.s3BucketName) &&
        Objects.equals(this.s3Prefix, describeMailboxExportJobResponse.s3Prefix) &&
        Objects.equals(this.s3Path, describeMailboxExportJobResponse.s3Path) &&
        Objects.equals(this.estimatedProgress, describeMailboxExportJobResponse.estimatedProgress) &&
        Objects.equals(this.state, describeMailboxExportJobResponse.state) &&
        Objects.equals(this.errorInfo, describeMailboxExportJobResponse.errorInfo) &&
        Objects.equals(this.startTime, describeMailboxExportJobResponse.startTime) &&
        Objects.equals(this.endTime, describeMailboxExportJobResponse.endTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, description, roleArn, kmsKeyArn, s3BucketName, s3Prefix, s3Path, estimatedProgress, state, errorInfo, startTime, endTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeMailboxExportJobResponse {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    kmsKeyArn: ").append(toIndentedString(kmsKeyArn)).append("\n");
    sb.append("    s3BucketName: ").append(toIndentedString(s3BucketName)).append("\n");
    sb.append("    s3Prefix: ").append(toIndentedString(s3Prefix)).append("\n");
    sb.append("    s3Path: ").append(toIndentedString(s3Path)).append("\n");
    sb.append("    estimatedProgress: ").append(toIndentedString(estimatedProgress)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EntityId");
    openapiFields.add("Description");
    openapiFields.add("RoleArn");
    openapiFields.add("KmsKeyArn");
    openapiFields.add("S3BucketName");
    openapiFields.add("S3Prefix");
    openapiFields.add("S3Path");
    openapiFields.add("EstimatedProgress");
    openapiFields.add("State");
    openapiFields.add("ErrorInfo");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeMailboxExportJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeMailboxExportJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeMailboxExportJobResponse is not found in the empty JSON string", DescribeMailboxExportJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeMailboxExportJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeMailboxExportJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EntityId`
      if (jsonObj.get("EntityId") != null && !jsonObj.get("EntityId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EntityId"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `KmsKeyArn`
      if (jsonObj.get("KmsKeyArn") != null && !jsonObj.get("KmsKeyArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyArn"));
      }
      // validate the optional field `S3BucketName`
      if (jsonObj.get("S3BucketName") != null && !jsonObj.get("S3BucketName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("S3BucketName"));
      }
      // validate the optional field `S3Prefix`
      if (jsonObj.get("S3Prefix") != null && !jsonObj.get("S3Prefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("S3Prefix"));
      }
      // validate the optional field `S3Path`
      if (jsonObj.get("S3Path") != null && !jsonObj.get("S3Path").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("S3Path"));
      }
      // validate the optional field `EstimatedProgress`
      if (jsonObj.get("EstimatedProgress") != null && !jsonObj.get("EstimatedProgress").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EstimatedProgress"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        MailboxExportJobState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `ErrorInfo`
      if (jsonObj.get("ErrorInfo") != null && !jsonObj.get("ErrorInfo").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorInfo"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeMailboxExportJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeMailboxExportJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeMailboxExportJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeMailboxExportJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeMailboxExportJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeMailboxExportJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeMailboxExportJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeMailboxExportJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeMailboxExportJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeMailboxExportJobResponse
   */
  public static DescribeMailboxExportJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeMailboxExportJobResponse.class);
  }

  /**
   * Convert an instance of DescribeMailboxExportJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

