openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: The control plane for Amazon QLDB
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon QLDB
  version: 2019-01-02
  x-release: v4
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: qldb
  x-aws-signingName: qldb
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/qldb-2019-01-02.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/qldb/
servers:
- description: The QLDB multi-region endpoint
  url: "http://qldb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The QLDB multi-region endpoint
  url: "https://qldb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The QLDB endpoint for China (Beijing) and China (Ningxia)
  url: "http://qldb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The QLDB endpoint for China (Beijing) and China (Ningxia)
  url: "https://qldb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /ledgers/{name}/journal-kinesis-streams/{streamId}:
    delete:
      description: "<p>Ends a given Amazon QLDB journal stream. Before a stream can\
        \ be canceled, its current status must be <code>ACTIVE</code>.</p> <p>You\
        \ can't restart a stream after you cancel it. Canceled QLDB stream resources\
        \ are subject to a 7-day retention period, so they are automatically deleted\
        \ after this limit expires.</p>"
      operationId: CancelJournalKinesisStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      - description: The UUID (represented in Base62-encoded text) of the QLDB journal
          stream to be canceled.
        explode: false
        in: path
        name: streamId
        required: true
        schema:
          maxLength: 22
          minLength: 22
          pattern: "^[A-Za-z-0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelJournalKinesisStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-accepts:
      - application/json
    get:
      description: "<p>Returns detailed information about a given Amazon QLDB journal\
        \ stream. The output includes the Amazon Resource Name (ARN), stream name,\
        \ current status, creation time, and the parameters of the original stream\
        \ creation request.</p> <p>This action does not return any expired journal\
        \ streams. For more information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/streams.create.html#streams.create.states.expiration\"\
        >Expiration for terminal streams</a> in the <i>Amazon QLDB Developer Guide</i>.</p>"
      operationId: DescribeJournalKinesisStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      - description: The UUID (represented in Base62-encoded text) of the QLDB journal
          stream to describe.
        explode: false
        in: path
        name: streamId
        required: true
        schema:
          maxLength: 22
          minLength: 22
          pattern: "^[A-Za-z-0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJournalKinesisStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-accepts:
      - application/json
  /ledgers:
    get:
      description: <p>Returns an array of ledger summaries that are associated with
        the current Amazon Web Services account and Region.</p> <p>This action returns
        a maximum of 100 items and is paginated so that you can retrieve all the items
        by calling <code>ListLedgers</code> multiple times.</p>
      operationId: ListLedgers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return in a single <code>ListLedgers</code>
          request. (The actual number of results returned might be fewer.)
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token, indicating that you want to retrieve the\
          \ next page of results. If you received a value for <code>NextToken</code>\
          \ in the response from a previous <code>ListLedgers</code> call, then you\
          \ should use that value as input here."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 1024
          minLength: 4
          pattern: "^[A-Za-z-0-9+/=]+$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLedgersResponse'
          description: Success
      x-accepts:
      - application/json
    post:
      description: Creates a new ledger in your Amazon Web Services account in the
        current Region.
      operationId: CreateLedger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLedger_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLedgerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ledgers/{name}:
    delete:
      description: "<p>Deletes a ledger and all of its contents. This action is irreversible.</p>\
        \ <p>If deletion protection is enabled, you must first disable it before you\
        \ can delete the ledger. You can disable it by calling the <code>UpdateLedger</code>\
        \ operation to set the flag to <code>false</code>.</p>"
      operationId: DeleteLedger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger that you want to delete.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-accepts:
      - application/json
    get:
      description: "Returns information about a ledger, including its state, permissions\
        \ mode, encryption at rest settings, and when it was created."
      operationId: DescribeLedger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger that you want to describe.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLedgerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    patch:
      description: Updates properties on a ledger.
      operationId: UpdateLedger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLedger_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLedgerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ledgers/{name}/journal-s3-exports/{exportId}:
    get:
      description: "<p>Returns information about a journal export job, including the\
        \ ledger name, export ID, creation time, current status, and the parameters\
        \ of the original export creation request.</p> <p>This action does not return\
        \ any expired export jobs. For more information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration\"\
        >Export job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p>\
        \ <p>If the export job with the given <code>ExportId</code> doesn't exist,\
        \ then throws <code>ResourceNotFoundException</code>.</p> <p>If the ledger\
        \ with the given <code>Name</code> doesn't exist, then throws <code>ResourceNotFoundException</code>.</p>"
      operationId: DescribeJournalS3Export
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      - description: The UUID (represented in Base62-encoded text) of the journal
          export job to describe.
        explode: false
        in: path
        name: exportId
        required: true
        schema:
          maxLength: 22
          minLength: 22
          pattern: "^[A-Za-z-0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJournalS3ExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /ledgers/{name}/journal-s3-exports:
    get:
      description: "<p>Returns an array of journal export job descriptions for a specified\
        \ ledger.</p> <p>This action returns a maximum of <code>MaxResults</code>\
        \ items, and is paginated so that you can retrieve all the items by calling\
        \ <code>ListJournalS3ExportsForLedger</code> multiple times.</p> <p>This action\
        \ does not return any expired export jobs. For more information, see <a href=\"\
        https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration\"\
        >Export job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p>"
      operationId: ListJournalS3ExportsForLedger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      - description: The maximum number of results to return in a single <code>ListJournalS3ExportsForLedger</code>
          request. (The actual number of results returned might be fewer.)
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token, indicating that you want to retrieve the\
          \ next page of results. If you received a value for <code>NextToken</code>\
          \ in the response from a previous <code>ListJournalS3ExportsForLedger</code>\
          \ call, then you should use that value as input here."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 1024
          minLength: 4
          pattern: "^[A-Za-z-0-9+/=]+$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJournalS3ExportsForLedgerResponse'
          description: Success
      x-accepts:
      - application/json
    post:
      description: "<p>Exports journal contents within a date and time range from\
        \ a ledger into a specified Amazon Simple Storage Service (Amazon S3) bucket.\
        \ A journal export job can write the data objects in either the text or binary\
        \ representation of Amazon Ion format, or in <i>JSON Lines</i> text format.</p>\
        \ <p>In JSON Lines format, each journal block in the exported data object\
        \ is a valid JSON object that is delimited by a newline. You can use this\
        \ format to easily integrate JSON exports with analytics tools such as Glue\
        \ and Amazon Athena because these services can parse newline-delimited JSON\
        \ automatically. For more information about the format, see <a href=\"https://jsonlines.org/\"\
        >JSON Lines</a>.</p> <p>If the ledger with the given <code>Name</code> doesn't\
        \ exist, then throws <code>ResourceNotFoundException</code>.</p> <p>If the\
        \ ledger with the given <code>Name</code> is in <code>CREATING</code> status,\
        \ then throws <code>ResourcePreconditionNotMetException</code>.</p> <p>You\
        \ can initiate up to two concurrent journal export requests for each ledger.\
        \ Beyond this limit, journal export requests throw <code>LimitExceededException</code>.</p>"
      operationId: ExportJournalToS3
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportJournalToS3_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJournalToS3Response'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ledgers/{name}/block:
    post:
      description: "<p>Returns a block object at a specified address in a journal.\
        \ Also returns a proof of the specified block for verification if <code>DigestTipAddress</code>\
        \ is provided.</p> <p>For information about the data contents in a block,\
        \ see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/journal-contents.html\"\
        >Journal contents</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>If\
        \ the specified ledger doesn't exist or is in <code>DELETING</code> status,\
        \ then throws <code>ResourceNotFoundException</code>.</p> <p>If the specified\
        \ ledger is in <code>CREATING</code> status, then throws <code>ResourcePreconditionNotMetException</code>.</p>\
        \ <p>If no block exists with the specified address, then throws <code>InvalidParameterException</code>.</p>"
      operationId: GetBlock
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBlock_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ledgers/{name}/digest:
    post:
      description: Returns the digest of a ledger at the latest committed block in
        the journal. The response includes a 256-bit hash value and a block address.
      operationId: GetDigest
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDigestResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-accepts:
      - application/json
  /ledgers/{name}/revision:
    post:
      description: Returns a revision data object for a specified document ID and
        block address. Also returns a proof of the specified revision for verification
        if <code>DigestTipAddress</code> is provided.
      operationId: GetRevision
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRevision_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRevisionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ledgers/{name}/journal-kinesis-streams:
    get:
      description: "<p>Returns an array of all Amazon QLDB journal stream descriptors\
        \ for a given ledger. The output of each stream descriptor includes the same\
        \ details that are returned by <code>DescribeJournalKinesisStream</code>.</p>\
        \ <p>This action does not return any expired journal streams. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/streams.create.html#streams.create.states.expiration\"\
        >Expiration for terminal streams</a> in the <i>Amazon QLDB Developer Guide</i>.</p>\
        \ <p>This action returns a maximum of <code>MaxResults</code> items. It is\
        \ paginated so that you can retrieve all the items by calling <code>ListJournalKinesisStreamsForLedger</code>\
        \ multiple times.</p>"
      operationId: ListJournalKinesisStreamsForLedger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      - description: The maximum number of results to return in a single <code>ListJournalKinesisStreamsForLedger</code>
          request. (The actual number of results returned might be fewer.)
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token, indicating that you want to retrieve the\
          \ next page of results. If you received a value for <code>NextToken</code>\
          \ in the response from a previous <code>ListJournalKinesisStreamsForLedger</code>\
          \ call, you should use that value as input here."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 1024
          minLength: 4
          pattern: "^[A-Za-z-0-9+/=]+$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJournalKinesisStreamsForLedgerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-accepts:
      - application/json
    post:
      description: Creates a journal stream for a given Amazon QLDB ledger. The stream
        captures every document revision that is committed to the ledger's journal
        and delivers the data to a specified Amazon Kinesis Data Streams resource.
      operationId: StreamJournalToKinesis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamJournalToKinesis_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamJournalToKinesisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
          description: ResourcePreconditionNotMetException
      x-content-type: application/json
      x-accepts:
      - application/json
  /journal-s3-exports:
    get:
      description: "<p>Returns an array of journal export job descriptions for all\
        \ ledgers that are associated with the current Amazon Web Services account\
        \ and Region.</p> <p>This action returns a maximum of <code>MaxResults</code>\
        \ items, and is paginated so that you can retrieve all the items by calling\
        \ <code>ListJournalS3Exports</code> multiple times.</p> <p>This action does\
        \ not return any expired export jobs. For more information, see <a href=\"\
        https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration\"\
        >Export job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p>"
      operationId: ListJournalS3Exports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return in a single <code>ListJournalS3Exports</code>
          request. (The actual number of results returned might be fewer.)
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token, indicating that you want to retrieve the\
          \ next page of results. If you received a value for <code>NextToken</code>\
          \ in the response from a previous <code>ListJournalS3Exports</code> call,\
          \ then you should use that value as input here."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 1024
          minLength: 4
          pattern: "^[A-Za-z-0-9+/=]+$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJournalS3ExportsResponse'
          description: Success
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Returns all tags for a specified Amazon QLDB resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The Amazon Resource Name (ARN) for which to list the tags.
          For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code>
          </p>
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 20
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: "<p>Adds one or more tags to a specified Amazon QLDB resource.</p>\
        \ <p>A resource can have up to 50 tags. If you try to create more than 50\
        \ tags for a resource, your request fails and returns an error.</p>"
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The Amazon Resource Name (ARN) to which you want to add the
          tags. For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code>
          </p>
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 20
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes one or more tags from a specified Amazon QLDB resource.
        You can specify up to 50 tag keys to remove.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The Amazon Resource Name (ARN) from which to remove the tags.
          For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code>
          </p>
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 20
          type: string
        style: simple
      - description: The list of tag keys to remove.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /ledgers/{name}/permissions-mode:
    patch:
      description: "<p>Updates the permissions mode of a ledger.</p> <important> <p>Before\
        \ you switch to the <code>STANDARD</code> permissions mode, you must first\
        \ create all required IAM policies and table tags to avoid disruption to your\
        \ users. To learn more, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/ledger-management.basics.html#ledger-mgmt.basics.update-permissions.migrating\"\
        >Migrating to the standard permissions mode</a> in the <i>Amazon QLDB Developer\
        \ Guide</i>.</p> </important>"
      operationId: UpdateLedgerPermissionsMode
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ledger.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLedgerPermissionsMode_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLedgerPermissionsModeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CancelJournalKinesisStreamResponse:
      example:
        StreamId: ""
      properties:
        StreamId:
          allOf:
          - $ref: '#/components/schemas/UniqueId'
          - description: The UUID (Base62-encoded text) of the canceled QLDB journal
              stream.
      type: object
    InvalidParameterException: {}
    ResourceNotFoundException: {}
    ResourcePreconditionNotMetException: {}
    CreateLedgerResponse:
      example:
        CreationDateTime: ""
        PermissionsMode: ""
        KmsKeyArn: ""
        State: ""
        DeletionProtection: ""
        Arn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: The name of the ledger.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the ledger.
        State:
          allOf:
          - $ref: '#/components/schemas/LedgerState'
          - description: The current status of the ledger.
        CreationDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time, in epoch time format, when the ledger\
              \ was created. (Epoch time format is the number of seconds elapsed since\
              \ 12:00:00 AM January 1, 1970 UTC.)"
        PermissionsMode:
          allOf:
          - $ref: '#/components/schemas/PermissionsMode'
          - description: The permissions mode of the ledger that you created.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/DeletionProtection'
          - description: "<p>The flag that prevents a ledger from being deleted by\
              \ any user. If not provided on ledger creation, this feature is enabled\
              \ (<code>true</code>) by default.</p> <p>If deletion protection is enabled,\
              \ you must first disable it before you can delete the ledger. You can\
              \ disable it by calling the <code>UpdateLedger</code> operation to set\
              \ the flag to <code>false</code>.</p>"
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the customer managed KMS key that the ledger\
              \ uses for encryption at rest. If this parameter is undefined, the ledger\
              \ uses an Amazon Web Services owned KMS key for encryption."
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    ResourceInUseException: {}
    DescribeJournalKinesisStreamResponse:
      example:
        Stream:
          Status: ""
          InclusiveStartTime: ""
          StreamId: ""
          StreamName: ""
          ErrorCause: ""
          KinesisConfiguration:
            AggregationEnabled: ""
            StreamArn: ""
          CreationTime: ""
          ExclusiveEndTime: ""
          Arn: ""
          LedgerName: ""
          RoleArn: ""
      properties:
        Stream:
          $ref: '#/components/schemas/DescribeJournalKinesisStreamResponse_Stream'
      type: object
    DescribeJournalS3ExportResponse:
      example:
        ExportDescription:
          Status: ""
          InclusiveStartTime: ""
          ExportId: ""
          OutputFormat: ""
          S3ExportConfiguration:
            Bucket: ""
            EncryptionConfiguration:
              ObjectEncryptionType: ""
              KmsKeyArn: ""
            Prefix: ""
          ExclusiveEndTime: ""
          ExportCreationTime: ""
          LedgerName: ""
          RoleArn: ""
      properties:
        ExportDescription:
          $ref: '#/components/schemas/DescribeJournalS3ExportResponse_ExportDescription'
      required:
      - ExportDescription
      type: object
    DescribeLedgerResponse:
      example:
        CreationDateTime: ""
        PermissionsMode: ""
        State: ""
        EncryptionDescription:
          EncryptionStatus: ""
          KmsKeyArn: ""
          InaccessibleKmsKeyDateTime: ""
        DeletionProtection: ""
        Arn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: The name of the ledger.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the ledger.
        State:
          allOf:
          - $ref: '#/components/schemas/LedgerState'
          - description: The current status of the ledger.
        CreationDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time, in epoch time format, when the ledger\
              \ was created. (Epoch time format is the number of seconds elapsed since\
              \ 12:00:00 AM January 1, 1970 UTC.)"
        PermissionsMode:
          allOf:
          - $ref: '#/components/schemas/PermissionsMode'
          - description: The permissions mode of the ledger.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/DeletionProtection'
          - description: "<p>The flag that prevents a ledger from being deleted by\
              \ any user. If not provided on ledger creation, this feature is enabled\
              \ (<code>true</code>) by default.</p> <p>If deletion protection is enabled,\
              \ you must first disable it before you can delete the ledger. You can\
              \ disable it by calling the <code>UpdateLedger</code> operation to set\
              \ the flag to <code>false</code>.</p>"
        EncryptionDescription:
          $ref: '#/components/schemas/DescribeLedgerResponse_EncryptionDescription'
      type: object
    ExportJournalToS3Response:
      example:
        ExportId: ""
      properties:
        ExportId:
          allOf:
          - $ref: '#/components/schemas/UniqueId'
          - description: "<p>The UUID (represented in Base62-encoded text) that QLDB\
              \ assigns to each journal export job.</p> <p>To describe your export\
              \ request and check the status of the job, you can use <code>ExportId</code>\
              \ to call <code>DescribeJournalS3Export</code>.</p>"
      required:
      - ExportId
      type: object
    S3Bucket:
      maxLength: 255
      minLength: 3
      pattern: "^[A-Za-z-0-9-_.]+$"
      type: string
    S3Prefix:
      maxLength: 128
      minLength: 0
      type: string
    S3EncryptionConfiguration:
      description: The encryption settings that are used by a journal export job to
        write data in an Amazon Simple Storage Service (Amazon S3) bucket.
      properties:
        ObjectEncryptionType:
          allOf:
          - $ref: '#/components/schemas/S3ObjectEncryptionType'
          - description: "<p>The Amazon S3 object encryption type.</p> <p>To learn\
              \ more about server-side encryption options in Amazon S3, see <a href=\"\
              https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html\"\
              >Protecting Data Using Server-Side Encryption</a> in the <i>Amazon S3\
              \ Developer Guide</i>.</p>"
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: <p>The Amazon Resource Name (ARN) of a symmetric key in Key
              Management Service (KMS). Amazon S3 does not support asymmetric KMS
              keys.</p> <p>You must provide a <code>KmsKeyArn</code> if you specify
              <code>SSE_KMS</code> as the <code>ObjectEncryptionType</code>.</p> <p>
              <code>KmsKeyArn</code> is not required if you specify <code>SSE_S3</code>
              as the <code>ObjectEncryptionType</code>.</p>
      required:
      - ObjectEncryptionType
      type: object
    GetBlockResponse:
      example:
        Proof:
          IonText: ""
        Block:
          IonText: ""
      properties:
        Block:
          $ref: '#/components/schemas/GetBlockResponse_Block'
        Proof:
          $ref: '#/components/schemas/GetBlockResponse_Proof'
      required:
      - Block
      type: object
    IonText:
      format: password
      maxLength: 1048576
      minLength: 1
      type: string
    GetDigestResponse:
      example:
        Digest: ""
        DigestTipAddress:
          IonText: ""
      properties:
        Digest:
          allOf:
          - $ref: '#/components/schemas/Digest'
          - description: The 256-bit hash value representing the digest returned by
              a <code>GetDigest</code> request.
        DigestTipAddress:
          $ref: '#/components/schemas/GetDigestResponse_DigestTipAddress'
      required:
      - Digest
      - DigestTipAddress
      type: object
    GetRevisionResponse:
      example:
        Revision:
          IonText: ""
        Proof:
          IonText: ""
      properties:
        Proof:
          $ref: '#/components/schemas/GetRevisionResponse_Proof'
        Revision:
          $ref: '#/components/schemas/GetRevisionResponse_Revision'
      required:
      - Revision
      type: object
    ListJournalKinesisStreamsForLedgerResponse:
      example:
        NextToken: ""
        Streams: ""
      properties:
        Streams:
          allOf:
          - $ref: '#/components/schemas/JournalKinesisStreamDescriptionList'
          - description: The array of QLDB journal stream descriptors that are associated
              with the given ledger.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<ul> <li> <p>If <code>NextToken</code> is empty, the last\
              \ page of results has been processed and there are no more results to\
              \ be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i>\
              \ empty, more results are available. To retrieve the next page of results,\
              \ use the value of <code>NextToken</code> in a subsequent <code>ListJournalKinesisStreamsForLedger</code>\
              \ call.</p> </li> </ul>"
      type: object
    ListJournalS3ExportsResponse:
      example:
        JournalS3Exports: ""
        NextToken: ""
      properties:
        JournalS3Exports:
          allOf:
          - $ref: '#/components/schemas/JournalS3ExportList'
          - description: The array of journal export job descriptions for all ledgers
              that are associated with the current Amazon Web Services account and
              Region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<ul> <li> <p>If <code>NextToken</code> is empty, then the\
              \ last page of results has been processed and there are no more results\
              \ to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i>\
              \ empty, then there are more results available. To retrieve the next\
              \ page of results, use the value of <code>NextToken</code> in a subsequent\
              \ <code>ListJournalS3Exports</code> call.</p> </li> </ul>"
      type: object
    ListJournalS3ExportsForLedgerResponse:
      example:
        JournalS3Exports: ""
        NextToken: ""
      properties:
        JournalS3Exports:
          allOf:
          - $ref: '#/components/schemas/JournalS3ExportList'
          - description: The array of journal export job descriptions that are associated
              with the specified ledger.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<ul> <li> <p>If <code>NextToken</code> is empty, then the\
              \ last page of results has been processed and there are no more results\
              \ to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i>\
              \ empty, then there are more results available. To retrieve the next\
              \ page of results, use the value of <code>NextToken</code> in a subsequent\
              \ <code>ListJournalS3ExportsForLedger</code> call.</p> </li> </ul>"
      type: object
    ListLedgersResponse:
      example:
        NextToken: ""
        Ledgers: ""
      properties:
        Ledgers:
          allOf:
          - $ref: '#/components/schemas/LedgerList'
          - description: The array of ledger summaries that are associated with the
              current Amazon Web Services account and Region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>A pagination token, indicating whether there are more\
              \ results available:</p> <ul> <li> <p>If <code>NextToken</code> is empty,\
              \ then the last page of results has been processed and there are no\
              \ more results to be retrieved.</p> </li> <li> <p>If <code>NextToken</code>\
              \ is <i>not</i> empty, then there are more results available. To retrieve\
              \ the next page of results, use the value of <code>NextToken</code>\
              \ in a subsequent <code>ListLedgers</code> call.</p> </li> </ul>"
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags that are currently associated with the specified
              Amazon QLDB resource.
      type: object
    StreamJournalToKinesisResponse:
      example:
        StreamId: ""
      properties:
        StreamId:
          allOf:
          - $ref: '#/components/schemas/UniqueId'
          - description: The UUID (represented in Base62-encoded text) that QLDB assigns
              to each QLDB journal stream.
      type: object
    Arn:
      maxLength: 1600
      minLength: 20
      type: string
    Boolean:
      type: boolean
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    UpdateLedgerResponse:
      example:
        CreationDateTime: ""
        State: ""
        EncryptionDescription:
          EncryptionStatus: ""
          KmsKeyArn: ""
          InaccessibleKmsKeyDateTime: ""
        DeletionProtection: ""
        Arn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: The name of the ledger.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the ledger.
        State:
          allOf:
          - $ref: '#/components/schemas/LedgerState'
          - description: The current status of the ledger.
        CreationDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time, in epoch time format, when the ledger\
              \ was created. (Epoch time format is the number of seconds elapsed since\
              \ 12:00:00 AM January 1, 1970 UTC.)"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/DeletionProtection'
          - description: "<p>The flag that prevents a ledger from being deleted by\
              \ any user. If not provided on ledger creation, this feature is enabled\
              \ (<code>true</code>) by default.</p> <p>If deletion protection is enabled,\
              \ you must first disable it before you can delete the ledger. You can\
              \ disable it by calling the <code>UpdateLedger</code> operation to set\
              \ the flag to <code>false</code>.</p>"
        EncryptionDescription:
          $ref: '#/components/schemas/DescribeLedgerResponse_EncryptionDescription'
      type: object
    UpdateLedgerPermissionsModeResponse:
      example:
        PermissionsMode: ""
        Arn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: The name of the ledger.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the ledger.
        PermissionsMode:
          allOf:
          - $ref: '#/components/schemas/PermissionsMode'
          - description: The current permissions mode of the ledger.
      type: object
    LedgerName:
      maxLength: 32
      minLength: 1
      pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
      type: string
    UniqueId:
      maxLength: 22
      minLength: 22
      pattern: "^[A-Za-z-0-9]+$"
      type: string
    CancelJournalKinesisStreamRequest:
      properties: {}
      title: CancelJournalKinesisStreamRequest
      type: object
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 0
      type: object
    PermissionsMode:
      enum:
      - ALLOW_ALL
      - STANDARD
      type: string
    DeletionProtection:
      type: boolean
    KmsKey:
      maxLength: 1600
      type: string
    CreateLedgerRequest:
      example:
        PermissionsMode: ""
        DeletionProtection: ""
        Tags: ""
        KmsKey: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: <p>The name of the ledger that you want to create. The name
              must be unique among all of the ledgers in your Amazon Web Services
              account in the current Region.</p> <p>Naming constraints for ledger
              names are defined in <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas
              in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The key-value pairs to add as tags to the ledger that you
              want to create. Tag keys are case sensitive. Tag values are case sensitive
              and can be null.
        PermissionsMode:
          allOf:
          - $ref: '#/components/schemas/PermissionsMode'
          - description: "<p>The permissions mode to assign to the ledger that you\
              \ want to create. This parameter can have one of the following values:</p>\
              \ <ul> <li> <p> <code>ALLOW_ALL</code>: A legacy permissions mode that\
              \ enables access control with API-level granularity for ledgers.</p>\
              \ <p>This mode allows users who have the <code>SendCommand</code> API\
              \ permission for this ledger to run all PartiQL commands (hence, <code>ALLOW_ALL</code>)\
              \ on any tables in the specified ledger. This mode disregards any table-level\
              \ or command-level IAM permissions policies that you create for the\
              \ ledger.</p> </li> <li> <p> <code>STANDARD</code>: (<i>Recommended</i>)\
              \ A permissions mode that enables access control with finer granularity\
              \ for ledgers, tables, and PartiQL commands.</p> <p>By default, this\
              \ mode denies all user requests to run any PartiQL commands on any tables\
              \ in this ledger. To allow PartiQL commands to run, you must create\
              \ IAM permissions policies for specific table resources and PartiQL\
              \ actions, in addition to the <code>SendCommand</code> API permission\
              \ for the ledger. For information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html\"\
              >Getting started with the standard permissions mode</a> in the <i>Amazon\
              \ QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly recommend\
              \ using the <code>STANDARD</code> permissions mode to maximize the security\
              \ of your ledger data.</p> </note>"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/DeletionProtection'
          - description: "<p>The flag that prevents a ledger from being deleted by\
              \ any user. If not provided on ledger creation, this feature is enabled\
              \ (<code>true</code>) by default.</p> <p>If deletion protection is enabled,\
              \ you must first disable it before you can delete the ledger. You can\
              \ disable it by calling the <code>UpdateLedger</code> operation to set\
              \ the flag to <code>false</code>.</p>"
        KmsKey:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          - description: "<p>The key in Key Management Service (KMS) to use for encryption\
              \ of data at rest in the ledger. For more information, see <a href=\"\
              https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html\"\
              >Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>\
              \ <p>Use one of the following options to specify this parameter:</p>\
              \ <ul> <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that\
              \ is owned and managed by Amazon Web Services on your behalf.</p> </li>\
              \ <li> <p> <b>Undefined</b>: By default, use an Amazon Web Services\
              \ owned KMS key.</p> </li> <li> <p> <b>A valid symmetric customer managed\
              \ KMS key</b>: Use the specified KMS key in your account that you create,\
              \ own, and manage.</p> <p>Amazon QLDB does not support asymmetric keys.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\"\
              >Using symmetric and asymmetric keys</a> in the <i>Key Management Service\
              \ Developer Guide</i>.</p> </li> </ul> <p>To specify a customer managed\
              \ KMS key, you can use its key ID, Amazon Resource Name (ARN), alias\
              \ name, or alias ARN. When using an alias name, prefix it with <code>\"\
              alias/\"</code>. To specify a key in a different Amazon Web Services\
              \ account, you must use the key ARN or alias ARN.</p> <p>For example:</p>\
              \ <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>\
              \ </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>\
              \ </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p>\
              \ </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>\
              \ </p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\"\
              >Key identifiers (KeyId)</a> in the <i>Key Management Service Developer\
              \ Guide</i>.</p>"
      required:
      - Name
      - PermissionsMode
      title: CreateLedgerRequest
      type: object
    LedgerState:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - DELETED
      type: string
    Timestamp:
      format: date-time
      type: string
    DeleteLedgerRequest:
      properties: {}
      title: DeleteLedgerRequest
      type: object
    DescribeJournalKinesisStreamRequest:
      properties: {}
      title: DescribeJournalKinesisStreamRequest
      type: object
    JournalKinesisStreamDescription:
      description: "Information about an Amazon QLDB journal stream, including the\
        \ Amazon Resource Name (ARN), stream name, creation time, current status,\
        \ and the parameters of the original stream creation request."
      properties:
        LedgerName:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: The name of the ledger.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time, in epoch time format, when the QLDB journal\
              \ stream was created. (Epoch time format is the number of seconds elapsed\
              \ since 12:00:00 AM January 1, 1970 UTC.)"
        InclusiveStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The inclusive start date and time from which to start streaming
              journal data.
        ExclusiveEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The exclusive date and time that specifies when the stream\
              \ ends. If this parameter is undefined, the stream runs indefinitely\
              \ until you cancel it."
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the IAM role that grants
              QLDB permissions for a journal stream to write data records to a Kinesis
              Data Streams resource.
        StreamId:
          allOf:
          - $ref: '#/components/schemas/UniqueId'
          - description: The UUID (represented in Base62-encoded text) of the QLDB
              journal stream.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the QLDB journal stream.
        Status:
          allOf:
          - $ref: '#/components/schemas/StreamStatus'
          - description: The current state of the QLDB journal stream.
        KinesisConfiguration:
          $ref: '#/components/schemas/JournalKinesisStreamDescription_KinesisConfiguration'
        ErrorCause:
          allOf:
          - $ref: '#/components/schemas/ErrorCause'
          - description: The error message that describes the reason that a stream
              has a status of <code>IMPAIRED</code> or <code>FAILED</code>. This is
              not applicable to streams that have other status values.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The user-defined name of the QLDB journal stream.
      required:
      - KinesisConfiguration
      - LedgerName
      - RoleArn
      - Status
      - StreamId
      - StreamName
      type: object
    DescribeJournalS3ExportRequest:
      properties: {}
      title: DescribeJournalS3ExportRequest
      type: object
    JournalS3ExportDescription:
      description: "Information about a journal export job, including the ledger name,\
        \ export ID, creation time, current status, and the parameters of the original\
        \ export creation request."
      properties:
        LedgerName:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: The name of the ledger.
        ExportId:
          allOf:
          - $ref: '#/components/schemas/UniqueId'
          - description: The UUID (represented in Base62-encoded text) of the journal
              export job.
        ExportCreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time, in epoch time format, when the export\
              \ job was created. (Epoch time format is the number of seconds elapsed\
              \ since 12:00:00 AM January 1, 1970 UTC.)"
        Status:
          allOf:
          - $ref: '#/components/schemas/ExportStatus'
          - description: The current state of the journal export job.
        InclusiveStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The inclusive start date and time for the range of journal
              contents that was specified in the original export request.
        ExclusiveEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The exclusive end date and time for the range of journal
              contents that was specified in the original export request.
        S3ExportConfiguration:
          $ref: '#/components/schemas/S3ExportConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: <p>The Amazon Resource Name (ARN) of the IAM role that grants
              QLDB permissions for a journal export job to do the following:</p> <ul>
              <li> <p>Write objects into your Amazon Simple Storage Service (Amazon
              S3) bucket.</p> </li> <li> <p>(Optional) Use your customer managed key
              in Key Management Service (KMS) for server-side encryption of your exported
              data.</p> </li> </ul>
        OutputFormat:
          allOf:
          - $ref: '#/components/schemas/OutputFormat'
          - description: The output format of the exported journal data.
      required:
      - ExclusiveEndTime
      - ExportCreationTime
      - ExportId
      - InclusiveStartTime
      - LedgerName
      - RoleArn
      - S3ExportConfiguration
      - Status
      type: object
    DescribeLedgerRequest:
      properties: {}
      title: DescribeLedgerRequest
      type: object
    LedgerEncryptionDescription:
      description: "<p>Information about the encryption of data at rest in an Amazon\
        \ QLDB ledger. This includes the current status, the key in Key Management\
        \ Service (KMS), and when the key became inaccessible (in the case of an error).</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html\"\
        >Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>"
      properties:
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the customer managed KMS\
              \ key that the ledger uses for encryption at rest. If this parameter\
              \ is undefined, the ledger uses an Amazon Web Services owned KMS key\
              \ for encryption."
        EncryptionStatus:
          allOf:
          - $ref: '#/components/schemas/EncryptionStatus'
          - description: "<p>The current state of encryption at rest for the ledger.\
              \ This can be one of the following values:</p> <ul> <li> <p> <code>ENABLED</code>:\
              \ Encryption is fully enabled using the specified key.</p> </li> <li>\
              \ <p> <code>UPDATING</code>: The ledger is actively processing the specified\
              \ key change.</p> <p>Key changes in QLDB are asynchronous. The ledger\
              \ is fully accessible without any performance impact while the key change\
              \ is being processed. The amount of time it takes to update a key varies\
              \ depending on the ledger size.</p> </li> <li> <p> <code>KMS_KEY_INACCESSIBLE</code>:\
              \ The specified customer managed KMS key is not accessible, and the\
              \ ledger is impaired. Either the key was disabled or deleted, or the\
              \ grants on the key were revoked. When a ledger is impaired, it is not\
              \ accessible and does not accept any read or write requests.</p> <p>An\
              \ impaired ledger automatically returns to an active state after you\
              \ restore the grants on the key, or re-enable the key that was disabled.\
              \ However, deleting a customer managed KMS key is irreversible. After\
              \ a key is deleted, you can no longer access the ledgers that are protected\
              \ with that key, and the data becomes unrecoverable permanently.</p>\
              \ </li> </ul>"
        InaccessibleKmsKeyDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "<p>The date and time, in epoch time format, when the KMS\
              \ key first became inaccessible, in the case of an error. (Epoch time\
              \ format is the number of seconds that have elapsed since 12:00:00 AM\
              \ January 1, 1970 UTC.)</p> <p>This parameter is undefined if the KMS\
              \ key is accessible.</p>"
      required:
      - EncryptionStatus
      - KmsKeyArn
      type: object
    Digest:
      maxLength: 32
      minLength: 32
      type: string
    EncryptionStatus:
      enum:
      - ENABLED
      - UPDATING
      - KMS_KEY_INACCESSIBLE
      type: string
    ErrorCause:
      enum:
      - KINESIS_STREAM_NOT_FOUND
      - IAM_PERMISSION_REVOKED
      type: string
    S3ExportConfiguration:
      description: The Amazon Simple Storage Service (Amazon S3) bucket location in
        which a journal export job writes the journal contents.
      example:
        Bucket: ""
        EncryptionConfiguration:
          ObjectEncryptionType: ""
          KmsKeyArn: ""
        Prefix: ""
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: "<p>The Amazon S3 bucket name in which a journal export job\
              \ writes the journal contents.</p> <p>The bucket name must comply with\
              \ the Amazon S3 bucket naming conventions. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\"\
              >Bucket Restrictions and Limitations</a> in the <i>Amazon S3 Developer\
              \ Guide</i>.</p>"
        Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Prefix'
          - description: "<p>The prefix for the Amazon S3 bucket in which a journal\
              \ export job writes the journal contents.</p> <p>The prefix must comply\
              \ with Amazon S3 key naming rules and restrictions. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html\"\
              >Object Key and Metadata</a> in the <i>Amazon S3 Developer Guide</i>.</p>\
              \ <p>The following are examples of valid <code>Prefix</code> values:</p>\
              \ <ul> <li> <p> <code>JournalExports-ForMyLedger/Testing/</code> </p>\
              \ </li> <li> <p> <code>JournalExports</code> </p> </li> <li> <p> <code>My:Tests/</code>\
              \ </p> </li> </ul>"
        EncryptionConfiguration:
          $ref: '#/components/schemas/ExportJournalToS3_request_S3ExportConfiguration_EncryptionConfiguration'
      required:
      - Bucket
      - EncryptionConfiguration
      - Prefix
      type: object
    OutputFormat:
      enum:
      - ION_BINARY
      - ION_TEXT
      - JSON
      type: string
    ExportJournalToS3Request:
      example:
        InclusiveStartTime: ""
        OutputFormat: ""
        S3ExportConfiguration:
          Bucket: ""
          EncryptionConfiguration:
            ObjectEncryptionType: ""
            KmsKeyArn: ""
          Prefix: ""
        ExclusiveEndTime: ""
        RoleArn: ""
      properties:
        InclusiveStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "<p>The inclusive start date and time for the range of journal\
              \ contents to export.</p> <p>The <code>InclusiveStartTime</code> must\
              \ be in <code>ISO 8601</code> date and time format and in Universal\
              \ Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p>\
              \ <p>The <code>InclusiveStartTime</code> must be before <code>ExclusiveEndTime</code>.</p>\
              \ <p>If you provide an <code>InclusiveStartTime</code> that is before\
              \ the ledger's <code>CreationDateTime</code>, Amazon QLDB defaults it\
              \ to the ledger's <code>CreationDateTime</code>.</p>"
        ExclusiveEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "<p>The exclusive end date and time for the range of journal\
              \ contents to export.</p> <p>The <code>ExclusiveEndTime</code> must\
              \ be in <code>ISO 8601</code> date and time format and in Universal\
              \ Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p>\
              \ <p>The <code>ExclusiveEndTime</code> must be less than or equal to\
              \ the current UTC date and time.</p>"
        S3ExportConfiguration:
          $ref: '#/components/schemas/ExportJournalToS3Request_S3ExportConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM role that grants\
              \ QLDB permissions for a journal export job to do the following:</p>\
              \ <ul> <li> <p>Write objects into your Amazon Simple Storage Service\
              \ (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer\
              \ managed key in Key Management Service (KMS) for server-side encryption\
              \ of your exported data.</p> </li> </ul> <p>To pass a role to QLDB when\
              \ requesting a journal export, you must have permissions to perform\
              \ the <code>iam:PassRole</code> action on the IAM role resource. This\
              \ is required for all journal export requests.</p>"
        OutputFormat:
          allOf:
          - $ref: '#/components/schemas/OutputFormat'
          - description: "The output format of your exported journal data. If this\
              \ parameter is not specified, the exported data defaults to <code>ION_TEXT</code>\
              \ format."
      required:
      - ExclusiveEndTime
      - InclusiveStartTime
      - RoleArn
      - S3ExportConfiguration
      title: ExportJournalToS3Request
      type: object
    ExportStatus:
      enum:
      - IN_PROGRESS
      - COMPLETED
      - CANCELLED
      type: string
    ValueHolder:
      description: A structure that can contain a value in multiple encoding formats.
      properties:
        IonText:
          allOf:
          - $ref: '#/components/schemas/IonText'
          - description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code>
              structure.
      type: object
    GetBlockRequest:
      example:
        BlockAddress:
          IonText: ""
        DigestTipAddress:
          IonText: ""
      properties:
        BlockAddress:
          $ref: '#/components/schemas/GetBlockRequest_BlockAddress'
        DigestTipAddress:
          $ref: '#/components/schemas/GetBlockRequest_DigestTipAddress'
      required:
      - BlockAddress
      title: GetBlockRequest
      type: object
    GetDigestRequest:
      properties: {}
      title: GetDigestRequest
      type: object
    GetRevisionRequest:
      example:
        BlockAddress:
          IonText: ""
        DocumentId: ""
        DigestTipAddress:
          IonText: ""
      properties:
        BlockAddress:
          $ref: '#/components/schemas/GetRevisionRequest_BlockAddress'
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/UniqueId'
          - description: The UUID (represented in Base62-encoded text) of the document
              to be verified.
        DigestTipAddress:
          $ref: '#/components/schemas/GetBlockRequest_DigestTipAddress'
      required:
      - BlockAddress
      - DocumentId
      title: GetRevisionRequest
      type: object
    StreamStatus:
      enum:
      - ACTIVE
      - COMPLETED
      - CANCELED
      - FAILED
      - IMPAIRED
      type: string
    KinesisConfiguration:
      description: The configuration settings of the Amazon Kinesis Data Streams destination
        for an Amazon QLDB journal stream.
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Kinesis Data Streams
              resource.
        AggregationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Enables QLDB to publish multiple data records in a single\
              \ Kinesis Data Streams record, increasing the number of records sent\
              \ per API call.</p> <p> <i>This option is enabled by default.</i> Record\
              \ aggregation has important implications for processing records and\
              \ requires de-aggregation in your stream consumer. To learn more, see\
              \ <a href=\"https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html\"\
              >KPL Key Concepts</a> and <a href=\"https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html\"\
              >Consumer De-aggregation</a> in the <i>Amazon Kinesis Data Streams Developer\
              \ Guide</i>.</p>"
      required:
      - StreamArn
      type: object
    StreamName:
      maxLength: 32
      minLength: 1
      pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
      type: string
    JournalKinesisStreamDescriptionList:
      items:
        $ref: '#/components/schemas/JournalKinesisStreamDescription'
      type: array
    JournalS3ExportList:
      items:
        $ref: '#/components/schemas/JournalS3ExportDescription'
      type: array
    LedgerSummary:
      description: "Information about a ledger, including its name, state, and when\
        \ it was created."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/LedgerName'
          - description: The name of the ledger.
        State:
          allOf:
          - $ref: '#/components/schemas/LedgerState'
          - description: The current status of the ledger.
        CreationDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time, in epoch time format, when the ledger\
              \ was created. (Epoch time format is the number of seconds elapsed since\
              \ 12:00:00 AM January 1, 1970 UTC.)"
      type: object
    LedgerList:
      items:
        $ref: '#/components/schemas/LedgerSummary'
      type: array
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 1024
      minLength: 4
      pattern: "^[A-Za-z-0-9+/=]+$"
      type: string
    ListJournalKinesisStreamsForLedgerRequest:
      properties: {}
      title: ListJournalKinesisStreamsForLedgerRequest
      type: object
    ListJournalS3ExportsForLedgerRequest:
      properties: {}
      title: ListJournalS3ExportsForLedgerRequest
      type: object
    ListJournalS3ExportsRequest:
      properties: {}
      title: ListJournalS3ExportsRequest
      type: object
    ListLedgersRequest:
      properties: {}
      title: ListLedgersRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    S3ObjectEncryptionType:
      enum:
      - SSE_KMS
      - SSE_S3
      - NO_ENCRYPTION
      type: string
    StreamJournalToKinesisRequest:
      example:
        InclusiveStartTime: ""
        StreamName: ""
        KinesisConfiguration:
          AggregationEnabled: ""
          StreamArn: ""
        ExclusiveEndTime: ""
        RoleArn: ""
        Tags: ""
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM role that grants\
              \ QLDB permissions for a journal stream to write data records to a Kinesis\
              \ Data Streams resource.</p> <p>To pass a role to QLDB when requesting\
              \ a journal stream, you must have permissions to perform the <code>iam:PassRole</code>\
              \ action on the IAM role resource. This is required for all journal\
              \ stream requests.</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The key-value pairs to add as tags to the stream that you
              want to create. Tag keys are case sensitive. Tag values are case sensitive
              and can be null.
        InclusiveStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "<p>The inclusive start date and time from which to start\
              \ streaming journal data. This parameter must be in <code>ISO 8601</code>\
              \ date and time format and in Universal Coordinated Time (UTC). For\
              \ example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The <code>InclusiveStartTime</code>\
              \ cannot be in the future and must be before <code>ExclusiveEndTime</code>.</p>\
              \ <p>If you provide an <code>InclusiveStartTime</code> that is before\
              \ the ledger's <code>CreationDateTime</code>, QLDB effectively defaults\
              \ it to the ledger's <code>CreationDateTime</code>.</p>"
        ExclusiveEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "<p>The exclusive date and time that specifies when the stream\
              \ ends. If you don't define this parameter, the stream runs indefinitely\
              \ until you cancel it.</p> <p>The <code>ExclusiveEndTime</code> must\
              \ be in <code>ISO 8601</code> date and time format and in Universal\
              \ Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p>"
        KinesisConfiguration:
          $ref: '#/components/schemas/StreamJournalToKinesisRequest_KinesisConfiguration'
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: "<p>The name that you want to assign to the QLDB journal\
              \ stream. User-defined names can help identify and indicate the purpose\
              \ of a stream.</p> <p>Your stream name must be unique among other <i>active</i>\
              \ streams for a given ledger. Stream names have the same naming constraints\
              \ as ledger names, as defined in <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming\"\
              >Quotas in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>"
      required:
      - InclusiveStartTime
      - KinesisConfiguration
      - RoleArn
      - StreamName
      title: StreamJournalToKinesisRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The key-value pairs to add as tags to the specified QLDB\
              \ resource. Tag keys are case sensitive. If you specify a key that already\
              \ exists for the resource, your request fails and returns an error.\
              \ Tag values are case sensitive and can be null."
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateLedgerPermissionsModeRequest:
      example:
        PermissionsMode: ""
      properties:
        PermissionsMode:
          allOf:
          - $ref: '#/components/schemas/PermissionsMode'
          - description: "<p>The permissions mode to assign to the ledger. This parameter\
              \ can have one of the following values:</p> <ul> <li> <p> <code>ALLOW_ALL</code>:\
              \ A legacy permissions mode that enables access control with API-level\
              \ granularity for ledgers.</p> <p>This mode allows users who have the\
              \ <code>SendCommand</code> API permission for this ledger to run all\
              \ PartiQL commands (hence, <code>ALLOW_ALL</code>) on any tables in\
              \ the specified ledger. This mode disregards any table-level or command-level\
              \ IAM permissions policies that you create for the ledger.</p> </li>\
              \ <li> <p> <code>STANDARD</code>: (<i>Recommended</i>) A permissions\
              \ mode that enables access control with finer granularity for ledgers,\
              \ tables, and PartiQL commands.</p> <p>By default, this mode denies\
              \ all user requests to run any PartiQL commands on any tables in this\
              \ ledger. To allow PartiQL commands to run, you must create IAM permissions\
              \ policies for specific table resources and PartiQL actions, in addition\
              \ to the <code>SendCommand</code> API permission for the ledger. For\
              \ information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html\"\
              >Getting started with the standard permissions mode</a> in the <i>Amazon\
              \ QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly recommend\
              \ using the <code>STANDARD</code> permissions mode to maximize the security\
              \ of your ledger data.</p> </note>"
      required:
      - PermissionsMode
      title: UpdateLedgerPermissionsModeRequest
      type: object
    UpdateLedgerRequest:
      example:
        DeletionProtection: ""
        KmsKey: ""
      properties:
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/DeletionProtection'
          - description: "<p>The flag that prevents a ledger from being deleted by\
              \ any user. If not provided on ledger creation, this feature is enabled\
              \ (<code>true</code>) by default.</p> <p>If deletion protection is enabled,\
              \ you must first disable it before you can delete the ledger. You can\
              \ disable it by calling the <code>UpdateLedger</code> operation to set\
              \ the flag to <code>false</code>.</p>"
        KmsKey:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          - description: "<p>The key in Key Management Service (KMS) to use for encryption\
              \ of data at rest in the ledger. For more information, see <a href=\"\
              https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html\"\
              >Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>\
              \ <p>Use one of the following options to specify this parameter:</p>\
              \ <ul> <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that\
              \ is owned and managed by Amazon Web Services on your behalf.</p> </li>\
              \ <li> <p> <b>Undefined</b>: Make no changes to the KMS key of the ledger.</p>\
              \ </li> <li> <p> <b>A valid symmetric customer managed KMS key</b>:\
              \ Use the specified KMS key in your account that you create, own, and\
              \ manage.</p> <p>Amazon QLDB does not support asymmetric keys. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\"\
              >Using symmetric and asymmetric keys</a> in the <i>Key Management Service\
              \ Developer Guide</i>.</p> </li> </ul> <p>To specify a customer managed\
              \ KMS key, you can use its key ID, Amazon Resource Name (ARN), alias\
              \ name, or alias ARN. When using an alias name, prefix it with <code>\"\
              alias/\"</code>. To specify a key in a different Amazon Web Services\
              \ account, you must use the key ARN or alias ARN.</p> <p>For example:</p>\
              \ <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>\
              \ </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>\
              \ </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p>\
              \ </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>\
              \ </p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\"\
              >Key identifiers (KeyId)</a> in the <i>Key Management Service Developer\
              \ Guide</i>.</p>"
      title: UpdateLedgerRequest
      type: object
    CreateLedger_request:
      properties:
        Name:
          description: <p>The name of the ledger that you want to create. The name
            must be unique among all of the ledgers in your Amazon Web Services account
            in the current Region.</p> <p>Naming constraints for ledger names are
            defined in <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas
            in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The key-value pairs to add as tags to the ledger that you want
            to create. Tag keys are case sensitive. Tag values are case sensitive
            and can be null.
          maxProperties: 200
          minProperties: 0
          type: object
        PermissionsMode:
          description: "<p>The permissions mode to assign to the ledger that you want\
            \ to create. This parameter can have one of the following values:</p>\
            \ <ul> <li> <p> <code>ALLOW_ALL</code>: A legacy permissions mode that\
            \ enables access control with API-level granularity for ledgers.</p> <p>This\
            \ mode allows users who have the <code>SendCommand</code> API permission\
            \ for this ledger to run all PartiQL commands (hence, <code>ALLOW_ALL</code>)\
            \ on any tables in the specified ledger. This mode disregards any table-level\
            \ or command-level IAM permissions policies that you create for the ledger.</p>\
            \ </li> <li> <p> <code>STANDARD</code>: (<i>Recommended</i>) A permissions\
            \ mode that enables access control with finer granularity for ledgers,\
            \ tables, and PartiQL commands.</p> <p>By default, this mode denies all\
            \ user requests to run any PartiQL commands on any tables in this ledger.\
            \ To allow PartiQL commands to run, you must create IAM permissions policies\
            \ for specific table resources and PartiQL actions, in addition to the\
            \ <code>SendCommand</code> API permission for the ledger. For information,\
            \ see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html\"\
            >Getting started with the standard permissions mode</a> in the <i>Amazon\
            \ QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly recommend\
            \ using the <code>STANDARD</code> permissions mode to maximize the security\
            \ of your ledger data.</p> </note>"
          enum:
          - ALLOW_ALL
          - STANDARD
          type: string
        DeletionProtection:
          description: "<p>The flag that prevents a ledger from being deleted by any\
            \ user. If not provided on ledger creation, this feature is enabled (<code>true</code>)\
            \ by default.</p> <p>If deletion protection is enabled, you must first\
            \ disable it before you can delete the ledger. You can disable it by calling\
            \ the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>"
          type: boolean
        KmsKey:
          description: "<p>The key in Key Management Service (KMS) to use for encryption\
            \ of data at rest in the ledger. For more information, see <a href=\"\
            https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html\"\
            >Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>\
            \ <p>Use one of the following options to specify this parameter:</p> <ul>\
            \ <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that is owned\
            \ and managed by Amazon Web Services on your behalf.</p> </li> <li> <p>\
            \ <b>Undefined</b>: By default, use an Amazon Web Services owned KMS key.</p>\
            \ </li> <li> <p> <b>A valid symmetric customer managed KMS key</b>: Use\
            \ the specified KMS key in your account that you create, own, and manage.</p>\
            \ <p>Amazon QLDB does not support asymmetric keys. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\"\
            >Using symmetric and asymmetric keys</a> in the <i>Key Management Service\
            \ Developer Guide</i>.</p> </li> </ul> <p>To specify a customer managed\
            \ KMS key, you can use its key ID, Amazon Resource Name (ARN), alias name,\
            \ or alias ARN. When using an alias name, prefix it with <code>\"alias/\"\
            </code>. To specify a key in a different Amazon Web Services account,\
            \ you must use the key ARN or alias ARN.</p> <p>For example:</p> <ul>\
            \ <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p>\
            \ </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>\
            \ </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p>\
            \ </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>\
            \ </p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\"\
            >Key identifiers (KeyId)</a> in the <i>Key Management Service Developer\
            \ Guide</i>.</p>"
          maxLength: 1600
          type: string
      required:
      - Name
      - PermissionsMode
      type: object
    UpdateLedger_request:
      properties:
        DeletionProtection:
          description: "<p>The flag that prevents a ledger from being deleted by any\
            \ user. If not provided on ledger creation, this feature is enabled (<code>true</code>)\
            \ by default.</p> <p>If deletion protection is enabled, you must first\
            \ disable it before you can delete the ledger. You can disable it by calling\
            \ the <code>UpdateLedger</code> operation to set the flag to <code>false</code>.</p>"
          type: boolean
        KmsKey:
          description: "<p>The key in Key Management Service (KMS) to use for encryption\
            \ of data at rest in the ledger. For more information, see <a href=\"\
            https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html\"\
            >Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>\
            \ <p>Use one of the following options to specify this parameter:</p> <ul>\
            \ <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that is owned\
            \ and managed by Amazon Web Services on your behalf.</p> </li> <li> <p>\
            \ <b>Undefined</b>: Make no changes to the KMS key of the ledger.</p>\
            \ </li> <li> <p> <b>A valid symmetric customer managed KMS key</b>: Use\
            \ the specified KMS key in your account that you create, own, and manage.</p>\
            \ <p>Amazon QLDB does not support asymmetric keys. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\"\
            >Using symmetric and asymmetric keys</a> in the <i>Key Management Service\
            \ Developer Guide</i>.</p> </li> </ul> <p>To specify a customer managed\
            \ KMS key, you can use its key ID, Amazon Resource Name (ARN), alias name,\
            \ or alias ARN. When using an alias name, prefix it with <code>\"alias/\"\
            </code>. To specify a key in a different Amazon Web Services account,\
            \ you must use the key ARN or alias ARN.</p> <p>For example:</p> <ul>\
            \ <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p>\
            \ </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>\
            \ </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p>\
            \ </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>\
            \ </p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\"\
            >Key identifiers (KeyId)</a> in the <i>Key Management Service Developer\
            \ Guide</i>.</p>"
          maxLength: 1600
          type: string
      type: object
    ExportJournalToS3_request_S3ExportConfiguration_EncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/S3EncryptionConfiguration'
      - description: The encryption settings that are used by a journal export job
          to write data in an Amazon S3 bucket.
      example:
        ObjectEncryptionType: ""
        KmsKeyArn: ""
    ExportJournalToS3_request_S3ExportConfiguration:
      description: The Amazon Simple Storage Service (Amazon S3) bucket location in
        which a journal export job writes the journal contents.
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: "<p>The Amazon S3 bucket name in which a journal export job\
              \ writes the journal contents.</p> <p>The bucket name must comply with\
              \ the Amazon S3 bucket naming conventions. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\"\
              >Bucket Restrictions and Limitations</a> in the <i>Amazon S3 Developer\
              \ Guide</i>.</p>"
        Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Prefix'
          - description: "<p>The prefix for the Amazon S3 bucket in which a journal\
              \ export job writes the journal contents.</p> <p>The prefix must comply\
              \ with Amazon S3 key naming rules and restrictions. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html\"\
              >Object Key and Metadata</a> in the <i>Amazon S3 Developer Guide</i>.</p>\
              \ <p>The following are examples of valid <code>Prefix</code> values:</p>\
              \ <ul> <li> <p> <code>JournalExports-ForMyLedger/Testing/</code> </p>\
              \ </li> <li> <p> <code>JournalExports</code> </p> </li> <li> <p> <code>My:Tests/</code>\
              \ </p> </li> </ul>"
        EncryptionConfiguration:
          $ref: '#/components/schemas/ExportJournalToS3_request_S3ExportConfiguration_EncryptionConfiguration'
      type: object
    ExportJournalToS3_request:
      properties:
        InclusiveStartTime:
          description: "<p>The inclusive start date and time for the range of journal\
            \ contents to export.</p> <p>The <code>InclusiveStartTime</code> must\
            \ be in <code>ISO 8601</code> date and time format and in Universal Coordinated\
            \ Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The\
            \ <code>InclusiveStartTime</code> must be before <code>ExclusiveEndTime</code>.</p>\
            \ <p>If you provide an <code>InclusiveStartTime</code> that is before\
            \ the ledger's <code>CreationDateTime</code>, Amazon QLDB defaults it\
            \ to the ledger's <code>CreationDateTime</code>.</p>"
          format: date-time
          type: string
        ExclusiveEndTime:
          description: "<p>The exclusive end date and time for the range of journal\
            \ contents to export.</p> <p>The <code>ExclusiveEndTime</code> must be\
            \ in <code>ISO 8601</code> date and time format and in Universal Coordinated\
            \ Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The\
            \ <code>ExclusiveEndTime</code> must be less than or equal to the current\
            \ UTC date and time.</p>"
          format: date-time
          type: string
        S3ExportConfiguration:
          $ref: '#/components/schemas/ExportJournalToS3_request_S3ExportConfiguration'
        RoleArn:
          description: "<p>The Amazon Resource Name (ARN) of the IAM role that grants\
            \ QLDB permissions for a journal export job to do the following:</p> <ul>\
            \ <li> <p>Write objects into your Amazon Simple Storage Service (Amazon\
            \ S3) bucket.</p> </li> <li> <p>(Optional) Use your customer managed key\
            \ in Key Management Service (KMS) for server-side encryption of your exported\
            \ data.</p> </li> </ul> <p>To pass a role to QLDB when requesting a journal\
            \ export, you must have permissions to perform the <code>iam:PassRole</code>\
            \ action on the IAM role resource. This is required for all journal export\
            \ requests.</p>"
          maxLength: 1600
          minLength: 20
          type: string
        OutputFormat:
          description: "The output format of your exported journal data. If this parameter\
            \ is not specified, the exported data defaults to <code>ION_TEXT</code>\
            \ format."
          enum:
          - ION_BINARY
          - ION_TEXT
          - JSON
          type: string
      required:
      - ExclusiveEndTime
      - InclusiveStartTime
      - RoleArn
      - S3ExportConfiguration
      type: object
    GetBlock_request_BlockAddress:
      description: A structure that can contain a value in multiple encoding formats.
      properties:
        IonText:
          allOf:
          - $ref: '#/components/schemas/IonText'
          - description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code>
              structure.
      type: object
    GetBlock_request:
      properties:
        BlockAddress:
          $ref: '#/components/schemas/GetBlock_request_BlockAddress'
        DigestTipAddress:
          $ref: '#/components/schemas/GetBlock_request_BlockAddress'
      required:
      - BlockAddress
      type: object
    GetRevision_request:
      properties:
        BlockAddress:
          $ref: '#/components/schemas/GetBlock_request_BlockAddress'
        DocumentId:
          description: The UUID (represented in Base62-encoded text) of the document
            to be verified.
          maxLength: 22
          minLength: 22
          pattern: "^[A-Za-z-0-9]+$"
          type: string
        DigestTipAddress:
          $ref: '#/components/schemas/GetBlock_request_BlockAddress'
      required:
      - BlockAddress
      - DocumentId
      type: object
    StreamJournalToKinesis_request_KinesisConfiguration:
      description: The configuration settings of the Amazon Kinesis Data Streams destination
        for an Amazon QLDB journal stream.
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Kinesis Data Streams
              resource.
        AggregationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Enables QLDB to publish multiple data records in a single\
              \ Kinesis Data Streams record, increasing the number of records sent\
              \ per API call.</p> <p> <i>This option is enabled by default.</i> Record\
              \ aggregation has important implications for processing records and\
              \ requires de-aggregation in your stream consumer. To learn more, see\
              \ <a href=\"https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html\"\
              >KPL Key Concepts</a> and <a href=\"https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html\"\
              >Consumer De-aggregation</a> in the <i>Amazon Kinesis Data Streams Developer\
              \ Guide</i>.</p>"
      type: object
    StreamJournalToKinesis_request:
      properties:
        RoleArn:
          description: "<p>The Amazon Resource Name (ARN) of the IAM role that grants\
            \ QLDB permissions for a journal stream to write data records to a Kinesis\
            \ Data Streams resource.</p> <p>To pass a role to QLDB when requesting\
            \ a journal stream, you must have permissions to perform the <code>iam:PassRole</code>\
            \ action on the IAM role resource. This is required for all journal stream\
            \ requests.</p>"
          maxLength: 1600
          minLength: 20
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The key-value pairs to add as tags to the stream that you want
            to create. Tag keys are case sensitive. Tag values are case sensitive
            and can be null.
          maxProperties: 200
          minProperties: 0
          type: object
        InclusiveStartTime:
          description: "<p>The inclusive start date and time from which to start streaming\
            \ journal data. This parameter must be in <code>ISO 8601</code> date and\
            \ time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p>\
            \ <p>The <code>InclusiveStartTime</code> cannot be in the future and must\
            \ be before <code>ExclusiveEndTime</code>.</p> <p>If you provide an <code>InclusiveStartTime</code>\
            \ that is before the ledger's <code>CreationDateTime</code>, QLDB effectively\
            \ defaults it to the ledger's <code>CreationDateTime</code>.</p>"
          format: date-time
          type: string
        ExclusiveEndTime:
          description: "<p>The exclusive date and time that specifies when the stream\
            \ ends. If you don't define this parameter, the stream runs indefinitely\
            \ until you cancel it.</p> <p>The <code>ExclusiveEndTime</code> must be\
            \ in <code>ISO 8601</code> date and time format and in Universal Coordinated\
            \ Time (UTC). For example: <code>2019-06-13T21:36:34Z</code>.</p>"
          format: date-time
          type: string
        KinesisConfiguration:
          $ref: '#/components/schemas/StreamJournalToKinesis_request_KinesisConfiguration'
        StreamName:
          description: "<p>The name that you want to assign to the QLDB journal stream.\
            \ User-defined names can help identify and indicate the purpose of a stream.</p>\
            \ <p>Your stream name must be unique among other <i>active</i> streams\
            \ for a given ledger. Stream names have the same naming constraints as\
            \ ledger names, as defined in <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming\"\
            >Quotas in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>"
          maxLength: 32
          minLength: 1
          pattern: "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$"
          type: string
      required:
      - InclusiveStartTime
      - KinesisConfiguration
      - RoleArn
      - StreamName
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The key-value pairs to add as tags to the specified QLDB resource.\
            \ Tag keys are case sensitive. If you specify a key that already exists\
            \ for the resource, your request fails and returns an error. Tag values\
            \ are case sensitive and can be null."
          maxProperties: 200
          minProperties: 0
          type: object
      required:
      - Tags
      type: object
    UpdateLedgerPermissionsMode_request:
      properties:
        PermissionsMode:
          description: "<p>The permissions mode to assign to the ledger. This parameter\
            \ can have one of the following values:</p> <ul> <li> <p> <code>ALLOW_ALL</code>:\
            \ A legacy permissions mode that enables access control with API-level\
            \ granularity for ledgers.</p> <p>This mode allows users who have the\
            \ <code>SendCommand</code> API permission for this ledger to run all PartiQL\
            \ commands (hence, <code>ALLOW_ALL</code>) on any tables in the specified\
            \ ledger. This mode disregards any table-level or command-level IAM permissions\
            \ policies that you create for the ledger.</p> </li> <li> <p> <code>STANDARD</code>:\
            \ (<i>Recommended</i>) A permissions mode that enables access control\
            \ with finer granularity for ledgers, tables, and PartiQL commands.</p>\
            \ <p>By default, this mode denies all user requests to run any PartiQL\
            \ commands on any tables in this ledger. To allow PartiQL commands to\
            \ run, you must create IAM permissions policies for specific table resources\
            \ and PartiQL actions, in addition to the <code>SendCommand</code> API\
            \ permission for the ledger. For information, see <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html\"\
            >Getting started with the standard permissions mode</a> in the <i>Amazon\
            \ QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly recommend\
            \ using the <code>STANDARD</code> permissions mode to maximize the security\
            \ of your ledger data.</p> </note>"
          enum:
          - ALLOW_ALL
          - STANDARD
          type: string
      required:
      - PermissionsMode
      type: object
    DescribeJournalKinesisStreamResponse_Stream:
      allOf:
      - $ref: '#/components/schemas/JournalKinesisStreamDescription'
      - description: Information about the QLDB journal stream returned by a <code>DescribeJournalS3Export</code>
          request.
      example:
        Status: ""
        InclusiveStartTime: ""
        StreamId: ""
        StreamName: ""
        ErrorCause: ""
        KinesisConfiguration:
          AggregationEnabled: ""
          StreamArn: ""
        CreationTime: ""
        ExclusiveEndTime: ""
        Arn: ""
        LedgerName: ""
        RoleArn: ""
    DescribeJournalS3ExportResponse_ExportDescription:
      allOf:
      - $ref: '#/components/schemas/JournalS3ExportDescription'
      - description: Information about the journal export job returned by a <code>DescribeJournalS3Export</code>
          request.
      example:
        Status: ""
        InclusiveStartTime: ""
        ExportId: ""
        OutputFormat: ""
        S3ExportConfiguration:
          Bucket: ""
          EncryptionConfiguration:
            ObjectEncryptionType: ""
            KmsKeyArn: ""
          Prefix: ""
        ExclusiveEndTime: ""
        ExportCreationTime: ""
        LedgerName: ""
        RoleArn: ""
    DescribeLedgerResponse_EncryptionDescription:
      allOf:
      - $ref: '#/components/schemas/LedgerEncryptionDescription'
      - description: "Information about the encryption of data at rest in the ledger.\
          \ This includes the current status, the KMS key, and when the key became\
          \ inaccessible (in the case of an error)."
      example:
        EncryptionStatus: ""
        KmsKeyArn: ""
        InaccessibleKmsKeyDateTime: ""
    GetBlockResponse_Block:
      allOf:
      - $ref: '#/components/schemas/ValueHolder'
      - description: The block data object in Amazon Ion format.
      example:
        IonText: ""
    GetBlockResponse_Proof:
      allOf:
      - $ref: '#/components/schemas/ValueHolder'
      - description: "The proof object in Amazon Ion format returned by a <code>GetBlock</code>\
          \ request. A proof contains the list of hash values required to recalculate\
          \ the specified digest using a Merkle tree, starting with the specified\
          \ block."
      example:
        IonText: ""
    GetDigestResponse_DigestTipAddress:
      allOf:
      - $ref: '#/components/schemas/ValueHolder'
      - description: "The latest block location covered by the digest that you requested.\
          \ An address is an Amazon Ion structure that has two fields: <code>strandId</code>\
          \ and <code>sequenceNo</code>."
      example:
        IonText: ""
    GetRevisionResponse_Proof:
      allOf:
      - $ref: '#/components/schemas/ValueHolder'
      - description: "The proof object in Amazon Ion format returned by a <code>GetRevision</code>\
          \ request. A proof contains the list of hash values that are required to\
          \ recalculate the specified digest using a Merkle tree, starting with the\
          \ specified document revision."
      example:
        IonText: ""
    GetRevisionResponse_Revision:
      allOf:
      - $ref: '#/components/schemas/ValueHolder'
      - description: The document revision data object in Amazon Ion format.
      example:
        IonText: ""
    JournalKinesisStreamDescription_KinesisConfiguration:
      allOf:
      - $ref: '#/components/schemas/KinesisConfiguration'
      - description: The configuration settings of the Amazon Kinesis Data Streams
          destination for a QLDB journal stream.
      example:
        AggregationEnabled: ""
        StreamArn: ""
    ExportJournalToS3Request_S3ExportConfiguration:
      allOf:
      - $ref: '#/components/schemas/S3ExportConfiguration'
      - description: The configuration settings of the Amazon S3 bucket destination
          for your export request.
      example:
        Bucket: ""
        EncryptionConfiguration:
          ObjectEncryptionType: ""
          KmsKeyArn: ""
        Prefix: ""
    GetBlockRequest_BlockAddress:
      allOf:
      - $ref: '#/components/schemas/ValueHolder'
      - description: "<p>The location of the block that you want to request. An address\
          \ is an Amazon Ion structure that has two fields: <code>strandId</code>\
          \ and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:\"BlFTjlSXze9BIh1KOszcE3\"\
          ,sequenceNo:14}</code>.</p>"
      example:
        IonText: ""
    GetBlockRequest_DigestTipAddress:
      allOf:
      - $ref: '#/components/schemas/ValueHolder'
      - description: "<p>The latest block location covered by the digest for which\
          \ to request a proof. An address is an Amazon Ion structure that has two\
          \ fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For\
          \ example: <code>{strandId:\"BlFTjlSXze9BIh1KOszcE3\",sequenceNo:49}</code>.</p>"
      example:
        IonText: ""
    GetRevisionRequest_BlockAddress:
      allOf:
      - $ref: '#/components/schemas/ValueHolder'
      - description: "<p>The block location of the document revision to be verified.\
          \ An address is an Amazon Ion structure that has two fields: <code>strandId</code>\
          \ and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:\"BlFTjlSXze9BIh1KOszcE3\"\
          ,sequenceNo:14}</code>.</p>"
      example:
        IonText: ""
    StreamJournalToKinesisRequest_KinesisConfiguration:
      allOf:
      - $ref: '#/components/schemas/KinesisConfiguration'
      - description: The configuration settings of the Kinesis Data Streams destination
          for your stream request.
      example:
        AggregationEnabled: ""
        StreamArn: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

