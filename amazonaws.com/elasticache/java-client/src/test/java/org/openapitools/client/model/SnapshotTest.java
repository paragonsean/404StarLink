/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutomaticFailoverStatus;
import org.openapitools.client.model.DataTieringStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Snapshot
 */
public class SnapshotTest {
    private final Snapshot model = new Snapshot();

    /**
     * Model tests for Snapshot
     */
    @Test
    public void testSnapshot() {
        // TODO: test Snapshot
    }

    /**
     * Test the property 'snapshotName'
     */
    @Test
    public void snapshotNameTest() {
        // TODO: test snapshotName
    }

    /**
     * Test the property 'replicationGroupId'
     */
    @Test
    public void replicationGroupIdTest() {
        // TODO: test replicationGroupId
    }

    /**
     * Test the property 'replicationGroupDescription'
     */
    @Test
    public void replicationGroupDescriptionTest() {
        // TODO: test replicationGroupDescription
    }

    /**
     * Test the property 'cacheClusterId'
     */
    @Test
    public void cacheClusterIdTest() {
        // TODO: test cacheClusterId
    }

    /**
     * Test the property 'snapshotStatus'
     */
    @Test
    public void snapshotStatusTest() {
        // TODO: test snapshotStatus
    }

    /**
     * Test the property 'snapshotSource'
     */
    @Test
    public void snapshotSourceTest() {
        // TODO: test snapshotSource
    }

    /**
     * Test the property 'cacheNodeType'
     */
    @Test
    public void cacheNodeTypeTest() {
        // TODO: test cacheNodeType
    }

    /**
     * Test the property 'engine'
     */
    @Test
    public void engineTest() {
        // TODO: test engine
    }

    /**
     * Test the property 'engineVersion'
     */
    @Test
    public void engineVersionTest() {
        // TODO: test engineVersion
    }

    /**
     * Test the property 'numCacheNodes'
     */
    @Test
    public void numCacheNodesTest() {
        // TODO: test numCacheNodes
    }

    /**
     * Test the property 'preferredAvailabilityZone'
     */
    @Test
    public void preferredAvailabilityZoneTest() {
        // TODO: test preferredAvailabilityZone
    }

    /**
     * Test the property 'preferredOutpostArn'
     */
    @Test
    public void preferredOutpostArnTest() {
        // TODO: test preferredOutpostArn
    }

    /**
     * Test the property 'cacheClusterCreateTime'
     */
    @Test
    public void cacheClusterCreateTimeTest() {
        // TODO: test cacheClusterCreateTime
    }

    /**
     * Test the property 'preferredMaintenanceWindow'
     */
    @Test
    public void preferredMaintenanceWindowTest() {
        // TODO: test preferredMaintenanceWindow
    }

    /**
     * Test the property 'topicArn'
     */
    @Test
    public void topicArnTest() {
        // TODO: test topicArn
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'cacheParameterGroupName'
     */
    @Test
    public void cacheParameterGroupNameTest() {
        // TODO: test cacheParameterGroupName
    }

    /**
     * Test the property 'cacheSubnetGroupName'
     */
    @Test
    public void cacheSubnetGroupNameTest() {
        // TODO: test cacheSubnetGroupName
    }

    /**
     * Test the property 'vpcId'
     */
    @Test
    public void vpcIdTest() {
        // TODO: test vpcId
    }

    /**
     * Test the property 'autoMinorVersionUpgrade'
     */
    @Test
    public void autoMinorVersionUpgradeTest() {
        // TODO: test autoMinorVersionUpgrade
    }

    /**
     * Test the property 'snapshotRetentionLimit'
     */
    @Test
    public void snapshotRetentionLimitTest() {
        // TODO: test snapshotRetentionLimit
    }

    /**
     * Test the property 'snapshotWindow'
     */
    @Test
    public void snapshotWindowTest() {
        // TODO: test snapshotWindow
    }

    /**
     * Test the property 'numNodeGroups'
     */
    @Test
    public void numNodeGroupsTest() {
        // TODO: test numNodeGroups
    }

    /**
     * Test the property 'automaticFailover'
     */
    @Test
    public void automaticFailoverTest() {
        // TODO: test automaticFailover
    }

    /**
     * Test the property 'nodeSnapshots'
     */
    @Test
    public void nodeSnapshotsTest() {
        // TODO: test nodeSnapshots
    }

    /**
     * Test the property 'kmsKeyId'
     */
    @Test
    public void kmsKeyIdTest() {
        // TODO: test kmsKeyId
    }

    /**
     * Test the property 'ARN'
     */
    @Test
    public void ARNTest() {
        // TODO: test ARN
    }

    /**
     * Test the property 'dataTiering'
     */
    @Test
    public void dataTieringTest() {
        // TODO: test dataTiering
    }

}
