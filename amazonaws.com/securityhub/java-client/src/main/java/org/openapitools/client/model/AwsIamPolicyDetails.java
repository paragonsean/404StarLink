/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an IAM permissions policy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:05:07.848040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsIamPolicyDetails {
  public static final String SERIALIZED_NAME_ATTACHMENT_COUNT = "AttachmentCount";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_COUNT)
  private Integer attachmentCount;

  public static final String SERIALIZED_NAME_CREATE_DATE = "CreateDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private String createDate;

  public static final String SERIALIZED_NAME_DEFAULT_VERSION_ID = "DefaultVersionId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VERSION_ID)
  private String defaultVersionId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IS_ATTACHABLE = "IsAttachable";
  @SerializedName(SERIALIZED_NAME_IS_ATTACHABLE)
  private Boolean isAttachable;

  public static final String SERIALIZED_NAME_PATH = "Path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_PERMISSIONS_BOUNDARY_USAGE_COUNT = "PermissionsBoundaryUsageCount";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS_BOUNDARY_USAGE_COUNT)
  private Integer permissionsBoundaryUsageCount;

  public static final String SERIALIZED_NAME_POLICY_ID = "PolicyId";
  @SerializedName(SERIALIZED_NAME_POLICY_ID)
  private String policyId;

  public static final String SERIALIZED_NAME_POLICY_NAME = "PolicyName";
  @SerializedName(SERIALIZED_NAME_POLICY_NAME)
  private String policyName;

  public static final String SERIALIZED_NAME_POLICY_VERSION_LIST = "PolicyVersionList";
  @SerializedName(SERIALIZED_NAME_POLICY_VERSION_LIST)
  private List policyVersionList;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "UpdateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private String updateDate;

  public AwsIamPolicyDetails() {
  }

  public AwsIamPolicyDetails attachmentCount(Integer attachmentCount) {
    this.attachmentCount = attachmentCount;
    return this;
  }

  /**
   * Get attachmentCount
   * @return attachmentCount
   */
  @javax.annotation.Nullable
  public Integer getAttachmentCount() {
    return attachmentCount;
  }

  public void setAttachmentCount(Integer attachmentCount) {
    this.attachmentCount = attachmentCount;
  }


  public AwsIamPolicyDetails createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }


  public AwsIamPolicyDetails defaultVersionId(String defaultVersionId) {
    this.defaultVersionId = defaultVersionId;
    return this;
  }

  /**
   * Get defaultVersionId
   * @return defaultVersionId
   */
  @javax.annotation.Nullable
  public String getDefaultVersionId() {
    return defaultVersionId;
  }

  public void setDefaultVersionId(String defaultVersionId) {
    this.defaultVersionId = defaultVersionId;
  }


  public AwsIamPolicyDetails description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AwsIamPolicyDetails isAttachable(Boolean isAttachable) {
    this.isAttachable = isAttachable;
    return this;
  }

  /**
   * Get isAttachable
   * @return isAttachable
   */
  @javax.annotation.Nullable
  public Boolean getIsAttachable() {
    return isAttachable;
  }

  public void setIsAttachable(Boolean isAttachable) {
    this.isAttachable = isAttachable;
  }


  public AwsIamPolicyDetails path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Get path
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  public AwsIamPolicyDetails permissionsBoundaryUsageCount(Integer permissionsBoundaryUsageCount) {
    this.permissionsBoundaryUsageCount = permissionsBoundaryUsageCount;
    return this;
  }

  /**
   * Get permissionsBoundaryUsageCount
   * @return permissionsBoundaryUsageCount
   */
  @javax.annotation.Nullable
  public Integer getPermissionsBoundaryUsageCount() {
    return permissionsBoundaryUsageCount;
  }

  public void setPermissionsBoundaryUsageCount(Integer permissionsBoundaryUsageCount) {
    this.permissionsBoundaryUsageCount = permissionsBoundaryUsageCount;
  }


  public AwsIamPolicyDetails policyId(String policyId) {
    this.policyId = policyId;
    return this;
  }

  /**
   * Get policyId
   * @return policyId
   */
  @javax.annotation.Nullable
  public String getPolicyId() {
    return policyId;
  }

  public void setPolicyId(String policyId) {
    this.policyId = policyId;
  }


  public AwsIamPolicyDetails policyName(String policyName) {
    this.policyName = policyName;
    return this;
  }

  /**
   * Get policyName
   * @return policyName
   */
  @javax.annotation.Nullable
  public String getPolicyName() {
    return policyName;
  }

  public void setPolicyName(String policyName) {
    this.policyName = policyName;
  }


  public AwsIamPolicyDetails policyVersionList(List policyVersionList) {
    this.policyVersionList = policyVersionList;
    return this;
  }

  /**
   * Get policyVersionList
   * @return policyVersionList
   */
  @javax.annotation.Nullable
  public List getPolicyVersionList() {
    return policyVersionList;
  }

  public void setPolicyVersionList(List policyVersionList) {
    this.policyVersionList = policyVersionList;
  }


  public AwsIamPolicyDetails updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get updateDate
   * @return updateDate
   */
  @javax.annotation.Nullable
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsIamPolicyDetails awsIamPolicyDetails = (AwsIamPolicyDetails) o;
    return Objects.equals(this.attachmentCount, awsIamPolicyDetails.attachmentCount) &&
        Objects.equals(this.createDate, awsIamPolicyDetails.createDate) &&
        Objects.equals(this.defaultVersionId, awsIamPolicyDetails.defaultVersionId) &&
        Objects.equals(this.description, awsIamPolicyDetails.description) &&
        Objects.equals(this.isAttachable, awsIamPolicyDetails.isAttachable) &&
        Objects.equals(this.path, awsIamPolicyDetails.path) &&
        Objects.equals(this.permissionsBoundaryUsageCount, awsIamPolicyDetails.permissionsBoundaryUsageCount) &&
        Objects.equals(this.policyId, awsIamPolicyDetails.policyId) &&
        Objects.equals(this.policyName, awsIamPolicyDetails.policyName) &&
        Objects.equals(this.policyVersionList, awsIamPolicyDetails.policyVersionList) &&
        Objects.equals(this.updateDate, awsIamPolicyDetails.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachmentCount, createDate, defaultVersionId, description, isAttachable, path, permissionsBoundaryUsageCount, policyId, policyName, policyVersionList, updateDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsIamPolicyDetails {\n");
    sb.append("    attachmentCount: ").append(toIndentedString(attachmentCount)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    defaultVersionId: ").append(toIndentedString(defaultVersionId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isAttachable: ").append(toIndentedString(isAttachable)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    permissionsBoundaryUsageCount: ").append(toIndentedString(permissionsBoundaryUsageCount)).append("\n");
    sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
    sb.append("    policyName: ").append(toIndentedString(policyName)).append("\n");
    sb.append("    policyVersionList: ").append(toIndentedString(policyVersionList)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AttachmentCount");
    openapiFields.add("CreateDate");
    openapiFields.add("DefaultVersionId");
    openapiFields.add("Description");
    openapiFields.add("IsAttachable");
    openapiFields.add("Path");
    openapiFields.add("PermissionsBoundaryUsageCount");
    openapiFields.add("PolicyId");
    openapiFields.add("PolicyName");
    openapiFields.add("PolicyVersionList");
    openapiFields.add("UpdateDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsIamPolicyDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsIamPolicyDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsIamPolicyDetails is not found in the empty JSON string", AwsIamPolicyDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsIamPolicyDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsIamPolicyDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AttachmentCount`
      if (jsonObj.get("AttachmentCount") != null && !jsonObj.get("AttachmentCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AttachmentCount"));
      }
      // validate the optional field `CreateDate`
      if (jsonObj.get("CreateDate") != null && !jsonObj.get("CreateDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreateDate"));
      }
      // validate the optional field `DefaultVersionId`
      if (jsonObj.get("DefaultVersionId") != null && !jsonObj.get("DefaultVersionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultVersionId"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `IsAttachable`
      if (jsonObj.get("IsAttachable") != null && !jsonObj.get("IsAttachable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsAttachable"));
      }
      // validate the optional field `Path`
      if (jsonObj.get("Path") != null && !jsonObj.get("Path").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Path"));
      }
      // validate the optional field `PermissionsBoundaryUsageCount`
      if (jsonObj.get("PermissionsBoundaryUsageCount") != null && !jsonObj.get("PermissionsBoundaryUsageCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PermissionsBoundaryUsageCount"));
      }
      // validate the optional field `PolicyId`
      if (jsonObj.get("PolicyId") != null && !jsonObj.get("PolicyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PolicyId"));
      }
      // validate the optional field `PolicyName`
      if (jsonObj.get("PolicyName") != null && !jsonObj.get("PolicyName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PolicyName"));
      }
      // validate the optional field `PolicyVersionList`
      if (jsonObj.get("PolicyVersionList") != null && !jsonObj.get("PolicyVersionList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PolicyVersionList"));
      }
      // validate the optional field `UpdateDate`
      if (jsonObj.get("UpdateDate") != null && !jsonObj.get("UpdateDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("UpdateDate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsIamPolicyDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsIamPolicyDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsIamPolicyDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsIamPolicyDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsIamPolicyDetails>() {
           @Override
           public void write(JsonWriter out, AwsIamPolicyDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsIamPolicyDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsIamPolicyDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsIamPolicyDetails
   * @throws IOException if the JSON string is invalid with respect to AwsIamPolicyDetails
   */
  public static AwsIamPolicyDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsIamPolicyDetails.class);
  }

  /**
   * Convert an instance of AwsIamPolicyDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

