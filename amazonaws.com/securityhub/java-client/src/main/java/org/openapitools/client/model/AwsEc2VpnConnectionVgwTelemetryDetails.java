/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the VPN tunnel.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:05:07.848040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsEc2VpnConnectionVgwTelemetryDetails {
  public static final String SERIALIZED_NAME_ACCEPTED_ROUTE_COUNT = "AcceptedRouteCount";
  @SerializedName(SERIALIZED_NAME_ACCEPTED_ROUTE_COUNT)
  private Integer acceptedRouteCount;

  public static final String SERIALIZED_NAME_CERTIFICATE_ARN = "CertificateArn";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ARN)
  private String certificateArn;

  public static final String SERIALIZED_NAME_LAST_STATUS_CHANGE = "LastStatusChange";
  @SerializedName(SERIALIZED_NAME_LAST_STATUS_CHANGE)
  private String lastStatusChange;

  public static final String SERIALIZED_NAME_OUTSIDE_IP_ADDRESS = "OutsideIpAddress";
  @SerializedName(SERIALIZED_NAME_OUTSIDE_IP_ADDRESS)
  private String outsideIpAddress;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public AwsEc2VpnConnectionVgwTelemetryDetails() {
  }

  public AwsEc2VpnConnectionVgwTelemetryDetails acceptedRouteCount(Integer acceptedRouteCount) {
    this.acceptedRouteCount = acceptedRouteCount;
    return this;
  }

  /**
   * Get acceptedRouteCount
   * @return acceptedRouteCount
   */
  @javax.annotation.Nullable
  public Integer getAcceptedRouteCount() {
    return acceptedRouteCount;
  }

  public void setAcceptedRouteCount(Integer acceptedRouteCount) {
    this.acceptedRouteCount = acceptedRouteCount;
  }


  public AwsEc2VpnConnectionVgwTelemetryDetails certificateArn(String certificateArn) {
    this.certificateArn = certificateArn;
    return this;
  }

  /**
   * Get certificateArn
   * @return certificateArn
   */
  @javax.annotation.Nullable
  public String getCertificateArn() {
    return certificateArn;
  }

  public void setCertificateArn(String certificateArn) {
    this.certificateArn = certificateArn;
  }


  public AwsEc2VpnConnectionVgwTelemetryDetails lastStatusChange(String lastStatusChange) {
    this.lastStatusChange = lastStatusChange;
    return this;
  }

  /**
   * Get lastStatusChange
   * @return lastStatusChange
   */
  @javax.annotation.Nullable
  public String getLastStatusChange() {
    return lastStatusChange;
  }

  public void setLastStatusChange(String lastStatusChange) {
    this.lastStatusChange = lastStatusChange;
  }


  public AwsEc2VpnConnectionVgwTelemetryDetails outsideIpAddress(String outsideIpAddress) {
    this.outsideIpAddress = outsideIpAddress;
    return this;
  }

  /**
   * Get outsideIpAddress
   * @return outsideIpAddress
   */
  @javax.annotation.Nullable
  public String getOutsideIpAddress() {
    return outsideIpAddress;
  }

  public void setOutsideIpAddress(String outsideIpAddress) {
    this.outsideIpAddress = outsideIpAddress;
  }


  public AwsEc2VpnConnectionVgwTelemetryDetails status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public AwsEc2VpnConnectionVgwTelemetryDetails statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsEc2VpnConnectionVgwTelemetryDetails awsEc2VpnConnectionVgwTelemetryDetails = (AwsEc2VpnConnectionVgwTelemetryDetails) o;
    return Objects.equals(this.acceptedRouteCount, awsEc2VpnConnectionVgwTelemetryDetails.acceptedRouteCount) &&
        Objects.equals(this.certificateArn, awsEc2VpnConnectionVgwTelemetryDetails.certificateArn) &&
        Objects.equals(this.lastStatusChange, awsEc2VpnConnectionVgwTelemetryDetails.lastStatusChange) &&
        Objects.equals(this.outsideIpAddress, awsEc2VpnConnectionVgwTelemetryDetails.outsideIpAddress) &&
        Objects.equals(this.status, awsEc2VpnConnectionVgwTelemetryDetails.status) &&
        Objects.equals(this.statusMessage, awsEc2VpnConnectionVgwTelemetryDetails.statusMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptedRouteCount, certificateArn, lastStatusChange, outsideIpAddress, status, statusMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsEc2VpnConnectionVgwTelemetryDetails {\n");
    sb.append("    acceptedRouteCount: ").append(toIndentedString(acceptedRouteCount)).append("\n");
    sb.append("    certificateArn: ").append(toIndentedString(certificateArn)).append("\n");
    sb.append("    lastStatusChange: ").append(toIndentedString(lastStatusChange)).append("\n");
    sb.append("    outsideIpAddress: ").append(toIndentedString(outsideIpAddress)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AcceptedRouteCount");
    openapiFields.add("CertificateArn");
    openapiFields.add("LastStatusChange");
    openapiFields.add("OutsideIpAddress");
    openapiFields.add("Status");
    openapiFields.add("StatusMessage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsEc2VpnConnectionVgwTelemetryDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsEc2VpnConnectionVgwTelemetryDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsEc2VpnConnectionVgwTelemetryDetails is not found in the empty JSON string", AwsEc2VpnConnectionVgwTelemetryDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsEc2VpnConnectionVgwTelemetryDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsEc2VpnConnectionVgwTelemetryDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AcceptedRouteCount`
      if (jsonObj.get("AcceptedRouteCount") != null && !jsonObj.get("AcceptedRouteCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AcceptedRouteCount"));
      }
      // validate the optional field `CertificateArn`
      if (jsonObj.get("CertificateArn") != null && !jsonObj.get("CertificateArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CertificateArn"));
      }
      // validate the optional field `LastStatusChange`
      if (jsonObj.get("LastStatusChange") != null && !jsonObj.get("LastStatusChange").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastStatusChange"));
      }
      // validate the optional field `OutsideIpAddress`
      if (jsonObj.get("OutsideIpAddress") != null && !jsonObj.get("OutsideIpAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutsideIpAddress"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsEc2VpnConnectionVgwTelemetryDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsEc2VpnConnectionVgwTelemetryDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsEc2VpnConnectionVgwTelemetryDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsEc2VpnConnectionVgwTelemetryDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsEc2VpnConnectionVgwTelemetryDetails>() {
           @Override
           public void write(JsonWriter out, AwsEc2VpnConnectionVgwTelemetryDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsEc2VpnConnectionVgwTelemetryDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsEc2VpnConnectionVgwTelemetryDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsEc2VpnConnectionVgwTelemetryDetails
   * @throws IOException if the JSON string is invalid with respect to AwsEc2VpnConnectionVgwTelemetryDetails
   */
  public static AwsEc2VpnConnectionVgwTelemetryDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsEc2VpnConnectionVgwTelemetryDetails.class);
  }

  /**
   * Convert an instance of AwsEc2VpnConnectionVgwTelemetryDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

