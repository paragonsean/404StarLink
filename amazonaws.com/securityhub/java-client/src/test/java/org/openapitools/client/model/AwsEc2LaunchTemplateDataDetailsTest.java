/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsCapacityReservationSpecification;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsCpuOptions;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsCreditSpecification;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsEnclaveOptions;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsHibernationOptions;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsIamInstanceProfile;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsInstanceMarketOptions;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsInstanceRequirements;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsMaintenanceOptions;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsMetadataOptions;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsMonitoring;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsPlacement;
import org.openapitools.client.model.AwsEc2LaunchTemplateDataDetailsPrivateDnsNameOptions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AwsEc2LaunchTemplateDataDetails
 */
public class AwsEc2LaunchTemplateDataDetailsTest {
    private final AwsEc2LaunchTemplateDataDetails model = new AwsEc2LaunchTemplateDataDetails();

    /**
     * Model tests for AwsEc2LaunchTemplateDataDetails
     */
    @Test
    public void testAwsEc2LaunchTemplateDataDetails() {
        // TODO: test AwsEc2LaunchTemplateDataDetails
    }

    /**
     * Test the property 'blockDeviceMappingSet'
     */
    @Test
    public void blockDeviceMappingSetTest() {
        // TODO: test blockDeviceMappingSet
    }

    /**
     * Test the property 'capacityReservationSpecification'
     */
    @Test
    public void capacityReservationSpecificationTest() {
        // TODO: test capacityReservationSpecification
    }

    /**
     * Test the property 'cpuOptions'
     */
    @Test
    public void cpuOptionsTest() {
        // TODO: test cpuOptions
    }

    /**
     * Test the property 'creditSpecification'
     */
    @Test
    public void creditSpecificationTest() {
        // TODO: test creditSpecification
    }

    /**
     * Test the property 'disableApiStop'
     */
    @Test
    public void disableApiStopTest() {
        // TODO: test disableApiStop
    }

    /**
     * Test the property 'disableApiTermination'
     */
    @Test
    public void disableApiTerminationTest() {
        // TODO: test disableApiTermination
    }

    /**
     * Test the property 'ebsOptimized'
     */
    @Test
    public void ebsOptimizedTest() {
        // TODO: test ebsOptimized
    }

    /**
     * Test the property 'elasticGpuSpecificationSet'
     */
    @Test
    public void elasticGpuSpecificationSetTest() {
        // TODO: test elasticGpuSpecificationSet
    }

    /**
     * Test the property 'elasticInferenceAcceleratorSet'
     */
    @Test
    public void elasticInferenceAcceleratorSetTest() {
        // TODO: test elasticInferenceAcceleratorSet
    }

    /**
     * Test the property 'enclaveOptions'
     */
    @Test
    public void enclaveOptionsTest() {
        // TODO: test enclaveOptions
    }

    /**
     * Test the property 'hibernationOptions'
     */
    @Test
    public void hibernationOptionsTest() {
        // TODO: test hibernationOptions
    }

    /**
     * Test the property 'iamInstanceProfile'
     */
    @Test
    public void iamInstanceProfileTest() {
        // TODO: test iamInstanceProfile
    }

    /**
     * Test the property 'imageId'
     */
    @Test
    public void imageIdTest() {
        // TODO: test imageId
    }

    /**
     * Test the property 'instanceInitiatedShutdownBehavior'
     */
    @Test
    public void instanceInitiatedShutdownBehaviorTest() {
        // TODO: test instanceInitiatedShutdownBehavior
    }

    /**
     * Test the property 'instanceMarketOptions'
     */
    @Test
    public void instanceMarketOptionsTest() {
        // TODO: test instanceMarketOptions
    }

    /**
     * Test the property 'instanceRequirements'
     */
    @Test
    public void instanceRequirementsTest() {
        // TODO: test instanceRequirements
    }

    /**
     * Test the property 'instanceType'
     */
    @Test
    public void instanceTypeTest() {
        // TODO: test instanceType
    }

    /**
     * Test the property 'kernelId'
     */
    @Test
    public void kernelIdTest() {
        // TODO: test kernelId
    }

    /**
     * Test the property 'keyName'
     */
    @Test
    public void keyNameTest() {
        // TODO: test keyName
    }

    /**
     * Test the property 'licenseSet'
     */
    @Test
    public void licenseSetTest() {
        // TODO: test licenseSet
    }

    /**
     * Test the property 'maintenanceOptions'
     */
    @Test
    public void maintenanceOptionsTest() {
        // TODO: test maintenanceOptions
    }

    /**
     * Test the property 'metadataOptions'
     */
    @Test
    public void metadataOptionsTest() {
        // TODO: test metadataOptions
    }

    /**
     * Test the property 'monitoring'
     */
    @Test
    public void monitoringTest() {
        // TODO: test monitoring
    }

    /**
     * Test the property 'networkInterfaceSet'
     */
    @Test
    public void networkInterfaceSetTest() {
        // TODO: test networkInterfaceSet
    }

    /**
     * Test the property 'placement'
     */
    @Test
    public void placementTest() {
        // TODO: test placement
    }

    /**
     * Test the property 'privateDnsNameOptions'
     */
    @Test
    public void privateDnsNameOptionsTest() {
        // TODO: test privateDnsNameOptions
    }

    /**
     * Test the property 'ramDiskId'
     */
    @Test
    public void ramDiskIdTest() {
        // TODO: test ramDiskId
    }

    /**
     * Test the property 'securityGroupIdSet'
     */
    @Test
    public void securityGroupIdSetTest() {
        // TODO: test securityGroupIdSet
    }

    /**
     * Test the property 'securityGroupSet'
     */
    @Test
    public void securityGroupSetTest() {
        // TODO: test securityGroupSet
    }

    /**
     * Test the property 'userData'
     */
    @Test
    public void userDataTest() {
        // TODO: test userData
    }

}
