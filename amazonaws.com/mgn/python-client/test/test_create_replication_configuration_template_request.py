# coding: utf-8

"""
    Application Migration Service

    The Application Migration Service service.

    The version of the OpenAPI document: 2020-02-26
    Contact: mike.ralphson@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_replication_configuration_template_request import CreateReplicationConfigurationTemplateRequest

class TestCreateReplicationConfigurationTemplateRequest(unittest.TestCase):
    """CreateReplicationConfigurationTemplateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateReplicationConfigurationTemplateRequest:
        """Test CreateReplicationConfigurationTemplateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateReplicationConfigurationTemplateRequest`
        """
        model = CreateReplicationConfigurationTemplateRequest()
        if include_optional:
            return CreateReplicationConfigurationTemplateRequest(
                associate_default_security_group = True,
                bandwidth_throttling = 0,
                create_public_ip = True,
                data_plane_routing = 'PRIVATE_IP',
                default_large_staging_disk_type = 'GP2',
                ebs_encryption = 'DEFAULT',
                ebs_encryption_key_arn = '012345678910111213141516171819',
                replication_server_instance_type = '',
                replication_servers_security_groups_ids = [
                    ''
                    ],
                staging_area_subnet_id = '',
                staging_area_tags = {
                    'key' : ''
                    },
                tags = {
                    'key' : ''
                    },
                use_dedicated_replication_server = True
            )
        else:
            return CreateReplicationConfigurationTemplateRequest(
                associate_default_security_group = True,
                bandwidth_throttling = 0,
                create_public_ip = True,
                data_plane_routing = 'PRIVATE_IP',
                default_large_staging_disk_type = 'GP2',
                ebs_encryption = 'DEFAULT',
                replication_server_instance_type = '',
                replication_servers_security_groups_ids = [
                    ''
                    ],
                staging_area_subnet_id = '',
                staging_area_tags = {
                    'key' : ''
                    },
                use_dedicated_replication_server = True,
        )
        """

    def testCreateReplicationConfigurationTemplateRequest(self):
        """Test CreateReplicationConfigurationTemplateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
