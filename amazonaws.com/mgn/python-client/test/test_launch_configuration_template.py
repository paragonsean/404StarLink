# coding: utf-8

"""
    Application Migration Service

    The Application Migration Service service.

    The version of the OpenAPI document: 2020-02-26
    Contact: mike.ralphson@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.launch_configuration_template import LaunchConfigurationTemplate

class TestLaunchConfigurationTemplate(unittest.TestCase):
    """LaunchConfigurationTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LaunchConfigurationTemplate:
        """Test LaunchConfigurationTemplate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LaunchConfigurationTemplate`
        """
        model = LaunchConfigurationTemplate()
        if include_optional:
            return LaunchConfigurationTemplate(
                arn = None,
                associate_public_ip_address = None,
                boot_mode = None,
                copy_private_ip = None,
                copy_tags = None,
                ec2_launch_template_id = None,
                enable_map_auto_tagging = None,
                large_volume_conf = None,
                launch_configuration_template_id = None,
                launch_disposition = None,
                licensing = openapi_client.models.licensing.Licensing(
                    os_byol = null, ),
                map_auto_tagging_mpe_id = None,
                post_launch_actions = None,
                small_volume_conf = None,
                small_volume_max_size = None,
                tags = None,
                target_instance_type_right_sizing_method = None
            )
        else:
            return LaunchConfigurationTemplate(
                launch_configuration_template_id = None,
        )
        """

    def testLaunchConfigurationTemplate(self):
        """Test LaunchConfigurationTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
