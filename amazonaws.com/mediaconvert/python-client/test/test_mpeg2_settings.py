# coding: utf-8

"""
    AWS Elemental MediaConvert

    AWS Elemental MediaConvert

    The version of the OpenAPI document: 2017-08-29
    Contact: mike.ralphson@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mpeg2_settings import Mpeg2Settings

class TestMpeg2Settings(unittest.TestCase):
    """Mpeg2Settings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Mpeg2Settings:
        """Test Mpeg2Settings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Mpeg2Settings`
        """
        model = Mpeg2Settings()
        if include_optional:
            return Mpeg2Settings(
                adaptive_quantization = None,
                bitrate = None,
                codec_level = None,
                codec_profile = None,
                dynamic_sub_gop = None,
                framerate_control = None,
                framerate_conversion_algorithm = None,
                framerate_denominator = None,
                framerate_numerator = None,
                gop_closed_cadence = None,
                gop_size = None,
                gop_size_units = None,
                hrd_buffer_final_fill_percentage = None,
                hrd_buffer_initial_fill_percentage = None,
                hrd_buffer_size = None,
                interlace_mode = None,
                intra_dc_precision = None,
                max_bitrate = None,
                min_i_interval = None,
                number_b_frames_between_reference_frames = None,
                par_control = None,
                par_denominator = None,
                par_numerator = None,
                quality_tuning_level = None,
                rate_control_mode = None,
                scan_type_conversion_mode = None,
                scene_change_detect = None,
                slow_pal = None,
                softness = None,
                spatial_adaptive_quantization = None,
                syntax = None,
                telecine = None,
                temporal_adaptive_quantization = None
            )
        else:
            return Mpeg2Settings(
        )
        """

    def testMpeg2Settings(self):
        """Test Mpeg2Settings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
