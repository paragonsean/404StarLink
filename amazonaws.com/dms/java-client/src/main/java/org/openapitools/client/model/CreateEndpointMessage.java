/*
 * AWS Database Migration Service
 * <fullname>Database Migration Service</fullname> <p>Database Migration Service (DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is Database Migration Service?</a> in the <i>Database Migration Service User Guide.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateEndpointMessageDmsTransferSettings;
import org.openapitools.client.model.CreateEndpointMessageDynamoDbSettings;
import org.openapitools.client.model.CreateEndpointMessageElasticsearchSettings;
import org.openapitools.client.model.CreateEndpointMessageGcpMySQLSettings;
import org.openapitools.client.model.CreateEndpointMessageIBMDb2Settings;
import org.openapitools.client.model.CreateEndpointMessageKafkaSettings;
import org.openapitools.client.model.CreateEndpointMessageKinesisSettings;
import org.openapitools.client.model.CreateEndpointMessageMicrosoftSQLServerSettings;
import org.openapitools.client.model.CreateEndpointMessageMongoDbSettings;
import org.openapitools.client.model.CreateEndpointMessageMySQLSettings;
import org.openapitools.client.model.CreateEndpointMessageNeptuneSettings;
import org.openapitools.client.model.CreateEndpointMessageOracleSettings;
import org.openapitools.client.model.CreateEndpointMessagePostgreSQLSettings;
import org.openapitools.client.model.CreateEndpointMessageRedisSettings;
import org.openapitools.client.model.CreateEndpointMessageS3Settings;
import org.openapitools.client.model.CreateEndpointMessageSybaseSettings;
import org.openapitools.client.model.DmsSslModeValue;
import org.openapitools.client.model.DocDbSettings;
import org.openapitools.client.model.RedshiftSettings;
import org.openapitools.client.model.ReplicationEndpointTypeValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p/&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:13:34.502814-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateEndpointMessage {
  public static final String SERIALIZED_NAME_ENDPOINT_IDENTIFIER = "EndpointIdentifier";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_IDENTIFIER)
  private String endpointIdentifier;

  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "EndpointType";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private ReplicationEndpointTypeValue endpointType;

  public static final String SERIALIZED_NAME_ENGINE_NAME = "EngineName";
  @SerializedName(SERIALIZED_NAME_ENGINE_NAME)
  private String engineName;

  public static final String SERIALIZED_NAME_USERNAME = "Username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD = "Password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_SERVER_NAME = "ServerName";
  @SerializedName(SERIALIZED_NAME_SERVER_NAME)
  private String serverName;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_DATABASE_NAME = "DatabaseName";
  @SerializedName(SERIALIZED_NAME_DATABASE_NAME)
  private String databaseName;

  public static final String SERIALIZED_NAME_EXTRA_CONNECTION_ATTRIBUTES = "ExtraConnectionAttributes";
  @SerializedName(SERIALIZED_NAME_EXTRA_CONNECTION_ATTRIBUTES)
  private String extraConnectionAttributes;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_CERTIFICATE_ARN = "CertificateArn";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ARN)
  private String certificateArn;

  public static final String SERIALIZED_NAME_SSL_MODE = "SslMode";
  @SerializedName(SERIALIZED_NAME_SSL_MODE)
  private DmsSslModeValue sslMode;

  public static final String SERIALIZED_NAME_SERVICE_ACCESS_ROLE_ARN = "ServiceAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCESS_ROLE_ARN)
  private String serviceAccessRoleArn;

  public static final String SERIALIZED_NAME_EXTERNAL_TABLE_DEFINITION = "ExternalTableDefinition";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_TABLE_DEFINITION)
  private String externalTableDefinition;

  public static final String SERIALIZED_NAME_DYNAMO_DB_SETTINGS = "DynamoDbSettings";
  @SerializedName(SERIALIZED_NAME_DYNAMO_DB_SETTINGS)
  private CreateEndpointMessageDynamoDbSettings dynamoDbSettings;

  public static final String SERIALIZED_NAME_S3_SETTINGS = "S3Settings";
  @SerializedName(SERIALIZED_NAME_S3_SETTINGS)
  private CreateEndpointMessageS3Settings s3Settings;

  public static final String SERIALIZED_NAME_DMS_TRANSFER_SETTINGS = "DmsTransferSettings";
  @SerializedName(SERIALIZED_NAME_DMS_TRANSFER_SETTINGS)
  private CreateEndpointMessageDmsTransferSettings dmsTransferSettings;

  public static final String SERIALIZED_NAME_MONGO_DB_SETTINGS = "MongoDbSettings";
  @SerializedName(SERIALIZED_NAME_MONGO_DB_SETTINGS)
  private CreateEndpointMessageMongoDbSettings mongoDbSettings;

  public static final String SERIALIZED_NAME_KINESIS_SETTINGS = "KinesisSettings";
  @SerializedName(SERIALIZED_NAME_KINESIS_SETTINGS)
  private CreateEndpointMessageKinesisSettings kinesisSettings;

  public static final String SERIALIZED_NAME_KAFKA_SETTINGS = "KafkaSettings";
  @SerializedName(SERIALIZED_NAME_KAFKA_SETTINGS)
  private CreateEndpointMessageKafkaSettings kafkaSettings;

  public static final String SERIALIZED_NAME_ELASTICSEARCH_SETTINGS = "ElasticsearchSettings";
  @SerializedName(SERIALIZED_NAME_ELASTICSEARCH_SETTINGS)
  private CreateEndpointMessageElasticsearchSettings elasticsearchSettings;

  public static final String SERIALIZED_NAME_NEPTUNE_SETTINGS = "NeptuneSettings";
  @SerializedName(SERIALIZED_NAME_NEPTUNE_SETTINGS)
  private CreateEndpointMessageNeptuneSettings neptuneSettings;

  public static final String SERIALIZED_NAME_REDSHIFT_SETTINGS = "RedshiftSettings";
  @SerializedName(SERIALIZED_NAME_REDSHIFT_SETTINGS)
  private RedshiftSettings redshiftSettings;

  public static final String SERIALIZED_NAME_POSTGRE_S_Q_L_SETTINGS = "PostgreSQLSettings";
  @SerializedName(SERIALIZED_NAME_POSTGRE_S_Q_L_SETTINGS)
  private CreateEndpointMessagePostgreSQLSettings postgreSQLSettings;

  public static final String SERIALIZED_NAME_MY_S_Q_L_SETTINGS = "MySQLSettings";
  @SerializedName(SERIALIZED_NAME_MY_S_Q_L_SETTINGS)
  private CreateEndpointMessageMySQLSettings mySQLSettings;

  public static final String SERIALIZED_NAME_ORACLE_SETTINGS = "OracleSettings";
  @SerializedName(SERIALIZED_NAME_ORACLE_SETTINGS)
  private CreateEndpointMessageOracleSettings oracleSettings;

  public static final String SERIALIZED_NAME_SYBASE_SETTINGS = "SybaseSettings";
  @SerializedName(SERIALIZED_NAME_SYBASE_SETTINGS)
  private CreateEndpointMessageSybaseSettings sybaseSettings;

  public static final String SERIALIZED_NAME_MICROSOFT_S_Q_L_SERVER_SETTINGS = "MicrosoftSQLServerSettings";
  @SerializedName(SERIALIZED_NAME_MICROSOFT_S_Q_L_SERVER_SETTINGS)
  private CreateEndpointMessageMicrosoftSQLServerSettings microsoftSQLServerSettings;

  public static final String SERIALIZED_NAME_IB_M_DB2_SETTINGS = "IBMDb2Settings";
  @SerializedName(SERIALIZED_NAME_IB_M_DB2_SETTINGS)
  private CreateEndpointMessageIBMDb2Settings ibMDb2Settings;

  public static final String SERIALIZED_NAME_RESOURCE_IDENTIFIER = "ResourceIdentifier";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IDENTIFIER)
  private String resourceIdentifier;

  public static final String SERIALIZED_NAME_DOC_DB_SETTINGS = "DocDbSettings";
  @SerializedName(SERIALIZED_NAME_DOC_DB_SETTINGS)
  private DocDbSettings docDbSettings;

  public static final String SERIALIZED_NAME_REDIS_SETTINGS = "RedisSettings";
  @SerializedName(SERIALIZED_NAME_REDIS_SETTINGS)
  private CreateEndpointMessageRedisSettings redisSettings;

  public static final String SERIALIZED_NAME_GCP_MY_S_Q_L_SETTINGS = "GcpMySQLSettings";
  @SerializedName(SERIALIZED_NAME_GCP_MY_S_Q_L_SETTINGS)
  private CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings;

  public CreateEndpointMessage() {
  }

  public CreateEndpointMessage endpointIdentifier(String endpointIdentifier) {
    this.endpointIdentifier = endpointIdentifier;
    return this;
  }

  /**
   * Get endpointIdentifier
   * @return endpointIdentifier
   */
  @javax.annotation.Nonnull
  public String getEndpointIdentifier() {
    return endpointIdentifier;
  }

  public void setEndpointIdentifier(String endpointIdentifier) {
    this.endpointIdentifier = endpointIdentifier;
  }


  public CreateEndpointMessage endpointType(ReplicationEndpointTypeValue endpointType) {
    this.endpointType = endpointType;
    return this;
  }

  /**
   * Get endpointType
   * @return endpointType
   */
  @javax.annotation.Nonnull
  public ReplicationEndpointTypeValue getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(ReplicationEndpointTypeValue endpointType) {
    this.endpointType = endpointType;
  }


  public CreateEndpointMessage engineName(String engineName) {
    this.engineName = engineName;
    return this;
  }

  /**
   * Get engineName
   * @return engineName
   */
  @javax.annotation.Nonnull
  public String getEngineName() {
    return engineName;
  }

  public void setEngineName(String engineName) {
    this.engineName = engineName;
  }


  public CreateEndpointMessage username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  public CreateEndpointMessage password(String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  public CreateEndpointMessage serverName(String serverName) {
    this.serverName = serverName;
    return this;
  }

  /**
   * Get serverName
   * @return serverName
   */
  @javax.annotation.Nullable
  public String getServerName() {
    return serverName;
  }

  public void setServerName(String serverName) {
    this.serverName = serverName;
  }


  public CreateEndpointMessage port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public CreateEndpointMessage databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

  /**
   * Get databaseName
   * @return databaseName
   */
  @javax.annotation.Nullable
  public String getDatabaseName() {
    return databaseName;
  }

  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }


  public CreateEndpointMessage extraConnectionAttributes(String extraConnectionAttributes) {
    this.extraConnectionAttributes = extraConnectionAttributes;
    return this;
  }

  /**
   * Get extraConnectionAttributes
   * @return extraConnectionAttributes
   */
  @javax.annotation.Nullable
  public String getExtraConnectionAttributes() {
    return extraConnectionAttributes;
  }

  public void setExtraConnectionAttributes(String extraConnectionAttributes) {
    this.extraConnectionAttributes = extraConnectionAttributes;
  }


  public CreateEndpointMessage kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public CreateEndpointMessage tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateEndpointMessage certificateArn(String certificateArn) {
    this.certificateArn = certificateArn;
    return this;
  }

  /**
   * Get certificateArn
   * @return certificateArn
   */
  @javax.annotation.Nullable
  public String getCertificateArn() {
    return certificateArn;
  }

  public void setCertificateArn(String certificateArn) {
    this.certificateArn = certificateArn;
  }


  public CreateEndpointMessage sslMode(DmsSslModeValue sslMode) {
    this.sslMode = sslMode;
    return this;
  }

  /**
   * Get sslMode
   * @return sslMode
   */
  @javax.annotation.Nullable
  public DmsSslModeValue getSslMode() {
    return sslMode;
  }

  public void setSslMode(DmsSslModeValue sslMode) {
    this.sslMode = sslMode;
  }


  public CreateEndpointMessage serviceAccessRoleArn(String serviceAccessRoleArn) {
    this.serviceAccessRoleArn = serviceAccessRoleArn;
    return this;
  }

  /**
   * Get serviceAccessRoleArn
   * @return serviceAccessRoleArn
   */
  @javax.annotation.Nullable
  public String getServiceAccessRoleArn() {
    return serviceAccessRoleArn;
  }

  public void setServiceAccessRoleArn(String serviceAccessRoleArn) {
    this.serviceAccessRoleArn = serviceAccessRoleArn;
  }


  public CreateEndpointMessage externalTableDefinition(String externalTableDefinition) {
    this.externalTableDefinition = externalTableDefinition;
    return this;
  }

  /**
   * Get externalTableDefinition
   * @return externalTableDefinition
   */
  @javax.annotation.Nullable
  public String getExternalTableDefinition() {
    return externalTableDefinition;
  }

  public void setExternalTableDefinition(String externalTableDefinition) {
    this.externalTableDefinition = externalTableDefinition;
  }


  public CreateEndpointMessage dynamoDbSettings(CreateEndpointMessageDynamoDbSettings dynamoDbSettings) {
    this.dynamoDbSettings = dynamoDbSettings;
    return this;
  }

  /**
   * Get dynamoDbSettings
   * @return dynamoDbSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageDynamoDbSettings getDynamoDbSettings() {
    return dynamoDbSettings;
  }

  public void setDynamoDbSettings(CreateEndpointMessageDynamoDbSettings dynamoDbSettings) {
    this.dynamoDbSettings = dynamoDbSettings;
  }


  public CreateEndpointMessage s3Settings(CreateEndpointMessageS3Settings s3Settings) {
    this.s3Settings = s3Settings;
    return this;
  }

  /**
   * Get s3Settings
   * @return s3Settings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageS3Settings getS3Settings() {
    return s3Settings;
  }

  public void setS3Settings(CreateEndpointMessageS3Settings s3Settings) {
    this.s3Settings = s3Settings;
  }


  public CreateEndpointMessage dmsTransferSettings(CreateEndpointMessageDmsTransferSettings dmsTransferSettings) {
    this.dmsTransferSettings = dmsTransferSettings;
    return this;
  }

  /**
   * Get dmsTransferSettings
   * @return dmsTransferSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageDmsTransferSettings getDmsTransferSettings() {
    return dmsTransferSettings;
  }

  public void setDmsTransferSettings(CreateEndpointMessageDmsTransferSettings dmsTransferSettings) {
    this.dmsTransferSettings = dmsTransferSettings;
  }


  public CreateEndpointMessage mongoDbSettings(CreateEndpointMessageMongoDbSettings mongoDbSettings) {
    this.mongoDbSettings = mongoDbSettings;
    return this;
  }

  /**
   * Get mongoDbSettings
   * @return mongoDbSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageMongoDbSettings getMongoDbSettings() {
    return mongoDbSettings;
  }

  public void setMongoDbSettings(CreateEndpointMessageMongoDbSettings mongoDbSettings) {
    this.mongoDbSettings = mongoDbSettings;
  }


  public CreateEndpointMessage kinesisSettings(CreateEndpointMessageKinesisSettings kinesisSettings) {
    this.kinesisSettings = kinesisSettings;
    return this;
  }

  /**
   * Get kinesisSettings
   * @return kinesisSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageKinesisSettings getKinesisSettings() {
    return kinesisSettings;
  }

  public void setKinesisSettings(CreateEndpointMessageKinesisSettings kinesisSettings) {
    this.kinesisSettings = kinesisSettings;
  }


  public CreateEndpointMessage kafkaSettings(CreateEndpointMessageKafkaSettings kafkaSettings) {
    this.kafkaSettings = kafkaSettings;
    return this;
  }

  /**
   * Get kafkaSettings
   * @return kafkaSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageKafkaSettings getKafkaSettings() {
    return kafkaSettings;
  }

  public void setKafkaSettings(CreateEndpointMessageKafkaSettings kafkaSettings) {
    this.kafkaSettings = kafkaSettings;
  }


  public CreateEndpointMessage elasticsearchSettings(CreateEndpointMessageElasticsearchSettings elasticsearchSettings) {
    this.elasticsearchSettings = elasticsearchSettings;
    return this;
  }

  /**
   * Get elasticsearchSettings
   * @return elasticsearchSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageElasticsearchSettings getElasticsearchSettings() {
    return elasticsearchSettings;
  }

  public void setElasticsearchSettings(CreateEndpointMessageElasticsearchSettings elasticsearchSettings) {
    this.elasticsearchSettings = elasticsearchSettings;
  }


  public CreateEndpointMessage neptuneSettings(CreateEndpointMessageNeptuneSettings neptuneSettings) {
    this.neptuneSettings = neptuneSettings;
    return this;
  }

  /**
   * Get neptuneSettings
   * @return neptuneSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageNeptuneSettings getNeptuneSettings() {
    return neptuneSettings;
  }

  public void setNeptuneSettings(CreateEndpointMessageNeptuneSettings neptuneSettings) {
    this.neptuneSettings = neptuneSettings;
  }


  public CreateEndpointMessage redshiftSettings(RedshiftSettings redshiftSettings) {
    this.redshiftSettings = redshiftSettings;
    return this;
  }

  /**
   * Get redshiftSettings
   * @return redshiftSettings
   */
  @javax.annotation.Nullable
  public RedshiftSettings getRedshiftSettings() {
    return redshiftSettings;
  }

  public void setRedshiftSettings(RedshiftSettings redshiftSettings) {
    this.redshiftSettings = redshiftSettings;
  }


  public CreateEndpointMessage postgreSQLSettings(CreateEndpointMessagePostgreSQLSettings postgreSQLSettings) {
    this.postgreSQLSettings = postgreSQLSettings;
    return this;
  }

  /**
   * Get postgreSQLSettings
   * @return postgreSQLSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessagePostgreSQLSettings getPostgreSQLSettings() {
    return postgreSQLSettings;
  }

  public void setPostgreSQLSettings(CreateEndpointMessagePostgreSQLSettings postgreSQLSettings) {
    this.postgreSQLSettings = postgreSQLSettings;
  }


  public CreateEndpointMessage mySQLSettings(CreateEndpointMessageMySQLSettings mySQLSettings) {
    this.mySQLSettings = mySQLSettings;
    return this;
  }

  /**
   * Get mySQLSettings
   * @return mySQLSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageMySQLSettings getMySQLSettings() {
    return mySQLSettings;
  }

  public void setMySQLSettings(CreateEndpointMessageMySQLSettings mySQLSettings) {
    this.mySQLSettings = mySQLSettings;
  }


  public CreateEndpointMessage oracleSettings(CreateEndpointMessageOracleSettings oracleSettings) {
    this.oracleSettings = oracleSettings;
    return this;
  }

  /**
   * Get oracleSettings
   * @return oracleSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageOracleSettings getOracleSettings() {
    return oracleSettings;
  }

  public void setOracleSettings(CreateEndpointMessageOracleSettings oracleSettings) {
    this.oracleSettings = oracleSettings;
  }


  public CreateEndpointMessage sybaseSettings(CreateEndpointMessageSybaseSettings sybaseSettings) {
    this.sybaseSettings = sybaseSettings;
    return this;
  }

  /**
   * Get sybaseSettings
   * @return sybaseSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageSybaseSettings getSybaseSettings() {
    return sybaseSettings;
  }

  public void setSybaseSettings(CreateEndpointMessageSybaseSettings sybaseSettings) {
    this.sybaseSettings = sybaseSettings;
  }


  public CreateEndpointMessage microsoftSQLServerSettings(CreateEndpointMessageMicrosoftSQLServerSettings microsoftSQLServerSettings) {
    this.microsoftSQLServerSettings = microsoftSQLServerSettings;
    return this;
  }

  /**
   * Get microsoftSQLServerSettings
   * @return microsoftSQLServerSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageMicrosoftSQLServerSettings getMicrosoftSQLServerSettings() {
    return microsoftSQLServerSettings;
  }

  public void setMicrosoftSQLServerSettings(CreateEndpointMessageMicrosoftSQLServerSettings microsoftSQLServerSettings) {
    this.microsoftSQLServerSettings = microsoftSQLServerSettings;
  }


  public CreateEndpointMessage ibMDb2Settings(CreateEndpointMessageIBMDb2Settings ibMDb2Settings) {
    this.ibMDb2Settings = ibMDb2Settings;
    return this;
  }

  /**
   * Get ibMDb2Settings
   * @return ibMDb2Settings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageIBMDb2Settings getIbMDb2Settings() {
    return ibMDb2Settings;
  }

  public void setIbMDb2Settings(CreateEndpointMessageIBMDb2Settings ibMDb2Settings) {
    this.ibMDb2Settings = ibMDb2Settings;
  }


  public CreateEndpointMessage resourceIdentifier(String resourceIdentifier) {
    this.resourceIdentifier = resourceIdentifier;
    return this;
  }

  /**
   * Get resourceIdentifier
   * @return resourceIdentifier
   */
  @javax.annotation.Nullable
  public String getResourceIdentifier() {
    return resourceIdentifier;
  }

  public void setResourceIdentifier(String resourceIdentifier) {
    this.resourceIdentifier = resourceIdentifier;
  }


  public CreateEndpointMessage docDbSettings(DocDbSettings docDbSettings) {
    this.docDbSettings = docDbSettings;
    return this;
  }

  /**
   * Get docDbSettings
   * @return docDbSettings
   */
  @javax.annotation.Nullable
  public DocDbSettings getDocDbSettings() {
    return docDbSettings;
  }

  public void setDocDbSettings(DocDbSettings docDbSettings) {
    this.docDbSettings = docDbSettings;
  }


  public CreateEndpointMessage redisSettings(CreateEndpointMessageRedisSettings redisSettings) {
    this.redisSettings = redisSettings;
    return this;
  }

  /**
   * Get redisSettings
   * @return redisSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageRedisSettings getRedisSettings() {
    return redisSettings;
  }

  public void setRedisSettings(CreateEndpointMessageRedisSettings redisSettings) {
    this.redisSettings = redisSettings;
  }


  public CreateEndpointMessage gcpMySQLSettings(CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings) {
    this.gcpMySQLSettings = gcpMySQLSettings;
    return this;
  }

  /**
   * Get gcpMySQLSettings
   * @return gcpMySQLSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageGcpMySQLSettings getGcpMySQLSettings() {
    return gcpMySQLSettings;
  }

  public void setGcpMySQLSettings(CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings) {
    this.gcpMySQLSettings = gcpMySQLSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEndpointMessage createEndpointMessage = (CreateEndpointMessage) o;
    return Objects.equals(this.endpointIdentifier, createEndpointMessage.endpointIdentifier) &&
        Objects.equals(this.endpointType, createEndpointMessage.endpointType) &&
        Objects.equals(this.engineName, createEndpointMessage.engineName) &&
        Objects.equals(this.username, createEndpointMessage.username) &&
        Objects.equals(this.password, createEndpointMessage.password) &&
        Objects.equals(this.serverName, createEndpointMessage.serverName) &&
        Objects.equals(this.port, createEndpointMessage.port) &&
        Objects.equals(this.databaseName, createEndpointMessage.databaseName) &&
        Objects.equals(this.extraConnectionAttributes, createEndpointMessage.extraConnectionAttributes) &&
        Objects.equals(this.kmsKeyId, createEndpointMessage.kmsKeyId) &&
        Objects.equals(this.tags, createEndpointMessage.tags) &&
        Objects.equals(this.certificateArn, createEndpointMessage.certificateArn) &&
        Objects.equals(this.sslMode, createEndpointMessage.sslMode) &&
        Objects.equals(this.serviceAccessRoleArn, createEndpointMessage.serviceAccessRoleArn) &&
        Objects.equals(this.externalTableDefinition, createEndpointMessage.externalTableDefinition) &&
        Objects.equals(this.dynamoDbSettings, createEndpointMessage.dynamoDbSettings) &&
        Objects.equals(this.s3Settings, createEndpointMessage.s3Settings) &&
        Objects.equals(this.dmsTransferSettings, createEndpointMessage.dmsTransferSettings) &&
        Objects.equals(this.mongoDbSettings, createEndpointMessage.mongoDbSettings) &&
        Objects.equals(this.kinesisSettings, createEndpointMessage.kinesisSettings) &&
        Objects.equals(this.kafkaSettings, createEndpointMessage.kafkaSettings) &&
        Objects.equals(this.elasticsearchSettings, createEndpointMessage.elasticsearchSettings) &&
        Objects.equals(this.neptuneSettings, createEndpointMessage.neptuneSettings) &&
        Objects.equals(this.redshiftSettings, createEndpointMessage.redshiftSettings) &&
        Objects.equals(this.postgreSQLSettings, createEndpointMessage.postgreSQLSettings) &&
        Objects.equals(this.mySQLSettings, createEndpointMessage.mySQLSettings) &&
        Objects.equals(this.oracleSettings, createEndpointMessage.oracleSettings) &&
        Objects.equals(this.sybaseSettings, createEndpointMessage.sybaseSettings) &&
        Objects.equals(this.microsoftSQLServerSettings, createEndpointMessage.microsoftSQLServerSettings) &&
        Objects.equals(this.ibMDb2Settings, createEndpointMessage.ibMDb2Settings) &&
        Objects.equals(this.resourceIdentifier, createEndpointMessage.resourceIdentifier) &&
        Objects.equals(this.docDbSettings, createEndpointMessage.docDbSettings) &&
        Objects.equals(this.redisSettings, createEndpointMessage.redisSettings) &&
        Objects.equals(this.gcpMySQLSettings, createEndpointMessage.gcpMySQLSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointIdentifier, endpointType, engineName, username, password, serverName, port, databaseName, extraConnectionAttributes, kmsKeyId, tags, certificateArn, sslMode, serviceAccessRoleArn, externalTableDefinition, dynamoDbSettings, s3Settings, dmsTransferSettings, mongoDbSettings, kinesisSettings, kafkaSettings, elasticsearchSettings, neptuneSettings, redshiftSettings, postgreSQLSettings, mySQLSettings, oracleSettings, sybaseSettings, microsoftSQLServerSettings, ibMDb2Settings, resourceIdentifier, docDbSettings, redisSettings, gcpMySQLSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEndpointMessage {\n");
    sb.append("    endpointIdentifier: ").append(toIndentedString(endpointIdentifier)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    engineName: ").append(toIndentedString(engineName)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    extraConnectionAttributes: ").append(toIndentedString(extraConnectionAttributes)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    certificateArn: ").append(toIndentedString(certificateArn)).append("\n");
    sb.append("    sslMode: ").append(toIndentedString(sslMode)).append("\n");
    sb.append("    serviceAccessRoleArn: ").append(toIndentedString(serviceAccessRoleArn)).append("\n");
    sb.append("    externalTableDefinition: ").append(toIndentedString(externalTableDefinition)).append("\n");
    sb.append("    dynamoDbSettings: ").append(toIndentedString(dynamoDbSettings)).append("\n");
    sb.append("    s3Settings: ").append(toIndentedString(s3Settings)).append("\n");
    sb.append("    dmsTransferSettings: ").append(toIndentedString(dmsTransferSettings)).append("\n");
    sb.append("    mongoDbSettings: ").append(toIndentedString(mongoDbSettings)).append("\n");
    sb.append("    kinesisSettings: ").append(toIndentedString(kinesisSettings)).append("\n");
    sb.append("    kafkaSettings: ").append(toIndentedString(kafkaSettings)).append("\n");
    sb.append("    elasticsearchSettings: ").append(toIndentedString(elasticsearchSettings)).append("\n");
    sb.append("    neptuneSettings: ").append(toIndentedString(neptuneSettings)).append("\n");
    sb.append("    redshiftSettings: ").append(toIndentedString(redshiftSettings)).append("\n");
    sb.append("    postgreSQLSettings: ").append(toIndentedString(postgreSQLSettings)).append("\n");
    sb.append("    mySQLSettings: ").append(toIndentedString(mySQLSettings)).append("\n");
    sb.append("    oracleSettings: ").append(toIndentedString(oracleSettings)).append("\n");
    sb.append("    sybaseSettings: ").append(toIndentedString(sybaseSettings)).append("\n");
    sb.append("    microsoftSQLServerSettings: ").append(toIndentedString(microsoftSQLServerSettings)).append("\n");
    sb.append("    ibMDb2Settings: ").append(toIndentedString(ibMDb2Settings)).append("\n");
    sb.append("    resourceIdentifier: ").append(toIndentedString(resourceIdentifier)).append("\n");
    sb.append("    docDbSettings: ").append(toIndentedString(docDbSettings)).append("\n");
    sb.append("    redisSettings: ").append(toIndentedString(redisSettings)).append("\n");
    sb.append("    gcpMySQLSettings: ").append(toIndentedString(gcpMySQLSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EndpointIdentifier");
    openapiFields.add("EndpointType");
    openapiFields.add("EngineName");
    openapiFields.add("Username");
    openapiFields.add("Password");
    openapiFields.add("ServerName");
    openapiFields.add("Port");
    openapiFields.add("DatabaseName");
    openapiFields.add("ExtraConnectionAttributes");
    openapiFields.add("KmsKeyId");
    openapiFields.add("Tags");
    openapiFields.add("CertificateArn");
    openapiFields.add("SslMode");
    openapiFields.add("ServiceAccessRoleArn");
    openapiFields.add("ExternalTableDefinition");
    openapiFields.add("DynamoDbSettings");
    openapiFields.add("S3Settings");
    openapiFields.add("DmsTransferSettings");
    openapiFields.add("MongoDbSettings");
    openapiFields.add("KinesisSettings");
    openapiFields.add("KafkaSettings");
    openapiFields.add("ElasticsearchSettings");
    openapiFields.add("NeptuneSettings");
    openapiFields.add("RedshiftSettings");
    openapiFields.add("PostgreSQLSettings");
    openapiFields.add("MySQLSettings");
    openapiFields.add("OracleSettings");
    openapiFields.add("SybaseSettings");
    openapiFields.add("MicrosoftSQLServerSettings");
    openapiFields.add("IBMDb2Settings");
    openapiFields.add("ResourceIdentifier");
    openapiFields.add("DocDbSettings");
    openapiFields.add("RedisSettings");
    openapiFields.add("GcpMySQLSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("EndpointIdentifier");
    openapiRequiredFields.add("EndpointType");
    openapiRequiredFields.add("EngineName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateEndpointMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateEndpointMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateEndpointMessage is not found in the empty JSON string", CreateEndpointMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateEndpointMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateEndpointMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateEndpointMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `EndpointIdentifier`
      String.validateJsonElement(jsonObj.get("EndpointIdentifier"));
      // validate the required field `EndpointType`
      ReplicationEndpointTypeValue.validateJsonElement(jsonObj.get("EndpointType"));
      // validate the required field `EngineName`
      String.validateJsonElement(jsonObj.get("EngineName"));
      // validate the optional field `Username`
      if (jsonObj.get("Username") != null && !jsonObj.get("Username").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Username"));
      }
      // validate the optional field `Password`
      if (jsonObj.get("Password") != null && !jsonObj.get("Password").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Password"));
      }
      // validate the optional field `ServerName`
      if (jsonObj.get("ServerName") != null && !jsonObj.get("ServerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerName"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `DatabaseName`
      if (jsonObj.get("DatabaseName") != null && !jsonObj.get("DatabaseName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatabaseName"));
      }
      // validate the optional field `ExtraConnectionAttributes`
      if (jsonObj.get("ExtraConnectionAttributes") != null && !jsonObj.get("ExtraConnectionAttributes").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExtraConnectionAttributes"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `CertificateArn`
      if (jsonObj.get("CertificateArn") != null && !jsonObj.get("CertificateArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CertificateArn"));
      }
      // validate the optional field `SslMode`
      if (jsonObj.get("SslMode") != null && !jsonObj.get("SslMode").isJsonNull()) {
        DmsSslModeValue.validateJsonElement(jsonObj.get("SslMode"));
      }
      // validate the optional field `ServiceAccessRoleArn`
      if (jsonObj.get("ServiceAccessRoleArn") != null && !jsonObj.get("ServiceAccessRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceAccessRoleArn"));
      }
      // validate the optional field `ExternalTableDefinition`
      if (jsonObj.get("ExternalTableDefinition") != null && !jsonObj.get("ExternalTableDefinition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExternalTableDefinition"));
      }
      // validate the optional field `DynamoDbSettings`
      if (jsonObj.get("DynamoDbSettings") != null && !jsonObj.get("DynamoDbSettings").isJsonNull()) {
        CreateEndpointMessageDynamoDbSettings.validateJsonElement(jsonObj.get("DynamoDbSettings"));
      }
      // validate the optional field `S3Settings`
      if (jsonObj.get("S3Settings") != null && !jsonObj.get("S3Settings").isJsonNull()) {
        CreateEndpointMessageS3Settings.validateJsonElement(jsonObj.get("S3Settings"));
      }
      // validate the optional field `DmsTransferSettings`
      if (jsonObj.get("DmsTransferSettings") != null && !jsonObj.get("DmsTransferSettings").isJsonNull()) {
        CreateEndpointMessageDmsTransferSettings.validateJsonElement(jsonObj.get("DmsTransferSettings"));
      }
      // validate the optional field `MongoDbSettings`
      if (jsonObj.get("MongoDbSettings") != null && !jsonObj.get("MongoDbSettings").isJsonNull()) {
        CreateEndpointMessageMongoDbSettings.validateJsonElement(jsonObj.get("MongoDbSettings"));
      }
      // validate the optional field `KinesisSettings`
      if (jsonObj.get("KinesisSettings") != null && !jsonObj.get("KinesisSettings").isJsonNull()) {
        CreateEndpointMessageKinesisSettings.validateJsonElement(jsonObj.get("KinesisSettings"));
      }
      // validate the optional field `KafkaSettings`
      if (jsonObj.get("KafkaSettings") != null && !jsonObj.get("KafkaSettings").isJsonNull()) {
        CreateEndpointMessageKafkaSettings.validateJsonElement(jsonObj.get("KafkaSettings"));
      }
      // validate the optional field `ElasticsearchSettings`
      if (jsonObj.get("ElasticsearchSettings") != null && !jsonObj.get("ElasticsearchSettings").isJsonNull()) {
        CreateEndpointMessageElasticsearchSettings.validateJsonElement(jsonObj.get("ElasticsearchSettings"));
      }
      // validate the optional field `NeptuneSettings`
      if (jsonObj.get("NeptuneSettings") != null && !jsonObj.get("NeptuneSettings").isJsonNull()) {
        CreateEndpointMessageNeptuneSettings.validateJsonElement(jsonObj.get("NeptuneSettings"));
      }
      // validate the optional field `RedshiftSettings`
      if (jsonObj.get("RedshiftSettings") != null && !jsonObj.get("RedshiftSettings").isJsonNull()) {
        RedshiftSettings.validateJsonElement(jsonObj.get("RedshiftSettings"));
      }
      // validate the optional field `PostgreSQLSettings`
      if (jsonObj.get("PostgreSQLSettings") != null && !jsonObj.get("PostgreSQLSettings").isJsonNull()) {
        CreateEndpointMessagePostgreSQLSettings.validateJsonElement(jsonObj.get("PostgreSQLSettings"));
      }
      // validate the optional field `MySQLSettings`
      if (jsonObj.get("MySQLSettings") != null && !jsonObj.get("MySQLSettings").isJsonNull()) {
        CreateEndpointMessageMySQLSettings.validateJsonElement(jsonObj.get("MySQLSettings"));
      }
      // validate the optional field `OracleSettings`
      if (jsonObj.get("OracleSettings") != null && !jsonObj.get("OracleSettings").isJsonNull()) {
        CreateEndpointMessageOracleSettings.validateJsonElement(jsonObj.get("OracleSettings"));
      }
      // validate the optional field `SybaseSettings`
      if (jsonObj.get("SybaseSettings") != null && !jsonObj.get("SybaseSettings").isJsonNull()) {
        CreateEndpointMessageSybaseSettings.validateJsonElement(jsonObj.get("SybaseSettings"));
      }
      // validate the optional field `MicrosoftSQLServerSettings`
      if (jsonObj.get("MicrosoftSQLServerSettings") != null && !jsonObj.get("MicrosoftSQLServerSettings").isJsonNull()) {
        CreateEndpointMessageMicrosoftSQLServerSettings.validateJsonElement(jsonObj.get("MicrosoftSQLServerSettings"));
      }
      // validate the optional field `IBMDb2Settings`
      if (jsonObj.get("IBMDb2Settings") != null && !jsonObj.get("IBMDb2Settings").isJsonNull()) {
        CreateEndpointMessageIBMDb2Settings.validateJsonElement(jsonObj.get("IBMDb2Settings"));
      }
      // validate the optional field `ResourceIdentifier`
      if (jsonObj.get("ResourceIdentifier") != null && !jsonObj.get("ResourceIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceIdentifier"));
      }
      // validate the optional field `DocDbSettings`
      if (jsonObj.get("DocDbSettings") != null && !jsonObj.get("DocDbSettings").isJsonNull()) {
        DocDbSettings.validateJsonElement(jsonObj.get("DocDbSettings"));
      }
      // validate the optional field `RedisSettings`
      if (jsonObj.get("RedisSettings") != null && !jsonObj.get("RedisSettings").isJsonNull()) {
        CreateEndpointMessageRedisSettings.validateJsonElement(jsonObj.get("RedisSettings"));
      }
      // validate the optional field `GcpMySQLSettings`
      if (jsonObj.get("GcpMySQLSettings") != null && !jsonObj.get("GcpMySQLSettings").isJsonNull()) {
        CreateEndpointMessageGcpMySQLSettings.validateJsonElement(jsonObj.get("GcpMySQLSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateEndpointMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateEndpointMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateEndpointMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateEndpointMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateEndpointMessage>() {
           @Override
           public void write(JsonWriter out, CreateEndpointMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateEndpointMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateEndpointMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateEndpointMessage
   * @throws IOException if the JSON string is invalid with respect to CreateEndpointMessage
   */
  public static CreateEndpointMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateEndpointMessage.class);
  }

  /**
   * Convert an instance of CreateEndpointMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

