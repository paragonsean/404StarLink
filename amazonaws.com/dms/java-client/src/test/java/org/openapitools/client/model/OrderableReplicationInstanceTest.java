/*
 * AWS Database Migration Service
 * <fullname>Database Migration Service</fullname> <p>Database Migration Service (DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is Database Migration Service?</a> in the <i>Database Migration Service User Guide.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ReleaseStatusValues;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OrderableReplicationInstance
 */
public class OrderableReplicationInstanceTest {
    private final OrderableReplicationInstance model = new OrderableReplicationInstance();

    /**
     * Model tests for OrderableReplicationInstance
     */
    @Test
    public void testOrderableReplicationInstance() {
        // TODO: test OrderableReplicationInstance
    }

    /**
     * Test the property 'engineVersion'
     */
    @Test
    public void engineVersionTest() {
        // TODO: test engineVersion
    }

    /**
     * Test the property 'replicationInstanceClass'
     */
    @Test
    public void replicationInstanceClassTest() {
        // TODO: test replicationInstanceClass
    }

    /**
     * Test the property 'storageType'
     */
    @Test
    public void storageTypeTest() {
        // TODO: test storageType
    }

    /**
     * Test the property 'minAllocatedStorage'
     */
    @Test
    public void minAllocatedStorageTest() {
        // TODO: test minAllocatedStorage
    }

    /**
     * Test the property 'maxAllocatedStorage'
     */
    @Test
    public void maxAllocatedStorageTest() {
        // TODO: test maxAllocatedStorage
    }

    /**
     * Test the property 'defaultAllocatedStorage'
     */
    @Test
    public void defaultAllocatedStorageTest() {
        // TODO: test defaultAllocatedStorage
    }

    /**
     * Test the property 'includedAllocatedStorage'
     */
    @Test
    public void includedAllocatedStorageTest() {
        // TODO: test includedAllocatedStorage
    }

    /**
     * Test the property 'availabilityZones'
     */
    @Test
    public void availabilityZonesTest() {
        // TODO: test availabilityZones
    }

    /**
     * Test the property 'releaseStatus'
     */
    @Test
    public void releaseStatusTest() {
        // TODO: test releaseStatus
    }

}
