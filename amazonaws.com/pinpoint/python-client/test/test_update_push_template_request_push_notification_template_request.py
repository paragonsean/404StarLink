# coding: utf-8

"""
    Amazon Pinpoint

    Doc Engage API - Amazon Pinpoint API

    The version of the OpenAPI document: 2016-12-01
    Contact: mike.ralphson@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_push_template_request_push_notification_template_request import UpdatePushTemplateRequestPushNotificationTemplateRequest

class TestUpdatePushTemplateRequestPushNotificationTemplateRequest(unittest.TestCase):
    """UpdatePushTemplateRequestPushNotificationTemplateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdatePushTemplateRequestPushNotificationTemplateRequest:
        """Test UpdatePushTemplateRequestPushNotificationTemplateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdatePushTemplateRequestPushNotificationTemplateRequest`
        """
        model = UpdatePushTemplateRequestPushNotificationTemplateRequest()
        if include_optional:
            return UpdatePushTemplateRequestPushNotificationTemplateRequest(
                adm = None,
                apns = None,
                baidu = None,
                default = None,
                default_substitutions = None,
                gcm = None,
                recommender_id = None,
                tags = None,
                template_description = None
            )
        else:
            return UpdatePushTemplateRequestPushNotificationTemplateRequest(
        )
        """

    def testUpdatePushTemplateRequestPushNotificationTemplateRequest(self):
        """Test UpdatePushTemplateRequestPushNotificationTemplateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
