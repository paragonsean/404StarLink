openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a\
    \ web service that makes it easier to set up, operate, and scale a distributed\
    \ cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits\
    \ of a high-performance, in-memory cache with less of the administrative burden\
    \ involved in launching and managing a distributed cache. The service makes setup,\
    \ scaling, and cluster failure handling much simpler than in a self-managed cache\
    \ deployment.</p> <p>In addition, through integration with Amazon CloudWatch,\
    \ customers get enhanced visibility into the key performance statistics associated\
    \ with their cache and can receive alarms if a part of their cache runs hot.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon ElastiCache
  version: 2015-02-02
  x-release: v4
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: elasticache
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticache-2015-02-02.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/elasticache/
servers:
- description: The Amazon ElastiCache multi-region endpoint
  url: "http://elasticache.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon ElastiCache multi-region endpoint
  url: "https://elasticache.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon ElastiCache endpoint for China (Beijing) and China (Ningxia)
  url: "http://elasticache.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon ElastiCache endpoint for China (Beijing) and China (Ningxia)
  url: "https://elasticache.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#Action=AddTagsToResource:
    get:
      description: "<p>A tag is a key-value pair where the key and value are case-sensitive.\
        \ You can use tags to categorize and track all your ElastiCache resources,\
        \ with the exception of global replication group. When you add or remove tags\
        \ on replication groups, those actions will be replicated to all nodes in\
        \ the replication group. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html\"\
        >Resource-level permissions</a>.</p> <p> For example, you can use cost-allocation\
        \ tags to your ElastiCache resources, Amazon generates a cost allocation report\
        \ as a comma-separated value (CSV) file with your usage and costs aggregated\
        \ by your tags. You can apply tags that represent business categories (such\
        \ as cost centers, application names, or owners) to organize your costs across\
        \ multiple services.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html\"\
        >Using Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache\
        \ User Guide</i>.</p>"
      operationId: GET_AddTagsToResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The Amazon Resource Name (ARN) of the resource to which the\
          \ tags are to be added, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>\
          \ or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.\
          \ ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.</p> <p>For\
          \ more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs) and Amazon Service Namespaces</a>.</p>"
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddTagsToResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
          description: ReservedCacheNodeNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
      x-aws-operation-name: AddTagsToResource
      x-accepts:
      - text/xml
    post:
      description: "<p>A tag is a key-value pair where the key and value are case-sensitive.\
        \ You can use tags to categorize and track all your ElastiCache resources,\
        \ with the exception of global replication group. When you add or remove tags\
        \ on replication groups, those actions will be replicated to all nodes in\
        \ the replication group. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html\"\
        >Resource-level permissions</a>.</p> <p> For example, you can use cost-allocation\
        \ tags to your ElastiCache resources, Amazon generates a cost allocation report\
        \ as a comma-separated value (CSV) file with your usage and costs aggregated\
        \ by your tags. You can apply tags that represent business categories (such\
        \ as cost centers, application names, or owners) to organize your costs across\
        \ multiple services.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Tagging.html\"\
        >Using Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache\
        \ User Guide</i>.</p>"
      operationId: POST_AddTagsToResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddTagsToResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
          description: ReservedCacheNodeNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
      x-aws-operation-name: AddTagsToResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=AuthorizeCacheSecurityGroupIngress:
    get:
      description: "<p>Allows network ingress to a cache security group. Applications\
        \ using ElastiCache must be running on Amazon EC2, and Amazon EC2 security\
        \ groups are used as the authorization mechanism.</p> <note> <p>You cannot\
        \ authorize ingress from an Amazon EC2 security group in one region to an\
        \ ElastiCache cluster in another region.</p> </note>"
      operationId: GET_AuthorizeCacheSecurityGroupIngress
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The cache security group that allows network ingress.
        explode: true
        in: query
        name: CacheSecurityGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon EC2 security group to be authorized for ingress to
          the cache security group.
        explode: true
        in: query
        name: EC2SecurityGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon account number of the Amazon EC2 security group owner.
          Note that this is not the same thing as an Amazon access key ID - you must
          provide a valid Amazon account number for this parameter.
        explode: true
        in: query
        name: EC2SecurityGroupOwnerId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AuthorizeCacheSecurityGroupIngress
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeCacheSecurityGroupIngressResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
          description: AuthorizationAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: AuthorizeCacheSecurityGroupIngress
      x-accepts:
      - text/xml
    post:
      description: "<p>Allows network ingress to a cache security group. Applications\
        \ using ElastiCache must be running on Amazon EC2, and Amazon EC2 security\
        \ groups are used as the authorization mechanism.</p> <note> <p>You cannot\
        \ authorize ingress from an Amazon EC2 security group in one region to an\
        \ ElastiCache cluster in another region.</p> </note>"
      operationId: POST_AuthorizeCacheSecurityGroupIngress
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AuthorizeCacheSecurityGroupIngress
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthorizeCacheSecurityGroupIngressMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizeCacheSecurityGroupIngressResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
          description: AuthorizationAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: AuthorizeCacheSecurityGroupIngress
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=BatchApplyUpdateAction:
    get:
      description: "Apply the service update. For more information on service updates\
        \ and applying them, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/applying-updates.html\"\
        >Applying Service Updates</a>."
      operationId: GET_BatchApplyUpdateAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The replication group IDs
        explode: true
        in: query
        name: ReplicationGroupIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          maxItems: 20
          type: array
        style: form
      - description: The cache cluster IDs
        explode: true
        in: query
        name: CacheClusterIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          maxItems: 20
          type: array
        style: form
      - description: The unique ID of the service update
        explode: true
        in: query
        name: ServiceUpdateName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - BatchApplyUpdateAction
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionResultsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
          description: ServiceUpdateNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: BatchApplyUpdateAction
      x-accepts:
      - text/xml
    post:
      description: "Apply the service update. For more information on service updates\
        \ and applying them, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/applying-updates.html\"\
        >Applying Service Updates</a>."
      operationId: POST_BatchApplyUpdateAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - BatchApplyUpdateAction
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchApplyUpdateActionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionResultsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
          description: ServiceUpdateNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: BatchApplyUpdateAction
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=BatchStopUpdateAction:
    get:
      description: "Stop the service update. For more information on service updates\
        \ and stopping them, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/stopping-self-service-updates.html\"\
        >Stopping Service Updates</a>."
      operationId: GET_BatchStopUpdateAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The replication group IDs
        explode: true
        in: query
        name: ReplicationGroupIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          maxItems: 20
          type: array
        style: form
      - description: The cache cluster IDs
        explode: true
        in: query
        name: CacheClusterIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          maxItems: 20
          type: array
        style: form
      - description: The unique ID of the service update
        explode: true
        in: query
        name: ServiceUpdateName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - BatchStopUpdateAction
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionResultsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
          description: ServiceUpdateNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: BatchStopUpdateAction
      x-accepts:
      - text/xml
    post:
      description: "Stop the service update. For more information on service updates\
        \ and stopping them, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/stopping-self-service-updates.html\"\
        >Stopping Service Updates</a>."
      operationId: POST_BatchStopUpdateAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - BatchStopUpdateAction
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchStopUpdateActionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionResultsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
          description: ServiceUpdateNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: BatchStopUpdateAction
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CompleteMigration:
    get:
      description: Complete the migration of data.
      operationId: GET_CompleteMigration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the replication group to which data is being migrated.
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: Forces the migration to stop without ensuring that data is in
          sync. It is recommended to use this option only to abort the migration and
          not recommended when application wants to continue migration to ElastiCache.
        explode: true
        in: query
        name: Force
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CompleteMigration
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CompleteMigrationResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotUnderMigrationFault'
          description: ReplicationGroupNotUnderMigrationFault
      x-aws-operation-name: CompleteMigration
      x-accepts:
      - text/xml
    post:
      description: Complete the migration of data.
      operationId: POST_CompleteMigration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CompleteMigration
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CompleteMigrationMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CompleteMigrationResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotUnderMigrationFault'
          description: ReplicationGroupNotUnderMigrationFault
      x-aws-operation-name: CompleteMigration
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CopySnapshot:
    get:
      description: "<p>Makes a copy of an existing snapshot.</p> <note> <p>This operation\
        \ is valid for Redis only.</p> </note> <important> <p>Users or groups that\
        \ have permissions to use the <code>CopySnapshot</code> operation can create\
        \ their own Amazon S3 buckets and copy snapshots to it. To control access\
        \ to your snapshots, use an IAM policy to control who has the ability to use\
        \ the <code>CopySnapshot</code> operation. For more information about using\
        \ IAM to control the use of ElastiCache operations, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html\"\
        >Exporting Snapshots</a> and <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.html\"\
        >Authentication &amp; Access Control</a>.</p> </important> <p>You could receive\
        \ the following error messages.</p> <p class=\"title\"> <b>Error Messages</b>\
        \ </p> <ul> <li> <p> <b>Error Message:</b> The S3 bucket %s is outside of\
        \ the region.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same\
        \ region as your snapshot. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket\"\
        >Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>\
        \ </li> <li> <p> <b>Error Message:</b> The S3 bucket %s does not exist.</p>\
        \ <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your\
        \ snapshot. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket\"\
        >Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>\
        \ </li> <li> <p> <b>Error Message:</b> The S3 bucket %s is not owned by the\
        \ authenticated user.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket\
        \ in the same region as your snapshot. For more information, see <a href=\"\
        https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket\"\
        >Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>\
        \ </li> <li> <p> <b>Error Message:</b> The authenticated user does not have\
        \ sufficient permissions to perform the desired activity.</p> <p> <b>Solution:</b>\
        \ Contact your system administrator to get the needed permissions.</p> </li>\
        \ <li> <p> <b>Error Message:</b> The S3 bucket %s already contains an object\
        \ with key %s.</p> <p> <b>Solution:</b> Give the <code>TargetSnapshotName</code>\
        \ a new and unique value. If exporting a snapshot, you could alternatively\
        \ create a new Amazon S3 bucket and use this same value for <code>TargetSnapshotName</code>.</p>\
        \ </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ\
        \ permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add List and Read\
        \ permissions on the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access\"\
        >Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache\
        \ User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not\
        \ been granted WRITE permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b>\
        \ Add Upload/Delete permissions on the bucket. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access\"\
        >Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache\
        \ User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not\
        \ been granted READ_ACP permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b>\
        \ Add View Permissions on the bucket. For more information, see <a href=\"\
        https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access\"\
        >Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache\
        \ User Guide.</p> </li> </ul>"
      operationId: GET_CopySnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of an existing snapshot from which to make a copy.
        explode: true
        in: query
        name: SourceSnapshotName
        required: true
        schema:
          type: string
        style: form
      - description: "A name for the snapshot copy. ElastiCache does not permit overwriting\
          \ a snapshot, therefore this name must be unique within its context - ElastiCache\
          \ or an Amazon S3 bucket if exporting."
        explode: true
        in: query
        name: TargetSnapshotName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The Amazon S3 bucket to which the snapshot is exported. This\
          \ parameter is used only when exporting a snapshot for external access.</p>\
          \ <p>When using this parameter to export a snapshot, be sure Amazon ElastiCache\
          \ has the needed permissions to this S3 bucket. For more information, see\
          \ <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access\"\
          >Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the <i>Amazon\
          \ ElastiCache User Guide</i>.</p> <p>For more information, see <a href=\"\
          https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html\"\
          >Exporting a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</p>"
        explode: true
        in: query
        name: TargetBucket
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the KMS key used to encrypt the target snapshot.
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopySnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopySnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
          description: InvalidSnapshotStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CopySnapshot
      x-accepts:
      - text/xml
    post:
      description: "<p>Makes a copy of an existing snapshot.</p> <note> <p>This operation\
        \ is valid for Redis only.</p> </note> <important> <p>Users or groups that\
        \ have permissions to use the <code>CopySnapshot</code> operation can create\
        \ their own Amazon S3 buckets and copy snapshots to it. To control access\
        \ to your snapshots, use an IAM policy to control who has the ability to use\
        \ the <code>CopySnapshot</code> operation. For more information about using\
        \ IAM to control the use of ElastiCache operations, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html\"\
        >Exporting Snapshots</a> and <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.html\"\
        >Authentication &amp; Access Control</a>.</p> </important> <p>You could receive\
        \ the following error messages.</p> <p class=\"title\"> <b>Error Messages</b>\
        \ </p> <ul> <li> <p> <b>Error Message:</b> The S3 bucket %s is outside of\
        \ the region.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same\
        \ region as your snapshot. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket\"\
        >Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>\
        \ </li> <li> <p> <b>Error Message:</b> The S3 bucket %s does not exist.</p>\
        \ <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your\
        \ snapshot. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket\"\
        >Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>\
        \ </li> <li> <p> <b>Error Message:</b> The S3 bucket %s is not owned by the\
        \ authenticated user.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket\
        \ in the same region as your snapshot. For more information, see <a href=\"\
        https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket\"\
        >Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p>\
        \ </li> <li> <p> <b>Error Message:</b> The authenticated user does not have\
        \ sufficient permissions to perform the desired activity.</p> <p> <b>Solution:</b>\
        \ Contact your system administrator to get the needed permissions.</p> </li>\
        \ <li> <p> <b>Error Message:</b> The S3 bucket %s already contains an object\
        \ with key %s.</p> <p> <b>Solution:</b> Give the <code>TargetSnapshotName</code>\
        \ a new and unique value. If exporting a snapshot, you could alternatively\
        \ create a new Amazon S3 bucket and use this same value for <code>TargetSnapshotName</code>.</p>\
        \ </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ\
        \ permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add List and Read\
        \ permissions on the bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access\"\
        >Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache\
        \ User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not\
        \ been granted WRITE permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b>\
        \ Add Upload/Delete permissions on the bucket. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access\"\
        >Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache\
        \ User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not\
        \ been granted READ_ACP permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b>\
        \ Add View Permissions on the bucket. For more information, see <a href=\"\
        https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access\"\
        >Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache\
        \ User Guide.</p> </li> </ul>"
      operationId: POST_CopySnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopySnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopySnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopySnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
          description: InvalidSnapshotStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CopySnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateCacheCluster:
    get:
      description: "<p>Creates a cluster. All nodes in the cluster run the same protocol-compliant\
        \ cache engine software, either Memcached or Redis.</p> <p>This operation\
        \ is not supported for Redis (cluster mode enabled) clusters.</p>"
      operationId: GET_CreateCacheCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The node group (shard) identifier. This parameter is stored
          as a lowercase string.</p> <p> <b>Constraints:</b> </p> <ul> <li> <p>A name
          must contain from 1 to 50 alphanumeric characters or hyphens.</p> </li>
          <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot
          end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
        explode: true
        in: query
        name: CacheClusterId
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The ID of the replication group to which this cluster should\
          \ belong. If this parameter is specified, the cluster is added to the specified\
          \ replication group as a read replica; otherwise, the cluster is a standalone\
          \ primary that is not part of any replication group.</p> <p>If the specified\
          \ replication group is Multi-AZ enabled and the Availability Zone is not\
          \ specified, the cluster is created in Availability Zones that provide the\
          \ best spread of read replicas across Availability Zones.</p> <note> <p>This\
          \ parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>\
          \ </note>"
        explode: true
        in: query
        name: ReplicationGroupId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Specifies whether the nodes in this Memcached cluster are\
          \ created in a single Availability Zone or created across multiple Availability\
          \ Zones in the cluster's region.</p> <p>This parameter is only supported\
          \ for Memcached clusters.</p> <p>If the <code>AZMode</code> and <code>PreferredAvailabilityZones</code>\
          \ are not specified, ElastiCache assumes <code>single-az</code> mode.</p>"
        explode: true
        in: query
        name: AZMode
        required: false
        schema:
          enum:
          - single-az
          - cross-az
          type: string
        style: form
      - description: "<p>The EC2 Availability Zone in which the cluster is created.</p>\
          \ <p>All nodes belonging to this cluster are placed in the preferred Availability\
          \ Zone. If you want to create your nodes across multiple Availability Zones,\
          \ use <code>PreferredAvailabilityZones</code>.</p> <p>Default: System chosen\
          \ Availability Zone.</p>"
        explode: true
        in: query
        name: PreferredAvailabilityZone
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A list of the Availability Zones in which cache nodes are\
          \ created. The order of the zones in the list is not important.</p> <p>This\
          \ option is only supported on Memcached.</p> <note> <p>If you are creating\
          \ your cluster in an Amazon VPC (recommended) you can only locate nodes\
          \ in Availability Zones that are associated with the subnets in the selected\
          \ subnet group.</p> <p>The number of Availability Zones listed must equal\
          \ the value of <code>NumCacheNodes</code>.</p> </note> <p>If you want all\
          \ the nodes in the same Availability Zone, use <code>PreferredAvailabilityZone</code>\
          \ instead, or repeat the Availability Zone multiple times in the list.</p>\
          \ <p>Default: System chosen Availability Zones.</p>"
        explode: true
        in: query
        name: PreferredAvailabilityZones
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: PreferredAvailabilityZone
          type: array
        style: form
      - description: "<p>The initial number of cache nodes that the cluster has.</p>\
          \ <p>For clusters running Redis, this value must be 1. For clusters running\
          \ Memcached, this value must be between 1 and 40.</p> <p>If you need more\
          \ than 40 nodes for your Memcached cluster, please fill out the ElastiCache\
          \ Limit Increase Request form at <a href=\"http://aws.amazon.com/contact-us/elasticache-node-limit-request/\"\
          >http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p>"
        explode: true
        in: query
        name: NumCacheNodes
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The compute and memory capacity of the nodes in the node\
          \ group (shard).</p> <p>The following node types are supported by ElastiCache.\
          \ Generally speaking, the current generation types provide more memory and\
          \ computational power at lower cost when compared to their equivalent previous\
          \ generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li>\
          \ <p>Current generation: </p> <p> <b>M6g node types</b> (available only\
          \ for Redis engine version 5.0.6 onward and for Memcached engine version\
          \ 1.5.16 onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
          \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
          \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p>\
          \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
          >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
          \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
          \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p>\
          \ <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
          \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
          \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
          \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
          \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p> <b>T3\
          \ node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
          \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
          \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li>\
          \ <p>Previous generation: (not recommended. Existing clusters are still\
          \ supported but creation of new clusters is not supported for these types.)</p>\
          \ <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node\
          \ types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
          \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3\
          \ node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
          \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
          \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
          \ (not recommended. Existing clusters are still supported but creation of\
          \ new clusters is not supported for these types.)</p> <p> <b>C1 node types:</b>\
          \ <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p>\
          \ <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available\
          \ only for Redis engine version 5.0.6 onward and for Memcached engine version\
          \ 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>,\
          \ <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>,\
          \ <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p>\
          \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
          >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
          \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
          \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p>\
          \ <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
          \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
          \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
          \ (not recommended. Existing clusters are still supported but creation of\
          \ new clusters is not supported for these types.)</p> <p> <b>M2 node types:</b>\
          \ <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code>\
          \ </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,\
          \ <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>\
          \ </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p>\
          \ <ul> <li> <p>All current generation instance types are created in Amazon\
          \ VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not\
          \ supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with\
          \ automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis\
          \ configuration variables <code>appendonly</code> and <code>appendfsync</code>\
          \ are not supported on Redis version 2.8.22 and later.</p> </li> </ul>"
        explode: true
        in: query
        name: CacheNodeType
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the cache engine to be used for this cluster.</p>\
          \ <p>Valid values for this parameter are: <code>memcached</code> | <code>redis</code>\
          \ </p>"
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The version number of the cache engine to be used for this\
          \ cluster. To view the supported cache engine versions, use the DescribeCacheEngineVersions\
          \ operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine\
          \ version (see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement\"\
          >Selecting a Cache Engine and Version</a>), but you cannot downgrade to\
          \ an earlier engine version. If you want to use an earlier engine version,\
          \ you must delete the existing cluster or replication group and create it\
          \ anew with the earlier engine version. </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The name of the parameter group to associate with this cluster.\
          \ If this argument is omitted, the default parameter group for the specified\
          \ engine is used. You cannot use any parameter group which has <code>cluster-enabled='yes'</code>\
          \ when creating a cluster."
        explode: true
        in: query
        name: CacheParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the subnet group to be used for the cluster.</p>\
          \ <p>Use this parameter only when you are creating a cluster in an Amazon\
          \ Virtual Private Cloud (Amazon VPC).</p> <important> <p>If you're going\
          \ to launch your cluster in an Amazon VPC, you need to create a subnet group\
          \ before you start creating a cluster. For more information, see <a href=\"\
          https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html\"\
          >Subnets and Subnet Groups</a>.</p> </important>"
        explode: true
        in: query
        name: CacheSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: <p>A list of security group names to associate with this cluster.</p>
          <p>Use this parameter only when you are creating a cluster outside of an
          Amazon Virtual Private Cloud (Amazon VPC).</p>
        explode: true
        in: query
        name: CacheSecurityGroupNames
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: CacheSecurityGroupName
          type: array
        style: form
      - description: <p>One or more VPC security groups associated with the cluster.</p>
          <p>Use this parameter only when you are creating a cluster in an Amazon
          Virtual Private Cloud (Amazon VPC).</p>
        explode: true
        in: query
        name: SecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SecurityGroupId
          type: array
        style: form
      - description: A list of tags to be added to this resource.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: "<p>A single-element string list containing an Amazon Resource\
          \ Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in\
          \ Amazon S3. The snapshot file is used to populate the node group (shard).\
          \ The Amazon S3 object name in the ARN cannot contain any commas.</p> <note>\
          \ <p>This parameter is only valid if the <code>Engine</code> parameter is\
          \ <code>redis</code>.</p> </note> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code>\
          \ </p>"
        explode: true
        in: query
        name: SnapshotArns
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SnapshotArn
          type: array
        style: form
      - description: <p>The name of a Redis snapshot from which to restore data into
          the new node group (shard). The snapshot status changes to <code>restoring</code>
          while the new node group (shard) is being created.</p> <note> <p>This parameter
          is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>
          </note>
        explode: true
        in: query
        name: SnapshotName
        required: false
        schema:
          type: string
        style: form
      - description: 'Specifies the weekly time range during which maintenance on
          the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi
          (24H Clock UTC). The minimum maintenance window is a 60 minute period. '
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: The port number on which each of the cache nodes accepts connections.
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification
          Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon
          SNS topic owner must be the same as the cluster owner.</p> </note>
        explode: true
        in: query
        name: NotificationTopicArn
        required: false
        schema:
          type: string
        style: form
      - description: "\_If you are running Redis engine version 6.0 or later, set\
          \ this parameter to yes if you want to opt-in to the next auto minor version\
          \ upgrade campaign. This parameter is disabled for previous versions.\_ "
        explode: true
        in: query
        name: AutoMinorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The number of days for which ElastiCache retains automatic\
          \ snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>\
          \ to 5, a snapshot taken today is retained for 5 days before being deleted.</p>\
          \ <note> <p>This parameter is only valid if the <code>Engine</code> parameter\
          \ is <code>redis</code>.</p> </note> <p>Default: 0 (i.e., automatic backups\
          \ are disabled for this cache cluster).</p>"
        explode: true
        in: query
        name: SnapshotRetentionLimit
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The daily time range (in UTC) during which ElastiCache begins\
          \ taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code>\
          \ </p> <p>If you do not specify this parameter, ElastiCache automatically\
          \ chooses an appropriate time range.</p> <note> <p>This parameter is only\
          \ valid if the <code>Engine</code> parameter is <code>redis</code>.</p>\
          \ </note>"
        explode: true
        in: query
        name: SnapshotWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p> <b>Reserved parameter.</b> The password used to access a\
          \ password protected server.</p> <p>Password constraints:</p> <ul> <li>\
          \ <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be\
          \ at least 16 characters and no more than 128 characters in length.</p>\
          \ </li> <li> <p>The only permitted printable special characters are !, &amp;,\
          \ #, $, ^, &lt;, &gt;, and -. Other printable special characters cannot\
          \ be used in the AUTH token.</p> </li> </ul> <p>For more information, see\
          \ <a href=\"http://redis.io/commands/AUTH\">AUTH password</a> at http://redis.io/commands/AUTH.</p>"
        explode: true
        in: query
        name: AuthToken
        required: false
        schema:
          type: string
        style: form
      - description: Specifies whether the nodes in the cluster are created in a single
          outpost or across multiple outposts.
        explode: true
        in: query
        name: OutpostMode
        required: false
        schema:
          enum:
          - single-outpost
          - cross-outpost
          type: string
        style: form
      - description: The outpost ARN in which the cache cluster is created.
        explode: true
        in: query
        name: PreferredOutpostArn
        required: false
        schema:
          type: string
        style: form
      - description: The outpost ARNs in which the cache cluster is created.
        explode: true
        in: query
        name: PreferredOutpostArns
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: PreferredOutpostArn
          type: array
        style: form
      - description: "Specifies the destination, format and type of the logs. "
        explode: true
        in: query
        name: LogDeliveryConfigurations
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_CreateCacheCluster_LogDeliveryConfigurations_parameter_inner'
          type: array
        style: form
      - description: <p>A flag that enables in-transit encryption when set to true.</p>
          <p> Only available when creating a cache cluster in an Amazon VPC using
          Memcached version 1.6.12 or later.</p>
        explode: true
        in: query
        name: TransitEncryptionEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: 'Must be either <code>ipv4</code> | <code>ipv6</code> | <code>dual_stack</code>.
          IPv6 is supported for workloads using Redis engine version 6.2 onward or
          Memcached engine version 1.6.6 on all instances built on the <a href="https://aws.amazon.com/ec2/nitro/">Nitro
          system</a>. '
        explode: true
        in: query
        name: NetworkType
        required: false
        schema:
          enum:
          - ipv4
          - ipv6
          - dual_stack
          type: string
        style: form
      - description: "The network type you choose when modifying a cluster, either\
          \ <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported for workloads\
          \ using Redis engine version 6.2 onward or Memcached engine version 1.6.6\
          \ on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
          >Nitro system</a>."
        explode: true
        in: query
        name: IpDiscovery
        required: false
        schema:
          enum:
          - ipv4
          - ipv6
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateCacheCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterAlreadyExistsFault'
          description: CacheClusterAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CreateCacheCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a cluster. All nodes in the cluster run the same protocol-compliant\
        \ cache engine software, either Memcached or Redis.</p> <p>This operation\
        \ is not supported for Redis (cluster mode enabled) clusters.</p>"
      operationId: POST_CreateCacheCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateCacheCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCacheClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterAlreadyExistsFault'
          description: CacheClusterAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CreateCacheCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateCacheParameterGroup:
    get:
      description: "<p>Creates a new Amazon ElastiCache cache parameter group. An\
        \ ElastiCache cache parameter group is a collection of parameters and their\
        \ values that are applied to all of the nodes in any cluster or replication\
        \ group using the CacheParameterGroup.</p> <p>A newly created CacheParameterGroup\
        \ is an exact duplicate of the default parameter group for the CacheParameterGroupFamily.\
        \ To customize the newly created CacheParameterGroup you can change the values\
        \ of specific parameters. For more information, see:</p> <ul> <li> <p> <a\
        \ href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html\"\
        >ModifyCacheParameterGroup</a> in the ElastiCache API Reference.</p> </li>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.html\"\
        >Parameters and Parameter Groups</a> in the ElastiCache User Guide.</p> </li>\
        \ </ul>"
      operationId: GET_CreateCacheParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A user-specified name for the cache parameter group.
        explode: true
        in: query
        name: CacheParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The name of the cache parameter group family that the cache\
          \ parameter group can be used with.</p> <p>Valid values are: <code>memcached1.4</code>\
          \ | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code>\
          \ | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code>\
          \ | <code>redis5.0</code> | <code>redis6.x</code> </p>"
        explode: true
        in: query
        name: CacheParameterGroupFamily
        required: true
        schema:
          type: string
        style: form
      - description: A user-specified description for the cache parameter group.
        explode: true
        in: query
        name: Description
        required: true
        schema:
          type: string
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateCacheParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupQuotaExceededFault'
          description: CacheParameterGroupQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupAlreadyExistsFault'
          description: CacheParameterGroupAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
          description: InvalidCacheParameterGroupStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CreateCacheParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a new Amazon ElastiCache cache parameter group. An\
        \ ElastiCache cache parameter group is a collection of parameters and their\
        \ values that are applied to all of the nodes in any cluster or replication\
        \ group using the CacheParameterGroup.</p> <p>A newly created CacheParameterGroup\
        \ is an exact duplicate of the default parameter group for the CacheParameterGroupFamily.\
        \ To customize the newly created CacheParameterGroup you can change the values\
        \ of specific parameters. For more information, see:</p> <ul> <li> <p> <a\
        \ href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html\"\
        >ModifyCacheParameterGroup</a> in the ElastiCache API Reference.</p> </li>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.html\"\
        >Parameters and Parameter Groups</a> in the ElastiCache User Guide.</p> </li>\
        \ </ul>"
      operationId: POST_CreateCacheParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateCacheParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCacheParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupQuotaExceededFault'
          description: CacheParameterGroupQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupAlreadyExistsFault'
          description: CacheParameterGroupAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
          description: InvalidCacheParameterGroupStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CreateCacheParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateCacheSecurityGroup:
    get:
      description: "<p>Creates a new cache security group. Use a cache security group\
        \ to control access to one or more clusters.</p> <p>Cache security groups\
        \ are only used when you are creating a cluster outside of an Amazon Virtual\
        \ Private Cloud (Amazon VPC). If you are creating a cluster inside of a VPC,\
        \ use a cache subnet group instead. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html\"\
        >CreateCacheSubnetGroup</a>.</p>"
      operationId: GET_CreateCacheSecurityGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>A name for the cache security group. This value is stored\
          \ as a lowercase string.</p> <p>Constraints: Must contain no more than 255\
          \ alphanumeric characters. Cannot be the word \"Default\".</p> <p>Example:\
          \ <code>mysecuritygroup</code> </p>"
        explode: true
        in: query
        name: CacheSecurityGroupName
        required: true
        schema:
          type: string
        style: form
      - description: A description for the cache security group.
        explode: true
        in: query
        name: Description
        required: true
        schema:
          type: string
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateCacheSecurityGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheSecurityGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupAlreadyExistsFault'
          description: CacheSecurityGroupAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupQuotaExceededFault'
          description: CacheSecurityGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CreateCacheSecurityGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a new cache security group. Use a cache security group\
        \ to control access to one or more clusters.</p> <p>Cache security groups\
        \ are only used when you are creating a cluster outside of an Amazon Virtual\
        \ Private Cloud (Amazon VPC). If you are creating a cluster inside of a VPC,\
        \ use a cache subnet group instead. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html\"\
        >CreateCacheSubnetGroup</a>.</p>"
      operationId: POST_CreateCacheSecurityGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateCacheSecurityGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCacheSecurityGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheSecurityGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupAlreadyExistsFault'
          description: CacheSecurityGroupAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupQuotaExceededFault'
          description: CacheSecurityGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CreateCacheSecurityGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateCacheSubnetGroup:
    get:
      description: <p>Creates a new cache subnet group.</p> <p>Use this parameter
        only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon
        VPC).</p>
      operationId: GET_CreateCacheSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>A name for the cache subnet group. This value is stored as\
          \ a lowercase string.</p> <p>Constraints: Must contain no more than 255\
          \ alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code>\
          \ </p>"
        explode: true
        in: query
        name: CacheSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - description: A description for the cache subnet group.
        explode: true
        in: query
        name: CacheSubnetGroupDescription
        required: true
        schema:
          type: string
        style: form
      - description: A list of VPC subnet IDs for the cache subnet group.
        explode: true
        in: query
        name: SubnetIds
        required: true
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SubnetIdentifier
          type: array
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateCacheSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupAlreadyExistsFault'
          description: CacheSubnetGroupAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupQuotaExceededFault'
          description: CacheSubnetGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetQuotaExceededFault'
          description: CacheSubnetQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
          description: SubnetNotAllowedFault
      x-aws-operation-name: CreateCacheSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: <p>Creates a new cache subnet group.</p> <p>Use this parameter
        only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon
        VPC).</p>
      operationId: POST_CreateCacheSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateCacheSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCacheSubnetGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCacheSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupAlreadyExistsFault'
          description: CacheSubnetGroupAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupQuotaExceededFault'
          description: CacheSubnetGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetQuotaExceededFault'
          description: CacheSubnetQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
          description: SubnetNotAllowedFault
      x-aws-operation-name: CreateCacheSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateGlobalReplicationGroup:
    get:
      description: "<p>Global Datastore for Redis offers fully managed, fast, reliable\
        \ and secure cross-region replication. Using Global Datastore for Redis, you\
        \ can create cross-region read replica clusters for ElastiCache for Redis\
        \ to enable low-latency reads and disaster recovery across regions. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html\"\
        >Replication Across Regions Using Global Datastore</a>. </p> <ul> <li> <p>The\
        \ <b>GlobalReplicationGroupIdSuffix</b> is the name of the Global datastore.</p>\
        \ </li> <li> <p>The <b>PrimaryReplicationGroupId</b> represents the name of\
        \ the primary cluster that accepts writes and will replicate updates to the\
        \ secondary cluster.</p> </li> </ul>"
      operationId: GET_CreateGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The suffix name of a Global datastore. Amazon ElastiCache\
          \ automatically applies a prefix to the Global datastore ID when it is created.\
          \ Each Amazon Region has its own prefix. For instance, a Global datastore\
          \ ID created in the US-West-1 region will begin with \"dsdfu\" along with\
          \ the suffix name you provide. The suffix, combined with the auto-generated\
          \ prefix, guarantees uniqueness of the Global datastore name across multiple\
          \ regions. </p> <p>For a full list of Amazon Regions and their respective\
          \ Global datastore iD prefixes, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastores-CLI.html\"\
          >Using the Amazon CLI with Global datastores </a>.</p>"
        explode: true
        in: query
        name: GlobalReplicationGroupIdSuffix
        required: true
        schema:
          type: string
        style: form
      - description: Provides details of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupDescription
        required: false
        schema:
          type: string
        style: form
      - description: The name of the primary cluster that accepts writes and will
          replicate updates to the secondary cluster.
        explode: true
        in: query
        name: PrimaryReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupAlreadyExistsFault'
          description: GlobalReplicationGroupAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: CreateGlobalReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Global Datastore for Redis offers fully managed, fast, reliable\
        \ and secure cross-region replication. Using Global Datastore for Redis, you\
        \ can create cross-region read replica clusters for ElastiCache for Redis\
        \ to enable low-latency reads and disaster recovery across regions. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html\"\
        >Replication Across Regions Using Global Datastore</a>. </p> <ul> <li> <p>The\
        \ <b>GlobalReplicationGroupIdSuffix</b> is the name of the Global datastore.</p>\
        \ </li> <li> <p>The <b>PrimaryReplicationGroupId</b> represents the name of\
        \ the primary cluster that accepts writes and will replicate updates to the\
        \ secondary cluster.</p> </li> </ul>"
      operationId: POST_CreateGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateGlobalReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupAlreadyExistsFault'
          description: GlobalReplicationGroupAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: CreateGlobalReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateReplicationGroup:
    get:
      description: "<p>Creates a Redis (cluster mode disabled) or a Redis (cluster\
        \ mode enabled) replication group.</p> <p>This API can be used to create a\
        \ standalone regional replication group or a secondary replication group associated\
        \ with a Global datastore.</p> <p>A Redis (cluster mode disabled) replication\
        \ group is a collection of clusters, where one of the clusters is a read/write\
        \ primary and the others are read-only replicas. Writes to the primary are\
        \ asynchronously propagated to the replicas.</p> <p>A Redis cluster-mode enabled\
        \ cluster is comprised of from 1 to 90 shards (API/CLI: node groups). Each\
        \ shard has a primary node and up to 5 read-only replica nodes. The configuration\
        \ can range from 90 shards and 0 replicas to 15 shards and 5 replicas, which\
        \ is the maximum number or replicas allowed. </p> <p>The node or shard limit\
        \ can be increased to a maximum of 500 per cluster if the Redis engine version\
        \ is 5.0.6 or higher. For example, you can choose to configure a 500 node\
        \ cluster that ranges between 83 shards (one primary and 5 replicas per shard)\
        \ and 500 shards (single primary and no replicas). Make sure there are enough\
        \ available IP addresses to accommodate the increase. Common pitfalls include\
        \ the subnets in the subnet group have too small a CIDR range or the subnets\
        \ are shared and heavily used by other clusters. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.Creating.html\"\
        >Creating a Subnet Group</a>. For versions below 5.0.6, the limit is 250 per\
        \ cluster.</p> <p>To request a limit increase, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\"\
        >Amazon Service Limits</a> and choose the limit type <b>Nodes per cluster\
        \ per instance type</b>. </p> <p>When a Redis (cluster mode disabled) replication\
        \ group has been successfully created, you can add one or more read replicas\
        \ to it, up to a total of 5 read replicas. If you need to increase or decrease\
        \ the number of node groups (console: shards), you can avail yourself of ElastiCache\
        \ for Redis' scaling. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Scaling.html\"\
        >Scaling ElastiCache for Redis Clusters</a> in the <i>ElastiCache User Guide</i>.</p>\
        \ <note> <p>This operation is valid for Redis only.</p> </note>"
      operationId: GET_CreateReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The replication group identifier. This parameter is stored
          as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>A name must
          contain from 1 to 40 alphanumeric characters or hyphens.</p> </li> <li>
          <p>The first character must be a letter.</p> </li> <li> <p>A name cannot
          end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: A user-created description for the replication group.
        explode: true
        in: query
        name: ReplicationGroupDescription
        required: true
        schema:
          type: string
        style: form
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The identifier of the cluster that serves as the primary\
          \ for this replication group. This cluster must already exist and have a\
          \ status of <code>available</code>.</p> <p>This parameter is not required\
          \ if <code>NumCacheClusters</code>, <code>NumNodeGroups</code>, or <code>ReplicasPerNodeGroup</code>\
          \ is specified.</p>"
        explode: true
        in: query
        name: PrimaryClusterId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Specifies whether a read-only replica is automatically promoted\
          \ to read/write primary if the existing primary fails.</p> <p> <code>AutomaticFailoverEnabled</code>\
          \ must be enabled for Redis (cluster mode enabled) replication groups.</p>\
          \ <p>Default: false</p>"
        explode: true
        in: query
        name: AutomaticFailoverEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: "A flag indicating if you have Multi-AZ enabled to enhance fault\
          \ tolerance. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html\"\
          >Minimizing Downtime: Multi-AZ</a>."
        explode: true
        in: query
        name: MultiAZEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The number of clusters this replication group initially has.</p>\
          \ <p>This parameter is not used if there is more than one node group (shard).\
          \ You should use <code>ReplicasPerNodeGroup</code> instead.</p> <p>If <code>AutomaticFailoverEnabled</code>\
          \ is <code>true</code>, the value of this parameter must be at least 2.\
          \ If <code>AutomaticFailoverEnabled</code> is <code>false</code> you can\
          \ omit this parameter (it will default to 1), or you can explicitly set\
          \ it to a value between 2 and 6.</p> <p>The maximum permitted value for\
          \ <code>NumCacheClusters</code> is 6 (1 primary plus 5 replicas).</p>"
        explode: true
        in: query
        name: NumCacheClusters
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>A list of EC2 Availability Zones in which the replication\
          \ group's clusters are created. The order of the Availability Zones in the\
          \ list is the order in which clusters are allocated. The primary cluster\
          \ is created in the first AZ in the list.</p> <p>This parameter is not used\
          \ if there is more than one node group (shard). You should use <code>NodeGroupConfiguration</code>\
          \ instead.</p> <note> <p>If you are creating your replication group in an\
          \ Amazon VPC (recommended), you can only locate clusters in Availability\
          \ Zones associated with the subnets in the selected subnet group.</p> <p>The\
          \ number of Availability Zones listed must equal the value of <code>NumCacheClusters</code>.</p>\
          \ </note> <p>Default: system chosen Availability Zones.</p>"
        explode: true
        in: query
        name: PreferredCacheClusterAZs
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AvailabilityZone
          type: array
        style: form
      - description: "<p>An optional parameter that specifies the number of node groups\
          \ (shards) for this Redis (cluster mode enabled) replication group. For\
          \ Redis (cluster mode disabled) either omit this parameter or set it to\
          \ 1.</p> <p>Default: 1</p>"
        explode: true
        in: query
        name: NumNodeGroups
        required: false
        schema:
          type: integer
        style: form
      - description: An optional parameter that specifies the number of replica nodes
          in each node group (shard). Valid values are 0 to 5.
        explode: true
        in: query
        name: ReplicasPerNodeGroup
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>A list of node group (shard) configuration options. Each\
          \ node group (shard) configuration has the following members: <code>PrimaryAvailabilityZone</code>,\
          \ <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>, and\
          \ <code>Slots</code>.</p> <p>If you're creating a Redis (cluster mode disabled)\
          \ or a Redis (cluster mode enabled) replication group, you can use this\
          \ parameter to individually configure each node group (shard), or you can\
          \ omit this parameter. However, it is required when seeding a Redis (cluster\
          \ mode enabled) cluster from a S3 rdb file. You must configure each node\
          \ group (shard) using this parameter because you must specify the slots\
          \ for each node group.</p>"
        explode: true
        in: query
        name: NodeGroupConfiguration
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_CreateReplicationGroup_NodeGroupConfiguration_parameter_inner'
          type: array
        style: form
      - description: "<p>The compute and memory capacity of the nodes in the node\
          \ group (shard).</p> <p>The following node types are supported by ElastiCache.\
          \ Generally speaking, the current generation types provide more memory and\
          \ computational power at lower cost when compared to their equivalent previous\
          \ generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li>\
          \ <p>Current generation: </p> <p> <b>M6g node types</b> (available only\
          \ for Redis engine version 5.0.6 onward and for Memcached engine version\
          \ 1.5.16 onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
          \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
          \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p>\
          \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
          >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
          \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
          \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p>\
          \ <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
          \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
          \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
          \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
          \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p> <b>T3\
          \ node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
          \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
          \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li>\
          \ <p>Previous generation: (not recommended. Existing clusters are still\
          \ supported but creation of new clusters is not supported for these types.)</p>\
          \ <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node\
          \ types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
          \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3\
          \ node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
          \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
          \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
          \ (not recommended. Existing clusters are still supported but creation of\
          \ new clusters is not supported for these types.)</p> <p> <b>C1 node types:</b>\
          \ <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p>\
          \ <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available\
          \ only for Redis engine version 5.0.6 onward and for Memcached engine version\
          \ 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>,\
          \ <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>,\
          \ <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p>\
          \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
          >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
          \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
          \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p>\
          \ <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
          \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
          \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
          \ (not recommended. Existing clusters are still supported but creation of\
          \ new clusters is not supported for these types.)</p> <p> <b>M2 node types:</b>\
          \ <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code>\
          \ </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,\
          \ <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>\
          \ </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p>\
          \ <ul> <li> <p>All current generation instance types are created in Amazon\
          \ VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not\
          \ supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with\
          \ automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis\
          \ configuration variables <code>appendonly</code> and <code>appendfsync</code>\
          \ are not supported on Redis version 2.8.22 and later.</p> </li> </ul>"
        explode: true
        in: query
        name: CacheNodeType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the cache engine to be used for the clusters in this
          replication group. The value must be set to <code>Redis</code>.
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The version number of the cache engine to be used for the\
          \ clusters in this replication group. To view the supported cache engine\
          \ versions, use the <code>DescribeCacheEngineVersions</code> operation.</p>\
          \ <p> <b>Important:</b> You can upgrade to a newer engine version (see <a\
          \ href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement\"\
          >Selecting a Cache Engine and Version</a>) in the <i>ElastiCache User Guide</i>,\
          \ but you cannot downgrade to an earlier engine version. If you want to\
          \ use an earlier engine version, you must delete the existing cluster or\
          \ replication group and create it anew with the earlier engine version.\
          \ </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the parameter group to associate with this replication\
          \ group. If this argument is omitted, the default cache parameter group\
          \ for the specified engine is used.</p> <p>If you are running Redis version\
          \ 3.2.4 or later, only one node group (shard), and want to use a default\
          \ parameter group, we recommend that you specify the parameter group by\
          \ name. </p> <ul> <li> <p>To create a Redis (cluster mode disabled) replication\
          \ group, use <code>CacheParameterGroupName=default.redis3.2</code>.</p>\
          \ </li> <li> <p>To create a Redis (cluster mode enabled) replication group,\
          \ use <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: CacheParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the cache subnet group to be used for the replication\
          \ group.</p> <important> <p>If you're going to launch your cluster in an\
          \ Amazon VPC, you need to create a subnet group before you start creating\
          \ a cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html\"\
          >Subnets and Subnet Groups</a>.</p> </important>"
        explode: true
        in: query
        name: CacheSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A list of cache security group names to associate with this replication
          group.
        explode: true
        in: query
        name: CacheSecurityGroupNames
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: CacheSecurityGroupName
          type: array
        style: form
      - description: <p>One or more Amazon VPC security groups associated with this
          replication group.</p> <p>Use this parameter only when you are creating
          a replication group in an Amazon Virtual Private Cloud (Amazon VPC).</p>
        explode: true
        in: query
        name: SecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SecurityGroupId
          type: array
        style: form
      - description: "A list of tags to be added to this resource. Tags are comma-separated\
          \ key,value pairs (e.g. Key=<code>myKey</code>, Value=<code>myKeyValue</code>.\
          \ You can include multiple tags as shown following: Key=<code>myKey</code>,\
          \ Value=<code>myKeyValue</code> Key=<code>mySecondKey</code>, Value=<code>mySecondKeyValue</code>.\
          \ Tags on replication groups will be replicated to all nodes."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: "<p>A list of Amazon Resource Names (ARN) that uniquely identify\
          \ the Redis RDB snapshot files stored in Amazon S3. The snapshot files are\
          \ used to populate the new replication group. The Amazon S3 object name\
          \ in the ARN cannot contain any commas. The new replication group will have\
          \ the number of node groups (console: shards) specified by the parameter\
          \ <i>NumNodeGroups</i> or the number of node groups configured by <i>NodeGroupConfiguration</i>\
          \ regardless of the number of ARNs specified here.</p> <p>Example of an\
          \ Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>"
        explode: true
        in: query
        name: SnapshotArns
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SnapshotArn
          type: array
        style: form
      - description: The name of a snapshot from which to restore data into the new
          replication group. The snapshot status changes to <code>restoring</code>
          while the new replication group is being created.
        explode: true
        in: query
        name: SnapshotName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Specifies the weekly time range during which maintenance\
          \ on the cluster is performed. It is specified as a range in the format\
          \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
          \ is a 60 minute period. Valid values for <code>ddd</code> are:</p> <p>Specifies\
          \ the weekly time range during which maintenance on the cluster is performed.\
          \ It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H\
          \ Clock UTC). The minimum maintenance window is a 60 minute period.</p>\
          \ <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code>\
          \ </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code>\
          \ </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code>\
          \ </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code>\
          \ </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: The port number on which each member of the replication group
          accepts connections.
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification
          Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon
          SNS topic owner must be the same as the cluster owner.</p> </note>
        explode: true
        in: query
        name: NotificationTopicArn
        required: false
        schema:
          type: string
        style: form
      - description: "\_If you are running Redis engine version 6.0 or later, set\
          \ this parameter to yes if you want to opt-in to the next auto minor version\
          \ upgrade campaign. This parameter is disabled for previous versions.\_ "
        explode: true
        in: query
        name: AutoMinorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The number of days for which ElastiCache retains automatic\
          \ snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>\
          \ to 5, a snapshot that was taken today is retained for 5 days before being\
          \ deleted.</p> <p>Default: 0 (i.e., automatic backups are disabled for this\
          \ cluster).</p>"
        explode: true
        in: query
        name: SnapshotRetentionLimit
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The daily time range (in UTC) during which ElastiCache begins\
          \ taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code>\
          \ </p> <p>If you do not specify this parameter, ElastiCache automatically\
          \ chooses an appropriate time range.</p>"
        explode: true
        in: query
        name: SnapshotWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p> <b>Reserved parameter.</b> The password used to access a\
          \ password protected server.</p> <p> <code>AuthToken</code> can be specified\
          \ only on replication groups where <code>TransitEncryptionEnabled</code>\
          \ is <code>true</code>.</p> <important> <p>For HIPAA compliance, you must\
          \ specify <code>TransitEncryptionEnabled</code> as <code>true</code>, an\
          \ <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p> </important>\
          \ <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII\
          \ characters.</p> </li> <li> <p>Must be at least 16 characters and no more\
          \ than 128 characters in length.</p> </li> <li> <p>The only permitted printable\
          \ special characters are !, &amp;, #, $, ^, &lt;, &gt;, and -. Other printable\
          \ special characters cannot be used in the AUTH token.</p> </li> </ul> <p>For\
          \ more information, see <a href=\"http://redis.io/commands/AUTH\">AUTH password</a>\
          \ at http://redis.io/commands/AUTH.</p>"
        explode: true
        in: query
        name: AuthToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A flag that enables in-transit encryption when set to <code>true</code>.</p>\
          \ <p>This parameter is valid only if the <code>Engine</code> parameter is\
          \ <code>redis</code>, the <code>EngineVersion</code> parameter is <code>3.2.6</code>,\
          \ <code>4.x</code> or later, and the cluster is being created in an Amazon\
          \ VPC.</p> <p>If you enable in-transit encryption, you must also specify\
          \ a value for <code>CacheSubnetGroup</code>.</p> <p> <b>Required:</b> Only\
          \ available when creating a replication group in an Amazon VPC using redis\
          \ version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default:\
          \ <code>false</code> </p> <important> <p>For HIPAA compliance, you must\
          \ specify <code>TransitEncryptionEnabled</code> as <code>true</code>, an\
          \ <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p> </important>"
        explode: true
        in: query
        name: TransitEncryptionEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>A flag that enables encryption at rest when set to <code>true</code>.</p>\
          \ <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code>\
          \ after the replication group is created. To enable encryption at rest on\
          \ a replication group you must set <code>AtRestEncryptionEnabled</code>\
          \ to <code>true</code> when you create the replication group. </p> <p> <b>Required:</b>\
          \ Only available when creating a replication group in an Amazon VPC using\
          \ redis version <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default:\
          \ <code>false</code> </p>"
        explode: true
        in: query
        name: AtRestEncryptionEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the KMS key used to encrypt the disk in the cluster.
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: The user group to associate with the replication group.
        explode: true
        in: query
        name: UserGroupIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/UserGroupId'
          minItems: 1
          type: array
        style: form
      - description: "Specifies the destination, format and type of the logs."
        explode: true
        in: query
        name: LogDeliveryConfigurations
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_CreateCacheCluster_LogDeliveryConfigurations_parameter_inner'
          type: array
        style: form
      - description: "Enables data tiering. Data tiering is only supported for replication\
          \ groups using the r6gd node type. This parameter must be set to true when\
          \ using r6gd nodes. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/data-tiering.html\"\
          >Data tiering</a>."
        explode: true
        in: query
        name: DataTieringEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: Must be either <code>ipv4</code> | <code>ipv6</code> | <code>dual_stack</code>.
          IPv6 is supported for workloads using Redis engine version 6.2 onward or
          Memcached engine version 1.6.6 on all instances built on the <a href="https://aws.amazon.com/ec2/nitro/">Nitro
          system</a>.
        explode: true
        in: query
        name: NetworkType
        required: false
        schema:
          enum:
          - ipv4
          - ipv6
          - dual_stack
          type: string
        style: form
      - description: "The network type you choose when creating a replication group,\
          \ either <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported for workloads\
          \ using Redis engine version 6.2 onward or Memcached engine version 1.6.6\
          \ on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
          >Nitro system</a>."
        explode: true
        in: query
        name: IpDiscovery
        required: false
        schema:
          enum:
          - ipv4
          - ipv6
          type: string
        style: form
      - description: "<p>A setting that allows you to migrate your clients to use\
          \ in-transit encryption, with no downtime.</p> <p>When setting <code>TransitEncryptionEnabled</code>\
          \ to <code>true</code>, you can set your <code>TransitEncryptionMode</code>\
          \ to <code>preferred</code> in the same request, to allow both encrypted\
          \ and unencrypted connections at the same time. Once you migrate all your\
          \ Redis clients to use encrypted connections you can modify the value to\
          \ <code>required</code> to allow encrypted connections only.</p> <p>Setting\
          \ <code>TransitEncryptionMode</code> to <code>required</code> is a two-step\
          \ process that requires you to first set the <code>TransitEncryptionMode</code>\
          \ to <code>preferred</code> first, after that you can set <code>TransitEncryptionMode</code>\
          \ to <code>required</code>. </p>"
        explode: true
        in: query
        name: TransitEncryptionMode
        required: false
        schema:
          enum:
          - preferred
          - required
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupAlreadyExistsFault'
          description: ReplicationGroupAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
          description: InvalidUserGroupStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "497":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "498":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CreateReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a Redis (cluster mode disabled) or a Redis (cluster\
        \ mode enabled) replication group.</p> <p>This API can be used to create a\
        \ standalone regional replication group or a secondary replication group associated\
        \ with a Global datastore.</p> <p>A Redis (cluster mode disabled) replication\
        \ group is a collection of clusters, where one of the clusters is a read/write\
        \ primary and the others are read-only replicas. Writes to the primary are\
        \ asynchronously propagated to the replicas.</p> <p>A Redis cluster-mode enabled\
        \ cluster is comprised of from 1 to 90 shards (API/CLI: node groups). Each\
        \ shard has a primary node and up to 5 read-only replica nodes. The configuration\
        \ can range from 90 shards and 0 replicas to 15 shards and 5 replicas, which\
        \ is the maximum number or replicas allowed. </p> <p>The node or shard limit\
        \ can be increased to a maximum of 500 per cluster if the Redis engine version\
        \ is 5.0.6 or higher. For example, you can choose to configure a 500 node\
        \ cluster that ranges between 83 shards (one primary and 5 replicas per shard)\
        \ and 500 shards (single primary and no replicas). Make sure there are enough\
        \ available IP addresses to accommodate the increase. Common pitfalls include\
        \ the subnets in the subnet group have too small a CIDR range or the subnets\
        \ are shared and heavily used by other clusters. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.Creating.html\"\
        >Creating a Subnet Group</a>. For versions below 5.0.6, the limit is 250 per\
        \ cluster.</p> <p>To request a limit increase, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\"\
        >Amazon Service Limits</a> and choose the limit type <b>Nodes per cluster\
        \ per instance type</b>. </p> <p>When a Redis (cluster mode disabled) replication\
        \ group has been successfully created, you can add one or more read replicas\
        \ to it, up to a total of 5 read replicas. If you need to increase or decrease\
        \ the number of node groups (console: shards), you can avail yourself of ElastiCache\
        \ for Redis' scaling. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Scaling.html\"\
        >Scaling ElastiCache for Redis Clusters</a> in the <i>ElastiCache User Guide</i>.</p>\
        \ <note> <p>This operation is valid for Redis only.</p> </note>"
      operationId: POST_CreateReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupAlreadyExistsFault'
          description: ReplicationGroupAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
          description: InvalidUserGroupStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "497":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "498":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: CreateReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateSnapshot:
    get:
      description: <p>Creates a copy of an entire cluster or replication group at
        a specific moment in time.</p> <note> <p>This operation is valid for Redis
        only.</p> </note>
      operationId: GET_CreateSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of an existing replication group. The snapshot
          is created from this replication group.
        explode: true
        in: query
        name: ReplicationGroupId
        required: false
        schema:
          type: string
        style: form
      - description: The identifier of an existing cluster. The snapshot is created
          from this cluster.
        explode: true
        in: query
        name: CacheClusterId
        required: false
        schema:
          type: string
        style: form
      - description: A name for the snapshot being created.
        explode: true
        in: query
        name: SnapshotName
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the KMS key used to encrypt the snapshot.
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
          description: SnapshotFeatureNotSupportedFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: CreateSnapshot
      x-accepts:
      - text/xml
    post:
      description: <p>Creates a copy of an entire cluster or replication group at
        a specific moment in time.</p> <note> <p>This operation is valid for Redis
        only.</p> </note>
      operationId: POST_CreateSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
          description: SnapshotFeatureNotSupportedFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: CreateSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateUser:
    get:
      description: "For Redis engine version 6.0 onwards: Creates a Redis user. For\
        \ more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\"\
        >Using Role Based Access Control (RBAC)</a>."
      operationId: GET_CreateUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the user.
        explode: true
        in: query
        name: UserId
        required: true
        schema:
          minLength: 1
          pattern: "[a-zA-Z][a-zA-Z0-9\\-]*"
          type: string
        style: form
      - description: The username of the user.
        explode: true
        in: query
        name: UserName
        required: true
        schema:
          minLength: 1
          type: string
        style: form
      - description: 'The current supported value is Redis. '
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          pattern: "[a-zA-Z]*"
          type: string
        style: form
      - description: Passwords used for this user. You can create up to two passwords
          for each user.
        explode: true
        in: query
        name: Passwords
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          minItems: 1
          type: array
        style: form
      - description: Access permissions string used for this user.
        explode: true
        in: query
        name: AccessString
        required: true
        schema:
          pattern: .*\S.*
          type: string
        style: form
      - description: Indicates a password is not required for this user.
        explode: true
        in: query
        name: NoPasswordRequired
        required: false
        schema:
          type: boolean
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: Specifies how to authenticate the user.
        explode: true
        in: query
        name: AuthenticationMode
        required: false
        schema:
          $ref: '#/components/schemas/GET_CreateUser_AuthenticationMode_parameter'
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateUser
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserAlreadyExistsFault'
          description: UserAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserQuotaExceededFault'
          description: UserQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-aws-operation-name: CreateUser
      x-accepts:
      - text/xml
    post:
      description: "For Redis engine version 6.0 onwards: Creates a Redis user. For\
        \ more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\"\
        >Using Role Based Access Control (RBAC)</a>."
      operationId: POST_CreateUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateUser
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateUserMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserAlreadyExistsFault'
          description: UserAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserQuotaExceededFault'
          description: UserQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-aws-operation-name: CreateUser
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateUserGroup:
    get:
      description: "For Redis engine version 6.0 onwards: Creates a Redis user group.\
        \ For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\"\
        >Using Role Based Access Control (RBAC)</a> "
      operationId: GET_CreateUserGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the user group.
        explode: true
        in: query
        name: UserGroupId
        required: true
        schema:
          type: string
        style: form
      - description: 'The current supported value is Redis. '
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          pattern: "[a-zA-Z]*"
          type: string
        style: form
      - description: The list of user IDs that belong to the user group.
        explode: true
        in: query
        name: UserIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/UserId'
          minItems: 1
          type: array
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateUserGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupAlreadyExistsFault'
          description: UserGroupAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
          description: DefaultUserRequired
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupQuotaExceededFault'
          description: UserGroupQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-aws-operation-name: CreateUserGroup
      x-accepts:
      - text/xml
    post:
      description: "For Redis engine version 6.0 onwards: Creates a Redis user group.\
        \ For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\"\
        >Using Role Based Access Control (RBAC)</a> "
      operationId: POST_CreateUserGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateUserGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateUserGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupAlreadyExistsFault'
          description: UserGroupAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
          description: DefaultUserRequired
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupQuotaExceededFault'
          description: UserGroupQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-aws-operation-name: CreateUserGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DecreaseNodeGroupsInGlobalReplicationGroup:
    get:
      description: Decreases the number of node groups in a Global datastore
      operationId: GET_DecreaseNodeGroupsInGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: The number of node groups (shards) that results from the modification
          of the shard configuration
        explode: true
        in: query
        name: NodeGroupCount
        required: true
        schema:
          type: integer
        style: form
      - description: "If the value of NodeGroupCount is less than the current number\
          \ of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain\
          \ is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to remove\
          \ from the cluster. ElastiCache for Redis will attempt to remove all node\
          \ groups listed by GlobalNodeGroupsToRemove from the cluster. "
        explode: true
        in: query
        name: GlobalNodeGroupsToRemove
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: GlobalNodeGroupId
          type: array
        style: form
      - description: "If the value of NodeGroupCount is less than the current number\
          \ of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain\
          \ is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to retain\
          \ from the cluster. ElastiCache for Redis will attempt to retain all node\
          \ groups listed by GlobalNodeGroupsToRetain from the cluster. "
        explode: true
        in: query
        name: GlobalNodeGroupsToRetain
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: GlobalNodeGroupId
          type: array
        style: form
      - description: "Indicates that the shard reconfiguration process begins immediately.\
          \ At present, the only permitted value for this parameter is true. "
        explode: true
        in: query
        name: ApplyImmediately
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DecreaseNodeGroupsInGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecreaseNodeGroupsInGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DecreaseNodeGroupsInGlobalReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: Decreases the number of node groups in a Global datastore
      operationId: POST_DecreaseNodeGroupsInGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DecreaseNodeGroupsInGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DecreaseNodeGroupsInGlobalReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecreaseNodeGroupsInGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DecreaseNodeGroupsInGlobalReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DecreaseReplicaCount:
    get:
      description: Dynamically decreases the number of replicas in a Redis (cluster
        mode disabled) replication group or the number of replica nodes in one or
        more node groups (shards) of a Redis (cluster mode enabled) replication group.
        This operation is performed with no cluster down time.
      operationId: GET_DecreaseReplicaCount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The id of the replication group from which you want to remove
          replica nodes.
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The number of read replica nodes you want at the completion\
          \ of this operation. For Redis (cluster mode disabled) replication groups,\
          \ this is the number of replica nodes in the replication group. For Redis\
          \ (cluster mode enabled) replication groups, this is the number of replica\
          \ nodes in each of the replication group's node groups.</p> <p>The minimum\
          \ number of replicas in a shard or replication group is:</p> <ul> <li> <p>Redis\
          \ (cluster mode disabled)</p> <ul> <li> <p>If Multi-AZ is enabled: 1</p>\
          \ </li> <li> <p>If Multi-AZ is not enabled: 0</p> </li> </ul> </li> <li>\
          \ <p>Redis (cluster mode enabled): 0 (though you will not be able to failover\
          \ to a replica if your primary node fails)</p> </li> </ul>"
        explode: true
        in: query
        name: NewReplicaCount
        required: false
        schema:
          type: integer
        style: form
      - description: "A list of <code>ConfigureShard</code> objects that can be used\
          \ to configure each shard in a Redis (cluster mode enabled) replication\
          \ group. The <code>ConfigureShard</code> has three members: <code>NewReplicaCount</code>,\
          \ <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>."
        explode: true
        in: query
        name: ReplicaConfiguration
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DecreaseReplicaCount_ReplicaConfiguration_parameter_inner'
          type: array
        style: form
      - description: A list of the node ids to remove from the replication group or
          node group (shard).
        explode: true
        in: query
        name: ReplicasToRemove
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "If <code>True</code>, the number of replica nodes is decreased\
          \ immediately. <code>ApplyImmediately=False</code> is not currently supported."
        explode: true
        in: query
        name: ApplyImmediately
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DecreaseReplicaCount
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecreaseReplicaCountResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
          description: NoOperationFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DecreaseReplicaCount
      x-accepts:
      - text/xml
    post:
      description: Dynamically decreases the number of replicas in a Redis (cluster
        mode disabled) replication group or the number of replica nodes in one or
        more node groups (shards) of a Redis (cluster mode enabled) replication group.
        This operation is performed with no cluster down time.
      operationId: POST_DecreaseReplicaCount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DecreaseReplicaCount
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DecreaseReplicaCountMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecreaseReplicaCountResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
          description: NoOperationFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DecreaseReplicaCount
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteCacheCluster:
    get:
      description: "<p>Deletes a previously provisioned cluster. <code>DeleteCacheCluster</code>\
        \ deletes all associated cache nodes, node endpoints and the cluster itself.\
        \ When you receive a successful response from this operation, Amazon ElastiCache\
        \ immediately begins deleting the cluster; you cannot cancel or revert this\
        \ operation.</p> <p>This operation is not valid for:</p> <ul> <li> <p>Redis\
        \ (cluster mode enabled) clusters</p> </li> <li> <p>Redis (cluster mode disabled)\
        \ clusters</p> </li> <li> <p>A cluster that is the last read replica of a\
        \ replication group</p> </li> <li> <p>A cluster that is the primary node of\
        \ a replication group</p> </li> <li> <p>A node group (shard) that has Multi-AZ\
        \ mode enabled</p> </li> <li> <p>A cluster from a Redis (cluster mode enabled)\
        \ replication group</p> </li> <li> <p>A cluster that is not in the <code>available</code>\
        \ state</p> </li> </ul>"
      operationId: GET_DeleteCacheCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The cluster identifier for the cluster to be deleted. This parameter
          is not case sensitive.
        explode: true
        in: query
        name: CacheClusterId
        required: true
        schema:
          type: string
        style: form
      - description: "The user-supplied name of a final cluster snapshot. This is\
          \ the unique name that identifies the snapshot. ElastiCache creates the\
          \ snapshot, and then deletes the cluster immediately afterward."
        explode: true
        in: query
        name: FinalSnapshotIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteCacheCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteCacheClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
          description: SnapshotFeatureNotSupportedFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteCacheCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes a previously provisioned cluster. <code>DeleteCacheCluster</code>\
        \ deletes all associated cache nodes, node endpoints and the cluster itself.\
        \ When you receive a successful response from this operation, Amazon ElastiCache\
        \ immediately begins deleting the cluster; you cannot cancel or revert this\
        \ operation.</p> <p>This operation is not valid for:</p> <ul> <li> <p>Redis\
        \ (cluster mode enabled) clusters</p> </li> <li> <p>Redis (cluster mode disabled)\
        \ clusters</p> </li> <li> <p>A cluster that is the last read replica of a\
        \ replication group</p> </li> <li> <p>A cluster that is the primary node of\
        \ a replication group</p> </li> <li> <p>A node group (shard) that has Multi-AZ\
        \ mode enabled</p> </li> <li> <p>A cluster from a Redis (cluster mode enabled)\
        \ replication group</p> </li> <li> <p>A cluster that is not in the <code>available</code>\
        \ state</p> </li> </ul>"
      operationId: POST_DeleteCacheCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteCacheCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCacheClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteCacheClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
          description: SnapshotFeatureNotSupportedFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteCacheCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteCacheParameterGroup:
    get:
      description: Deletes the specified cache parameter group. You cannot delete
        a cache parameter group if it is associated with any cache clusters. You cannot
        delete the default cache parameter groups in your account.
      operationId: GET_DeleteCacheParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the cache parameter group to delete.</p> <note>
          <p>The specified cache security group must not be associated with any clusters.</p>
          </note>
        explode: true
        in: query
        name: CacheParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteCacheParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
          description: InvalidCacheParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteCacheParameterGroup
      x-accepts:
      - text/xml
    post:
      description: Deletes the specified cache parameter group. You cannot delete
        a cache parameter group if it is associated with any cache clusters. You cannot
        delete the default cache parameter groups in your account.
      operationId: POST_DeleteCacheParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteCacheParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCacheParameterGroupMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
          description: InvalidCacheParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteCacheParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteCacheSecurityGroup:
    get:
      description: <p>Deletes a cache security group.</p> <note> <p>You cannot delete
        a cache security group if it is associated with any clusters.</p> </note>
      operationId: GET_DeleteCacheSecurityGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the cache security group to delete.</p> <note>
          <p>You cannot delete the default security group.</p> </note>
        explode: true
        in: query
        name: CacheSecurityGroupName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteCacheSecurityGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteCacheSecurityGroup
      x-accepts:
      - text/xml
    post:
      description: <p>Deletes a cache security group.</p> <note> <p>You cannot delete
        a cache security group if it is associated with any clusters.</p> </note>
      operationId: POST_DeleteCacheSecurityGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteCacheSecurityGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCacheSecurityGroupMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteCacheSecurityGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteCacheSubnetGroup:
    get:
      description: <p>Deletes a cache subnet group.</p> <note> <p>You cannot delete
        a default cache subnet group or one that is associated with any clusters.</p>
        </note>
      operationId: GET_DeleteCacheSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the cache subnet group to delete.</p> <p>Constraints:\
          \ Must contain no more than 255 alphanumeric characters or hyphens.</p>"
        explode: true
        in: query
        name: CacheSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteCacheSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupInUse'
          description: CacheSubnetGroupInUse
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
      x-aws-operation-name: DeleteCacheSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: <p>Deletes a cache subnet group.</p> <note> <p>You cannot delete
        a default cache subnet group or one that is associated with any clusters.</p>
        </note>
      operationId: POST_DeleteCacheSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteCacheSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteCacheSubnetGroupMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupInUse'
          description: CacheSubnetGroupInUse
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
      x-aws-operation-name: DeleteCacheSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteGlobalReplicationGroup:
    get:
      description: "<p>Deleting a Global datastore is a two-step process: </p> <ul>\
        \ <li> <p>First, you must <a>DisassociateGlobalReplicationGroup</a> to remove\
        \ the secondary clusters in the Global datastore.</p> </li> <li> <p>Once the\
        \ Global datastore contains only the primary cluster, you can use the <code>DeleteGlobalReplicationGroup</code>\
        \ API to delete the Global datastore while retainining the primary cluster\
        \ using <code>RetainPrimaryReplicationGroup=true</code>.</p> </li> </ul> <p>Since\
        \ the Global Datastore has only a primary cluster, you can delete the Global\
        \ Datastore while retaining the primary by setting <code>RetainPrimaryReplicationGroup=true</code>.\
        \ The primary cluster is never deleted when deleting a Global Datastore. It\
        \ can only be deleted when it no longer is associated with any Global Datastore.</p>\
        \ <p>When you receive a successful response from this operation, Amazon ElastiCache\
        \ immediately begins deleting the selected resources; you cannot cancel or\
        \ revert this operation.</p>"
      operationId: GET_DeleteGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: 'The primary replication group is retained as a standalone replication
          group. '
        explode: true
        in: query
        name: RetainPrimaryReplicationGroup
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: DeleteGlobalReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Deleting a Global datastore is a two-step process: </p> <ul>\
        \ <li> <p>First, you must <a>DisassociateGlobalReplicationGroup</a> to remove\
        \ the secondary clusters in the Global datastore.</p> </li> <li> <p>Once the\
        \ Global datastore contains only the primary cluster, you can use the <code>DeleteGlobalReplicationGroup</code>\
        \ API to delete the Global datastore while retainining the primary cluster\
        \ using <code>RetainPrimaryReplicationGroup=true</code>.</p> </li> </ul> <p>Since\
        \ the Global Datastore has only a primary cluster, you can delete the Global\
        \ Datastore while retaining the primary by setting <code>RetainPrimaryReplicationGroup=true</code>.\
        \ The primary cluster is never deleted when deleting a Global Datastore. It\
        \ can only be deleted when it no longer is associated with any Global Datastore.</p>\
        \ <p>When you receive a successful response from this operation, Amazon ElastiCache\
        \ immediately begins deleting the selected resources; you cannot cancel or\
        \ revert this operation.</p>"
      operationId: POST_DeleteGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteGlobalReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: DeleteGlobalReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteReplicationGroup:
    get:
      description: "<p>Deletes an existing replication group. By default, this operation\
        \ deletes the entire replication group, including the primary/primaries and\
        \ all of the read replicas. If the replication group has only one primary,\
        \ you can optionally delete only the read replicas, while retaining the primary\
        \ by setting <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive\
        \ a successful response from this operation, Amazon ElastiCache immediately\
        \ begins deleting the selected resources; you cannot cancel or revert this\
        \ operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>"
      operationId: GET_DeleteReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier for the cluster to be deleted. This parameter
          is not case sensitive.
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: "If set to <code>true</code>, all of the read replicas are deleted,\
          \ but the primary node is retained."
        explode: true
        in: query
        name: RetainPrimaryCluster
        required: false
        schema:
          type: boolean
        style: form
      - description: "The name of a final node group (shard) snapshot. ElastiCache\
          \ creates the snapshot from the primary node in the cluster, rather than\
          \ one of the replicas; this is to ensure that it captures the freshest data.\
          \ After the final snapshot is taken, the replication group is immediately\
          \ deleted."
        explode: true
        in: query
        name: FinalSnapshotIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
          description: SnapshotFeatureNotSupportedFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes an existing replication group. By default, this operation\
        \ deletes the entire replication group, including the primary/primaries and\
        \ all of the read replicas. If the replication group has only one primary,\
        \ you can optionally delete only the read replicas, while retaining the primary\
        \ by setting <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive\
        \ a successful response from this operation, Amazon ElastiCache immediately\
        \ begins deleting the selected resources; you cannot cancel or revert this\
        \ operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>"
      operationId: POST_DeleteReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotFeatureNotSupportedFault'
          description: SnapshotFeatureNotSupportedFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteSnapshot:
    get:
      description: "<p>Deletes an existing snapshot. When you receive a successful\
        \ response from this operation, ElastiCache immediately begins deleting the\
        \ snapshot; you cannot cancel or revert this operation.</p> <note> <p>This\
        \ operation is valid for Redis only.</p> </note>"
      operationId: GET_DeleteSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the snapshot to be deleted.
        explode: true
        in: query
        name: SnapshotName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
          description: InvalidSnapshotStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteSnapshot
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes an existing snapshot. When you receive a successful\
        \ response from this operation, ElastiCache immediately begins deleting the\
        \ snapshot; you cannot cancel or revert this operation.</p> <note> <p>This\
        \ operation is valid for Redis only.</p> </note>"
      operationId: POST_DeleteSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
          description: InvalidSnapshotStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DeleteSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteUser:
    get:
      description: "For Redis engine version 6.0 onwards: Deletes a user. The user\
        \ will be removed from all user groups and in turn removed from all replication\
        \ groups. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\"\
        >Using Role Based Access Control (RBAC)</a>. "
      operationId: GET_DeleteUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the user.
        explode: true
        in: query
        name: UserId
        required: true
        schema:
          minLength: 1
          pattern: "[a-zA-Z][a-zA-Z0-9\\-]*"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteUser
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
          description: InvalidUserStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserAssociatedToUserGroupFault'
          description: DefaultUserAssociatedToUserGroupFault
      x-aws-operation-name: DeleteUser
      x-accepts:
      - text/xml
    post:
      description: "For Redis engine version 6.0 onwards: Deletes a user. The user\
        \ will be removed from all user groups and in turn removed from all replication\
        \ groups. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\"\
        >Using Role Based Access Control (RBAC)</a>. "
      operationId: POST_DeleteUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteUser
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
          description: InvalidUserStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserAssociatedToUserGroupFault'
          description: DefaultUserAssociatedToUserGroupFault
      x-aws-operation-name: DeleteUser
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteUserGroup:
    get:
      description: "For Redis engine version 6.0 onwards: Deletes a user group. The\
        \ user group must first be disassociated from the replication group before\
        \ it can be deleted. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\"\
        >Using Role Based Access Control (RBAC)</a>. "
      operationId: GET_DeleteUserGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the user group.
        explode: true
        in: query
        name: UserGroupId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteUserGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
          description: InvalidUserGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: DeleteUserGroup
      x-accepts:
      - text/xml
    post:
      description: "For Redis engine version 6.0 onwards: Deletes a user group. The\
        \ user group must first be disassociated from the replication group before\
        \ it can be deleted. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\"\
        >Using Role Based Access Control (RBAC)</a>. "
      operationId: POST_DeleteUserGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteUserGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
          description: InvalidUserGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: DeleteUserGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeCacheClusters:
    get:
      description: "<p>Returns information about all provisioned clusters if no cluster\
        \ identifier is specified, or about a specific cache cluster if a cluster\
        \ identifier is supplied.</p> <p>By default, abbreviated information about\
        \ the clusters is returned. You can use the optional <i>ShowCacheNodeInfo</i>\
        \ flag to retrieve detailed information about the cache nodes associated with\
        \ the clusters. These details include the DNS address and port for the cache\
        \ node endpoint.</p> <p>If the cluster is in the <i>creating</i> state, only\
        \ cluster-level information is displayed until all of the nodes are successfully\
        \ provisioned.</p> <p>If the cluster is in the <i>deleting</i> state, only\
        \ cluster-level information is displayed.</p> <p>If cache nodes are currently\
        \ being added to the cluster, node endpoint information and creation time\
        \ for the additional nodes are not displayed until they are completely provisioned.\
        \ When the cluster state is <i>available</i>, the cluster is ready for use.</p>\
        \ <p>If cache nodes are currently being removed from the cluster, no endpoint\
        \ information for the removed nodes is displayed.</p>"
      operationId: GET_DescribeCacheClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The user-supplied cluster identifier. If this parameter is specified,\
          \ only information about that specific cluster is returned. This parameter\
          \ isn't case sensitive."
        explode: true
        in: query
        name: CacheClusterId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: An optional flag that can be included in the <code>DescribeCacheCluster</code>
          request to retrieve information about the individual cache nodes.
        explode: true
        in: query
        name: ShowCacheNodeInfo
        required: false
        schema:
          type: boolean
        style: form
      - description: "An optional flag that can be included in the <code>DescribeCacheCluster</code>\
          \ request to show only nodes (API/CLI: clusters) that are not members of\
          \ a replication group. In practice, this mean Memcached and single node\
          \ Redis clusters."
        explode: true
        in: query
        name: ShowCacheClustersNotInReplicationGroups
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeCacheClusters
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns information about all provisioned clusters if no cluster\
        \ identifier is specified, or about a specific cache cluster if a cluster\
        \ identifier is supplied.</p> <p>By default, abbreviated information about\
        \ the clusters is returned. You can use the optional <i>ShowCacheNodeInfo</i>\
        \ flag to retrieve detailed information about the cache nodes associated with\
        \ the clusters. These details include the DNS address and port for the cache\
        \ node endpoint.</p> <p>If the cluster is in the <i>creating</i> state, only\
        \ cluster-level information is displayed until all of the nodes are successfully\
        \ provisioned.</p> <p>If the cluster is in the <i>deleting</i> state, only\
        \ cluster-level information is displayed.</p> <p>If cache nodes are currently\
        \ being added to the cluster, node endpoint information and creation time\
        \ for the additional nodes are not displayed until they are completely provisioned.\
        \ When the cluster state is <i>available</i>, the cluster is ready for use.</p>\
        \ <p>If cache nodes are currently being removed from the cluster, no endpoint\
        \ information for the removed nodes is displayed.</p>"
      operationId: POST_DescribeCacheClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheClustersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeCacheClusters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeCacheEngineVersions:
    get:
      description: Returns a list of the available cache engines and their versions.
      operationId: GET_DescribeCacheEngineVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The cache engine to return. Valid values: <code>memcached</code>\
          \ | <code>redis</code> "
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The cache engine version to return.</p> <p>Example: <code>1.4.14</code>\
          \ </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of a specific cache parameter group family to return\
          \ details for.</p> <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code>\
          \ | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code>\
          \ | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code>\
          \ | <code>redis6.x</code> | <code>redis6.2</code> | <code>redis7</code>\
          \ </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p>\
          \ </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot\
          \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        explode: true
        in: query
        name: CacheParameterGroupFamily
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: "If <code>true</code>, specifies that only the default version\
          \ of the specified engine or engine and major version combination is to\
          \ be returned."
        explode: true
        in: query
        name: DefaultOnly
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheEngineVersions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheEngineVersionMessage'
          description: Success
      x-aws-operation-name: DescribeCacheEngineVersions
      x-accepts:
      - text/xml
    post:
      description: Returns a list of the available cache engines and their versions.
      operationId: POST_DescribeCacheEngineVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheEngineVersions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheEngineVersionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheEngineVersionMessage'
          description: Success
      x-aws-operation-name: DescribeCacheEngineVersions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeCacheParameterGroups:
    get:
      description: "Returns a list of cache parameter group descriptions. If a cache\
        \ parameter group name is specified, the list contains only the descriptions\
        \ for that group."
      operationId: GET_DescribeCacheParameterGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of a specific cache parameter group to return details
          for.
        explode: true
        in: query
        name: CacheParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheParameterGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeCacheParameterGroups
      x-accepts:
      - text/xml
    post:
      description: "Returns a list of cache parameter group descriptions. If a cache\
        \ parameter group name is specified, the list contains only the descriptions\
        \ for that group."
      operationId: POST_DescribeCacheParameterGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheParameterGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheParameterGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeCacheParameterGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeCacheParameters:
    get:
      description: Returns the detailed parameter list for a particular cache parameter
        group.
      operationId: GET_DescribeCacheParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of a specific cache parameter group to return details
          for.
        explode: true
        in: query
        name: CacheParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The parameter types to return.</p> <p>Valid values: <code>user</code>\
          \ | <code>system</code> | <code>engine-default</code> </p>"
        explode: true
        in: query
        name: Source
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupDetails'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeCacheParameters
      x-accepts:
      - text/xml
    post:
      description: Returns the detailed parameter list for a particular cache parameter
        group.
      operationId: POST_DescribeCacheParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheParametersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupDetails'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeCacheParameters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeCacheSecurityGroups:
    get:
      description: "Returns a list of cache security group descriptions. If a cache\
        \ security group name is specified, the list contains only the description\
        \ of that group. This applicable only when you have ElastiCache in Classic\
        \ setup "
      operationId: GET_DescribeCacheSecurityGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the cache security group to return details for.
        explode: true
        in: query
        name: CacheSecurityGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheSecurityGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeCacheSecurityGroups
      x-accepts:
      - text/xml
    post:
      description: "Returns a list of cache security group descriptions. If a cache\
        \ security group name is specified, the list contains only the description\
        \ of that group. This applicable only when you have ElastiCache in Classic\
        \ setup "
      operationId: POST_DescribeCacheSecurityGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheSecurityGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheSecurityGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeCacheSecurityGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeCacheSubnetGroups:
    get:
      description: "Returns a list of cache subnet group descriptions. If a subnet\
        \ group name is specified, the list contains only the description of that\
        \ group. This is applicable only when you have ElastiCache in VPC setup. All\
        \ ElastiCache clusters now launch in VPC by default. "
      operationId: GET_DescribeCacheSubnetGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the cache subnet group to return details for.
        explode: true
        in: query
        name: CacheSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheSubnetGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
      x-aws-operation-name: DescribeCacheSubnetGroups
      x-accepts:
      - text/xml
    post:
      description: "Returns a list of cache subnet group descriptions. If a subnet\
        \ group name is specified, the list contains only the description of that\
        \ group. This is applicable only when you have ElastiCache in VPC setup. All\
        \ ElastiCache clusters now launch in VPC by default. "
      operationId: POST_DescribeCacheSubnetGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCacheSubnetGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCacheSubnetGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
      x-aws-operation-name: DescribeCacheSubnetGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEngineDefaultParameters:
    get:
      description: Returns the default engine and system parameter information for
        the specified cache engine.
      operationId: GET_DescribeEngineDefaultParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the cache parameter group family.</p> <p>Valid\
          \ values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code>\
          \ | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code>\
          \ | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code>\
          \ | <code>redis6.2</code> | <code>redis7</code> </p>"
        explode: true
        in: query
        name: CacheParameterGroupFamily
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEngineDefaultParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeEngineDefaultParameters
      x-accepts:
      - text/xml
    post:
      description: Returns the default engine and system parameter information for
        the specified cache engine.
      operationId: POST_DescribeEngineDefaultParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEngineDefaultParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEngineDefaultParametersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeEngineDefaultParameters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEvents:
    get:
      description: "<p>Returns events related to clusters, cache security groups,\
        \ and cache parameter groups. You can obtain events specific to a particular\
        \ cluster, cache security group, or cache parameter group by providing the\
        \ name as a parameter.</p> <p>By default, only the events occurring within\
        \ the last hour are returned; however, you can retrieve up to 14 days' worth\
        \ of events if necessary.</p>"
      operationId: GET_DescribeEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The identifier of the event source for which events are returned.\
          \ If not specified, all sources are included in the response."
        explode: true
        in: query
        name: SourceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "The event source to retrieve events for. If no value is specified,\
          \ all events are returned."
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          enum:
          - cache-cluster
          - cache-parameter-group
          - cache-security-group
          - cache-subnet-group
          - replication-group
          - user
          - user-group
          type: string
        style: form
      - description: "<p>The beginning of the time interval to retrieve events for,\
          \ specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>"
        explode: true
        in: query
        name: StartTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "<p>The end of the time interval for which to retrieve events,\
          \ specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>"
        explode: true
        in: query
        name: EndTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The number of minutes worth of events to retrieve.
        explode: true
        in: query
        name: Duration
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEvents
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeEvents
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns events related to clusters, cache security groups,\
        \ and cache parameter groups. You can obtain events specific to a particular\
        \ cluster, cache security group, or cache parameter group by providing the\
        \ name as a parameter.</p> <p>By default, only the events occurring within\
        \ the last hour are returned; however, you can retrieve up to 14 days' worth\
        \ of events if necessary.</p>"
      operationId: POST_DescribeEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEvents
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeEvents
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeGlobalReplicationGroups:
    get:
      description: "Returns information about a particular global replication group.\
        \ If no identifier is specified, returns information about all Global datastores. "
      operationId: GET_DescribeGlobalReplicationGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of records to include in the response. If\
          \ more records exist than the specified MaxRecords value, a marker is included\
          \ in the response so that the remaining results can be retrieved. "
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>. "
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: Returns the list of members that comprise the Global datastore.
        explode: true
        in: query
        name: ShowMemberInfo
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeGlobalReplicationGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeGlobalReplicationGroupsResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeGlobalReplicationGroups
      x-accepts:
      - text/xml
    post:
      description: "Returns information about a particular global replication group.\
        \ If no identifier is specified, returns information about all Global datastores. "
      operationId: POST_DescribeGlobalReplicationGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeGlobalReplicationGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeGlobalReplicationGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeGlobalReplicationGroupsResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeGlobalReplicationGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeReplicationGroups:
    get:
      description: "<p>Returns information about a particular replication group. If\
        \ no identifier is specified, <code>DescribeReplicationGroups</code> returns\
        \ information about all replication groups.</p> <note> <p>This operation is\
        \ valid for Redis only.</p> </note>"
      operationId: GET_DescribeReplicationGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier for the replication group to be described.\
          \ This parameter is not case sensitive.</p> <p>If you do not specify this\
          \ parameter, information about all replication groups is returned.</p>"
        explode: true
        in: query
        name: ReplicationGroupId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeReplicationGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeReplicationGroups
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns information about a particular replication group. If\
        \ no identifier is specified, <code>DescribeReplicationGroups</code> returns\
        \ information about all replication groups.</p> <note> <p>This operation is\
        \ valid for Redis only.</p> </note>"
      operationId: POST_DescribeReplicationGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeReplicationGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReplicationGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeReplicationGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeReservedCacheNodes:
    get:
      description: "Returns information about reserved cache nodes for this account,\
        \ or about a specified reserved cache node."
      operationId: GET_DescribeReservedCacheNodes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The reserved cache node identifier filter value. Use this parameter
          to show only the reservation that matches the specified reservation ID.
        explode: true
        in: query
        name: ReservedCacheNodeId
        required: false
        schema:
          type: string
        style: form
      - description: The offering identifier filter value. Use this parameter to show
          only purchased reservations matching the specified offering identifier.
        explode: true
        in: query
        name: ReservedCacheNodesOfferingId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The cache node type filter value. Use this parameter to show\
          \ only those reservations matching the specified cache node type.</p> <p>The\
          \ following node types are supported by ElastiCache. Generally speaking,\
          \ the current generation types provide more memory and computational power\
          \ at lower cost when compared to their equivalent previous generation counterparts.</p>\
          \ <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p>\
          \ <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6\
          \ onward and for Memcached engine version 1.5.16 onward): <code>cache.m6g.large</code>,\
          \ <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>,\
          \ <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code>\
          \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
          >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
          \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
          \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p>\
          \ <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
          \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
          \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
          \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
          \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p> <b>T3\
          \ node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
          \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
          \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li>\
          \ <p>Previous generation: (not recommended. Existing clusters are still\
          \ supported but creation of new clusters is not supported for these types.)</p>\
          \ <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node\
          \ types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
          \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3\
          \ node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
          \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
          \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
          \ (not recommended. Existing clusters are still supported but creation of\
          \ new clusters is not supported for these types.)</p> <p> <b>C1 node types:</b>\
          \ <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p>\
          \ <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available\
          \ only for Redis engine version 5.0.6 onward and for Memcached engine version\
          \ 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>,\
          \ <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>,\
          \ <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p>\
          \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
          >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
          \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
          \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p>\
          \ <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
          \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
          \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
          \ (not recommended. Existing clusters are still supported but creation of\
          \ new clusters is not supported for these types.)</p> <p> <b>M2 node types:</b>\
          \ <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code>\
          \ </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,\
          \ <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>\
          \ </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p>\
          \ <ul> <li> <p>All current generation instance types are created in Amazon\
          \ VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not\
          \ supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with\
          \ automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis\
          \ configuration variables <code>appendonly</code> and <code>appendfsync</code>\
          \ are not supported on Redis version 2.8.22 and later.</p> </li> </ul>"
        explode: true
        in: query
        name: CacheNodeType
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The duration filter value, specified in years or seconds.\
          \ Use this parameter to show only reservations for this duration.</p> <p>Valid\
          \ Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
        explode: true
        in: query
        name: Duration
        required: false
        schema:
          type: string
        style: form
      - description: The product description filter value. Use this parameter to show
          only those reservations matching the specified product description.
        explode: true
        in: query
        name: ProductDescription
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The offering type filter value. Use this parameter to show\
          \ only the available offerings matching the specified offering type.</p>\
          \ <p>Valid values: <code>\"Light Utilization\"|\"Medium Utilization\"|\"\
          Heavy Utilization\"|\"All Upfront\"|\"Partial Upfront\"| \"No Upfront\"\
          </code> </p>"
        explode: true
        in: query
        name: OfferingType
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeReservedCacheNodes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
          description: ReservedCacheNodeNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeReservedCacheNodes
      x-accepts:
      - text/xml
    post:
      description: "Returns information about reserved cache nodes for this account,\
        \ or about a specified reserved cache node."
      operationId: POST_DescribeReservedCacheNodes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeReservedCacheNodes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedCacheNodesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
          description: ReservedCacheNodeNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeReservedCacheNodes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeReservedCacheNodesOfferings:
    get:
      description: Lists available reserved cache node offerings.
      operationId: GET_DescribeReservedCacheNodesOfferings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The offering identifier filter value. Use this parameter\
          \ to show only the available offering that matches the specified reservation\
          \ identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code>\
          \ </p>"
        explode: true
        in: query
        name: ReservedCacheNodesOfferingId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The cache node type filter value. Use this parameter to show\
          \ only the available offerings matching the specified cache node type.</p>\
          \ <p>The following node types are supported by ElastiCache. Generally speaking,\
          \ the current generation types provide more memory and computational power\
          \ at lower cost when compared to their equivalent previous generation counterparts.</p>\
          \ <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p>\
          \ <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6\
          \ onward and for Memcached engine version 1.5.16 onward): <code>cache.m6g.large</code>,\
          \ <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>,\
          \ <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code>\
          \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
          >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
          \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
          \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p>\
          \ <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
          \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
          \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
          \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
          \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p> <b>T3\
          \ node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
          \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
          \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li>\
          \ <p>Previous generation: (not recommended. Existing clusters are still\
          \ supported but creation of new clusters is not supported for these types.)</p>\
          \ <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node\
          \ types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
          \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3\
          \ node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
          \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
          \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
          \ (not recommended. Existing clusters are still supported but creation of\
          \ new clusters is not supported for these types.)</p> <p> <b>C1 node types:</b>\
          \ <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p>\
          \ <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available\
          \ only for Redis engine version 5.0.6 onward and for Memcached engine version\
          \ 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>,\
          \ <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>,\
          \ <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p>\
          \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
          >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
          \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
          \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p>\
          \ <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
          \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
          \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
          \ (not recommended. Existing clusters are still supported but creation of\
          \ new clusters is not supported for these types.)</p> <p> <b>M2 node types:</b>\
          \ <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code>\
          \ </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,\
          \ <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>\
          \ </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p>\
          \ <ul> <li> <p>All current generation instance types are created in Amazon\
          \ VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not\
          \ supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with\
          \ automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis\
          \ configuration variables <code>appendonly</code> and <code>appendfsync</code>\
          \ are not supported on Redis version 2.8.22 and later.</p> </li> </ul>"
        explode: true
        in: query
        name: CacheNodeType
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Duration filter value, specified in years or seconds. Use\
          \ this parameter to show only reservations for a given duration.</p> <p>Valid\
          \ Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
        explode: true
        in: query
        name: Duration
        required: false
        schema:
          type: string
        style: form
      - description: The product description filter value. Use this parameter to show
          only the available offerings matching the specified product description.
        explode: true
        in: query
        name: ProductDescription
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The offering type filter value. Use this parameter to show\
          \ only the available offerings matching the specified offering type.</p>\
          \ <p>Valid Values: <code>\"Light Utilization\"|\"Medium Utilization\"|\"\
          Heavy Utilization\" |\"All Upfront\"|\"Partial Upfront\"| \"No Upfront\"\
          </code> </p>"
        explode: true
        in: query
        name: OfferingType
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum\
          \ 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeReservedCacheNodesOfferings
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingNotFoundFault'
          description: ReservedCacheNodesOfferingNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeReservedCacheNodesOfferings
      x-accepts:
      - text/xml
    post:
      description: Lists available reserved cache node offerings.
      operationId: POST_DescribeReservedCacheNodesOfferings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeReservedCacheNodesOfferings
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeReservedCacheNodesOfferingsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingNotFoundFault'
          description: ReservedCacheNodesOfferingNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeReservedCacheNodesOfferings
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeServiceUpdates:
    get:
      description: Returns details of the service updates
      operationId: GET_DescribeServiceUpdates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the service update
        explode: true
        in: query
        name: ServiceUpdateName
        required: false
        schema:
          type: string
        style: form
      - description: The status of the service update
        explode: true
        in: query
        name: ServiceUpdateStatus
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ServiceUpdateStatus'
          maxItems: 3
          type: array
        style: form
      - description: The maximum number of records to include in the response
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeServiceUpdates
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdatesMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
          description: ServiceUpdateNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeServiceUpdates
      x-accepts:
      - text/xml
    post:
      description: Returns details of the service updates
      operationId: POST_DescribeServiceUpdates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeServiceUpdates
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeServiceUpdatesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdatesMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
          description: ServiceUpdateNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeServiceUpdates
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeSnapshots:
    get:
      description: "<p>Returns information about cluster or replication group snapshots.\
        \ By default, <code>DescribeSnapshots</code> lists all of your snapshots;\
        \ it can optionally describe a single snapshot, or just the snapshots associated\
        \ with a particular cache cluster.</p> <note> <p>This operation is valid for\
        \ Redis only.</p> </note>"
      operationId: GET_DescribeSnapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A user-supplied replication group identifier. If this parameter\
          \ is specified, only snapshots associated with that specific replication\
          \ group are described."
        explode: true
        in: query
        name: ReplicationGroupId
        required: false
        schema:
          type: string
        style: form
      - description: "A user-supplied cluster identifier. If this parameter is specified,\
          \ only snapshots associated with that specific cluster are described."
        explode: true
        in: query
        name: CacheClusterId
        required: false
        schema:
          type: string
        style: form
      - description: "A user-supplied name of the snapshot. If this parameter is specified,\
          \ only this snapshot are described."
        explode: true
        in: query
        name: SnapshotName
        required: false
        schema:
          type: string
        style: form
      - description: "If set to <code>system</code>, the output shows snapshots that\
          \ were automatically created by ElastiCache. If set to <code>user</code>\
          \ the output shows snapshots that were manually created. If omitted, the\
          \ output shows both automatically and manually created snapshots."
        explode: true
        in: query
        name: SnapshotSource
        required: false
        schema:
          type: string
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a marker is included in the response so that the remaining results can\
          \ be retrieved.</p> <p>Default: 50</p> <p>Constraints: minimum 20; maximum\
          \ 50.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "A Boolean value which if true, the node group (shard) configuration\
          \ is included in the snapshot description."
        explode: true
        in: query
        name: ShowNodeGroupConfig
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeSnapshots
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotsListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeSnapshots
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns information about cluster or replication group snapshots.\
        \ By default, <code>DescribeSnapshots</code> lists all of your snapshots;\
        \ it can optionally describe a single snapshot, or just the snapshots associated\
        \ with a particular cache cluster.</p> <note> <p>This operation is valid for\
        \ Redis only.</p> </note>"
      operationId: POST_DescribeSnapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeSnapshots
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotsListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeSnapshots
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeUpdateActions:
    get:
      description: 'Returns details of the update actions '
      operationId: GET_DescribeUpdateActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the service update
        explode: true
        in: query
        name: ServiceUpdateName
        required: false
        schema:
          type: string
        style: form
      - description: The replication group IDs
        explode: true
        in: query
        name: ReplicationGroupIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          maxItems: 20
          type: array
        style: form
      - description: The cache cluster IDs
        explode: true
        in: query
        name: CacheClusterIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          maxItems: 20
          type: array
        style: form
      - description: 'The Elasticache engine to which the update applies. Either Redis
          or Memcached '
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          type: string
        style: form
      - description: The status of the service update
        explode: true
        in: query
        name: ServiceUpdateStatus
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ServiceUpdateStatus'
          maxItems: 3
          type: array
        style: form
      - description: The range of time specified to search for service updates that
          are in available status
        explode: true
        in: query
        name: ServiceUpdateTimeRange
        required: false
        schema:
          $ref: '#/components/schemas/GET_DescribeUpdateActions_ServiceUpdateTimeRange_parameter'
        style: form
      - description: The status of the update action.
        explode: true
        in: query
        name: UpdateActionStatus
        required: false
        schema:
          items:
            $ref: '#/components/schemas/UpdateActionStatus'
          maxItems: 9
          type: array
        style: form
      - description: 'Dictates whether to include node level update status in the
          response '
        explode: true
        in: query
        name: ShowNodeLevelUpdateStatus
        required: false
        schema:
          type: boolean
        style: form
      - description: The maximum number of records to include in the response
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeUpdateActions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeUpdateActions
      x-accepts:
      - text/xml
    post:
      description: 'Returns details of the update actions '
      operationId: POST_DescribeUpdateActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeUpdateActions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeUpdateActionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateActionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeUpdateActions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeUserGroups:
    get:
      description: Returns a list of user groups.
      operationId: GET_DescribeUserGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the user group.
        explode: true
        in: query
        name: UserGroupId
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of records to include in the response. If\
          \ more records exist than the specified MaxRecords value, a marker is included\
          \ in the response so that the remaining results can be retrieved. "
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by MaxRecords. &gt;"
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeUserGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeUserGroupsResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeUserGroups
      x-accepts:
      - text/xml
    post:
      description: Returns a list of user groups.
      operationId: POST_DescribeUserGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeUserGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeUserGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeUserGroupsResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeUserGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeUsers:
    get:
      description: Returns a list of users.
      operationId: GET_DescribeUsers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The Redis engine. '
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          pattern: "[a-zA-Z]*"
          type: string
        style: form
      - description: The ID of the user.
        explode: true
        in: query
        name: UserId
        required: false
        schema:
          minLength: 1
          pattern: "[a-zA-Z][a-zA-Z0-9\\-]*"
          type: string
        style: form
      - description: Filter to determine the list of User IDs to return.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        style: form
      - description: "The maximum number of records to include in the response. If\
          \ more records exist than the specified MaxRecords value, a marker is included\
          \ in the response so that the remaining results can be retrieved. "
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional marker returned from a prior request. Use this marker\
          \ for pagination of results from this operation. If this parameter is specified,\
          \ the response includes only records beyond the marker, up to the value\
          \ specified by MaxRecords. &gt;"
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeUsers
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeUsersResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeUsers
      x-accepts:
      - text/xml
    post:
      description: Returns a list of users.
      operationId: POST_DescribeUsers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeUsers
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeUsersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeUsersResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DescribeUsers
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DisassociateGlobalReplicationGroup:
    get:
      description: "Remove a secondary cluster from the Global datastore using the\
        \ Global datastore name. The secondary cluster will no longer receive updates\
        \ from the primary cluster, but will remain as a standalone cluster in that\
        \ Amazon region."
      operationId: GET_DisassociateGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: The name of the secondary cluster you wish to remove from the
          Global datastore
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon region of secondary cluster you wish to remove from
          the Global datastore
        explode: true
        in: query
        name: ReplicationGroupRegion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DisassociateGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DisassociateGlobalReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: "Remove a secondary cluster from the Global datastore using the\
        \ Global datastore name. The secondary cluster will no longer receive updates\
        \ from the primary cluster, but will remain as a standalone cluster in that\
        \ Amazon region."
      operationId: POST_DisassociateGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DisassociateGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateGlobalReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: DisassociateGlobalReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=FailoverGlobalReplicationGroup:
    get:
      description: "Used to failover the primary region to a secondary region. The\
        \ secondary region will become primary, and all other clusters will become\
        \ secondary."
      operationId: GET_FailoverGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon region of the primary cluster of the Global datastore
        explode: true
        in: query
        name: PrimaryRegion
        required: true
        schema:
          type: string
        style: form
      - description: The name of the primary replication group
        explode: true
        in: query
        name: PrimaryReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - FailoverGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: FailoverGlobalReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: "Used to failover the primary region to a secondary region. The\
        \ secondary region will become primary, and all other clusters will become\
        \ secondary."
      operationId: POST_FailoverGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - FailoverGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/FailoverGlobalReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: FailoverGlobalReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=IncreaseNodeGroupsInGlobalReplicationGroup:
    get:
      description: Increase the number of node groups in the Global datastore
      operationId: GET_IncreaseNodeGroupsInGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: The number of node groups you wish to add
        explode: true
        in: query
        name: NodeGroupCount
        required: true
        schema:
          type: integer
        style: form
      - description: "Describes the replication group IDs, the Amazon regions where\
          \ they are stored and the shard configuration for each that comprise the\
          \ Global datastore"
        explode: true
        in: query
        name: RegionalConfigurations
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_IncreaseNodeGroupsInGlobalReplicationGroup_RegionalConfigurations_parameter_inner'
          type: array
        style: form
      - description: "Indicates that the process begins immediately. At present, the\
          \ only permitted value for this parameter is true."
        explode: true
        in: query
        name: ApplyImmediately
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - IncreaseNodeGroupsInGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncreaseNodeGroupsInGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: IncreaseNodeGroupsInGlobalReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: Increase the number of node groups in the Global datastore
      operationId: POST_IncreaseNodeGroupsInGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - IncreaseNodeGroupsInGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/IncreaseNodeGroupsInGlobalReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncreaseNodeGroupsInGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: IncreaseNodeGroupsInGlobalReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=IncreaseReplicaCount:
    get:
      description: Dynamically increases the number of replicas in a Redis (cluster
        mode disabled) replication group or the number of replica nodes in one or
        more node groups (shards) of a Redis (cluster mode enabled) replication group.
        This operation is performed with no cluster down time.
      operationId: GET_IncreaseReplicaCount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The id of the replication group to which you want to add replica
          nodes.
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: "The number of read replica nodes you want at the completion\
          \ of this operation. For Redis (cluster mode disabled) replication groups,\
          \ this is the number of replica nodes in the replication group. For Redis\
          \ (cluster mode enabled) replication groups, this is the number of replica\
          \ nodes in each of the replication group's node groups."
        explode: true
        in: query
        name: NewReplicaCount
        required: false
        schema:
          type: integer
        style: form
      - description: "A list of <code>ConfigureShard</code> objects that can be used\
          \ to configure each shard in a Redis (cluster mode enabled) replication\
          \ group. The <code>ConfigureShard</code> has three members: <code>NewReplicaCount</code>,\
          \ <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>."
        explode: true
        in: query
        name: ReplicaConfiguration
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DecreaseReplicaCount_ReplicaConfiguration_parameter_inner'
          type: array
        style: form
      - description: "If <code>True</code>, the number of replica nodes is increased\
          \ immediately. <code>ApplyImmediately=False</code> is not currently supported."
        explode: true
        in: query
        name: ApplyImmediately
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - IncreaseReplicaCount
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncreaseReplicaCountResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
          description: NoOperationFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: IncreaseReplicaCount
      x-accepts:
      - text/xml
    post:
      description: Dynamically increases the number of replicas in a Redis (cluster
        mode disabled) replication group or the number of replica nodes in one or
        more node groups (shards) of a Redis (cluster mode enabled) replication group.
        This operation is performed with no cluster down time.
      operationId: POST_IncreaseReplicaCount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - IncreaseReplicaCount
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/IncreaseReplicaCountMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncreaseReplicaCountResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
          description: NoOperationFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: IncreaseReplicaCount
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListAllowedNodeTypeModifications:
    get:
      description: "<p>Lists all available node types that you can scale your Redis\
        \ cluster's or replication group's current node type.</p> <p>When you use\
        \ the <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code>\
        \ operations to scale your cluster or replication group, the value of the\
        \ <code>CacheNodeType</code> parameter must be one of the node types returned\
        \ by this operation.</p>"
      operationId: GET_ListAllowedNodeTypeModifications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the cluster you want to scale up to a larger node
          instanced type. ElastiCache uses the cluster id to identify the current
          node type of this cluster and from that to create a list of node types you
          can scale up to.</p> <important> <p>You must provide a value for either
          the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p>
          </important>
        explode: true
        in: query
        name: CacheClusterId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the replication group want to scale up to a larger\
          \ node type. ElastiCache uses the replication group id to identify the current\
          \ node type being used by this replication group, and from that to create\
          \ a list of node types you can scale up to.</p> <important> <p>You must\
          \ provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p>\
          \ </important>"
        explode: true
        in: query
        name: ReplicationGroupId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListAllowedNodeTypeModifications
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllowedNodeTypeModificationsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: ListAllowedNodeTypeModifications
      x-accepts:
      - text/xml
    post:
      description: "<p>Lists all available node types that you can scale your Redis\
        \ cluster's or replication group's current node type.</p> <p>When you use\
        \ the <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code>\
        \ operations to scale your cluster or replication group, the value of the\
        \ <code>CacheNodeType</code> parameter must be one of the node types returned\
        \ by this operation.</p>"
      operationId: POST_ListAllowedNodeTypeModifications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListAllowedNodeTypeModifications
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAllowedNodeTypeModificationsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllowedNodeTypeModificationsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: ListAllowedNodeTypeModifications
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListTagsForResource:
    get:
      description: "<p>Lists all tags currently on a named resource.</p> <p> A tag\
        \ is a key-value pair where the key and value are case-sensitive. You can\
        \ use tags to categorize and track all your ElastiCache resources, with the\
        \ exception of global replication group. When you add or remove tags on replication\
        \ groups, those actions will be replicated to all nodes in the replication\
        \ group. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html\"\
        >Resource-level permissions</a>.</p> <p>If the cluster is not in the <i>available</i>\
        \ state, <code>ListTagsForResource</code> returns an error.</p>"
      operationId: GET_ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The Amazon Resource Name (ARN) of the resource for which\
          \ you want the list of tags, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>\
          \ or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p>\
          \ <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>.</p>"
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTagsForResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
          description: ReservedCacheNodeNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
      x-aws-operation-name: ListTagsForResource
      x-accepts:
      - text/xml
    post:
      description: "<p>Lists all tags currently on a named resource.</p> <p> A tag\
        \ is a key-value pair where the key and value are case-sensitive. You can\
        \ use tags to categorize and track all your ElastiCache resources, with the\
        \ exception of global replication group. When you add or remove tags on replication\
        \ groups, those actions will be replicated to all nodes in the replication\
        \ group. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html\"\
        >Resource-level permissions</a>.</p> <p>If the cluster is not in the <i>available</i>\
        \ state, <code>ListTagsForResource</code> returns an error.</p>"
      operationId: POST_ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTagsForResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
          description: ReservedCacheNodeNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
      x-aws-operation-name: ListTagsForResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyCacheCluster:
    get:
      description: Modifies the settings for a cluster. You can use this operation
        to change one or more cluster configuration parameters by specifying the parameters
        and the new values.
      operationId: GET_ModifyCacheCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The cluster identifier. This value is stored as a lowercase string.
        explode: true
        in: query
        name: CacheClusterId
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The number of cache nodes that the cluster should have. If\
          \ the value for <code>NumCacheNodes</code> is greater than the sum of the\
          \ number of current cache nodes and the number of cache nodes pending creation\
          \ (which may be zero), more nodes are added. If the value is less than the\
          \ number of existing cache nodes, nodes are removed. If the value is equal\
          \ to the number of current cache nodes, any pending add or remove requests\
          \ are canceled.</p> <p>If you are removing cache nodes, you must use the\
          \ <code>CacheNodeIdsToRemove</code> parameter to provide the IDs of the\
          \ specific cache nodes to remove.</p> <p>For clusters running Redis, this\
          \ value must be 1. For clusters running Memcached, this value must be between\
          \ 1 and 40.</p> <note> <p>Adding or removing Memcached cache nodes can be\
          \ applied immediately or as a pending operation (see <code>ApplyImmediately</code>).</p>\
          \ <p>A pending operation to modify the number of cache nodes in a cluster\
          \ during its maintenance window, whether by adding or removing nodes in\
          \ accordance with the scale out architecture, is not queued. The customer's\
          \ latest request to add or remove nodes to the cluster overrides any previous\
          \ pending operations to modify the number of cache nodes in the cluster.\
          \ For example, a request to remove 2 nodes would override a previous pending\
          \ operation to remove 3 nodes. Similarly, a request to add 2 nodes would\
          \ override a previous pending operation to remove 3 nodes and vice versa.\
          \ As Memcached cache nodes may now be provisioned in different Availability\
          \ Zones with flexible cache node placement, a request to add nodes does\
          \ not automatically override a previous pending operation to add nodes.\
          \ The customer can modify the previous pending operation to add more nodes\
          \ or explicitly cancel the pending request and retry the new request. To\
          \ cancel pending operations to modify the number of cache nodes in a cluster,\
          \ use the <code>ModifyCacheCluster</code> request and set <code>NumCacheNodes</code>\
          \ equal to the number of cache nodes currently in the cluster.</p> </note>"
        explode: true
        in: query
        name: NumCacheNodes
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>A list of cache node IDs to be removed. A node ID is a numeric\
          \ identifier (0001, 0002, etc.). This parameter is only valid when <code>NumCacheNodes</code>\
          \ is less than the existing number of cache nodes. The number of cache node\
          \ IDs supplied in this parameter must match the difference between the existing\
          \ number of cache nodes in the cluster or pending cache nodes, whichever\
          \ is greater, and the value of <code>NumCacheNodes</code> in the request.</p>\
          \ <p>For example: If you have 3 active cache nodes, 7 pending cache nodes,\
          \ and the number of cache nodes in this <code>ModifyCacheCluster</code>\
          \ call is 5, you must list 2 (7 - 5) cache node IDs to remove.</p>"
        explode: true
        in: query
        name: CacheNodeIdsToRemove
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: CacheNodeId
          type: array
        style: form
      - description: "<p>Specifies whether the new nodes in this Memcached cluster\
          \ are all created in a single Availability Zone or created across multiple\
          \ Availability Zones.</p> <p>Valid values: <code>single-az</code> | <code>cross-az</code>.</p>\
          \ <p>This option is only supported for Memcached clusters.</p> <note> <p>You\
          \ cannot specify <code>single-az</code> if the Memcached cluster already\
          \ has cache nodes in different Availability Zones. If <code>cross-az</code>\
          \ is specified, existing Memcached nodes remain in their current Availability\
          \ Zone.</p> <p>Only newly created nodes are located in different Availability\
          \ Zones. </p> </note>"
        explode: true
        in: query
        name: AZMode
        required: false
        schema:
          enum:
          - single-az
          - cross-az
          type: string
        style: form
      - description: "<note> <p>This option is only supported on Memcached clusters.</p>\
          \ </note> <p>The list of Availability Zones where the new Memcached cache\
          \ nodes are created.</p> <p>This parameter is only valid when <code>NumCacheNodes</code>\
          \ in the request is greater than the sum of the number of active cache nodes\
          \ and the number of cache nodes pending creation (which may be zero). The\
          \ number of Availability Zones supplied in this list must match the cache\
          \ nodes being added in this request.</p> <p>Scenarios:</p> <ul> <li> <p>\
          \ <b>Scenario 1:</b> You have 3 active nodes and wish to add 2 nodes. Specify\
          \ <code>NumCacheNodes=5</code> (3 + 2) and optionally specify two Availability\
          \ Zones for the two new nodes.</p> </li> <li> <p> <b>Scenario 2:</b> You\
          \ have 3 active nodes and 2 nodes pending creation (from the scenario 1\
          \ call) and want to add 1 more node. Specify <code>NumCacheNodes=6</code>\
          \ ((3 + 2) + 1) and optionally specify an Availability Zone for the new\
          \ node.</p> </li> <li> <p> <b>Scenario 3:</b> You want to cancel all pending\
          \ operations. Specify <code>NumCacheNodes=3</code> to cancel all pending\
          \ operations.</p> </li> </ul> <p>The Availability Zone placement of nodes\
          \ pending creation cannot be modified. If you wish to cancel any nodes pending\
          \ creation, add 0 nodes by setting <code>NumCacheNodes</code> to the number\
          \ of current nodes.</p> <p>If <code>cross-az</code> is specified, existing\
          \ Memcached nodes remain in their current Availability Zone. Only newly\
          \ created nodes can be located in different Availability Zones. For guidance\
          \ on how to move existing Memcached nodes to different Availability Zones,\
          \ see the <b>Availability Zone Considerations</b> section of <a href=\"\
          https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html\"\
          >Cache Node Considerations for Memcached</a>.</p> <p> <b>Impact of new add/remove\
          \ requests upon pending requests</b> </p> <ul> <li> <p>Scenario-1</p> <ul>\
          \ <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Delete</p>\
          \ </li> <li> <p>Result: The new delete, pending or immediate, replaces the\
          \ pending delete.</p> </li> </ul> </li> <li> <p>Scenario-2</p> <ul> <li>\
          \ <p>Pending Action: Delete</p> </li> <li> <p>New Request: Create</p> </li>\
          \ <li> <p>Result: The new create, pending or immediate, replaces the pending\
          \ delete.</p> </li> </ul> </li> <li> <p>Scenario-3</p> <ul> <li> <p>Pending\
          \ Action: Create</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result:\
          \ The new delete, pending or immediate, replaces the pending create.</p>\
          \ </li> </ul> </li> <li> <p>Scenario-4</p> <ul> <li> <p>Pending Action:\
          \ Create</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result:\
          \ The new create is added to the pending create.</p> <important> <p> <b>Important:</b>\
          \ If the new create request is <b>Apply Immediately - Yes</b>, all creates\
          \ are performed immediately. If the new create request is <b>Apply Immediately\
          \ - No</b>, all creates are pending.</p> </important> </li> </ul> </li>\
          \ </ul>"
        explode: true
        in: query
        name: NewAvailabilityZones
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: PreferredAvailabilityZone
          type: array
        style: form
      - description: "<p>A list of cache security group names to authorize on this\
          \ cluster. This change is asynchronously applied as soon as possible.</p>\
          \ <p>You can use this parameter only with clusters that are created outside\
          \ of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must\
          \ contain no more than 255 alphanumeric characters. Must not be \"Default\"\
          .</p>"
        explode: true
        in: query
        name: CacheSecurityGroupNames
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: CacheSecurityGroupName
          type: array
        style: form
      - description: <p>Specifies the VPC Security Groups associated with the cluster.</p>
          <p>This parameter can be used only with clusters that are created in an
          Amazon Virtual Private Cloud (Amazon VPC).</p>
        explode: true
        in: query
        name: SecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SecurityGroupId
          type: array
        style: form
      - description: "<p>Specifies the weekly time range during which maintenance\
          \ on the cluster is performed. It is specified as a range in the format\
          \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
          \ is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p>\
          \ <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p>\
          \ </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p>\
          \ </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p>\
          \ </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code>\
          \ </p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to
          which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must
          be same as the cluster owner.</p> </note>
        explode: true
        in: query
        name: NotificationTopicArn
        required: false
        schema:
          type: string
        style: form
      - description: The name of the cache parameter group to apply to this cluster.
          This change is asynchronously applied as soon as possible for parameters
          when the <code>ApplyImmediately</code> parameter is specified as <code>true</code>
          for this request.
        explode: true
        in: query
        name: CacheParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The status of the Amazon SNS notification topic. Notifications\
          \ are sent only if the status is <code>active</code>.</p> <p>Valid values:\
          \ <code>active</code> | <code>inactive</code> </p>"
        explode: true
        in: query
        name: NotificationTopicStatus
        required: false
        schema:
          type: string
        style: form
      - description: "<p>If <code>true</code>, this parameter causes the modifications\
          \ in this request and any pending modifications to be applied, asynchronously\
          \ and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>\
          \ setting for the cluster.</p> <p>If <code>false</code>, changes to the\
          \ cluster are applied on the next maintenance reboot, or the next failure\
          \ reboot, whichever occurs first.</p> <important> <p>If you perform a <code>ModifyCacheCluster</code>\
          \ before a pending modification is applied, the pending modification is\
          \ replaced by the newer modification.</p> </important> <p>Valid values:\
          \ <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code>\
          \ </p>"
        explode: true
        in: query
        name: ApplyImmediately
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The upgraded version of the cache engine to be run on the\
          \ cache nodes.</p> <p> <b>Important:</b> You can upgrade to a newer engine\
          \ version (see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement\"\
          >Selecting a Cache Engine and Version</a>), but you cannot downgrade to\
          \ an earlier engine version. If you want to use an earlier engine version,\
          \ you must delete the existing cluster and create it anew with the earlier\
          \ engine version. </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "\_If you are running Redis engine version 6.0 or later, set\
          \ this parameter to yes if you want to opt-in to the next auto minor version\
          \ upgrade campaign. This parameter is disabled for previous versions.\_ "
        explode: true
        in: query
        name: AutoMinorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The number of days for which ElastiCache retains automatic\
          \ cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>\
          \ to 5, a snapshot that was taken today is retained for 5 days before being\
          \ deleted.</p> <note> <p>If the value of <code>SnapshotRetentionLimit</code>\
          \ is set to zero (0), backups are turned off.</p> </note>"
        explode: true
        in: query
        name: SnapshotRetentionLimit
        required: false
        schema:
          type: integer
        style: form
      - description: 'The daily time range (in UTC) during which ElastiCache begins
          taking a daily snapshot of your cluster. '
        explode: true
        in: query
        name: SnapshotWindow
        required: false
        schema:
          type: string
        style: form
      - description: A valid cache node type that you want to scale this cluster up
          to.
        explode: true
        in: query
        name: CacheNodeType
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Reserved parameter. The password used to access a password\
          \ protected server. This parameter must be specified with the <code>auth-token-update</code>\
          \ parameter. Password constraints:</p> <ul> <li> <p>Must be only printable\
          \ ASCII characters</p> </li> <li> <p>Must be at least 16 characters and\
          \ no more than 128 characters in length</p> </li> <li> <p>Cannot contain\
          \ any of the following characters: '/', '\"', or '@', '%'</p> </li> </ul>\
          \ <p> For more information, see AUTH password at <a href=\"http://redis.io/commands/AUTH\"\
          >AUTH</a>.</p>"
        explode: true
        in: query
        name: AuthToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Specifies the strategy to use to update the AUTH token. This\
          \ parameter must be specified with the <code>auth-token</code> parameter.\
          \ Possible values:</p> <ul> <li> <p>Rotate</p> </li> <li> <p>Set</p> </li>\
          \ </ul> <p> For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html\"\
          >Authenticating Users with Redis AUTH</a> </p>"
        explode: true
        in: query
        name: AuthTokenUpdateStrategy
        required: false
        schema:
          enum:
          - SET
          - ROTATE
          - DELETE
          type: string
        style: form
      - description: "Specifies the destination, format and type of the logs."
        explode: true
        in: query
        name: LogDeliveryConfigurations
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_CreateCacheCluster_LogDeliveryConfigurations_parameter_inner'
          type: array
        style: form
      - description: "The network type you choose when modifying a cluster, either\
          \ <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported for workloads\
          \ using Redis engine version 6.2 onward or Memcached engine version 1.6.6\
          \ on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
          >Nitro system</a>."
        explode: true
        in: query
        name: IpDiscovery
        required: false
        schema:
          enum:
          - ipv4
          - ipv6
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyCacheCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCacheClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyCacheCluster
      x-accepts:
      - text/xml
    post:
      description: Modifies the settings for a cluster. You can use this operation
        to change one or more cluster configuration parameters by specifying the parameters
        and the new values.
      operationId: POST_ModifyCacheCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyCacheCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyCacheClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCacheClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyCacheCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyCacheParameterGroup:
    get:
      description: Modifies the parameters of a cache parameter group. You can modify
        up to 20 parameters in a single request by submitting a list parameter name
        and value pairs.
      operationId: GET_ModifyCacheParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the cache parameter group to modify.
        explode: true
        in: query
        name: CacheParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: An array of parameter names and values for the parameter update.
          You must supply at least one parameter name and value; subsequent arguments
          are optional. A maximum of 20 parameters may be modified per request.
        explode: true
        in: query
        name: ParameterNameValues
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyCacheParameterGroup_ParameterNameValues_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyCacheParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
          description: InvalidCacheParameterGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
      x-aws-operation-name: ModifyCacheParameterGroup
      x-accepts:
      - text/xml
    post:
      description: Modifies the parameters of a cache parameter group. You can modify
        up to 20 parameters in a single request by submitting a list parameter name
        and value pairs.
      operationId: POST_ModifyCacheParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyCacheParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyCacheParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
          description: InvalidCacheParameterGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
      x-aws-operation-name: ModifyCacheParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyCacheSubnetGroup:
    get:
      description: Modifies an existing cache subnet group.
      operationId: GET_ModifyCacheSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name for the cache subnet group. This value is stored\
          \ as a lowercase string.</p> <p>Constraints: Must contain no more than 255\
          \ alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code>\
          \ </p>"
        explode: true
        in: query
        name: CacheSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - description: A description of the cache subnet group.
        explode: true
        in: query
        name: CacheSubnetGroupDescription
        required: false
        schema:
          type: string
        style: form
      - description: The EC2 subnet IDs for the cache subnet group.
        explode: true
        in: query
        name: SubnetIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SubnetIdentifier
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyCacheSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCacheSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetQuotaExceededFault'
          description: CacheSubnetQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetInUse'
          description: SubnetInUse
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
          description: SubnetNotAllowedFault
      x-aws-operation-name: ModifyCacheSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: Modifies an existing cache subnet group.
      operationId: POST_ModifyCacheSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyCacheSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyCacheSubnetGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyCacheSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetQuotaExceededFault'
          description: CacheSubnetQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetInUse'
          description: SubnetInUse
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
          description: SubnetNotAllowedFault
      x-aws-operation-name: ModifyCacheSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyGlobalReplicationGroup:
    get:
      description: Modifies the settings for a Global datastore.
      operationId: GET_ModifyGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: "This parameter causes the modifications in this request and\
          \ any pending modifications to be applied, asynchronously and as soon as\
          \ possible. Modifications to Global Replication Groups cannot be requested\
          \ to be applied in PreferredMaintenceWindow. "
        explode: true
        in: query
        name: ApplyImmediately
        required: true
        schema:
          type: boolean
        style: form
      - description: A valid cache node type that you want to scale this Global datastore
          to.
        explode: true
        in: query
        name: CacheNodeType
        required: false
        schema:
          type: string
        style: form
      - description: 'The upgraded version of the cache engine to be run on the clusters
          in the Global datastore. '
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: The name of the cache parameter group to use with the Global
          datastore. It must be compatible with the major engine version used by the
          Global datastore.
        explode: true
        in: query
        name: CacheParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A description of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupDescription
        required: false
        schema:
          type: string
        style: form
      - description: 'Determines whether a read replica is automatically promoted
          to read/write primary if the existing primary encounters a failure. '
        explode: true
        in: query
        name: AutomaticFailoverEnabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: ModifyGlobalReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: Modifies the settings for a Global datastore.
      operationId: POST_ModifyGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyGlobalReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: ModifyGlobalReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyReplicationGroup:
    get:
      description: <p>Modifies the settings for a replication group.</p> <ul> <li>
        <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/scaling-redis-cluster-mode-enabled.html">Scaling
        for Amazon ElastiCache for Redis (cluster mode enabled)</a> in the ElastiCache
        User Guide</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroupShardConfiguration.html">ModifyReplicationGroupShardConfiguration</a>
        in the ElastiCache API Reference</p> </li> </ul> <note> <p>This operation
        is valid for Redis only.</p> </note>
      operationId: GET_ModifyReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the replication group to modify.
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: A description for the replication group. Maximum length is 255
          characters.
        explode: true
        in: query
        name: ReplicationGroupDescription
        required: false
        schema:
          type: string
        style: form
      - description: "For replication groups with a single primary, if this parameter\
          \ is specified, ElastiCache promotes the specified cluster in the specified\
          \ replication group to the primary role. The nodes of all other clusters\
          \ in the replication group are read replicas."
        explode: true
        in: query
        name: PrimaryClusterId
        required: false
        schema:
          type: string
        style: form
      - description: The cluster ID that is used as the daily snapshot source for
          the replication group. This parameter cannot be set for Redis (cluster mode
          enabled) replication groups.
        explode: true
        in: query
        name: SnapshottingClusterId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Determines whether a read replica is automatically promoted\
          \ to read/write primary if the existing primary encounters a failure.</p>\
          \ <p>Valid values: <code>true</code> | <code>false</code> </p>"
        explode: true
        in: query
        name: AutomaticFailoverEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: A flag to indicate MultiAZ is enabled.
        explode: true
        in: query
        name: MultiAZEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: Deprecated. This parameter is not used.
        explode: true
        in: query
        name: NodeGroupId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A list of cache security group names to authorize for the\
          \ clusters in this replication group. This change is asynchronously applied\
          \ as soon as possible.</p> <p>This parameter can be used only with replication\
          \ group containing clusters running outside of an Amazon Virtual Private\
          \ Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255\
          \ alphanumeric characters. Must not be <code>Default</code>.</p>"
        explode: true
        in: query
        name: CacheSecurityGroupNames
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: CacheSecurityGroupName
          type: array
        style: form
      - description: <p>Specifies the VPC Security Groups associated with the clusters
          in the replication group.</p> <p>This parameter can be used only with replication
          group containing clusters running in an Amazon Virtual Private Cloud (Amazon
          VPC).</p>
        explode: true
        in: query
        name: SecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SecurityGroupId
          type: array
        style: form
      - description: "<p>Specifies the weekly time range during which maintenance\
          \ on the cluster is performed. It is specified as a range in the format\
          \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
          \ is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p>\
          \ <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p>\
          \ </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p>\
          \ </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p>\
          \ </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code>\
          \ </p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to
          which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must
          be same as the replication group owner. </p> </note>
        explode: true
        in: query
        name: NotificationTopicArn
        required: false
        schema:
          type: string
        style: form
      - description: The name of the cache parameter group to apply to all of the
          clusters in this replication group. This change is asynchronously applied
          as soon as possible for parameters when the <code>ApplyImmediately</code>
          parameter is specified as <code>true</code> for this request.
        explode: true
        in: query
        name: CacheParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The status of the Amazon SNS notification topic for the replication\
          \ group. Notifications are sent only if the status is <code>active</code>.</p>\
          \ <p>Valid values: <code>active</code> | <code>inactive</code> </p>"
        explode: true
        in: query
        name: NotificationTopicStatus
        required: false
        schema:
          type: string
        style: form
      - description: "<p>If <code>true</code>, this parameter causes the modifications\
          \ in this request and any pending modifications to be applied, asynchronously\
          \ and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>\
          \ setting for the replication group.</p> <p>If <code>false</code>, changes\
          \ to the nodes in the replication group are applied on the next maintenance\
          \ reboot, or the next failure reboot, whichever occurs first.</p> <p>Valid\
          \ values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code>\
          \ </p>"
        explode: true
        in: query
        name: ApplyImmediately
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The upgraded version of the cache engine to be run on the\
          \ clusters in the replication group.</p> <p> <b>Important:</b> You can upgrade\
          \ to a newer engine version (see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement\"\
          >Selecting a Cache Engine and Version</a>), but you cannot downgrade to\
          \ an earlier engine version. If you want to use an earlier engine version,\
          \ you must delete the existing replication group and create it anew with\
          \ the earlier engine version. </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "\_If you are running Redis engine version 6.0 or later, set\
          \ this parameter to yes if you want to opt-in to the next auto minor version\
          \ upgrade campaign. This parameter is disabled for previous versions.\_ "
        explode: true
        in: query
        name: AutoMinorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The number of days for which ElastiCache retains automatic\
          \ node group (shard) snapshots before deleting them. For example, if you\
          \ set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken\
          \ today is retained for 5 days before being deleted.</p> <p> <b>Important</b>\
          \ If the value of SnapshotRetentionLimit is set to zero (0), backups are\
          \ turned off.</p>"
        explode: true
        in: query
        name: SnapshotRetentionLimit
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The daily time range (in UTC) during which ElastiCache begins\
          \ taking a daily snapshot of the node group (shard) specified by <code>SnapshottingClusterId</code>.</p>\
          \ <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this\
          \ parameter, ElastiCache automatically chooses an appropriate time range.</p>"
        explode: true
        in: query
        name: SnapshotWindow
        required: false
        schema:
          type: string
        style: form
      - description: A valid cache node type that you want to scale this replication
          group to.
        explode: true
        in: query
        name: CacheNodeType
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Reserved parameter. The password used to access a password\
          \ protected server. This parameter must be specified with the <code>auth-token-update-strategy\
          \ </code> parameter. Password constraints:</p> <ul> <li> <p>Must be only\
          \ printable ASCII characters</p> </li> <li> <p>Must be at least 16 characters\
          \ and no more than 128 characters in length</p> </li> <li> <p>Cannot contain\
          \ any of the following characters: '/', '\"', or '@', '%'</p> </li> </ul>\
          \ <p> For more information, see AUTH password at <a href=\"http://redis.io/commands/AUTH\"\
          >AUTH</a>.</p>"
        explode: true
        in: query
        name: AuthToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Specifies the strategy to use to update the AUTH token. This\
          \ parameter must be specified with the <code>auth-token</code> parameter.\
          \ Possible values:</p> <ul> <li> <p>Rotate</p> </li> <li> <p>Set</p> </li>\
          \ </ul> <p> For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html\"\
          >Authenticating Users with Redis AUTH</a> </p>"
        explode: true
        in: query
        name: AuthTokenUpdateStrategy
        required: false
        schema:
          enum:
          - SET
          - ROTATE
          - DELETE
          type: string
        style: form
      - description: The ID of the user group you are associating with the replication
          group.
        explode: true
        in: query
        name: UserGroupIdsToAdd
        required: false
        schema:
          items:
            $ref: '#/components/schemas/UserGroupId'
          type: array
        style: form
      - description: "The ID of the user group to disassociate from the replication\
          \ group, meaning the users in the group no longer can access the replication\
          \ group."
        explode: true
        in: query
        name: UserGroupIdsToRemove
        required: false
        schema:
          items:
            $ref: '#/components/schemas/UserGroupId'
          type: array
        style: form
      - description: Removes the user group associated with this replication group.
        explode: true
        in: query
        name: RemoveUserGroups
        required: false
        schema:
          type: boolean
        style: form
      - description: "Specifies the destination, format and type of the logs."
        explode: true
        in: query
        name: LogDeliveryConfigurations
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_CreateCacheCluster_LogDeliveryConfigurations_parameter_inner'
          type: array
        style: form
      - description: "The network type you choose when modifying a cluster, either\
          \ <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported for workloads\
          \ using Redis engine version 6.2 onward or Memcached engine version 1.6.6\
          \ on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
          >Nitro system</a>."
        explode: true
        in: query
        name: IpDiscovery
        required: false
        schema:
          enum:
          - ipv4
          - ipv6
          type: string
        style: form
      - description: "A flag that enables in-transit encryption when set to true.\
          \ If you are enabling in-transit encryption for an existing cluster, you\
          \ must also set <code>TransitEncryptionMode</code> to <code>preferred</code>."
        explode: true
        in: query
        name: TransitEncryptionEnabled
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>A setting that allows you to migrate your clients to use\
          \ in-transit encryption, with no downtime.</p> <p>You must set <code>TransitEncryptionEnabled</code>\
          \ to <code>true</code>, for your existing cluster, and set <code>TransitEncryptionMode</code>\
          \ to <code>preferred</code> in the same request to allow both encrypted\
          \ and unencrypted connections at the same time. Once you migrate all your\
          \ Redis clients to use encrypted connections you can set the value to <code>required</code>\
          \ to allow encrypted connections only.</p> <p>Setting <code>TransitEncryptionMode</code>\
          \ to <code>required</code> is a two-step process that requires you to first\
          \ set the <code>TransitEncryptionMode</code> to <code>preferred</code> first,\
          \ after that you can set <code>TransitEncryptionMode</code> to <code>required</code>.\
          \ </p>"
        explode: true
        in: query
        name: TransitEncryptionMode
        required: false
        schema:
          enum:
          - preferred
          - required
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
          description: InvalidUserGroupStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: <p>Modifies the settings for a replication group.</p> <ul> <li>
        <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/scaling-redis-cluster-mode-enabled.html">Scaling
        for Amazon ElastiCache for Redis (cluster mode enabled)</a> in the ElastiCache
        User Guide</p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroupShardConfiguration.html">ModifyReplicationGroupShardConfiguration</a>
        in the ElastiCache API Reference</p> </li> </ul> <note> <p>This operation
        is valid for Redis only.</p> </note>
      operationId: POST_ModifyReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
          description: InvalidUserGroupStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyReplicationGroupShardConfiguration:
    get:
      description: "Modifies a replication group's shards (node groups) by allowing\
        \ you to add shards, remove shards, or rebalance the keyspaces among existing\
        \ shards."
      operationId: GET_ModifyReplicationGroupShardConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Redis (cluster mode enabled) cluster (replication
          group) on which the shards are to be configured.
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: The number of node groups (shards) that results from the modification
          of the shard configuration.
        explode: true
        in: query
        name: NodeGroupCount
        required: true
        schema:
          type: integer
        style: form
      - description: "<p>Indicates that the shard reconfiguration process begins immediately.\
          \ At present, the only permitted value for this parameter is <code>true</code>.</p>\
          \ <p>Value: true</p>"
        explode: true
        in: query
        name: ApplyImmediately
        required: true
        schema:
          type: boolean
        style: form
      - description: "<p>Specifies the preferred availability zones for each node\
          \ group in the cluster. If the value of <code>NodeGroupCount</code> is greater\
          \ than the current number of node groups (shards), you can use this parameter\
          \ to specify the preferred availability zones of the cluster's shards. If\
          \ you omit this parameter ElastiCache selects availability zones for you.</p>\
          \ <p>You can specify this parameter only if the value of <code>NodeGroupCount</code>\
          \ is greater than the current number of node groups (shards).</p>"
        explode: true
        in: query
        name: ReshardingConfiguration
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyReplicationGroupShardConfiguration_ReshardingConfiguration_parameter_inner'
          type: array
        style: form
      - description: "<p>If the value of <code>NodeGroupCount</code> is less than\
          \ the current number of node groups (shards), then either <code>NodeGroupsToRemove</code>\
          \ or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRemove</code>\
          \ is a list of <code>NodeGroupId</code>s to remove from the cluster.</p>\
          \ <p>ElastiCache for Redis will attempt to remove all node groups listed\
          \ by <code>NodeGroupsToRemove</code> from the cluster.</p>"
        explode: true
        in: query
        name: NodeGroupsToRemove
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/AllowedNodeGroupId'
            - xml:
                name: NodeGroupToRemove
          type: array
        style: form
      - description: "<p>If the value of <code>NodeGroupCount</code> is less than\
          \ the current number of node groups (shards), then either <code>NodeGroupsToRemove</code>\
          \ or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRetain</code>\
          \ is a list of <code>NodeGroupId</code>s to retain in the cluster.</p> <p>ElastiCache\
          \ for Redis will attempt to remove all node groups except those listed by\
          \ <code>NodeGroupsToRetain</code> from the cluster.</p>"
        explode: true
        in: query
        name: NodeGroupsToRetain
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/AllowedNodeGroupId'
            - xml:
                name: NodeGroupToRetain
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyReplicationGroupShardConfiguration
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReplicationGroupShardConfigurationResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyReplicationGroupShardConfiguration
      x-accepts:
      - text/xml
    post:
      description: "Modifies a replication group's shards (node groups) by allowing\
        \ you to add shards, remove shards, or rebalance the keyspaces among existing\
        \ shards."
      operationId: POST_ModifyReplicationGroupShardConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyReplicationGroupShardConfiguration
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyReplicationGroupShardConfigurationMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyReplicationGroupShardConfigurationResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientCacheClusterCapacityFault'
          description: InsufficientCacheClusterCapacityFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupsPerReplicationGroupQuotaExceededFault'
          description: NodeGroupsPerReplicationGroupQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyReplicationGroupShardConfiguration
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyUser:
    get:
      description: Changes user password(s) and/or access string.
      operationId: GET_ModifyUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the user.
        explode: true
        in: query
        name: UserId
        required: true
        schema:
          minLength: 1
          pattern: "[a-zA-Z][a-zA-Z0-9\\-]*"
          type: string
        style: form
      - description: Access permissions string used for this user.
        explode: true
        in: query
        name: AccessString
        required: false
        schema:
          pattern: .*\S.*
          type: string
        style: form
      - description: Adds additional user permissions to the access string.
        explode: true
        in: query
        name: AppendAccessString
        required: false
        schema:
          pattern: .*\S.*
          type: string
        style: form
      - description: The passwords belonging to the user. You are allowed up to two.
        explode: true
        in: query
        name: Passwords
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          minItems: 1
          type: array
        style: form
      - description: Indicates no password is required for the user.
        explode: true
        in: query
        name: NoPasswordRequired
        required: false
        schema:
          type: boolean
        style: form
      - description: Specifies how to authenticate the user.
        explode: true
        in: query
        name: AuthenticationMode
        required: false
        schema:
          $ref: '#/components/schemas/GET_CreateUser_AuthenticationMode_parameter'
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyUser
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
          description: InvalidUserStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyUser
      x-accepts:
      - text/xml
    post:
      description: Changes user password(s) and/or access string.
      operationId: POST_ModifyUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyUser
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyUserMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
          description: InvalidUserStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyUser
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyUserGroup:
    get:
      description: Changes the list of users that belong to the user group.
      operationId: GET_ModifyUserGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the user group.
        explode: true
        in: query
        name: UserGroupId
        required: true
        schema:
          type: string
        style: form
      - description: The list of user IDs to add to the user group.
        explode: true
        in: query
        name: UserIdsToAdd
        required: false
        schema:
          items:
            $ref: '#/components/schemas/UserId'
          minItems: 1
          type: array
        style: form
      - description: The list of user IDs to remove from the user group.
        explode: true
        in: query
        name: UserIdsToRemove
        required: false
        schema:
          items:
            $ref: '#/components/schemas/UserId'
          minItems: 1
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyUserGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
          description: DefaultUserRequired
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
          description: InvalidUserGroupStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyUserGroup
      x-accepts:
      - text/xml
    post:
      description: Changes the list of users that belong to the user group.
      operationId: POST_ModifyUserGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyUserGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyUserGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
          description: DefaultUserRequired
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidUserGroupStateFault'
          description: InvalidUserGroupStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: ModifyUserGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=PurchaseReservedCacheNodesOffering:
    get:
      description: "Allows you to purchase a reserved cache node offering. Reserved\
        \ nodes are not eligible for cancellation and are non-refundable. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/reserved-nodes.html\"\
        >Managing Costs with Reserved Nodes</a> for Redis or <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/reserved-nodes.html\"\
        >Managing Costs with Reserved Nodes</a> for Memcached."
      operationId: GET_PurchaseReservedCacheNodesOffering
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The ID of the reserved cache node offering to purchase.</p>\
          \ <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
        explode: true
        in: query
        name: ReservedCacheNodesOfferingId
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A customer-specified identifier to track this reservation.</p>\
          \ <note> <p>The Reserved Cache Node ID is an unique customer-specified identifier\
          \ to track this reservation. If this parameter is not specified, ElastiCache\
          \ automatically generates an identifier for the reservation.</p> </note>\
          \ <p>Example: myreservationID</p>"
        explode: true
        in: query
        name: ReservedCacheNodeId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The number of cache node instances to reserve.</p> <p>Default:\
          \ <code>1</code> </p>"
        explode: true
        in: query
        name: CacheNodeCount
        required: false
        schema:
          type: integer
        style: form
      - description: "A list of tags to be added to this resource. A tag is a key-value\
          \ pair. A tag key must be accompanied by a tag value, although null is accepted."
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - PurchaseReservedCacheNodesOffering
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedCacheNodesOfferingResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingNotFoundFault'
          description: ReservedCacheNodesOfferingNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeAlreadyExistsFault'
          description: ReservedCacheNodeAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeQuotaExceededFault'
          description: ReservedCacheNodeQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: PurchaseReservedCacheNodesOffering
      x-accepts:
      - text/xml
    post:
      description: "Allows you to purchase a reserved cache node offering. Reserved\
        \ nodes are not eligible for cancellation and are non-refundable. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/reserved-nodes.html\"\
        >Managing Costs with Reserved Nodes</a> for Redis or <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/reserved-nodes.html\"\
        >Managing Costs with Reserved Nodes</a> for Memcached."
      operationId: POST_PurchaseReservedCacheNodesOffering
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - PurchaseReservedCacheNodesOffering
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PurchaseReservedCacheNodesOfferingMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PurchaseReservedCacheNodesOfferingResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodesOfferingNotFoundFault'
          description: ReservedCacheNodesOfferingNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeAlreadyExistsFault'
          description: ReservedCacheNodeAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeQuotaExceededFault'
          description: ReservedCacheNodeQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: PurchaseReservedCacheNodesOffering
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RebalanceSlotsInGlobalReplicationGroup:
    get:
      description: Redistribute slots to ensure uniform distribution across existing
        shards in the cluster.
      operationId: GET_RebalanceSlotsInGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Global datastore
        explode: true
        in: query
        name: GlobalReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: "If <code>True</code>, redistribution is applied immediately."
        explode: true
        in: query
        name: ApplyImmediately
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RebalanceSlotsInGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebalanceSlotsInGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: RebalanceSlotsInGlobalReplicationGroup
      x-accepts:
      - text/xml
    post:
      description: Redistribute slots to ensure uniform distribution across existing
        shards in the cluster.
      operationId: POST_RebalanceSlotsInGlobalReplicationGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RebalanceSlotsInGlobalReplicationGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebalanceSlotsInGlobalReplicationGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebalanceSlotsInGlobalReplicationGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalReplicationGroupNotFoundFault'
          description: GlobalReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: RebalanceSlotsInGlobalReplicationGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RebootCacheCluster:
    get:
      description: "<p>Reboots some, or all, of the cache nodes within a provisioned\
        \ cluster. This operation applies any modified cache parameter groups to the\
        \ cluster. The reboot operation takes place as soon as possible, and results\
        \ in a momentary outage to the cluster. During the reboot, the cluster status\
        \ is set to REBOOTING.</p> <p>The reboot causes the contents of the cache\
        \ (for each cache node being rebooted) to be lost.</p> <p>When the reboot\
        \ is complete, a cluster event is created.</p> <p>Rebooting a cluster is currently\
        \ supported on Memcached and Redis (cluster mode disabled) clusters. Rebooting\
        \ is not supported on Redis (cluster mode enabled) clusters.</p> <p>If you\
        \ make changes to parameters that require a Redis (cluster mode enabled) cluster\
        \ reboot for the changes to be applied, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes.rebooting.html\"\
        >Rebooting a Cluster</a> for an alternate process.</p>"
      operationId: GET_RebootCacheCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The cluster identifier. This parameter is stored as a lowercase
          string.
        explode: true
        in: query
        name: CacheClusterId
        required: true
        schema:
          type: string
        style: form
      - description: "A list of cache node IDs to reboot. A node ID is a numeric identifier\
          \ (0001, 0002, etc.). To reboot an entire cluster, specify all of the cache\
          \ node IDs."
        explode: true
        in: query
        name: CacheNodeIdsToReboot
        required: true
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: CacheNodeId
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RebootCacheCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootCacheClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
      x-aws-operation-name: RebootCacheCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Reboots some, or all, of the cache nodes within a provisioned\
        \ cluster. This operation applies any modified cache parameter groups to the\
        \ cluster. The reboot operation takes place as soon as possible, and results\
        \ in a momentary outage to the cluster. During the reboot, the cluster status\
        \ is set to REBOOTING.</p> <p>The reboot causes the contents of the cache\
        \ (for each cache node being rebooted) to be lost.</p> <p>When the reboot\
        \ is complete, a cluster event is created.</p> <p>Rebooting a cluster is currently\
        \ supported on Memcached and Redis (cluster mode disabled) clusters. Rebooting\
        \ is not supported on Redis (cluster mode enabled) clusters.</p> <p>If you\
        \ make changes to parameters that require a Redis (cluster mode enabled) cluster\
        \ reboot for the changes to be applied, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes.rebooting.html\"\
        >Rebooting a Cluster</a> for an alternate process.</p>"
      operationId: POST_RebootCacheCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RebootCacheCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebootCacheClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootCacheClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
      x-aws-operation-name: RebootCacheCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemoveTagsFromResource:
    get:
      description: "Removes the tags identified by the <code>TagKeys</code> list from\
        \ the named resource. A tag is a key-value pair where the key and value are\
        \ case-sensitive. You can use tags to categorize and track all your ElastiCache\
        \ resources, with the exception of global replication group. When you add\
        \ or remove tags on replication groups, those actions will be replicated to\
        \ all nodes in the replication group. For more information, see <a href=\"\
        http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html\"\
        >Resource-level permissions</a>."
      operationId: GET_RemoveTagsFromResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The Amazon Resource Name (ARN) of the resource from which\
          \ you want the tags removed, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>\
          \ or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p>\
          \ <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs) and Amazon Service Namespaces</a>.</p>"
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - description: A list of <code>TagKeys</code> identifying the tags you want
          removed from the named resource.
        explode: true
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveTagsFromResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
          description: ReservedCacheNodeNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagNotFoundFault'
          description: TagNotFoundFault
      x-aws-operation-name: RemoveTagsFromResource
      x-accepts:
      - text/xml
    post:
      description: "Removes the tags identified by the <code>TagKeys</code> list from\
        \ the named resource. A tag is a key-value pair where the key and value are\
        \ case-sensitive. You can use tags to categorize and track all your ElastiCache\
        \ resources, with the exception of global replication group. When you add\
        \ or remove tags on replication groups, those actions will be replicated to\
        \ all nodes in the replication group. For more information, see <a href=\"\
        http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.ResourceLevelPermissions.html\"\
        >Resource-level permissions</a>."
      operationId: POST_RemoveTagsFromResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveTagsFromResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheClusterNotFoundFault'
          description: CacheClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSubnetGroupNotFoundFault'
          description: CacheSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReservedCacheNodeNotFoundFault'
          description: ReservedCacheNodeNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroupNotFoundFault'
          description: UserGroupNotFoundFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagNotFoundFault'
          description: TagNotFoundFault
      x-aws-operation-name: RemoveTagsFromResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ResetCacheParameterGroup:
    get:
      description: "Modifies the parameters of a cache parameter group to the engine\
        \ or system default value. You can reset specific parameters by submitting\
        \ a list of parameter names. To reset the entire cache parameter group, specify\
        \ the <code>ResetAllParameters</code> and <code>CacheParameterGroupName</code>\
        \ parameters."
      operationId: GET_ResetCacheParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the cache parameter group to reset.
        explode: true
        in: query
        name: CacheParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>If <code>true</code>, all parameters in the cache parameter\
          \ group are reset to their default values. If <code>false</code>, only the\
          \ parameters listed by <code>ParameterNameValues</code> are reset to their\
          \ default values.</p> <p>Valid values: <code>true</code> | <code>false</code>\
          \ </p>"
        explode: true
        in: query
        name: ResetAllParameters
        required: false
        schema:
          type: boolean
        style: form
      - description: "An array of parameter names to reset to their default values.\
          \ If <code>ResetAllParameters</code> is <code>true</code>, do not use <code>ParameterNameValues</code>.\
          \ If <code>ResetAllParameters</code> is <code>false</code>, you must specify\
          \ the name of at least one parameter to reset."
        explode: true
        in: query
        name: ParameterNameValues
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyCacheParameterGroup_ParameterNameValues_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ResetCacheParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
          description: InvalidCacheParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
      x-aws-operation-name: ResetCacheParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "Modifies the parameters of a cache parameter group to the engine\
        \ or system default value. You can reset specific parameters by submitting\
        \ a list of parameter names. To reset the entire cache parameter group, specify\
        \ the <code>ResetAllParameters</code> and <code>CacheParameterGroupName</code>\
        \ parameters."
      operationId: POST_ResetCacheParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ResetCacheParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetCacheParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheParameterGroupStateFault'
          description: InvalidCacheParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheParameterGroupNotFoundFault'
          description: CacheParameterGroupNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalReplicationGroupStateFault'
          description: InvalidGlobalReplicationGroupStateFault
      x-aws-operation-name: ResetCacheParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RevokeCacheSecurityGroupIngress:
    get:
      description: Revokes ingress from a cache security group. Use this operation
        to disallow access from an Amazon EC2 security group that had been previously
        authorized.
      operationId: GET_RevokeCacheSecurityGroupIngress
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the cache security group to revoke ingress from.
        explode: true
        in: query
        name: CacheSecurityGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The name of the Amazon EC2 security group to revoke access from.
        explode: true
        in: query
        name: EC2SecurityGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon account number of the Amazon EC2 security group owner.
          Note that this is not the same thing as an Amazon access key ID - you must
          provide a valid Amazon account number for this parameter.
        explode: true
        in: query
        name: EC2SecurityGroupOwnerId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RevokeCacheSecurityGroupIngress
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeCacheSecurityGroupIngressResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: RevokeCacheSecurityGroupIngress
      x-accepts:
      - text/xml
    post:
      description: Revokes ingress from a cache security group. Use this operation
        to disallow access from an Amazon EC2 security group that had been previously
        authorized.
      operationId: POST_RevokeCacheSecurityGroupIngress
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RevokeCacheSecurityGroupIngress
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RevokeCacheSecurityGroupIngressMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RevokeCacheSecurityGroupIngressResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CacheSecurityGroupNotFoundFault'
          description: CacheSecurityGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheSecurityGroupStateFault'
          description: InvalidCacheSecurityGroupStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: RevokeCacheSecurityGroupIngress
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=StartMigration:
    get:
      description: Start the migration of data.
      operationId: GET_StartMigration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the replication group to which data should be migrated.
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: "List of endpoints from which data should be migrated. For Redis\
          \ (cluster mode disabled), list should have only one element."
        explode: true
        in: query
        name: CustomerNodeEndpointList
        required: true
        schema:
          items:
            $ref: '#/components/schemas/CustomerNodeEndpoint'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StartMigration
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartMigrationResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupAlreadyUnderMigrationFault'
          description: ReplicationGroupAlreadyUnderMigrationFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: StartMigration
      x-accepts:
      - text/xml
    post:
      description: Start the migration of data.
      operationId: POST_StartMigration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StartMigration
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StartMigrationMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartMigrationResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupAlreadyUnderMigrationFault'
          description: ReplicationGroupAlreadyUnderMigrationFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-aws-operation-name: StartMigration
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=TestFailover:
    get:
      description: "<p>Represents the input of a <code>TestFailover</code> operation\
        \ which test automatic failover on a specified node group (called shard in\
        \ the console) in a replication group (called cluster in the console).</p>\
        \ <p>This API is designed for testing the behavior of your application in\
        \ case of ElastiCache failover. It is not designed to be an operational tool\
        \ for initiating a failover to overcome a problem you may have with the cluster.\
        \ Moreover, in certain conditions such as large-scale operational events,\
        \ Amazon may block this API. </p> <p class=\"title\"> <b>Note the following</b>\
        \ </p> <ul> <li> <p>A customer can use this operation to test automatic failover\
        \ on up to 5 shards (called node groups in the ElastiCache API and Amazon\
        \ CLI) in any rolling 24-hour period.</p> </li> <li> <p>If calling this operation\
        \ on shards in different clusters (called replication groups in the API and\
        \ CLI), the calls can be made concurrently.</p> <p> </p> </li> <li> <p>If\
        \ calling this operation multiple times on different shards in the same Redis\
        \ (cluster mode enabled) replication group, the first node replacement must\
        \ complete before a subsequent call can be made.</p> </li> <li> <p>To determine\
        \ whether the node replacement is complete you can check Events using the\
        \ Amazon ElastiCache console, the Amazon CLI, or the ElastiCache API. Look\
        \ for the following automatic failover related events, listed here in order\
        \ of occurrance:</p> <ol> <li> <p>Replication group message: <code>Test Failover\
        \ API called for node group &lt;node-group-id&gt;</code> </p> </li> <li> <p>Cache\
        \ cluster message: <code>Failover from primary node &lt;primary-node-id&gt;\
        \ to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Replication\
        \ group message: <code>Failover from primary node &lt;primary-node-id&gt;\
        \ to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Cache\
        \ cluster message: <code>Recovering cache nodes &lt;node-id&gt;</code> </p>\
        \ </li> <li> <p>Cache cluster message: <code>Finished recovery for cache nodes\
        \ &lt;node-id&gt;</code> </p> </li> </ol> <p>For more information see:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ECEvents.Viewing.html\"\
        >Viewing ElastiCache Events</a> in the <i>ElastiCache User Guide</i> </p>\
        \ </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html\"\
        >DescribeEvents</a> in the ElastiCache API Reference</p> </li> </ul> </li>\
        \ </ul> <p>Also see, <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html#auto-failover-test\"\
        >Testing Multi-AZ </a> in the <i>ElastiCache User Guide</i>.</p>"
      operationId: GET_TestFailover
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the replication group (console: cluster) whose automatic\
          \ failover is being tested by this operation."
        explode: true
        in: query
        name: ReplicationGroupId
        required: true
        schema:
          type: string
        style: form
      - description: The name of the node group (called shard in the console) in this
          replication group on which automatic failover is to be tested. You may test
          automatic failover on up to 5 node groups in any rolling 24-hour period.
        explode: true
        in: query
        name: NodeGroupId
        required: true
        schema:
          maxLength: 4
          minLength: 1
          pattern: \d+
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - TestFailover
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFailoverResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/APICallRateForCustomerExceededFault'
          description: APICallRateForCustomerExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupNotFoundFault'
          description: NodeGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFailoverNotAvailableFault'
          description: TestFailoverNotAvailableFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: TestFailover
      x-accepts:
      - text/xml
    post:
      description: "<p>Represents the input of a <code>TestFailover</code> operation\
        \ which test automatic failover on a specified node group (called shard in\
        \ the console) in a replication group (called cluster in the console).</p>\
        \ <p>This API is designed for testing the behavior of your application in\
        \ case of ElastiCache failover. It is not designed to be an operational tool\
        \ for initiating a failover to overcome a problem you may have with the cluster.\
        \ Moreover, in certain conditions such as large-scale operational events,\
        \ Amazon may block this API. </p> <p class=\"title\"> <b>Note the following</b>\
        \ </p> <ul> <li> <p>A customer can use this operation to test automatic failover\
        \ on up to 5 shards (called node groups in the ElastiCache API and Amazon\
        \ CLI) in any rolling 24-hour period.</p> </li> <li> <p>If calling this operation\
        \ on shards in different clusters (called replication groups in the API and\
        \ CLI), the calls can be made concurrently.</p> <p> </p> </li> <li> <p>If\
        \ calling this operation multiple times on different shards in the same Redis\
        \ (cluster mode enabled) replication group, the first node replacement must\
        \ complete before a subsequent call can be made.</p> </li> <li> <p>To determine\
        \ whether the node replacement is complete you can check Events using the\
        \ Amazon ElastiCache console, the Amazon CLI, or the ElastiCache API. Look\
        \ for the following automatic failover related events, listed here in order\
        \ of occurrance:</p> <ol> <li> <p>Replication group message: <code>Test Failover\
        \ API called for node group &lt;node-group-id&gt;</code> </p> </li> <li> <p>Cache\
        \ cluster message: <code>Failover from primary node &lt;primary-node-id&gt;\
        \ to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Replication\
        \ group message: <code>Failover from primary node &lt;primary-node-id&gt;\
        \ to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Cache\
        \ cluster message: <code>Recovering cache nodes &lt;node-id&gt;</code> </p>\
        \ </li> <li> <p>Cache cluster message: <code>Finished recovery for cache nodes\
        \ &lt;node-id&gt;</code> </p> </li> </ol> <p>For more information see:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ECEvents.Viewing.html\"\
        >Viewing ElastiCache Events</a> in the <i>ElastiCache User Guide</i> </p>\
        \ </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html\"\
        >DescribeEvents</a> in the ElastiCache API Reference</p> </li> </ul> </li>\
        \ </ul> <p>Also see, <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html#auto-failover-test\"\
        >Testing Multi-AZ </a> in the <i>ElastiCache User Guide</i>.</p>"
      operationId: POST_TestFailover
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - TestFailover
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2015-02-02
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TestFailoverMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFailoverResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/APICallRateForCustomerExceededFault'
          description: APICallRateForCustomerExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCacheClusterStateFault'
          description: InvalidCacheClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidReplicationGroupStateFault'
          description: InvalidReplicationGroupStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NodeGroupNotFoundFault'
          description: NodeGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ReplicationGroupNotFoundFault'
          description: ReplicationGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFailoverNotAvailableFault'
          description: TestFailoverNotAvailableFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-aws-operation-name: TestFailover
      x-content-type: text/xml
      x-accepts:
      - text/xml
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    TagListMessage:
      description: "Represents the output from the <code>AddTagsToResource</code>,\
        \ <code>ListTagsForResource</code>, and <code>RemoveTagsFromResource</code>\
        \ operations."
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags as key-value pairs.
      type: object
    Tag:
      description: "A tag that can be added to an ElastiCache cluster or replication\
        \ group. Tags are composed of a Key/Value pair. You can use tags to categorize\
        \ and track all your ElastiCache resources, with the exception of global replication\
        \ group. When you add or remove tags on replication groups, those actions\
        \ will be replicated to all nodes in the replication group. A tag with a null\
        \ Value is permitted."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The key for the tag. May not be null.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The tag's value. May be null.
      type: object
    CacheClusterNotFoundFault: {}
    CacheParameterGroupNotFoundFault: {}
    CacheSecurityGroupNotFoundFault: {}
    CacheSubnetGroupNotFoundFault: {}
    InvalidReplicationGroupStateFault: {}
    ReplicationGroupNotFoundFault: {}
    ReservedCacheNodeNotFoundFault: {}
    SnapshotNotFoundFault: {}
    UserNotFoundFault: {}
    UserGroupNotFoundFault: {}
    TagQuotaPerResourceExceeded: {}
    InvalidARNFault: {}
    AuthorizeCacheSecurityGroupIngressResult:
      properties:
        CacheSecurityGroup:
          $ref: '#/components/schemas/CacheSecurityGroup'
      type: object
    InvalidCacheSecurityGroupStateFault: {}
    AuthorizationAlreadyExistsFault: {}
    InvalidParameterValueException: {}
    InvalidParameterCombinationException: {}
    UpdateActionResultsMessage:
      properties:
        ProcessedUpdateActions:
          allOf:
          - $ref: '#/components/schemas/ProcessedUpdateActionList'
          - description: Update actions that have been processed successfully
        UnprocessedUpdateActions:
          allOf:
          - $ref: '#/components/schemas/UnprocessedUpdateActionList'
          - description: Update actions that haven't been processed successfully
      type: object
    String:
      type: string
    ServiceUpdateNotFoundFault: {}
    CompleteMigrationResponse:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    ReplicationGroupNotUnderMigrationFault: {}
    CopySnapshotResult:
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
      type: object
    SnapshotAlreadyExistsFault: {}
    SnapshotQuotaExceededFault: {}
    InvalidSnapshotStateFault: {}
    CreateCacheClusterResult:
      properties:
        CacheCluster:
          $ref: '#/components/schemas/CacheCluster'
      type: object
    LogDeliveryConfigurationRequest:
      description: "Specifies the destination, format and type of the logs. "
      properties:
        LogType:
          allOf:
          - $ref: '#/components/schemas/LogType'
          - description: Refers to <a href="https://redis.io/commands/slowlog">slow-log</a>
              or engine-log..
        DestinationType:
          allOf:
          - $ref: '#/components/schemas/DestinationType'
          - description: Specify either <code>cloudwatch-logs</code> or <code>kinesis-firehose</code>
              as the destination type.
        DestinationDetails:
          $ref: '#/components/schemas/LogDeliveryConfigurationRequest_DestinationDetails'
        LogFormat:
          allOf:
          - $ref: '#/components/schemas/LogFormat'
          - description: Specifies either JSON or TEXT
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Specify if log delivery is enabled. Default <code>true</code>.
      type: object
    CacheClusterAlreadyExistsFault: {}
    InsufficientCacheClusterCapacityFault: {}
    ClusterQuotaForCustomerExceededFault: {}
    NodeQuotaForClusterExceededFault: {}
    NodeQuotaForCustomerExceededFault: {}
    InvalidVPCNetworkStateFault: {}
    CreateCacheParameterGroupResult:
      properties:
        CacheParameterGroup:
          $ref: '#/components/schemas/CacheParameterGroup'
      type: object
    CacheParameterGroupQuotaExceededFault: {}
    CacheParameterGroupAlreadyExistsFault: {}
    InvalidCacheParameterGroupStateFault: {}
    CreateCacheSecurityGroupResult:
      properties:
        CacheSecurityGroup:
          $ref: '#/components/schemas/CacheSecurityGroup'
      type: object
    CacheSecurityGroupAlreadyExistsFault: {}
    CacheSecurityGroupQuotaExceededFault: {}
    CreateCacheSubnetGroupResult:
      properties:
        CacheSubnetGroup:
          $ref: '#/components/schemas/CacheSubnetGroup'
      type: object
    CacheSubnetGroupAlreadyExistsFault: {}
    CacheSubnetGroupQuotaExceededFault: {}
    CacheSubnetQuotaExceededFault: {}
    InvalidSubnet: {}
    SubnetNotAllowedFault: {}
    CreateGlobalReplicationGroupResult:
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
      type: object
    GlobalReplicationGroupAlreadyExistsFault: {}
    ServiceLinkedRoleNotFoundFault: {}
    CreateReplicationGroupResult:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    NodeGroupConfiguration:
      description: "Node group (shard) configuration options. Each node group (shard)\
        \ configuration has the following: <code>Slots</code>, <code>PrimaryAvailabilityZone</code>,\
        \ <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>."
      properties:
        NodeGroupId:
          allOf:
          - $ref: '#/components/schemas/AllowedNodeGroupId'
          - description: Either the ElastiCache for Redis supplied 4-digit id or a
              user supplied id for the node group these configuration values apply
              to.
        Slots:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A string that specifies the keyspace for a particular\
              \ node group. Keyspaces range from 0 to 16,383. The string is in the\
              \ format <code>startkey-endkey</code>.</p> <p>Example: <code>\"0-3999\"\
              </code> </p>"
        ReplicaCount:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of read replica nodes in this node group (shard).
        PrimaryAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Availability Zone where the primary node of this node
              group (shard) is launched.
        ReplicaAvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZonesList'
          - description: A list of Availability Zones to be used for the read replicas.
              The number of Availability Zones in this list must match the value of
              <code>ReplicaCount</code> or <code>ReplicasPerNodeGroup</code> if not
              specified.
        PrimaryOutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The outpost ARN of the primary node.
        ReplicaOutpostArns:
          allOf:
          - $ref: '#/components/schemas/OutpostArnsList'
          - description: The outpost ARN of the node replicas.
      type: object
    UserGroupId:
      minLength: 1
      pattern: "[a-zA-Z][a-zA-Z0-9\\-]*"
      type: string
    InvalidCacheClusterStateFault: {}
    ReplicationGroupAlreadyExistsFault: {}
    InvalidUserGroupStateFault: {}
    NodeGroupsPerReplicationGroupQuotaExceededFault: {}
    GlobalReplicationGroupNotFoundFault: {}
    InvalidGlobalReplicationGroupStateFault: {}
    CreateSnapshotResult:
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
      type: object
    SnapshotFeatureNotSupportedFault: {}
    User:
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the user.
        UserName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The username of the user.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Indicates the user status. Can be \"active\", \"modifying\"\
              \ or \"deleting\"."
        Engine:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: The current supported value is Redis.
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The minimum engine version required, which is Redis 6.0"
        AccessString:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Access permissions string used for this user.
        UserGroupIds:
          allOf:
          - $ref: '#/components/schemas/UserGroupIdList'
          - description: Returns a list of the user group IDs the user belongs to.
        Authentication:
          $ref: '#/components/schemas/User_Authentication'
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the user.
      type: object
    InputAuthenticationType:
      enum:
      - password
      - no-password-required
      - iam
      type: string
    PasswordListInput:
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
      type: array
    UserAlreadyExistsFault: {}
    UserQuotaExceededFault: {}
    DuplicateUserNameFault: {}
    UserGroup:
      properties:
        UserGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the user group.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Indicates user group status. Can be \"creating\", \"active\"\
              , \"modifying\", \"deleting\"."
        Engine:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: 'The current supported value is Redis. '
        UserIds:
          allOf:
          - $ref: '#/components/schemas/UserIdList'
          - description: The list of user IDs that belong to the user group.
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The minimum engine version required, which is Redis 6.0"
        PendingChanges:
          $ref: '#/components/schemas/UserGroup_PendingChanges'
        ReplicationGroups:
          allOf:
          - $ref: '#/components/schemas/UGReplicationGroupIdList'
          - description: A list of replication groups that the user group can access.
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the user group.
      type: object
    UserId:
      minLength: 1
      pattern: "[a-zA-Z][a-zA-Z0-9\\-]*"
      type: string
    UserGroupAlreadyExistsFault: {}
    DefaultUserRequired: {}
    UserGroupQuotaExceededFault: {}
    DecreaseNodeGroupsInGlobalReplicationGroupResult:
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
      type: object
    DecreaseReplicaCountResult:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    ConfigureShard:
      description: "Node group (shard) configuration options when adding or removing\
        \ replicas. Each node group (shard) configuration has the following members:\
        \ NodeGroupId, NewReplicaCount, and PreferredAvailabilityZones. "
      properties:
        NodeGroupId:
          allOf:
          - $ref: '#/components/schemas/AllowedNodeGroupId'
          - description: "The 4-digit id for the node group you are configuring. For\
              \ Redis (cluster mode disabled) replication groups, the node group id\
              \ is always 0001. To find a Redis (cluster mode enabled)'s node group's\
              \ (shard's) id, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/shard-find-id.html\"\
              >Finding a Shard's Id</a>."
        NewReplicaCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The number of replicas you want in this node group at\
              \ the end of this operation. The maximum value for <code>NewReplicaCount</code>\
              \ is 5. The minimum value depends upon the type of Redis replication\
              \ group you are working with.</p> <p>The minimum number of replicas\
              \ in a shard or replication group is:</p> <ul> <li> <p>Redis (cluster\
              \ mode disabled)</p> <ul> <li> <p>If Multi-AZ: 1</p> </li> <li> <p>If\
              \ Multi-AZ: 0</p> </li> </ul> </li> <li> <p>Redis (cluster mode enabled):\
              \ 0 (though you will not be able to failover to a replica if your primary\
              \ node fails)</p> </li> </ul>"
        PreferredAvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/PreferredAvailabilityZoneList'
          - description: "A list of <code>PreferredAvailabilityZone</code> strings\
              \ that specify which availability zones the replication group's nodes\
              \ are to be in. The nummber of <code>PreferredAvailabilityZone</code>\
              \ values must equal the value of <code>NewReplicaCount</code> plus 1\
              \ to account for the primary node. If this member of <code>ReplicaConfiguration</code>\
              \ is omitted, ElastiCache for Redis selects the availability zone for\
              \ each of the replicas."
        PreferredOutpostArns:
          allOf:
          - $ref: '#/components/schemas/PreferredOutpostArnList'
          - description: The outpost ARNs in which the cache cluster is created.
      required:
      - NewReplicaCount
      - NodeGroupId
      type: object
    NoOperationFault: {}
    DeleteCacheClusterResult:
      properties:
        CacheCluster:
          $ref: '#/components/schemas/CacheCluster'
      type: object
    CacheSubnetGroupInUse: {}
    DeleteGlobalReplicationGroupResult:
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
      type: object
    DeleteReplicationGroupResult:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    DeleteSnapshotResult:
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
      type: object
    InvalidUserStateFault: {}
    DefaultUserAssociatedToUserGroupFault: {}
    CacheClusterMessage:
      description: Represents the output of a <code>DescribeCacheClusters</code> operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        CacheClusters:
          allOf:
          - $ref: '#/components/schemas/CacheClusterList'
          - description: A list of clusters. Each item in the list contains detailed
              information about one cluster.
      type: object
    CacheEngineVersionMessage:
      description: Represents the output of a <a>DescribeCacheEngineVersions</a> operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        CacheEngineVersions:
          allOf:
          - $ref: '#/components/schemas/CacheEngineVersionList'
          - description: A list of cache engine version details. Each element in the
              list contains detailed information about one cache engine version.
      type: object
    CacheParameterGroupsMessage:
      description: Represents the output of a <code>DescribeCacheParameterGroups</code>
        operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        CacheParameterGroups:
          allOf:
          - $ref: '#/components/schemas/CacheParameterGroupList'
          - description: A list of cache parameter groups. Each element in the list
              contains detailed information about one cache parameter group.
      type: object
    CacheParameterGroupDetails:
      description: Represents the output of a <code>DescribeCacheParameters</code>
        operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: A list of <a>Parameter</a> instances.
        CacheNodeTypeSpecificParameters:
          allOf:
          - $ref: '#/components/schemas/CacheNodeTypeSpecificParametersList'
          - description: A list of parameters specific to a particular cache node
              type. Each element in the list contains detailed information about one
              parameter.
      type: object
    CacheSecurityGroupMessage:
      description: Represents the output of a <code>DescribeCacheSecurityGroups</code>
        operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        CacheSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/CacheSecurityGroups'
          - description: A list of cache security groups. Each element in the list
              contains detailed information about one group.
      type: object
    CacheSubnetGroupMessage:
      description: Represents the output of a <code>DescribeCacheSubnetGroups</code>
        operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        CacheSubnetGroups:
          allOf:
          - $ref: '#/components/schemas/CacheSubnetGroups'
          - description: A list of cache subnet groups. Each element in the list contains
              detailed information about one group.
      type: object
    DescribeEngineDefaultParametersResult:
      properties:
        EngineDefaults:
          $ref: '#/components/schemas/EngineDefaults'
      type: object
    EventsMessage:
      description: Represents the output of a <code>DescribeEvents</code> operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        Events:
          allOf:
          - $ref: '#/components/schemas/EventList'
          - description: A list of events. Each element in the list contains detailed
              information about one event.
      type: object
    DescribeGlobalReplicationGroupsResult:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords. &gt;"
        GlobalReplicationGroups:
          allOf:
          - $ref: '#/components/schemas/GlobalReplicationGroupList'
          - description: Indicates the slot configuration and global identifier for
              each slice group.
      type: object
    ReplicationGroupMessage:
      description: Represents the output of a <code>DescribeReplicationGroups</code>
        operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        ReplicationGroups:
          allOf:
          - $ref: '#/components/schemas/ReplicationGroupList'
          - description: A list of replication groups. Each item in the list contains
              detailed information about one replication group.
      type: object
    ReservedCacheNodeMessage:
      description: Represents the output of a <code>DescribeReservedCacheNodes</code>
        operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        ReservedCacheNodes:
          allOf:
          - $ref: '#/components/schemas/ReservedCacheNodeList'
          - description: A list of reserved cache nodes. Each element in the list
              contains detailed information about one node.
      type: object
    ReservedCacheNodesOfferingMessage:
      description: Represents the output of a <code>DescribeReservedCacheNodesOfferings</code>
        operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        ReservedCacheNodesOfferings:
          allOf:
          - $ref: '#/components/schemas/ReservedCacheNodesOfferingList'
          - description: A list of reserved cache node offerings. Each element in
              the list contains detailed information about one offering.
      type: object
    ReservedCacheNodesOfferingNotFoundFault: {}
    ServiceUpdatesMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
        ServiceUpdates:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateList'
          - description: A list of service updates
      type: object
    ServiceUpdateStatus:
      enum:
      - available
      - cancelled
      - expired
      type: string
    DescribeSnapshotsListMessage:
      description: Represents the output of a <code>DescribeSnapshots</code> operation.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
        Snapshots:
          allOf:
          - $ref: '#/components/schemas/SnapshotList'
          - description: A list of snapshots. Each item in the list contains detailed
              information about one snapshot.
      type: object
    UpdateActionsMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
        UpdateActions:
          allOf:
          - $ref: '#/components/schemas/UpdateActionList'
          - description: Returns a list of update actions
      type: object
    TStamp:
      format: date-time
      type: string
    UpdateActionStatus:
      enum:
      - not-applied
      - waiting-to-start
      - in-progress
      - stopping
      - stopped
      - complete
      - scheduling
      - scheduled
      - not-applicable
      type: string
    DescribeUserGroupsResult:
      properties:
        UserGroups:
          allOf:
          - $ref: '#/components/schemas/UserGroupList'
          - description: Returns a list of user groups.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords. &gt;"
      type: object
    DescribeUsersResult:
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/UserList'
          - description: A list of users.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords. &gt;"
      type: object
    Filter:
      description: Used to streamline results of a search based on the property being
        filtered.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: "The property being filtered. For example, UserId."
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValueList'
          - description: "The property values to filter on. For example, \"user-123\"\
              ."
      required:
      - Name
      - Values
      type: object
    DisassociateGlobalReplicationGroupResult:
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
      type: object
    FailoverGlobalReplicationGroupResult:
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
      type: object
    IncreaseNodeGroupsInGlobalReplicationGroupResult:
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
      type: object
    RegionalConfiguration:
      description: 'A list of the replication groups '
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the secondary cluster
        ReplicationGroupRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon region where the cluster is stored
        ReshardingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ReshardingConfigurationList'
          - description: 'A list of <code>PreferredAvailabilityZones</code> objects
              that specifies the configuration of a node group in the resharded cluster. '
      required:
      - ReplicationGroupId
      - ReplicationGroupRegion
      - ReshardingConfiguration
      type: object
    IncreaseReplicaCountResult:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    InvalidKMSKeyFault: {}
    AllowedNodeTypeModificationsMessage:
      description: Represents the allowed node types you can use to modify your cluster
        or replication group.
      properties:
        ScaleUpModifications:
          allOf:
          - $ref: '#/components/schemas/NodeTypeList'
          - description: "<p>A string list, each element of which specifies a cache\
              \ node type which you can use to scale your cluster or replication group.</p>\
              \ <p>When scaling up a Redis cluster or replication group using <code>ModifyCacheCluster</code>\
              \ or <code>ModifyReplicationGroup</code>, use a value from this list\
              \ for the <code>CacheNodeType</code> parameter.</p>"
        ScaleDownModifications:
          allOf:
          - $ref: '#/components/schemas/NodeTypeList'
          - description: "A string list, each element of which specifies a cache node\
              \ type which you can use to scale your cluster or replication group.\
              \ When scaling down a Redis cluster or replication group using ModifyCacheCluster\
              \ or ModifyReplicationGroup, use a value from this list for the CacheNodeType\
              \ parameter. "
      type: object
    ModifyCacheClusterResult:
      properties:
        CacheCluster:
          $ref: '#/components/schemas/CacheCluster'
      type: object
    CacheParameterGroupNameMessage:
      description: <p>Represents the output of one of the following operations:</p>
        <ul> <li> <p> <code>ModifyCacheParameterGroup</code> </p> </li> <li> <p> <code>ResetCacheParameterGroup</code>
        </p> </li> </ul>
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache parameter group.
      type: object
    ParameterNameValue:
      description: Describes a name-value pair that is used to update the value of
        a parameter.
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter.
        ParameterValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the parameter.
      type: object
    ModifyCacheSubnetGroupResult:
      properties:
        CacheSubnetGroup:
          $ref: '#/components/schemas/CacheSubnetGroup'
      type: object
    SubnetInUse: {}
    ModifyGlobalReplicationGroupResult:
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
      type: object
    ModifyReplicationGroupResult:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    ModifyReplicationGroupShardConfigurationResult:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    ReshardingConfiguration:
      description: A list of <code>PreferredAvailabilityZones</code> objects that
        specifies the configuration of a node group in the resharded cluster.
      properties:
        NodeGroupId:
          allOf:
          - $ref: '#/components/schemas/AllowedNodeGroupId'
          - description: Either the ElastiCache for Redis supplied 4-digit id or a
              user supplied id for the node group these configuration values apply
              to.
        PreferredAvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZonesList'
          - description: A list of preferred availability zones for the nodes in this
              cluster.
      type: object
    AllowedNodeGroupId:
      maxLength: 4
      minLength: 1
      pattern: \d+
      type: string
    PurchaseReservedCacheNodesOfferingResult:
      properties:
        ReservedCacheNode:
          $ref: '#/components/schemas/ReservedCacheNode'
      type: object
    ReservedCacheNodeAlreadyExistsFault: {}
    ReservedCacheNodeQuotaExceededFault: {}
    RebalanceSlotsInGlobalReplicationGroupResult:
      properties:
        GlobalReplicationGroup:
          $ref: '#/components/schemas/GlobalReplicationGroup'
      type: object
    RebootCacheClusterResult:
      properties:
        CacheCluster:
          $ref: '#/components/schemas/CacheCluster'
      type: object
    TagNotFoundFault: {}
    RevokeCacheSecurityGroupIngressResult:
      properties:
        CacheSecurityGroup:
          $ref: '#/components/schemas/CacheSecurityGroup'
      type: object
    AuthorizationNotFoundFault: {}
    StartMigrationResponse:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    CustomerNodeEndpoint:
      description: The endpoint from which data should be migrated.
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The address of the node endpoint
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The port of the node endpoint
      type: object
    ReplicationGroupAlreadyUnderMigrationFault: {}
    TestFailoverResult:
      properties:
        ReplicationGroup:
          $ref: '#/components/schemas/ReplicationGroup'
      type: object
    APICallRateForCustomerExceededFault: {}
    NodeGroupNotFoundFault: {}
    TestFailoverNotAvailableFault: {}
    AZMode:
      enum:
      - single-az
      - cross-az
      type: string
    AccessString:
      pattern: .*\S.*
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
      type: array
    AddTagsToResourceMessage:
      description: Represents the input of an AddTagsToResource operation.
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon Resource Name (ARN) of the resource to which\
              \ the tags are to be added, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>\
              \ or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.\
              \ ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.</p>\
              \ <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Service Namespaces</a>.</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
      required:
      - ResourceName
      - Tags
      title: AddTagsToResourceMessage
      type: object
    NodeTypeList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    AuthTokenUpdateStatus:
      enum:
      - SETTING
      - ROTATING
      type: string
    AuthTokenUpdateStrategyType:
      enum:
      - SET
      - ROTATE
      - DELETE
      type: string
    AuthenticationType:
      enum:
      - password
      - no-password
      - iam
      type: string
    IntegerOptional:
      type: integer
    Authentication:
      description: Indicates whether the user requires a password to authenticate.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: Indicates whether the user requires a password to authenticate.
        PasswordCount:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of passwords belonging to the user. The maximum
              is two.
      type: object
    AuthenticationMode:
      description: Specifies the authentication mode to use.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/InputAuthenticationType'
          - description: "Specifies the authentication type. Possible options are\
              \ IAM authentication, password and no password."
        Passwords:
          allOf:
          - $ref: '#/components/schemas/PasswordListInput'
          - description: Specifies the passwords to use for authentication if <code>Type</code>
              is set to <code>password</code>.
      type: object
    AuthorizeCacheSecurityGroupIngressMessage:
      description: Represents the input of an AuthorizeCacheSecurityGroupIngress operation.
      properties:
        CacheSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cache security group that allows network ingress.
        EC2SecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon EC2 security group to be authorized for ingress
              to the cache security group.
        EC2SecurityGroupOwnerId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon account number of the Amazon EC2 security group
              owner. Note that this is not the same thing as an Amazon access key
              ID - you must provide a valid Amazon account number for this parameter.
      required:
      - CacheSecurityGroupName
      - EC2SecurityGroupName
      - EC2SecurityGroupOwnerId
      title: AuthorizeCacheSecurityGroupIngressMessage
      type: object
    CacheSecurityGroup:
      description: <p>Represents the output of one of the following operations:</p>
        <ul> <li> <p> <code>AuthorizeCacheSecurityGroupIngress</code> </p> </li> <li>
        <p> <code>CreateCacheSecurityGroup</code> </p> </li> <li> <p> <code>RevokeCacheSecurityGroupIngress</code>
        </p> </li> </ul>
      properties:
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon account ID of the cache security group owner.
        CacheSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache security group.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the cache security group.
        EC2SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/EC2SecurityGroupList'
          - description: A list of Amazon EC2 security groups that are associated
              with this cache security group.
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ARN of the cache security group,"
      type: object
    AutomaticFailoverStatus:
      enum:
      - enabled
      - disabled
      - enabling
      - disabling
      type: string
    AvailabilityZone:
      description: Describes an Availability Zone in which the cluster is launched.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Availability Zone.
      type: object
    AvailabilityZonesList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: AvailabilityZone
      type: array
    ReplicationGroupIdList:
      items:
        $ref: '#/components/schemas/String'
      maxItems: 20
      type: array
    CacheClusterIdList:
      items:
        $ref: '#/components/schemas/String'
      maxItems: 20
      type: array
    BatchApplyUpdateActionMessage:
      properties:
        ReplicationGroupIds:
          allOf:
          - $ref: '#/components/schemas/ReplicationGroupIdList'
          - description: The replication group IDs
        CacheClusterIds:
          allOf:
          - $ref: '#/components/schemas/CacheClusterIdList'
          - description: The cache cluster IDs
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
      required:
      - ServiceUpdateName
      title: BatchApplyUpdateActionMessage
      type: object
    BatchStopUpdateActionMessage:
      properties:
        ReplicationGroupIds:
          allOf:
          - $ref: '#/components/schemas/ReplicationGroupIdList'
          - description: The replication group IDs
        CacheClusterIds:
          allOf:
          - $ref: '#/components/schemas/CacheClusterIdList'
          - description: The cache cluster IDs
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
      required:
      - ServiceUpdateName
      title: BatchStopUpdateActionMessage
      type: object
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    Endpoint:
      description: Represents the information required for client programs to connect
        to a cache node.
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DNS hostname of the cache node.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The port number that the cache engine is listening on.
      type: object
    PendingModifiedValues:
      description: "A group of settings that are applied to the cluster in the future,\
        \ or that are currently being applied."
      properties:
        NumCacheNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The new number of cache nodes for the cluster.</p> <p>For\
              \ clusters running Redis, this value must be 1. For clusters running\
              \ Memcached, this value must be between 1 and 40.</p>"
        CacheNodeIdsToRemove:
          allOf:
          - $ref: '#/components/schemas/CacheNodeIdsList'
          - description: "A list of cache node IDs that are being removed (or will\
              \ be removed) from the cluster. A node ID is a 4-digit numeric identifier\
              \ (0001, 0002, etc.)."
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The new cache engine version that the cluster runs.
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cache node type that this cluster or replication group
              is scaled to.
        AuthTokenStatus:
          allOf:
          - $ref: '#/components/schemas/AuthTokenUpdateStatus'
          - description: The auth token status
        LogDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/PendingLogDeliveryConfigurationList'
          - description: 'The log delivery configurations being modified '
        TransitEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: A flag that enables in-transit encryption when set to true.
        TransitEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/TransitEncryptionMode'
          - description: "A setting that allows you to migrate your clients to use\
              \ in-transit encryption, with no downtime."
      type: object
    NotificationConfiguration:
      description: Describes a notification topic and its status. Notification topics
        are used for publishing ElastiCache events to subscribers using Amazon Simple
        Notification Service (SNS).
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) that identifies the topic.
        TopicStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The current state of the topic.
      type: object
    CacheSecurityGroupMembershipList:
      items:
        $ref: '#/components/schemas/CacheSecurityGroupMembershipList_inner'
      type: array
    CacheParameterGroupStatus:
      description: Status of the cache parameter group.
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache parameter group.
        ParameterApplyStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of parameter updates.
        CacheNodeIdsToReboot:
          allOf:
          - $ref: '#/components/schemas/CacheNodeIdsList'
          - description: "A list of the cache node IDs which need to be rebooted for\
              \ parameter changes to be applied. A node ID is a numeric identifier\
              \ (0001, 0002, etc.)."
      type: object
    CacheNodeList:
      items:
        $ref: '#/components/schemas/CacheNodeList_inner'
      type: array
    SecurityGroupMembershipList:
      items:
        $ref: '#/components/schemas/SecurityGroupMembership'
      type: array
    LogDeliveryConfigurationList:
      items:
        $ref: '#/components/schemas/LogDeliveryConfigurationList_inner'
      type: array
    NetworkType:
      enum:
      - ipv4
      - ipv6
      - dual_stack
      type: string
    IpDiscovery:
      enum:
      - ipv4
      - ipv6
      type: string
    TransitEncryptionMode:
      enum:
      - preferred
      - required
      type: string
    CacheCluster:
      description: Contains all of the attributes of a specific cluster.
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user-supplied identifier of the cluster. This identifier
              is a unique key that identifies a cluster.
        ConfigurationEndpoint:
          $ref: '#/components/schemas/CacheCluster_ConfigurationEndpoint'
        ClientDownloadLandingPage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The URL of the web page where you can download the latest
              ElastiCache client library.
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the compute and memory capacity node type\
              \ for the cluster.</p> <p>The following node types are supported by\
              \ ElastiCache. Generally speaking, the current generation types provide\
              \ more memory and computational power at lower cost when compared to\
              \ their equivalent previous generation counterparts.</p> <ul> <li> <p>General\
              \ purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node\
              \ types</b> (available only for Redis engine version 5.0.6 onward and\
              \ for Memcached engine version 1.5.16 onward): <code>cache.m6g.large</code>,\
              \ <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>,\
              \ <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
              \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
              \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p>\
              \ <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
              \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
              \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
              \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
              \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p>\
              \ <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
              \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
              \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li>\
              \ <li> <p>Previous generation: (not recommended. Existing clusters are\
              \ still supported but creation of new clusters is not supported for\
              \ these types.)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code>\
              \ </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
              \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>\
              \ <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
              \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
              \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>C1 node\
              \ types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
              \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p>\
              \ <b>R6g node types</b> (available only for Redis engine version 5.0.6\
              \ onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
              \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
              \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
              \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
              \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p>\
              \ <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
              \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
              \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>M2 node\
              \ types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,\
              \ <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>,\
              \ <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,\
              \ <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional\
              \ node type info</b> </p> <ul> <li> <p>All current generation instance\
              \ types are created in Amazon VPC by default.</p> </li> <li> <p>Redis\
              \ append-only files (AOF) are not supported for T1 or T2 instances.</p>\
              \ </li> <li> <p>Redis Multi-AZ with automatic failover is not supported\
              \ on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code>\
              \ and <code>appendfsync</code> are not supported on Redis version 2.8.22\
              \ and later.</p> </li> </ul>"
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache engine (<code>memcached</code> or <code>redis</code>)
              to be used for this cluster.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the cache engine that is used in this cluster.
        CacheClusterStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current state of this cluster, one of the following\
              \ values: <code>available</code>, <code>creating</code>, <code>deleted</code>,\
              \ <code>deleting</code>, <code>incompatible-network</code>, <code>modifying</code>,\
              \ <code>rebooting cluster nodes</code>, <code>restore-failed</code>,\
              \ or <code>snapshotting</code>."
        NumCacheNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of cache nodes in the cluster.</p> <p>For\
              \ clusters running Redis, this value must be 1. For clusters running\
              \ Memcached, this value must be between 1 and 40.</p>"
        PreferredAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Availability Zone in which the cluster is
              located or "Multiple" if the cache nodes are located in different Availability
              Zones.
        PreferredOutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The outpost ARN in which the cache cluster is created.
        CacheClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the cluster was created.
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the weekly time range during which maintenance\
              \ on the cluster is performed. It is specified as a range in the format\
              \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
              \ is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p>\
              \ <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code>\
              \ </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code>\
              \ </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code>\
              \ </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example:\
              \ <code>sun:23:00-mon:01:30</code> </p>"
        PendingModifiedValues:
          $ref: '#/components/schemas/PendingModifiedValues'
        NotificationConfiguration:
          $ref: '#/components/schemas/CacheCluster_NotificationConfiguration'
        CacheSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/CacheSecurityGroupMembershipList'
          - description: "A list of cache security group elements, composed of name\
              \ and status sub-elements."
        CacheParameterGroup:
          $ref: '#/components/schemas/CacheCluster_CacheParameterGroup'
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache subnet group associated with the cluster.
        CacheNodes:
          allOf:
          - $ref: '#/components/schemas/CacheNodeList'
          - description: A list of cache nodes that are members of the cluster.
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "\_If you are running Redis engine version 6.0 or later,\
              \ set this parameter to yes if you want to opt-in to the next auto minor\
              \ version upgrade campaign. This parameter is disabled for previous\
              \ versions.\_ "
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupMembershipList'
          - description: A list of VPC Security Groups associated with the cluster.
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The replication group to which this cluster belongs. If\
              \ this field is empty, the cluster is not associated with any replication\
              \ group."
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which ElastiCache retains automatic\
              \ cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>\
              \ to 5, a snapshot that was taken today is retained for 5 days before\
              \ being deleted.</p> <important> <p> If the value of SnapshotRetentionLimit\
              \ is set to zero (0), backups are turned off.</p> </important>"
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range (in UTC) during which ElastiCache\
              \ begins taking a daily snapshot of your cluster.</p> <p>Example: <code>05:00-09:00</code>\
              \ </p>"
        AuthTokenEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables using an <code>AuthToken</code> (password)\
              \ when issuing Redis commands.</p> <p>Default: <code>false</code> </p>"
        AuthTokenLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date the auth token was last modified
        TransitEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables in-transit encryption when set to\
              \ <code>true</code>.</p> <p> <b>Required:</b> Only available when creating\
              \ a replication group in an Amazon VPC using redis version <code>3.2.6</code>,\
              \ <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>"
        AtRestEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables encryption at-rest when set to <code>true</code>.</p>\
              \ <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code>\
              \ after the cluster is created. To enable at-rest encryption on a cluster\
              \ you must set <code>AtRestEncryptionEnabled</code> to <code>true</code>\
              \ when you create a cluster.</p> <p> <b>Required:</b> Only available\
              \ when creating a replication group in an Amazon VPC using redis version\
              \ <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code>\
              \ </p>"
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the cache cluster.
        ReplicationGroupLogDeliveryEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A boolean value indicating whether log delivery is enabled
              for the replication group.
        LogDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryConfigurationList'
          - description: "Returns the destination, format and type of the logs."
        NetworkType:
          allOf:
          - $ref: '#/components/schemas/NetworkType'
          - description: Must be either <code>ipv4</code> | <code>ipv6</code> | <code>dual_stack</code>.
              IPv6 is supported for workloads using Redis engine version 6.2 onward
              or Memcached engine version 1.6.6 on all instances built on the <a href="https://aws.amazon.com/ec2/nitro/">Nitro
              system</a>.
        IpDiscovery:
          allOf:
          - $ref: '#/components/schemas/IpDiscovery'
          - description: "The network type associated with the cluster, either <code>ipv4</code>\
              \ | <code>ipv6</code>. IPv6 is supported for workloads using Redis engine\
              \ version 6.2 onward or Memcached engine version 1.6.6 on all instances\
              \ built on the <a href=\"https://aws.amazon.com/ec2/nitro/\">Nitro system</a>."
        TransitEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/TransitEncryptionMode'
          - description: "A setting that allows you to migrate your clients to use\
              \ in-transit encryption, with no downtime."
      type: object
    CacheClusterList:
      items:
        $ref: '#/components/schemas/CacheClusterList_inner'
      type: array
    CacheEngineVersion:
      description: Provides all of the details about a particular cache engine version.
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache engine.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version number of the cache engine.
        CacheParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cache parameter group family associated\
              \ with this cache engine.</p> <p>Valid values are: <code>memcached1.4</code>\
              \ | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code>\
              \ | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code>\
              \ | <code>redis5.0</code> | <code>redis6.x</code> </p>"
        CacheEngineDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the cache engine.
        CacheEngineVersionDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the cache engine version.
      type: object
    CacheEngineVersionList:
      items:
        $ref: '#/components/schemas/CacheEngineVersionList_inner'
      type: array
    CacheNode:
      description: "<p>Represents an individual cache node within a cluster. Each\
        \ cache node runs its own instance of the cluster's protocol-compliant caching\
        \ software - either Memcached or Redis.</p> <p>The following node types are\
        \ supported by ElastiCache. Generally speaking, the current generation types\
        \ provide more memory and computational power at lower cost when compared\
        \ to their equivalent previous generation counterparts.</p> <ul> <li> <p>General\
        \ purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b>\
        \ (available only for Redis engine version 5.0.6 onward and for Memcached\
        \ engine version 1.5.16 onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
        \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
        \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note>\
        \ <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
        >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
        \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
        \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p>\
        \ <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
        \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
        \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
        \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
        \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p> <b>T3\
        \ node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
        \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
        \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li>\
        \ <p>Previous generation: (not recommended. Existing clusters are still supported\
        \ but creation of new clusters is not supported for these types.)</p> <p>\
        \ <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b>\
        \ <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>,\
        \ <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>,\
        \ <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>\
        \ </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous\
        \ generation: (not recommended. Existing clusters are still supported but\
        \ creation of new clusters is not supported for these types.)</p> <p> <b>C1\
        \ node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
        \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g\
        \ node types</b> (available only for Redis engine version 5.0.6 onward and\
        \ for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
        \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
        \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
        \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
        >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
        \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
        \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p>\
        \ <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
        \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
        \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not\
        \ recommended. Existing clusters are still supported but creation of new clusters\
        \ is not supported for these types.)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>,\
        \ <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3\
        \ node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>,\
        \ <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code>\
        \ </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul>\
        \ <li> <p>All current generation instance types are created in Amazon VPC\
        \ by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported\
        \ for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic\
        \ failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration\
        \ variables <code>appendonly</code> and <code>appendfsync</code> are not supported\
        \ on Redis version 2.8.22 and later.</p> </li> </ul>"
      properties:
        CacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The cache node identifier. A node ID is a numeric identifier\
              \ (0001, 0002, etc.). The combination of cluster ID and node ID uniquely\
              \ identifies every cache node used in a customer's Amazon account."
        CacheNodeStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current state of this cache node, one of the following\
              \ values: <code>available</code>, <code>creating</code>, <code>rebooting</code>,\
              \ or <code>deleting</code>."
        CacheNodeCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the cache node was created.
        Endpoint:
          $ref: '#/components/schemas/CacheNode_Endpoint'
        ParameterGroupStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the parameter group applied to this cache node.
        SourceCacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the primary node to which this read replica node\
              \ is synchronized. If this field is empty, this node is not associated\
              \ with a primary cluster."
        CustomerAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Availability Zone where this node was created and now
              resides.
        CustomerOutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The customer outpost ARN of the cache node.
      type: object
    CacheNodeIdsList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: CacheNodeId
      type: array
    CacheNodeTypeSpecificValueList:
      items:
        $ref: '#/components/schemas/CacheNodeTypeSpecificValueList_inner'
      type: array
    ChangeType:
      enum:
      - immediate
      - requires-reboot
      type: string
    CacheNodeTypeSpecificParameter:
      description: "A parameter that has a different value for each cache node type\
        \ it is applied to. For example, in a Redis cluster, a <code>cache.m1.large</code>\
        \ cache node type would have a larger <code>maxmemory</code> value than a\
        \ <code>cache.m1.small</code> type."
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the parameter.
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source of the parameter value.
        DataType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The valid data type for the parameter.
        AllowedValues:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The valid range of values for the parameter.
        IsModifiable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether (<code>true</code>) or not (<code>false</code>)
              the parameter can be modified. Some parameters have security or operational
              implications that prevent them from being changed.
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The earliest cache engine version to which the parameter
              can apply.
        CacheNodeTypeSpecificValues:
          allOf:
          - $ref: '#/components/schemas/CacheNodeTypeSpecificValueList'
          - description: A list of cache node types and their corresponding values
              for this parameter.
        ChangeType:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          - description: "Indicates whether a change to the parameter is applied immediately\
              \ or requires a reboot for the change to be applied. You can force a\
              \ reboot or wait until the next maintenance window's reboot. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html\"\
              >Rebooting a Cluster</a>."
      type: object
    CacheNodeTypeSpecificParametersList:
      items:
        $ref: '#/components/schemas/CacheNodeTypeSpecificParametersList_inner'
      type: array
    CacheNodeTypeSpecificValue:
      description: A value that applies only to a certain cache node type.
      properties:
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cache node type for which this value applies.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value for the cache node type.
      type: object
    NodeUpdateStatus:
      enum:
      - not-applied
      - waiting-to-start
      - in-progress
      - stopping
      - stopped
      - complete
      type: string
    NodeUpdateInitiatedBy:
      enum:
      - system
      - customer
      type: string
    CacheNodeUpdateStatus:
      description: The status of the service update on the cache node
      properties:
        CacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The node ID of the cache cluster
        NodeUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/NodeUpdateStatus'
          - description: The update status of the node
        NodeDeletionDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The deletion date of the node
        NodeUpdateStartDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The start date of the update for a node
        NodeUpdateEndDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The end date of the update for a node
        NodeUpdateInitiatedBy:
          allOf:
          - $ref: '#/components/schemas/NodeUpdateInitiatedBy'
          - description: Reflects whether the update was initiated by the customer
              or automatically applied
        NodeUpdateInitiatedDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date when the update is triggered
        NodeUpdateStatusModifiedDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date when the NodeUpdateStatus was last modified&gt;
      type: object
    CacheNodeUpdateStatusList:
      items:
        $ref: '#/components/schemas/CacheNodeUpdateStatusList_inner'
      type: array
    CacheParameterGroup:
      description: Represents the output of a <code>CreateCacheParameterGroup</code>
        operation.
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache parameter group.
        CacheParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cache parameter group family that this\
              \ cache parameter group is compatible with.</p> <p>Valid values are:\
              \ <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code>\
              \ | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code>\
              \ | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code>\
              \ | </p>"
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for this cache parameter group.
        IsGlobal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the parameter group is associated with
              a Global datastore
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the cache parameter group.
      type: object
    ParametersList:
      items:
        $ref: '#/components/schemas/ParametersList_inner'
      type: array
    CacheParameterGroupList:
      items:
        $ref: '#/components/schemas/CacheParameterGroupList_inner'
      type: array
    EC2SecurityGroupList:
      items:
        $ref: '#/components/schemas/EC2SecurityGroupList_inner'
      type: array
    CacheSecurityGroupMembership:
      description: Represents a cluster's status within a particular cache security
        group.
      properties:
        CacheSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache security group.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The membership status in the cache security group. The status\
              \ changes when a cache security group is modified, or when the cache\
              \ security groups assigned to a cluster are modified."
      type: object
    CacheSecurityGroups:
      items:
        $ref: '#/components/schemas/CacheSecurityGroups_inner'
      type: array
    CacheSecurityGroupNameList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: CacheSecurityGroupName
      type: array
    SubnetList:
      items:
        $ref: '#/components/schemas/SubnetList_inner'
      type: array
    NetworkTypeList:
      items:
        $ref: '#/components/schemas/NetworkType'
      type: array
    CacheSubnetGroup:
      description: <p>Represents the output of one of the following operations:</p>
        <ul> <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li> <li> <p> <code>ModifyCacheSubnetGroup</code>
        </p> </li> </ul>
      properties:
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache subnet group.
        CacheSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the cache subnet group.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Virtual Private Cloud identifier (VPC ID) of the
              cache subnet group.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/SubnetList'
          - description: A list of subnets associated with the cache subnet group.
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the cache subnet group.
        SupportedNetworkTypes:
          allOf:
          - $ref: '#/components/schemas/NetworkTypeList'
          - description: Either <code>ipv4</code> | <code>ipv6</code> | <code>dual_stack</code>.
              IPv6 is supported for workloads using Redis engine version 6.2 onward
              or Memcached engine version 1.6.6 on all instances built on the <a href="https://aws.amazon.com/ec2/nitro/">Nitro
              system</a>.
      type: object
    CacheSubnetGroups:
      items:
        $ref: '#/components/schemas/CacheSubnetGroups_inner'
      type: array
    CloudWatchLogsDestinationDetails:
      description: The configuration details of the CloudWatch Logs destination.
      properties:
        LogGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the CloudWatch Logs log group.
      type: object
    ClusterIdList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: ClusterId
      type: array
    CompleteMigrationMessage:
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the replication group to which data is being migrated.
        Force:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Forces the migration to stop without ensuring that data is
              in sync. It is recommended to use this option only to abort the migration
              and not recommended when application wants to continue migration to
              ElastiCache.
      required:
      - ReplicationGroupId
      title: CompleteMigrationMessage
      type: object
    ReplicationGroup:
      description: Contains all of the attributes of a specific Redis replication
        group.
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the replication group.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user supplied description of the replication group.
        GlobalReplicationGroupInfo:
          $ref: '#/components/schemas/ReplicationGroup_GlobalReplicationGroupInfo'
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current state of this replication group - <code>creating</code>,\
              \ <code>available</code>, <code>modifying</code>, <code>deleting</code>,\
              \ <code>create-failed</code>, <code>snapshotting</code>."
        PendingModifiedValues:
          $ref: '#/components/schemas/ReplicationGroup_PendingModifiedValues'
        MemberClusters:
          allOf:
          - $ref: '#/components/schemas/ClusterIdList'
          - description: The names of all the cache clusters that are part of this
              replication group.
        NodeGroups:
          allOf:
          - $ref: '#/components/schemas/NodeGroupList'
          - description: "A list of node groups in this replication group. For Redis\
              \ (cluster mode disabled) replication groups, this is a single-element\
              \ list. For Redis (cluster mode enabled) replication groups, the list\
              \ contains an entry for each node group (shard)."
        SnapshottingClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cluster ID that is used as the daily snapshot source
              for the replication group.
        AutomaticFailover:
          allOf:
          - $ref: '#/components/schemas/AutomaticFailoverStatus'
          - description: Indicates the status of automatic failover for this Redis
              replication group.
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/MultiAZStatus'
          - description: "A flag indicating if you have Multi-AZ enabled to enhance\
              \ fault tolerance. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html\"\
              >Minimizing Downtime: Multi-AZ</a> "
        ConfigurationEndpoint:
          $ref: '#/components/schemas/ReplicationGroup_ConfigurationEndpoint'
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which ElastiCache retains automatic\
              \ cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>\
              \ to 5, a snapshot that was taken today is retained for 5 days before\
              \ being deleted.</p> <important> <p> If the value of <code>SnapshotRetentionLimit</code>\
              \ is set to zero (0), backups are turned off.</p> </important>"
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range (in UTC) during which ElastiCache\
              \ begins taking a daily snapshot of your node group (shard).</p> <p>Example:\
              \ <code>05:00-09:00</code> </p> <p>If you do not specify this parameter,\
              \ ElastiCache automatically chooses an appropriate time range.</p> <note>\
              \ <p>This parameter is only valid if the <code>Engine</code> parameter\
              \ is <code>redis</code>.</p> </note>"
        ClusterEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag indicating whether or not this replication group\
              \ is cluster enabled; i.e., whether its data can be partitioned across\
              \ multiple shards (API/CLI: node groups).</p> <p>Valid values: <code>true</code>\
              \ | <code>false</code> </p>"
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the compute and memory capacity node type for
              each node in the replication group.
        AuthTokenEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables using an <code>AuthToken</code> (password)\
              \ when issuing Redis commands.</p> <p>Default: <code>false</code> </p>"
        AuthTokenLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date the auth token was last modified
        TransitEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables in-transit encryption when set to\
              \ <code>true</code>.</p> <p> <b>Required:</b> Only available when creating\
              \ a replication group in an Amazon VPC using redis version <code>3.2.6</code>,\
              \ <code>4.x</code> or later.</p> <p>Default: <code>false</code> </p>"
        AtRestEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables encryption at-rest when set to <code>true</code>.</p>\
              \ <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code>\
              \ after the cluster is created. To enable encryption at-rest on a cluster\
              \ you must set <code>AtRestEncryptionEnabled</code> to <code>true</code>\
              \ when you create a cluster.</p> <p> <b>Required:</b> Only available\
              \ when creating a replication group in an Amazon VPC using redis version\
              \ <code>3.2.6</code>, <code>4.x</code> or later.</p> <p>Default: <code>false</code>\
              \ </p>"
        MemberClustersOutpostArns:
          allOf:
          - $ref: '#/components/schemas/ReplicationGroupOutpostArnList'
          - description: The outpost ARNs of the replication group's member clusters.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the disk in the cluster.
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the replication group.
        UserGroupIds:
          allOf:
          - $ref: '#/components/schemas/UserGroupIdList'
          - description: The ID of the user group associated to the replication group.
        LogDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryConfigurationList'
          - description: "Returns the destination, format and type of the logs. "
        ReplicationGroupCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the cluster was created.
        DataTiering:
          allOf:
          - $ref: '#/components/schemas/DataTieringStatus'
          - description: "Enables data tiering. Data tiering is only supported for\
              \ replication groups using the r6gd node type. This parameter must be\
              \ set to true when using r6gd nodes. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/data-tiering.html\"\
              >Data tiering</a>."
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "\_If you are running Redis engine version 6.0 or later,\
              \ set this parameter to yes if you want to opt-in to the next auto minor\
              \ version upgrade campaign. This parameter is disabled for previous\
              \ versions.\_ "
        NetworkType:
          allOf:
          - $ref: '#/components/schemas/NetworkType'
          - description: Must be either <code>ipv4</code> | <code>ipv6</code> | <code>dual_stack</code>.
              IPv6 is supported for workloads using Redis engine version 6.2 onward
              or Memcached engine version 1.6.6 on all instances built on the <a href="https://aws.amazon.com/ec2/nitro/">Nitro
              system</a>.
        IpDiscovery:
          allOf:
          - $ref: '#/components/schemas/IpDiscovery'
          - description: "The network type you choose when modifying a cluster, either\
              \ <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported for workloads\
              \ using Redis engine version 6.2 onward or Memcached engine version\
              \ 1.6.6 on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
              >Nitro system</a>."
        TransitEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/TransitEncryptionMode'
          - description: "A setting that allows you to migrate your clients to use\
              \ in-transit encryption, with no downtime."
      type: object
    Integer:
      type: integer
    PreferredAvailabilityZoneList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: PreferredAvailabilityZone
      type: array
    PreferredOutpostArnList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: PreferredOutpostArn
      type: array
    CopySnapshotMessage:
      description: Represents the input of a <code>CopySnapshotMessage</code> operation.
      properties:
        SourceSnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of an existing snapshot from which to make a copy.
        TargetSnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A name for the snapshot copy. ElastiCache does not permit\
              \ overwriting a snapshot, therefore this name must be unique within\
              \ its context - ElastiCache or an Amazon S3 bucket if exporting."
        TargetBucket:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon S3 bucket to which the snapshot is exported.\
              \ This parameter is used only when exporting a snapshot for external\
              \ access.</p> <p>When using this parameter to export a snapshot, be\
              \ sure Amazon ElastiCache has the needed permissions to this S3 bucket.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access\"\
              >Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the\
              \ <i>Amazon ElastiCache User Guide</i>.</p> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html\"\
              >Exporting a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</p>"
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the target snapshot.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
      required:
      - SourceSnapshotName
      - TargetSnapshotName
      title: CopySnapshotMessage
      type: object
    Snapshot:
      description: Represents a copy of an entire Redis cluster as of the time when
        the snapshot was taken.
      properties:
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of a snapshot. For an automatic snapshot, the name\
              \ is system-generated. For a manual snapshot, this is the user-provided\
              \ name."
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifier of the source replication group.
        ReplicationGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the source replication group.
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user-supplied identifier of the source cluster.
        SnapshotStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The status of the snapshot. Valid values: <code>creating</code>\
              \ | <code>available</code> | <code>restoring</code> | <code>copying</code>\
              \ | <code>deleting</code>."
        SnapshotSource:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates whether the snapshot is from an automatic backup
              (<code>automated</code>) or was created manually (<code>manual</code>).
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the compute and memory capacity node type\
              \ for the source cluster.</p> <p>The following node types are supported\
              \ by ElastiCache. Generally speaking, the current generation types provide\
              \ more memory and computational power at lower cost when compared to\
              \ their equivalent previous generation counterparts.</p> <ul> <li> <p>General\
              \ purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node\
              \ types</b> (available only for Redis engine version 5.0.6 onward and\
              \ for Memcached engine version 1.5.16 onward): <code>cache.m6g.large</code>,\
              \ <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>,\
              \ <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
              \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
              \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p>\
              \ <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
              \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
              \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
              \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
              \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p>\
              \ <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
              \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
              \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li>\
              \ <li> <p>Previous generation: (not recommended. Existing clusters are\
              \ still supported but creation of new clusters is not supported for\
              \ these types.)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code>\
              \ </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
              \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>\
              \ <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
              \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
              \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>C1 node\
              \ types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
              \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p>\
              \ <b>R6g node types</b> (available only for Redis engine version 5.0.6\
              \ onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
              \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
              \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
              \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
              \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p>\
              \ <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
              \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
              \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>M2 node\
              \ types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,\
              \ <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>,\
              \ <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,\
              \ <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional\
              \ node type info</b> </p> <ul> <li> <p>All current generation instance\
              \ types are created in Amazon VPC by default.</p> </li> <li> <p>Redis\
              \ append-only files (AOF) are not supported for T1 or T2 instances.</p>\
              \ </li> <li> <p>Redis Multi-AZ with automatic failover is not supported\
              \ on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code>\
              \ and <code>appendfsync</code> are not supported on Redis version 2.8.22\
              \ and later.</p> </li> </ul>"
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache engine (<code>memcached</code> or <code>redis</code>)
              used by the source cluster.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the cache engine version that is used by the
              source cluster.
        NumCacheNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of cache nodes in the source cluster.</p>\
              \ <p>For clusters running Redis, this value must be 1. For clusters\
              \ running Memcached, this value must be between 1 and 40.</p>"
        PreferredAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Availability Zone in which the source cluster
              is located.
        PreferredOutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the preferred outpost.
        CacheClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the source cluster was created.
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the weekly time range during which maintenance\
              \ on the cluster is performed. It is specified as a range in the format\
              \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
              \ is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p>\
              \ <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code>\
              \ </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code>\
              \ </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code>\
              \ </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example:\
              \ <code>sun:23:00-mon:01:30</code> </p>"
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the topic used by the
              source cluster for publishing notifications.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The port number used by each cache nodes in the source cluster.
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cache parameter group that is associated with the source
              cluster.
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache subnet group associated with the source
              cluster.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Virtual Private Cloud identifier (VPC ID) of the
              cache subnet group for the source cluster.
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "\_If you are running Redis engine version 6.0 or later,\
              \ set this parameter to yes if you want to opt-in to the next auto minor\
              \ version upgrade campaign. This parameter is disabled for previous\
              \ versions.\_ "
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>For an automatic snapshot, the number of days for which\
              \ ElastiCache retains the snapshot before deleting it.</p> <p>For manual\
              \ snapshots, this field reflects the <code>SnapshotRetentionLimit</code>\
              \ for the source cluster when the snapshot was created. This field is\
              \ otherwise ignored: Manual snapshots do not expire, and can only be\
              \ deleted using the <code>DeleteSnapshot</code> operation. </p> <p>\
              \ <b>Important</b> If the value of SnapshotRetentionLimit is set to\
              \ zero (0), backups are turned off.</p>"
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The daily time range during which ElastiCache takes daily
              snapshots of the source cluster.
        NumNodeGroups:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The number of node groups (shards) in this snapshot. When\
              \ restoring from a snapshot, the number of node groups (shards) in the\
              \ snapshot and in the restored replication group must be the same."
        AutomaticFailover:
          allOf:
          - $ref: '#/components/schemas/AutomaticFailoverStatus'
          - description: Indicates the status of automatic failover for the source
              Redis replication group.
        NodeSnapshots:
          allOf:
          - $ref: '#/components/schemas/NodeSnapshotList'
          - description: A list of the cache nodes in the source cluster.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the snapshot.
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the snapshot.
        DataTiering:
          allOf:
          - $ref: '#/components/schemas/DataTieringStatus'
          - description: "Enables data tiering. Data tiering is only supported for\
              \ replication groups using the r6gd node type. This parameter must be\
              \ set to true when using r6gd nodes. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/data-tiering.html\"\
              >Data tiering</a>."
      type: object
    SecurityGroupIdsList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: SecurityGroupId
      type: array
    SnapshotArnsList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: SnapshotArn
      type: array
    OutpostMode:
      enum:
      - single-outpost
      - cross-outpost
      type: string
    LogDeliveryConfigurationRequestList:
      items:
        $ref: '#/components/schemas/GET_CreateCacheCluster_LogDeliveryConfigurations_parameter_inner'
      type: array
    CreateCacheClusterMessage:
      description: Represents the input of a CreateCacheCluster operation.
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The node group (shard) identifier. This parameter is stored
              as a lowercase string.</p> <p> <b>Constraints:</b> </p> <ul> <li> <p>A
              name must contain from 1 to 50 alphanumeric characters or hyphens.</p>
              </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A
              name cannot end with a hyphen or contain two consecutive hyphens.</p>
              </li> </ul>
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The ID of the replication group to which this cluster\
              \ should belong. If this parameter is specified, the cluster is added\
              \ to the specified replication group as a read replica; otherwise, the\
              \ cluster is a standalone primary that is not part of any replication\
              \ group.</p> <p>If the specified replication group is Multi-AZ enabled\
              \ and the Availability Zone is not specified, the cluster is created\
              \ in Availability Zones that provide the best spread of read replicas\
              \ across Availability Zones.</p> <note> <p>This parameter is only valid\
              \ if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>"
        AZMode:
          allOf:
          - $ref: '#/components/schemas/AZMode'
          - description: "<p>Specifies whether the nodes in this Memcached cluster\
              \ are created in a single Availability Zone or created across multiple\
              \ Availability Zones in the cluster's region.</p> <p>This parameter\
              \ is only supported for Memcached clusters.</p> <p>If the <code>AZMode</code>\
              \ and <code>PreferredAvailabilityZones</code> are not specified, ElastiCache\
              \ assumes <code>single-az</code> mode.</p>"
        PreferredAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The EC2 Availability Zone in which the cluster is created.</p>\
              \ <p>All nodes belonging to this cluster are placed in the preferred\
              \ Availability Zone. If you want to create your nodes across multiple\
              \ Availability Zones, use <code>PreferredAvailabilityZones</code>.</p>\
              \ <p>Default: System chosen Availability Zone.</p>"
        PreferredAvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/PreferredAvailabilityZoneList'
          - description: "<p>A list of the Availability Zones in which cache nodes\
              \ are created. The order of the zones in the list is not important.</p>\
              \ <p>This option is only supported on Memcached.</p> <note> <p>If you\
              \ are creating your cluster in an Amazon VPC (recommended) you can only\
              \ locate nodes in Availability Zones that are associated with the subnets\
              \ in the selected subnet group.</p> <p>The number of Availability Zones\
              \ listed must equal the value of <code>NumCacheNodes</code>.</p> </note>\
              \ <p>If you want all the nodes in the same Availability Zone, use <code>PreferredAvailabilityZone</code>\
              \ instead, or repeat the Availability Zone multiple times in the list.</p>\
              \ <p>Default: System chosen Availability Zones.</p>"
        NumCacheNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The initial number of cache nodes that the cluster has.</p>\
              \ <p>For clusters running Redis, this value must be 1. For clusters\
              \ running Memcached, this value must be between 1 and 40.</p> <p>If\
              \ you need more than 40 nodes for your Memcached cluster, please fill\
              \ out the ElastiCache Limit Increase Request form at <a href=\"http://aws.amazon.com/contact-us/elasticache-node-limit-request/\"\
              >http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p>"
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The compute and memory capacity of the nodes in the node\
              \ group (shard).</p> <p>The following node types are supported by ElastiCache.\
              \ Generally speaking, the current generation types provide more memory\
              \ and computational power at lower cost when compared to their equivalent\
              \ previous generation counterparts.</p> <ul> <li> <p>General purpose:</p>\
              \ <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available\
              \ only for Redis engine version 5.0.6 onward and for Memcached engine\
              \ version 1.5.16 onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
              \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
              \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p>\
              \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
              \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
              \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p>\
              \ <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
              \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
              \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
              \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
              \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p>\
              \ <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
              \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
              \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li>\
              \ <li> <p>Previous generation: (not recommended. Existing clusters are\
              \ still supported but creation of new clusters is not supported for\
              \ these types.)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code>\
              \ </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
              \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>\
              \ <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
              \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
              \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>C1 node\
              \ types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
              \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p>\
              \ <b>R6g node types</b> (available only for Redis engine version 5.0.6\
              \ onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
              \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
              \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
              \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
              \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p>\
              \ <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
              \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
              \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>M2 node\
              \ types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,\
              \ <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>,\
              \ <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,\
              \ <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional\
              \ node type info</b> </p> <ul> <li> <p>All current generation instance\
              \ types are created in Amazon VPC by default.</p> </li> <li> <p>Redis\
              \ append-only files (AOF) are not supported for T1 or T2 instances.</p>\
              \ </li> <li> <p>Redis Multi-AZ with automatic failover is not supported\
              \ on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code>\
              \ and <code>appendfsync</code> are not supported on Redis version 2.8.22\
              \ and later.</p> </li> </ul>"
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cache engine to be used for this cluster.</p>\
              \ <p>Valid values for this parameter are: <code>memcached</code> | <code>redis</code>\
              \ </p>"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The version number of the cache engine to be used for\
              \ this cluster. To view the supported cache engine versions, use the\
              \ DescribeCacheEngineVersions operation.</p> <p> <b>Important:</b> You\
              \ can upgrade to a newer engine version (see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement\"\
              >Selecting a Cache Engine and Version</a>), but you cannot downgrade\
              \ to an earlier engine version. If you want to use an earlier engine\
              \ version, you must delete the existing cluster or replication group\
              \ and create it anew with the earlier engine version. </p>"
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the parameter group to associate with this cluster.\
              \ If this argument is omitted, the default parameter group for the specified\
              \ engine is used. You cannot use any parameter group which has <code>cluster-enabled='yes'</code>\
              \ when creating a cluster."
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the subnet group to be used for the cluster.</p>\
              \ <p>Use this parameter only when you are creating a cluster in an Amazon\
              \ Virtual Private Cloud (Amazon VPC).</p> <important> <p>If you're going\
              \ to launch your cluster in an Amazon VPC, you need to create a subnet\
              \ group before you start creating a cluster. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html\"\
              >Subnets and Subnet Groups</a>.</p> </important>"
        CacheSecurityGroupNames:
          allOf:
          - $ref: '#/components/schemas/CacheSecurityGroupNameList'
          - description: <p>A list of security group names to associate with this
              cluster.</p> <p>Use this parameter only when you are creating a cluster
              outside of an Amazon Virtual Private Cloud (Amazon VPC).</p>
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdsList'
          - description: <p>One or more VPC security groups associated with the cluster.</p>
              <p>Use this parameter only when you are creating a cluster in an Amazon
              Virtual Private Cloud (Amazon VPC).</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags to be added to this resource.
        SnapshotArns:
          allOf:
          - $ref: '#/components/schemas/SnapshotArnsList'
          - description: "<p>A single-element string list containing an Amazon Resource\
              \ Name (ARN) that uniquely identifies a Redis RDB snapshot file stored\
              \ in Amazon S3. The snapshot file is used to populate the node group\
              \ (shard). The Amazon S3 object name in the ARN cannot contain any commas.</p>\
              \ <note> <p>This parameter is only valid if the <code>Engine</code>\
              \ parameter is <code>redis</code>.</p> </note> <p>Example of an Amazon\
              \ S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>"
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of a Redis snapshot from which to restore data
              into the new node group (shard). The snapshot status changes to <code>restoring</code>
              while the new node group (shard) is being created.</p> <note> <p>This
              parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>
              </note>
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'Specifies the weekly time range during which maintenance
              on the cluster is performed. It is specified as a range in the format
              ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window
              is a 60 minute period. '
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The port number on which each of the cache nodes accepts
              connections.
        NotificationTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification
              Service (SNS) topic to which notifications are sent.</p> <note> <p>The
              Amazon SNS topic owner must be the same as the cluster owner.</p> </note>
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "\_If you are running Redis engine version 6.0 or later,\
              \ set this parameter to yes if you want to opt-in to the next auto minor\
              \ version upgrade campaign. This parameter is disabled for previous\
              \ versions.\_ "
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which ElastiCache retains automatic\
              \ snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>\
              \ to 5, a snapshot taken today is retained for 5 days before being deleted.</p>\
              \ <note> <p>This parameter is only valid if the <code>Engine</code>\
              \ parameter is <code>redis</code>.</p> </note> <p>Default: 0 (i.e.,\
              \ automatic backups are disabled for this cache cluster).</p>"
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range (in UTC) during which ElastiCache\
              \ begins taking a daily snapshot of your node group (shard).</p> <p>Example:\
              \ <code>05:00-09:00</code> </p> <p>If you do not specify this parameter,\
              \ ElastiCache automatically chooses an appropriate time range.</p> <note>\
              \ <p>This parameter is only valid if the <code>Engine</code> parameter\
              \ is <code>redis</code>.</p> </note>"
        AuthToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> <b>Reserved parameter.</b> The password used to access\
              \ a password protected server.</p> <p>Password constraints:</p> <ul>\
              \ <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must\
              \ be at least 16 characters and no more than 128 characters in length.</p>\
              \ </li> <li> <p>The only permitted printable special characters are\
              \ !, &amp;, #, $, ^, &lt;, &gt;, and -. Other printable special characters\
              \ cannot be used in the AUTH token.</p> </li> </ul> <p>For more information,\
              \ see <a href=\"http://redis.io/commands/AUTH\">AUTH password</a> at\
              \ http://redis.io/commands/AUTH.</p>"
        OutpostMode:
          allOf:
          - $ref: '#/components/schemas/OutpostMode'
          - description: Specifies whether the nodes in the cluster are created in
              a single outpost or across multiple outposts.
        PreferredOutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The outpost ARN in which the cache cluster is created.
        PreferredOutpostArns:
          allOf:
          - $ref: '#/components/schemas/PreferredOutpostArnList'
          - description: The outpost ARNs in which the cache cluster is created.
        LogDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryConfigurationRequestList'
          - description: "Specifies the destination, format and type of the logs. "
        TransitEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: <p>A flag that enables in-transit encryption when set to
              true.</p> <p> Only available when creating a cache cluster in an Amazon
              VPC using Memcached version 1.6.12 or later.</p>
        NetworkType:
          allOf:
          - $ref: '#/components/schemas/NetworkType'
          - description: 'Must be either <code>ipv4</code> | <code>ipv6</code> | <code>dual_stack</code>.
              IPv6 is supported for workloads using Redis engine version 6.2 onward
              or Memcached engine version 1.6.6 on all instances built on the <a href="https://aws.amazon.com/ec2/nitro/">Nitro
              system</a>. '
        IpDiscovery:
          allOf:
          - $ref: '#/components/schemas/IpDiscovery'
          - description: "The network type you choose when modifying a cluster, either\
              \ <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported for workloads\
              \ using Redis engine version 6.2 onward or Memcached engine version\
              \ 1.6.6 on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
              >Nitro system</a>."
      required:
      - CacheClusterId
      title: CreateCacheClusterMessage
      type: object
    CreateCacheParameterGroupMessage:
      description: Represents the input of a <code>CreateCacheParameterGroup</code>
        operation.
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A user-specified name for the cache parameter group.
        CacheParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cache parameter group family that the\
              \ cache parameter group can be used with.</p> <p>Valid values are: <code>memcached1.4</code>\
              \ | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code>\
              \ | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code>\
              \ | <code>redis5.0</code> | <code>redis6.x</code> </p>"
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A user-specified description for the cache parameter group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
      required:
      - CacheParameterGroupFamily
      - CacheParameterGroupName
      - Description
      title: CreateCacheParameterGroupMessage
      type: object
    CreateCacheSecurityGroupMessage:
      description: Represents the input of a <code>CreateCacheSecurityGroup</code>
        operation.
      properties:
        CacheSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A name for the cache security group. This value is stored\
              \ as a lowercase string.</p> <p>Constraints: Must contain no more than\
              \ 255 alphanumeric characters. Cannot be the word \"Default\".</p> <p>Example:\
              \ <code>mysecuritygroup</code> </p>"
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description for the cache security group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
      required:
      - CacheSecurityGroupName
      - Description
      title: CreateCacheSecurityGroupMessage
      type: object
    SubnetIdentifierList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: SubnetIdentifier
      type: array
    CreateCacheSubnetGroupMessage:
      description: Represents the input of a <code>CreateCacheSubnetGroup</code> operation.
      properties:
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A name for the cache subnet group. This value is stored\
              \ as a lowercase string.</p> <p>Constraints: Must contain no more than\
              \ 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code>\
              \ </p>"
        CacheSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description for the cache subnet group.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdentifierList'
          - description: A list of VPC subnet IDs for the cache subnet group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
      required:
      - CacheSubnetGroupDescription
      - CacheSubnetGroupName
      - SubnetIds
      title: CreateCacheSubnetGroupMessage
      type: object
    CreateGlobalReplicationGroupMessage:
      properties:
        GlobalReplicationGroupIdSuffix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The suffix name of a Global datastore. Amazon ElastiCache\
              \ automatically applies a prefix to the Global datastore ID when it\
              \ is created. Each Amazon Region has its own prefix. For instance, a\
              \ Global datastore ID created in the US-West-1 region will begin with\
              \ \"dsdfu\" along with the suffix name you provide. The suffix, combined\
              \ with the auto-generated prefix, guarantees uniqueness of the Global\
              \ datastore name across multiple regions. </p> <p>For a full list of\
              \ Amazon Regions and their respective Global datastore iD prefixes,\
              \ see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastores-CLI.html\"\
              >Using the Amazon CLI with Global datastores </a>.</p>"
        GlobalReplicationGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides details of the Global datastore
        PrimaryReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the primary cluster that accepts writes and will
              replicate updates to the secondary cluster.
      required:
      - GlobalReplicationGroupIdSuffix
      - PrimaryReplicationGroupId
      title: CreateGlobalReplicationGroupMessage
      type: object
    GlobalReplicationGroup:
      description: "<p>Consists of a primary cluster that accepts writes and an associated\
        \ secondary cluster that resides in a different Amazon region. The secondary\
        \ cluster accepts only reads. The primary cluster automatically replicates\
        \ updates to the secondary cluster.</p> <ul> <li> <p>The <b>GlobalReplicationGroupIdSuffix</b>\
        \ represents the name of the Global datastore, which is what you use to associate\
        \ a secondary cluster.</p> </li> </ul>"
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        GlobalReplicationGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The optional description of the Global datastore
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the Global datastore
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cache node type of the Global datastore
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Elasticache engine. For Redis only.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Elasticache Redis engine version.
        Members:
          allOf:
          - $ref: '#/components/schemas/GlobalReplicationGroupMemberList'
          - description: The replication groups that comprise the Global datastore.
        ClusterEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: A flag that indicates whether the Global datastore is cluster
              enabled.
        GlobalNodeGroups:
          allOf:
          - $ref: '#/components/schemas/GlobalNodeGroupList'
          - description: Indicates the slot configuration and global identifier for
              each slice group.
        AuthTokenEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables using an <code>AuthToken</code> (password)\
              \ when issuing Redis commands.</p> <p>Default: <code>false</code> </p>"
        TransitEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables in-transit encryption when set to\
              \ true.</p> <p> <b>Required:</b> Only available when creating a replication\
              \ group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code>\
              \ or later.</p>"
        AtRestEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables encryption at rest when set to <code>true</code>.</p>\
              \ <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code>\
              \ after the replication group is created. To enable encryption at rest\
              \ on a replication group you must set <code>AtRestEncryptionEnabled</code>\
              \ to <code>true</code> when you create the replication group. </p> <p>\
              \ <b>Required:</b> Only available when creating a replication group\
              \ in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code>\
              \ or later.</p>"
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the global replication
              group.
      type: object
    NodeGroupConfigurationList:
      items:
        $ref: '#/components/schemas/GET_CreateReplicationGroup_NodeGroupConfiguration_parameter_inner'
      type: array
    UserGroupIdListInput:
      items:
        $ref: '#/components/schemas/UserGroupId'
      minItems: 1
      type: array
    CreateReplicationGroupMessage:
      description: Represents the input of a <code>CreateReplicationGroup</code> operation.
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The replication group identifier. This parameter is stored
              as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>A name must
              contain from 1 to 40 alphanumeric characters or hyphens.</p> </li> <li>
              <p>The first character must be a letter.</p> </li> <li> <p>A name cannot
              end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
        ReplicationGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A user-created description for the replication group.
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        PrimaryClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the cluster that serves as the primary\
              \ for this replication group. This cluster must already exist and have\
              \ a status of <code>available</code>.</p> <p>This parameter is not required\
              \ if <code>NumCacheClusters</code>, <code>NumNodeGroups</code>, or <code>ReplicasPerNodeGroup</code>\
              \ is specified.</p>"
        AutomaticFailoverEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>Specifies whether a read-only replica is automatically\
              \ promoted to read/write primary if the existing primary fails.</p>\
              \ <p> <code>AutomaticFailoverEnabled</code> must be enabled for Redis\
              \ (cluster mode enabled) replication groups.</p> <p>Default: false</p>"
        MultiAZEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A flag indicating if you have Multi-AZ enabled to enhance\
              \ fault tolerance. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html\"\
              >Minimizing Downtime: Multi-AZ</a>."
        NumCacheClusters:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of clusters this replication group initially\
              \ has.</p> <p>This parameter is not used if there is more than one node\
              \ group (shard). You should use <code>ReplicasPerNodeGroup</code> instead.</p>\
              \ <p>If <code>AutomaticFailoverEnabled</code> is <code>true</code>,\
              \ the value of this parameter must be at least 2. If <code>AutomaticFailoverEnabled</code>\
              \ is <code>false</code> you can omit this parameter (it will default\
              \ to 1), or you can explicitly set it to a value between 2 and 6.</p>\
              \ <p>The maximum permitted value for <code>NumCacheClusters</code> is\
              \ 6 (1 primary plus 5 replicas).</p>"
        PreferredCacheClusterAZs:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZonesList'
          - description: "<p>A list of EC2 Availability Zones in which the replication\
              \ group's clusters are created. The order of the Availability Zones\
              \ in the list is the order in which clusters are allocated. The primary\
              \ cluster is created in the first AZ in the list.</p> <p>This parameter\
              \ is not used if there is more than one node group (shard). You should\
              \ use <code>NodeGroupConfiguration</code> instead.</p> <note> <p>If\
              \ you are creating your replication group in an Amazon VPC (recommended),\
              \ you can only locate clusters in Availability Zones associated with\
              \ the subnets in the selected subnet group.</p> <p>The number of Availability\
              \ Zones listed must equal the value of <code>NumCacheClusters</code>.</p>\
              \ </note> <p>Default: system chosen Availability Zones.</p>"
        NumNodeGroups:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>An optional parameter that specifies the number of node\
              \ groups (shards) for this Redis (cluster mode enabled) replication\
              \ group. For Redis (cluster mode disabled) either omit this parameter\
              \ or set it to 1.</p> <p>Default: 1</p>"
        ReplicasPerNodeGroup:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: An optional parameter that specifies the number of replica
              nodes in each node group (shard). Valid values are 0 to 5.
        NodeGroupConfiguration:
          allOf:
          - $ref: '#/components/schemas/NodeGroupConfigurationList'
          - description: "<p>A list of node group (shard) configuration options. Each\
              \ node group (shard) configuration has the following members: <code>PrimaryAvailabilityZone</code>,\
              \ <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>,\
              \ and <code>Slots</code>.</p> <p>If you're creating a Redis (cluster\
              \ mode disabled) or a Redis (cluster mode enabled) replication group,\
              \ you can use this parameter to individually configure each node group\
              \ (shard), or you can omit this parameter. However, it is required when\
              \ seeding a Redis (cluster mode enabled) cluster from a S3 rdb file.\
              \ You must configure each node group (shard) using this parameter because\
              \ you must specify the slots for each node group.</p>"
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The compute and memory capacity of the nodes in the node\
              \ group (shard).</p> <p>The following node types are supported by ElastiCache.\
              \ Generally speaking, the current generation types provide more memory\
              \ and computational power at lower cost when compared to their equivalent\
              \ previous generation counterparts.</p> <ul> <li> <p>General purpose:</p>\
              \ <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available\
              \ only for Redis engine version 5.0.6 onward and for Memcached engine\
              \ version 1.5.16 onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
              \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
              \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p>\
              \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
              \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
              \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p>\
              \ <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
              \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
              \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
              \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
              \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p>\
              \ <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
              \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
              \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li>\
              \ <li> <p>Previous generation: (not recommended. Existing clusters are\
              \ still supported but creation of new clusters is not supported for\
              \ these types.)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code>\
              \ </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
              \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>\
              \ <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
              \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
              \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>C1 node\
              \ types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
              \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p>\
              \ <b>R6g node types</b> (available only for Redis engine version 5.0.6\
              \ onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
              \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
              \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
              \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
              \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p>\
              \ <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
              \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
              \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>M2 node\
              \ types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,\
              \ <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>,\
              \ <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,\
              \ <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional\
              \ node type info</b> </p> <ul> <li> <p>All current generation instance\
              \ types are created in Amazon VPC by default.</p> </li> <li> <p>Redis\
              \ append-only files (AOF) are not supported for T1 or T2 instances.</p>\
              \ </li> <li> <p>Redis Multi-AZ with automatic failover is not supported\
              \ on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code>\
              \ and <code>appendfsync</code> are not supported on Redis version 2.8.22\
              \ and later.</p> </li> </ul>"
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache engine to be used for the clusters
              in this replication group. The value must be set to <code>Redis</code>.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The version number of the cache engine to be used for\
              \ the clusters in this replication group. To view the supported cache\
              \ engine versions, use the <code>DescribeCacheEngineVersions</code>\
              \ operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine\
              \ version (see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement\"\
              >Selecting a Cache Engine and Version</a>) in the <i>ElastiCache User\
              \ Guide</i>, but you cannot downgrade to an earlier engine version.\
              \ If you want to use an earlier engine version, you must delete the\
              \ existing cluster or replication group and create it anew with the\
              \ earlier engine version. </p>"
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the parameter group to associate with this\
              \ replication group. If this argument is omitted, the default cache\
              \ parameter group for the specified engine is used.</p> <p>If you are\
              \ running Redis version 3.2.4 or later, only one node group (shard),\
              \ and want to use a default parameter group, we recommend that you specify\
              \ the parameter group by name. </p> <ul> <li> <p>To create a Redis (cluster\
              \ mode disabled) replication group, use <code>CacheParameterGroupName=default.redis3.2</code>.</p>\
              \ </li> <li> <p>To create a Redis (cluster mode enabled) replication\
              \ group, use <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</p>\
              \ </li> </ul>"
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cache subnet group to be used for the\
              \ replication group.</p> <important> <p>If you're going to launch your\
              \ cluster in an Amazon VPC, you need to create a subnet group before\
              \ you start creating a cluster. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html\"\
              >Subnets and Subnet Groups</a>.</p> </important>"
        CacheSecurityGroupNames:
          allOf:
          - $ref: '#/components/schemas/CacheSecurityGroupNameList'
          - description: A list of cache security group names to associate with this
              replication group.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdsList'
          - description: <p>One or more Amazon VPC security groups associated with
              this replication group.</p> <p>Use this parameter only when you are
              creating a replication group in an Amazon Virtual Private Cloud (Amazon
              VPC).</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. Tags are comma-separated\
              \ key,value pairs (e.g. Key=<code>myKey</code>, Value=<code>myKeyValue</code>.\
              \ You can include multiple tags as shown following: Key=<code>myKey</code>,\
              \ Value=<code>myKeyValue</code> Key=<code>mySecondKey</code>, Value=<code>mySecondKeyValue</code>.\
              \ Tags on replication groups will be replicated to all nodes."
        SnapshotArns:
          allOf:
          - $ref: '#/components/schemas/SnapshotArnsList'
          - description: "<p>A list of Amazon Resource Names (ARN) that uniquely identify\
              \ the Redis RDB snapshot files stored in Amazon S3. The snapshot files\
              \ are used to populate the new replication group. The Amazon S3 object\
              \ name in the ARN cannot contain any commas. The new replication group\
              \ will have the number of node groups (console: shards) specified by\
              \ the parameter <i>NumNodeGroups</i> or the number of node groups configured\
              \ by <i>NodeGroupConfiguration</i> regardless of the number of ARNs\
              \ specified here.</p> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code>\
              \ </p>"
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a snapshot from which to restore data into the
              new replication group. The snapshot status changes to <code>restoring</code>
              while the new replication group is being created.
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the weekly time range during which maintenance\
              \ on the cluster is performed. It is specified as a range in the format\
              \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
              \ is a 60 minute period. Valid values for <code>ddd</code> are:</p>\
              \ <p>Specifies the weekly time range during which maintenance on the\
              \ cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi\
              \ (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p>\
              \ <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code>\
              \ </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code>\
              \ </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code>\
              \ </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code>\
              \ </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>"
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The port number on which each member of the replication group
              accepts connections.
        NotificationTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification
              Service (SNS) topic to which notifications are sent.</p> <note> <p>The
              Amazon SNS topic owner must be the same as the cluster owner.</p> </note>
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "\_If you are running Redis engine version 6.0 or later,\
              \ set this parameter to yes if you want to opt-in to the next auto minor\
              \ version upgrade campaign. This parameter is disabled for previous\
              \ versions.\_ "
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which ElastiCache retains automatic\
              \ snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>\
              \ to 5, a snapshot that was taken today is retained for 5 days before\
              \ being deleted.</p> <p>Default: 0 (i.e., automatic backups are disabled\
              \ for this cluster).</p>"
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range (in UTC) during which ElastiCache\
              \ begins taking a daily snapshot of your node group (shard).</p> <p>Example:\
              \ <code>05:00-09:00</code> </p> <p>If you do not specify this parameter,\
              \ ElastiCache automatically chooses an appropriate time range.</p>"
        AuthToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> <b>Reserved parameter.</b> The password used to access\
              \ a password protected server.</p> <p> <code>AuthToken</code> can be\
              \ specified only on replication groups where <code>TransitEncryptionEnabled</code>\
              \ is <code>true</code>.</p> <important> <p>For HIPAA compliance, you\
              \ must specify <code>TransitEncryptionEnabled</code> as <code>true</code>,\
              \ an <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p>\
              \ </important> <p>Password constraints:</p> <ul> <li> <p>Must be only\
              \ printable ASCII characters.</p> </li> <li> <p>Must be at least 16\
              \ characters and no more than 128 characters in length.</p> </li> <li>\
              \ <p>The only permitted printable special characters are !, &amp;, #,\
              \ $, ^, &lt;, &gt;, and -. Other printable special characters cannot\
              \ be used in the AUTH token.</p> </li> </ul> <p>For more information,\
              \ see <a href=\"http://redis.io/commands/AUTH\">AUTH password</a> at\
              \ http://redis.io/commands/AUTH.</p>"
        TransitEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables in-transit encryption when set to\
              \ <code>true</code>.</p> <p>This parameter is valid only if the <code>Engine</code>\
              \ parameter is <code>redis</code>, the <code>EngineVersion</code> parameter\
              \ is <code>3.2.6</code>, <code>4.x</code> or later, and the cluster\
              \ is being created in an Amazon VPC.</p> <p>If you enable in-transit\
              \ encryption, you must also specify a value for <code>CacheSubnetGroup</code>.</p>\
              \ <p> <b>Required:</b> Only available when creating a replication group\
              \ in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code>\
              \ or later.</p> <p>Default: <code>false</code> </p> <important> <p>For\
              \ HIPAA compliance, you must specify <code>TransitEncryptionEnabled</code>\
              \ as <code>true</code>, an <code>AuthToken</code>, and a <code>CacheSubnetGroup</code>.</p>\
              \ </important>"
        AtRestEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A flag that enables encryption at rest when set to <code>true</code>.</p>\
              \ <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code>\
              \ after the replication group is created. To enable encryption at rest\
              \ on a replication group you must set <code>AtRestEncryptionEnabled</code>\
              \ to <code>true</code> when you create the replication group. </p> <p>\
              \ <b>Required:</b> Only available when creating a replication group\
              \ in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code>\
              \ or later.</p> <p>Default: <code>false</code> </p>"
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the disk in the cluster.
        UserGroupIds:
          allOf:
          - $ref: '#/components/schemas/UserGroupIdListInput'
          - description: The user group to associate with the replication group.
        LogDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryConfigurationRequestList'
          - description: "Specifies the destination, format and type of the logs."
        DataTieringEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "Enables data tiering. Data tiering is only supported for\
              \ replication groups using the r6gd node type. This parameter must be\
              \ set to true when using r6gd nodes. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/data-tiering.html\"\
              >Data tiering</a>."
        NetworkType:
          allOf:
          - $ref: '#/components/schemas/NetworkType'
          - description: Must be either <code>ipv4</code> | <code>ipv6</code> | <code>dual_stack</code>.
              IPv6 is supported for workloads using Redis engine version 6.2 onward
              or Memcached engine version 1.6.6 on all instances built on the <a href="https://aws.amazon.com/ec2/nitro/">Nitro
              system</a>.
        IpDiscovery:
          allOf:
          - $ref: '#/components/schemas/IpDiscovery'
          - description: "The network type you choose when creating a replication\
              \ group, either <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported\
              \ for workloads using Redis engine version 6.2 onward or Memcached engine\
              \ version 1.6.6 on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
              >Nitro system</a>."
        TransitEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/TransitEncryptionMode'
          - description: "<p>A setting that allows you to migrate your clients to\
              \ use in-transit encryption, with no downtime.</p> <p>When setting <code>TransitEncryptionEnabled</code>\
              \ to <code>true</code>, you can set your <code>TransitEncryptionMode</code>\
              \ to <code>preferred</code> in the same request, to allow both encrypted\
              \ and unencrypted connections at the same time. Once you migrate all\
              \ your Redis clients to use encrypted connections you can modify the\
              \ value to <code>required</code> to allow encrypted connections only.</p>\
              \ <p>Setting <code>TransitEncryptionMode</code> to <code>required</code>\
              \ is a two-step process that requires you to first set the <code>TransitEncryptionMode</code>\
              \ to <code>preferred</code> first, after that you can set <code>TransitEncryptionMode</code>\
              \ to <code>required</code>. </p>"
      required:
      - ReplicationGroupDescription
      - ReplicationGroupId
      title: CreateReplicationGroupMessage
      type: object
    CreateSnapshotMessage:
      description: Represents the input of a <code>CreateSnapshot</code> operation.
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of an existing replication group. The snapshot
              is created from this replication group.
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of an existing cluster. The snapshot is created
              from this cluster.
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A name for the snapshot being created.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the snapshot.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
      required:
      - SnapshotName
      title: CreateSnapshotMessage
      type: object
    EngineType:
      pattern: "[a-zA-Z]*"
      type: string
    UserIdListInput:
      items:
        $ref: '#/components/schemas/UserId'
      minItems: 1
      type: array
    CreateUserGroupMessage:
      properties:
        UserGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the user group.
        Engine:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: 'The current supported value is Redis. '
        UserIds:
          allOf:
          - $ref: '#/components/schemas/UserIdListInput'
          - description: The list of user IDs that belong to the user group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
      required:
      - Engine
      - UserGroupId
      title: CreateUserGroupMessage
      type: object
    UserName:
      minLength: 1
      type: string
    CreateUserMessage:
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The ID of the user.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The username of the user.
        Engine:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: 'The current supported value is Redis. '
        Passwords:
          allOf:
          - $ref: '#/components/schemas/PasswordListInput'
          - description: Passwords used for this user. You can create up to two passwords
              for each user.
        AccessString:
          allOf:
          - $ref: '#/components/schemas/AccessString'
          - description: Access permissions string used for this user.
        NoPasswordRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Indicates a password is not required for this user.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
        AuthenticationMode:
          $ref: '#/components/schemas/CreateUserMessage_AuthenticationMode'
      required:
      - AccessString
      - Engine
      - UserId
      - UserName
      title: CreateUserMessage
      type: object
    CustomerNodeEndpointList:
      items:
        $ref: '#/components/schemas/CustomerNodeEndpoint'
      type: array
    DataTieringStatus:
      enum:
      - enabled
      - disabled
      type: string
    GlobalNodeGroupIdList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: GlobalNodeGroupId
      type: array
    DecreaseNodeGroupsInGlobalReplicationGroupMessage:
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        NodeGroupCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of node groups (shards) that results from the
              modification of the shard configuration
        GlobalNodeGroupsToRemove:
          allOf:
          - $ref: '#/components/schemas/GlobalNodeGroupIdList'
          - description: "If the value of NodeGroupCount is less than the current\
              \ number of node groups (shards), then either NodeGroupsToRemove or\
              \ NodeGroupsToRetain is required. GlobalNodeGroupsToRemove is a list\
              \ of NodeGroupIds to remove from the cluster. ElastiCache for Redis\
              \ will attempt to remove all node groups listed by GlobalNodeGroupsToRemove\
              \ from the cluster. "
        GlobalNodeGroupsToRetain:
          allOf:
          - $ref: '#/components/schemas/GlobalNodeGroupIdList'
          - description: "If the value of NodeGroupCount is less than the current\
              \ number of node groups (shards), then either NodeGroupsToRemove or\
              \ NodeGroupsToRetain is required. GlobalNodeGroupsToRetain is a list\
              \ of NodeGroupIds to retain from the cluster. ElastiCache for Redis\
              \ will attempt to retain all node groups listed by GlobalNodeGroupsToRetain\
              \ from the cluster. "
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates that the shard reconfiguration process begins\
              \ immediately. At present, the only permitted value for this parameter\
              \ is true. "
      required:
      - ApplyImmediately
      - GlobalReplicationGroupId
      - NodeGroupCount
      title: DecreaseNodeGroupsInGlobalReplicationGroupMessage
      type: object
    ReplicaConfigurationList:
      items:
        $ref: '#/components/schemas/GET_DecreaseReplicaCount_ReplicaConfiguration_parameter_inner'
      type: array
    RemoveReplicasList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    DecreaseReplicaCountMessage:
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The id of the replication group from which you want to remove
              replica nodes.
        NewReplicaCount:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of read replica nodes you want at the completion\
              \ of this operation. For Redis (cluster mode disabled) replication groups,\
              \ this is the number of replica nodes in the replication group. For\
              \ Redis (cluster mode enabled) replication groups, this is the number\
              \ of replica nodes in each of the replication group's node groups.</p>\
              \ <p>The minimum number of replicas in a shard or replication group\
              \ is:</p> <ul> <li> <p>Redis (cluster mode disabled)</p> <ul> <li> <p>If\
              \ Multi-AZ is enabled: 1</p> </li> <li> <p>If Multi-AZ is not enabled:\
              \ 0</p> </li> </ul> </li> <li> <p>Redis (cluster mode enabled): 0 (though\
              \ you will not be able to failover to a replica if your primary node\
              \ fails)</p> </li> </ul>"
        ReplicaConfiguration:
          allOf:
          - $ref: '#/components/schemas/ReplicaConfigurationList'
          - description: "A list of <code>ConfigureShard</code> objects that can be\
              \ used to configure each shard in a Redis (cluster mode enabled) replication\
              \ group. The <code>ConfigureShard</code> has three members: <code>NewReplicaCount</code>,\
              \ <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>."
        ReplicasToRemove:
          allOf:
          - $ref: '#/components/schemas/RemoveReplicasList'
          - description: A list of the node ids to remove from the replication group
              or node group (shard).
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If <code>True</code>, the number of replica nodes is decreased\
              \ immediately. <code>ApplyImmediately=False</code> is not currently\
              \ supported."
      required:
      - ApplyImmediately
      - ReplicationGroupId
      title: DecreaseReplicaCountMessage
      type: object
    DeleteCacheClusterMessage:
      description: Represents the input of a <code>DeleteCacheCluster</code> operation.
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cluster identifier for the cluster to be deleted. This
              parameter is not case sensitive.
        FinalSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The user-supplied name of a final cluster snapshot. This\
              \ is the unique name that identifies the snapshot. ElastiCache creates\
              \ the snapshot, and then deletes the cluster immediately afterward."
      required:
      - CacheClusterId
      title: DeleteCacheClusterMessage
      type: object
    DeleteCacheParameterGroupMessage:
      description: Represents the input of a <code>DeleteCacheParameterGroup</code>
        operation.
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the cache parameter group to delete.</p> <note>
              <p>The specified cache security group must not be associated with any
              clusters.</p> </note>
      required:
      - CacheParameterGroupName
      title: DeleteCacheParameterGroupMessage
      type: object
    DeleteCacheSecurityGroupMessage:
      description: Represents the input of a <code>DeleteCacheSecurityGroup</code>
        operation.
      properties:
        CacheSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the cache security group to delete.</p> <note>
              <p>You cannot delete the default security group.</p> </note>
      required:
      - CacheSecurityGroupName
      title: DeleteCacheSecurityGroupMessage
      type: object
    DeleteCacheSubnetGroupMessage:
      description: Represents the input of a <code>DeleteCacheSubnetGroup</code> operation.
      properties:
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cache subnet group to delete.</p> <p>Constraints:\
              \ Must contain no more than 255 alphanumeric characters or hyphens.</p>"
      required:
      - CacheSubnetGroupName
      title: DeleteCacheSubnetGroupMessage
      type: object
    DeleteGlobalReplicationGroupMessage:
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        RetainPrimaryReplicationGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: 'The primary replication group is retained as a standalone
              replication group. '
      required:
      - GlobalReplicationGroupId
      - RetainPrimaryReplicationGroup
      title: DeleteGlobalReplicationGroupMessage
      type: object
    DeleteReplicationGroupMessage:
      description: Represents the input of a <code>DeleteReplicationGroup</code> operation.
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the cluster to be deleted. This parameter
              is not case sensitive.
        RetainPrimaryCluster:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "If set to <code>true</code>, all of the read replicas are\
              \ deleted, but the primary node is retained."
        FinalSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of a final node group (shard) snapshot. ElastiCache\
              \ creates the snapshot from the primary node in the cluster, rather\
              \ than one of the replicas; this is to ensure that it captures the freshest\
              \ data. After the final snapshot is taken, the replication group is\
              \ immediately deleted."
      required:
      - ReplicationGroupId
      title: DeleteReplicationGroupMessage
      type: object
    DeleteSnapshotMessage:
      description: Represents the input of a <code>DeleteSnapshot</code> operation.
      properties:
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the snapshot to be deleted.
      required:
      - SnapshotName
      title: DeleteSnapshotMessage
      type: object
    DeleteUserGroupMessage:
      properties:
        UserGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the user group.
      required:
      - UserGroupId
      title: DeleteUserGroupMessage
      type: object
    DeleteUserMessage:
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The ID of the user.
      required:
      - UserId
      title: DeleteUserMessage
      type: object
    DescribeCacheClustersMessage:
      description: Represents the input of a <code>DescribeCacheClusters</code> operation.
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The user-supplied cluster identifier. If this parameter\
              \ is specified, only information about that specific cluster is returned.\
              \ This parameter isn't case sensitive."
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
        ShowCacheNodeInfo:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: An optional flag that can be included in the <code>DescribeCacheCluster</code>
              request to retrieve information about the individual cache nodes.
        ShowCacheClustersNotInReplicationGroups:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "An optional flag that can be included in the <code>DescribeCacheCluster</code>\
              \ request to show only nodes (API/CLI: clusters) that are not members\
              \ of a replication group. In practice, this mean Memcached and single\
              \ node Redis clusters."
      title: DescribeCacheClustersMessage
      type: object
    DescribeCacheEngineVersionsMessage:
      description: Represents the input of a <code>DescribeCacheEngineVersions</code>
        operation.
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The cache engine to return. Valid values: <code>memcached</code>\
              \ | <code>redis</code> "
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The cache engine version to return.</p> <p>Example: <code>1.4.14</code>\
              \ </p>"
        CacheParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific cache parameter group family to\
              \ return details for.</p> <p>Valid values are: <code>memcached1.4</code>\
              \ | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code>\
              \ | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code>\
              \ | <code>redis5.0</code> | <code>redis6.x</code> | <code>redis6.2</code>\
              \ | <code>redis7</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be\
              \ 1 to 255 alphanumeric characters</p> </li> <li> <p>First character\
              \ must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain\
              \ two consecutive hyphens</p> </li> </ul>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
        DefaultOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If <code>true</code>, specifies that only the default version\
              \ of the specified engine or engine and major version combination is\
              \ to be returned."
      title: DescribeCacheEngineVersionsMessage
      type: object
    DescribeCacheParameterGroupsMessage:
      description: Represents the input of a <code>DescribeCacheParameterGroups</code>
        operation.
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a specific cache parameter group to return details
              for.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeCacheParameterGroupsMessage
      type: object
    DescribeCacheParametersMessage:
      description: Represents the input of a <code>DescribeCacheParameters</code>
        operation.
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a specific cache parameter group to return details
              for.
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The parameter types to return.</p> <p>Valid values: <code>user</code>\
              \ | <code>system</code> | <code>engine-default</code> </p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      required:
      - CacheParameterGroupName
      title: DescribeCacheParametersMessage
      type: object
    DescribeCacheSecurityGroupsMessage:
      description: Represents the input of a <code>DescribeCacheSecurityGroups</code>
        operation.
      properties:
        CacheSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache security group to return details for.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeCacheSecurityGroupsMessage
      type: object
    DescribeCacheSubnetGroupsMessage:
      description: Represents the input of a <code>DescribeCacheSubnetGroups</code>
        operation.
      properties:
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache subnet group to return details for.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeCacheSubnetGroupsMessage
      type: object
    DescribeEngineDefaultParametersMessage:
      description: Represents the input of a <code>DescribeEngineDefaultParameters</code>
        operation.
      properties:
        CacheParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cache parameter group family.</p> <p>Valid\
              \ values are: <code>memcached1.4</code> | <code>memcached1.5</code>\
              \ | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code>\
              \ | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code>\
              \ | <code>redis6.x</code> | <code>redis6.2</code> | <code>redis7</code>\
              \ </p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      required:
      - CacheParameterGroupFamily
      title: DescribeEngineDefaultParametersMessage
      type: object
    EngineDefaults:
      description: Represents the output of a <code>DescribeEngineDefaultParameters</code>
        operation.
      properties:
        CacheParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the name of the cache parameter group family\
              \ to which the engine default parameters apply.</p> <p>Valid values\
              \ are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code>\
              \ | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code>\
              \ | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.0</code>\
              \ | <code>redis6.x</code> </p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides an identifier to allow retrieval of paginated results.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: Contains a list of engine default parameters.
        CacheNodeTypeSpecificParameters:
          allOf:
          - $ref: '#/components/schemas/CacheNodeTypeSpecificParametersList'
          - description: A list of parameters specific to a particular cache node
              type. Each element in the list contains detailed information about one
              parameter.
      type: object
    SourceType:
      enum:
      - cache-cluster
      - cache-parameter-group
      - cache-security-group
      - cache-subnet-group
      - replication-group
      - user
      - user-group
      type: string
    DescribeEventsMessage:
      description: Represents the input of a <code>DescribeEvents</code> operation.
      properties:
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The identifier of the event source for which events are\
              \ returned. If not specified, all sources are included in the response."
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: "The event source to retrieve events for. If no value is\
              \ specified, all events are returned."
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p>The beginning of the time interval to retrieve events\
              \ for, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>"
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p>The end of the time interval for which to retrieve events,\
              \ specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>"
        Duration:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of minutes worth of events to retrieve.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeEventsMessage
      type: object
    DescribeGlobalReplicationGroupsMessage:
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxRecords value, a marker\
              \ is included in the response so that the remaining results can be retrieved. "
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>. "
        ShowMemberInfo:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Returns the list of members that comprise the Global datastore.
      title: DescribeGlobalReplicationGroupsMessage
      type: object
    GlobalReplicationGroupList:
      items:
        $ref: '#/components/schemas/GlobalReplicationGroupList_inner'
      type: array
    DescribeReplicationGroupsMessage:
      description: Represents the input of a <code>DescribeReplicationGroups</code>
        operation.
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier for the replication group to be described.\
              \ This parameter is not case sensitive.</p> <p>If you do not specify\
              \ this parameter, information about all replication groups is returned.</p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeReplicationGroupsMessage
      type: object
    DescribeReservedCacheNodesMessage:
      description: Represents the input of a <code>DescribeReservedCacheNodes</code>
        operation.
      properties:
        ReservedCacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reserved cache node identifier filter value. Use this
              parameter to show only the reservation that matches the specified reservation
              ID.
        ReservedCacheNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering identifier filter value. Use this parameter
              to show only purchased reservations matching the specified offering
              identifier.
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The cache node type filter value. Use this parameter\
              \ to show only those reservations matching the specified cache node\
              \ type.</p> <p>The following node types are supported by ElastiCache.\
              \ Generally speaking, the current generation types provide more memory\
              \ and computational power at lower cost when compared to their equivalent\
              \ previous generation counterparts.</p> <ul> <li> <p>General purpose:</p>\
              \ <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available\
              \ only for Redis engine version 5.0.6 onward and for Memcached engine\
              \ version 1.5.16 onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
              \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
              \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p>\
              \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
              \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
              \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p>\
              \ <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
              \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
              \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
              \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
              \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p>\
              \ <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
              \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
              \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li>\
              \ <li> <p>Previous generation: (not recommended. Existing clusters are\
              \ still supported but creation of new clusters is not supported for\
              \ these types.)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code>\
              \ </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
              \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>\
              \ <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
              \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
              \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>C1 node\
              \ types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
              \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p>\
              \ <b>R6g node types</b> (available only for Redis engine version 5.0.6\
              \ onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
              \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
              \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
              \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
              \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p>\
              \ <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
              \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
              \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>M2 node\
              \ types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,\
              \ <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>,\
              \ <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,\
              \ <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional\
              \ node type info</b> </p> <ul> <li> <p>All current generation instance\
              \ types are created in Amazon VPC by default.</p> </li> <li> <p>Redis\
              \ append-only files (AOF) are not supported for T1 or T2 instances.</p>\
              \ </li> <li> <p>Redis Multi-AZ with automatic failover is not supported\
              \ on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code>\
              \ and <code>appendfsync</code> are not supported on Redis version 2.8.22\
              \ and later.</p> </li> </ul>"
        Duration:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The duration filter value, specified in years or seconds.\
              \ Use this parameter to show only reservations for this duration.</p>\
              \ <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
        ProductDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The product description filter value. Use this parameter
              to show only those reservations matching the specified product description.
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The offering type filter value. Use this parameter to\
              \ show only the available offerings matching the specified offering\
              \ type.</p> <p>Valid values: <code>\"Light Utilization\"|\"Medium Utilization\"\
              |\"Heavy Utilization\"|\"All Upfront\"|\"Partial Upfront\"| \"No Upfront\"\
              </code> </p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeReservedCacheNodesMessage
      type: object
    DescribeReservedCacheNodesOfferingsMessage:
      description: Represents the input of a <code>DescribeReservedCacheNodesOfferings</code>
        operation.
      properties:
        ReservedCacheNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The offering identifier filter value. Use this parameter\
              \ to show only the available offering that matches the specified reservation\
              \ identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code>\
              \ </p>"
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The cache node type filter value. Use this parameter\
              \ to show only the available offerings matching the specified cache\
              \ node type.</p> <p>The following node types are supported by ElastiCache.\
              \ Generally speaking, the current generation types provide more memory\
              \ and computational power at lower cost when compared to their equivalent\
              \ previous generation counterparts.</p> <ul> <li> <p>General purpose:</p>\
              \ <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available\
              \ only for Redis engine version 5.0.6 onward and for Memcached engine\
              \ version 1.5.16 onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
              \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
              \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p>\
              \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
              \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
              \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p>\
              \ <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
              \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
              \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
              \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
              \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p>\
              \ <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
              \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
              \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li>\
              \ <li> <p>Previous generation: (not recommended. Existing clusters are\
              \ still supported but creation of new clusters is not supported for\
              \ these types.)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code>\
              \ </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
              \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>\
              \ <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
              \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
              \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>C1 node\
              \ types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
              \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p>\
              \ <b>R6g node types</b> (available only for Redis engine version 5.0.6\
              \ onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
              \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
              \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
              \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
              \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p>\
              \ <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
              \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
              \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>M2 node\
              \ types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,\
              \ <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>,\
              \ <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,\
              \ <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional\
              \ node type info</b> </p> <ul> <li> <p>All current generation instance\
              \ types are created in Amazon VPC by default.</p> </li> <li> <p>Redis\
              \ append-only files (AOF) are not supported for T1 or T2 instances.</p>\
              \ </li> <li> <p>Redis Multi-AZ with automatic failover is not supported\
              \ on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code>\
              \ and <code>appendfsync</code> are not supported on Redis version 2.8.22\
              \ and later.</p> </li> </ul>"
        Duration:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Duration filter value, specified in years or seconds.\
              \ Use this parameter to show only reservations for a given duration.</p>\
              \ <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
        ProductDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The product description filter value. Use this parameter
              to show only the available offerings matching the specified product
              description.
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The offering type filter value. Use this parameter to\
              \ show only the available offerings matching the specified offering\
              \ type.</p> <p>Valid Values: <code>\"Light Utilization\"|\"Medium Utilization\"\
              |\"Heavy Utilization\" |\"All Upfront\"|\"Partial Upfront\"| \"No Upfront\"\
              </code> </p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum\
              \ 20; maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeReservedCacheNodesOfferingsMessage
      type: object
    ServiceUpdateStatusList:
      items:
        $ref: '#/components/schemas/ServiceUpdateStatus'
      maxItems: 3
      type: array
    DescribeServiceUpdatesMessage:
      properties:
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
        ServiceUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateStatusList'
          - description: The status of the service update
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The maximum number of records to include in the response
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeServiceUpdatesMessage
      type: object
    SnapshotList:
      items:
        $ref: '#/components/schemas/SnapshotList_inner'
      type: array
    DescribeSnapshotsMessage:
      description: Represents the input of a <code>DescribeSnapshotsMessage</code>
        operation.
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A user-supplied replication group identifier. If this parameter\
              \ is specified, only snapshots associated with that specific replication\
              \ group are described."
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A user-supplied cluster identifier. If this parameter is\
              \ specified, only snapshots associated with that specific cluster are\
              \ described."
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A user-supplied name of the snapshot. If this parameter\
              \ is specified, only this snapshot are described."
        SnapshotSource:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If set to <code>system</code>, the output shows snapshots\
              \ that were automatically created by ElastiCache. If set to <code>user</code>\
              \ the output shows snapshots that were manually created. If omitted,\
              \ the output shows both automatically and manually created snapshots."
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a marker is included in the response so that the remaining results\
              \ can be retrieved.</p> <p>Default: 50</p> <p>Constraints: minimum 20;\
              \ maximum 50.</p>"
        ShowNodeGroupConfig:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A Boolean value which if true, the node group (shard) configuration\
              \ is included in the snapshot description."
      title: DescribeSnapshotsMessage
      type: object
    TimeRangeFilter:
      description: Filters update actions from the service updates that are in available
        status during the time range.
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The start time of the time range filter
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The end time of the time range filter
      type: object
    UpdateActionStatusList:
      items:
        $ref: '#/components/schemas/UpdateActionStatus'
      maxItems: 9
      type: array
    DescribeUpdateActionsMessage:
      properties:
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
        ReplicationGroupIds:
          allOf:
          - $ref: '#/components/schemas/ReplicationGroupIdList'
          - description: The replication group IDs
        CacheClusterIds:
          allOf:
          - $ref: '#/components/schemas/CacheClusterIdList'
          - description: The cache cluster IDs
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The Elasticache engine to which the update applies. Either
              Redis or Memcached '
        ServiceUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateStatusList'
          - description: The status of the service update
        ServiceUpdateTimeRange:
          $ref: '#/components/schemas/DescribeUpdateActionsMessage_ServiceUpdateTimeRange'
        UpdateActionStatus:
          allOf:
          - $ref: '#/components/schemas/UpdateActionStatusList'
          - description: The status of the update action.
        ShowNodeLevelUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: 'Dictates whether to include node level update status in
              the response '
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The maximum number of records to include in the response
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by <code>MaxRecords</code>."
      title: DescribeUpdateActionsMessage
      type: object
    DescribeUserGroupsMessage:
      properties:
        UserGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the user group.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxRecords value, a marker\
              \ is included in the response so that the remaining results can be retrieved. "
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords. &gt;"
      title: DescribeUserGroupsMessage
      type: object
    UserGroupList:
      items:
        $ref: '#/components/schemas/UserGroup'
      type: array
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    DescribeUsersMessage:
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: 'The Redis engine. '
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The ID of the user.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: Filter to determine the list of User IDs to return.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxRecords value, a marker\
              \ is included in the response so that the remaining results can be retrieved. "
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords. &gt;"
      title: DescribeUsersMessage
      type: object
    UserList:
      items:
        $ref: '#/components/schemas/User'
      type: array
    KinesisFirehoseDestinationDetails:
      description: The configuration details of the Kinesis Data Firehose destination.
      properties:
        DeliveryStream:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Kinesis Data Firehose delivery stream.
      type: object
    DestinationDetails:
      description: Configuration details of either a CloudWatch Logs destination or
        Kinesis Data Firehose destination.
      properties:
        CloudWatchLogsDetails:
          $ref: '#/components/schemas/DestinationDetails_CloudWatchLogsDetails'
        KinesisFirehoseDetails:
          $ref: '#/components/schemas/DestinationDetails_KinesisFirehoseDetails'
      type: object
    DestinationType:
      enum:
      - cloudwatch-logs
      - kinesis-firehose
      type: string
    DisassociateGlobalReplicationGroupMessage:
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the secondary cluster you wish to remove from
              the Global datastore
        ReplicationGroupRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon region of secondary cluster you wish to remove
              from the Global datastore
      required:
      - GlobalReplicationGroupId
      - ReplicationGroupId
      - ReplicationGroupRegion
      title: DisassociateGlobalReplicationGroupMessage
      type: object
    Double:
      format: double
      type: number
    EC2SecurityGroup:
      description: Provides ownership and status information for an Amazon EC2 security
        group.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the Amazon EC2 security group.
        EC2SecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon EC2 security group.
        EC2SecurityGroupOwnerId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon account ID of the Amazon EC2 security group owner.
      type: object
    Event:
      description: "Represents a single occurrence of something interesting within\
        \ the system. Some examples of events are creating a cluster, adding or removing\
        \ a cache node, or rebooting a node."
      properties:
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The identifier for the source of the event. For example,\
              \ if the event occurred at the cluster level, the identifier would be\
              \ the name of the cluster."
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: "Specifies the origin of this event - a cluster, a parameter\
              \ group, a security group, etc."
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The text of the event.
        Date:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the event occurred.
      type: object
    EventList:
      items:
        $ref: '#/components/schemas/EventList_inner'
      type: array
    FailoverGlobalReplicationGroupMessage:
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        PrimaryRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon region of the primary cluster of the Global datastore
        PrimaryReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the primary replication group
      required:
      - GlobalReplicationGroupId
      - PrimaryRegion
      - PrimaryReplicationGroupId
      title: FailoverGlobalReplicationGroupMessage
      type: object
    FilterName:
      pattern: .*\S.*
      type: string
    FilterValueList:
      items:
        $ref: '#/components/schemas/FilterValue'
      minItems: 1
      type: array
    FilterValue:
      pattern: .*\S.*
      type: string
    GlobalNodeGroup:
      description: Indicates the slot configuration and global identifier for a slice
        group.
      properties:
        GlobalNodeGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the global node group
        Slots:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The keyspace for this node group
      type: object
    GlobalNodeGroupList:
      items:
        $ref: '#/components/schemas/GlobalNodeGroupList_inner'
      type: array
    GlobalReplicationGroupMemberList:
      items:
        $ref: '#/components/schemas/GlobalReplicationGroupMemberList_inner'
      type: array
    GlobalReplicationGroupInfo:
      description: The name of the Global datastore and role of this replication group
        in the Global datastore.
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        GlobalReplicationGroupMemberRole:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The role of the replication group in a Global datastore.
              Can be primary or secondary.
      type: object
    GlobalReplicationGroupMember:
      description: "A member of a Global datastore. It contains the Replication Group\
        \ Id, the Amazon region and the role of the replication group. "
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The replication group id of the Global datastore member.
        ReplicationGroupRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon region of the Global datastore member.
        Role:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Indicates the role of the replication group, primary or\
              \ secondary."
        AutomaticFailover:
          allOf:
          - $ref: '#/components/schemas/AutomaticFailoverStatus'
          - description: Indicates whether automatic failover is enabled for the replication
              group.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the membership of the replication group.
      type: object
    RegionalConfigurationList:
      items:
        $ref: '#/components/schemas/GET_IncreaseNodeGroupsInGlobalReplicationGroup_RegionalConfigurations_parameter_inner'
      type: array
    IncreaseNodeGroupsInGlobalReplicationGroupMessage:
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        NodeGroupCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of node groups you wish to add
        RegionalConfigurations:
          allOf:
          - $ref: '#/components/schemas/RegionalConfigurationList'
          - description: "Describes the replication group IDs, the Amazon regions\
              \ where they are stored and the shard configuration for each that comprise\
              \ the Global datastore"
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates that the process begins immediately. At present,\
              \ the only permitted value for this parameter is true."
      required:
      - ApplyImmediately
      - GlobalReplicationGroupId
      - NodeGroupCount
      title: IncreaseNodeGroupsInGlobalReplicationGroupMessage
      type: object
    IncreaseReplicaCountMessage:
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The id of the replication group to which you want to add
              replica nodes.
        NewReplicaCount:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The number of read replica nodes you want at the completion\
              \ of this operation. For Redis (cluster mode disabled) replication groups,\
              \ this is the number of replica nodes in the replication group. For\
              \ Redis (cluster mode enabled) replication groups, this is the number\
              \ of replica nodes in each of the replication group's node groups."
        ReplicaConfiguration:
          allOf:
          - $ref: '#/components/schemas/ReplicaConfigurationList'
          - description: "A list of <code>ConfigureShard</code> objects that can be\
              \ used to configure each shard in a Redis (cluster mode enabled) replication\
              \ group. The <code>ConfigureShard</code> has three members: <code>NewReplicaCount</code>,\
              \ <code>NodeGroupId</code>, and <code>PreferredAvailabilityZones</code>."
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If <code>True</code>, the number of replica nodes is increased\
              \ immediately. <code>ApplyImmediately=False</code> is not currently\
              \ supported."
      required:
      - ApplyImmediately
      - ReplicationGroupId
      title: IncreaseReplicaCountMessage
      type: object
    KeyList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ListAllowedNodeTypeModificationsMessage:
      description: The input parameters for the <code>ListAllowedNodeTypeModifications</code>
        operation.
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the cluster you want to scale up to a larger
              node instanced type. ElastiCache uses the cluster id to identify the
              current node type of this cluster and from that to create a list of
              node types you can scale up to.</p> <important> <p>You must provide
              a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p>
              </important>
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the replication group want to scale up to\
              \ a larger node type. ElastiCache uses the replication group id to identify\
              \ the current node type being used by this replication group, and from\
              \ that to create a list of node types you can scale up to.</p> <important>\
              \ <p>You must provide a value for either the <code>CacheClusterId</code>\
              \ or the <code>ReplicationGroupId</code>.</p> </important>"
      title: ListAllowedNodeTypeModificationsMessage
      type: object
    ListTagsForResourceMessage:
      description: The input parameters for the <code>ListTagsForResource</code> operation.
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon Resource Name (ARN) of the resource for which\
              \ you want the list of tags, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>\
              \ or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p>\
              \ <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>.</p>"
      required:
      - ResourceName
      title: ListTagsForResourceMessage
      type: object
    LogType:
      enum:
      - slow-log
      - engine-log
      type: string
    LogFormat:
      enum:
      - text
      - json
      type: string
    LogDeliveryConfigurationStatus:
      enum:
      - active
      - enabling
      - modifying
      - disabling
      - error
      type: string
    LogDeliveryConfiguration:
      description: "Returns the destination, format and type of the logs. "
      properties:
        LogType:
          allOf:
          - $ref: '#/components/schemas/LogType'
          - description: Refers to <a href="https://redis.io/commands/slowlog">slow-log</a>
              or engine-log.
        DestinationType:
          allOf:
          - $ref: '#/components/schemas/DestinationType'
          - description: "Returns the destination type, either <code>cloudwatch-logs</code>\
              \ or <code>kinesis-firehose</code>."
        DestinationDetails:
          $ref: '#/components/schemas/LogDeliveryConfigurationRequest_DestinationDetails'
        LogFormat:
          allOf:
          - $ref: '#/components/schemas/LogFormat'
          - description: "Returns the log format, either JSON or TEXT."
        Status:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryConfigurationStatus'
          - description: 'Returns the log delivery configuration status. Values are
              one of <code>enabling</code> | <code>disabling</code> | <code>modifying</code>
              | <code>active</code> | <code>error</code> '
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Returns an error message for the log delivery configuration.
      type: object
    ModifyCacheClusterMessage:
      description: Represents the input of a <code>ModifyCacheCluster</code> operation.
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cluster identifier. This value is stored as a lowercase
              string.
        NumCacheNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of cache nodes that the cluster should have.\
              \ If the value for <code>NumCacheNodes</code> is greater than the sum\
              \ of the number of current cache nodes and the number of cache nodes\
              \ pending creation (which may be zero), more nodes are added. If the\
              \ value is less than the number of existing cache nodes, nodes are removed.\
              \ If the value is equal to the number of current cache nodes, any pending\
              \ add or remove requests are canceled.</p> <p>If you are removing cache\
              \ nodes, you must use the <code>CacheNodeIdsToRemove</code> parameter\
              \ to provide the IDs of the specific cache nodes to remove.</p> <p>For\
              \ clusters running Redis, this value must be 1. For clusters running\
              \ Memcached, this value must be between 1 and 40.</p> <note> <p>Adding\
              \ or removing Memcached cache nodes can be applied immediately or as\
              \ a pending operation (see <code>ApplyImmediately</code>).</p> <p>A\
              \ pending operation to modify the number of cache nodes in a cluster\
              \ during its maintenance window, whether by adding or removing nodes\
              \ in accordance with the scale out architecture, is not queued. The\
              \ customer's latest request to add or remove nodes to the cluster overrides\
              \ any previous pending operations to modify the number of cache nodes\
              \ in the cluster. For example, a request to remove 2 nodes would override\
              \ a previous pending operation to remove 3 nodes. Similarly, a request\
              \ to add 2 nodes would override a previous pending operation to remove\
              \ 3 nodes and vice versa. As Memcached cache nodes may now be provisioned\
              \ in different Availability Zones with flexible cache node placement,\
              \ a request to add nodes does not automatically override a previous\
              \ pending operation to add nodes. The customer can modify the previous\
              \ pending operation to add more nodes or explicitly cancel the pending\
              \ request and retry the new request. To cancel pending operations to\
              \ modify the number of cache nodes in a cluster, use the <code>ModifyCacheCluster</code>\
              \ request and set <code>NumCacheNodes</code> equal to the number of\
              \ cache nodes currently in the cluster.</p> </note>"
        CacheNodeIdsToRemove:
          allOf:
          - $ref: '#/components/schemas/CacheNodeIdsList'
          - description: "<p>A list of cache node IDs to be removed. A node ID is\
              \ a numeric identifier (0001, 0002, etc.). This parameter is only valid\
              \ when <code>NumCacheNodes</code> is less than the existing number of\
              \ cache nodes. The number of cache node IDs supplied in this parameter\
              \ must match the difference between the existing number of cache nodes\
              \ in the cluster or pending cache nodes, whichever is greater, and the\
              \ value of <code>NumCacheNodes</code> in the request.</p> <p>For example:\
              \ If you have 3 active cache nodes, 7 pending cache nodes, and the number\
              \ of cache nodes in this <code>ModifyCacheCluster</code> call is 5,\
              \ you must list 2 (7 - 5) cache node IDs to remove.</p>"
        AZMode:
          allOf:
          - $ref: '#/components/schemas/AZMode'
          - description: "<p>Specifies whether the new nodes in this Memcached cluster\
              \ are all created in a single Availability Zone or created across multiple\
              \ Availability Zones.</p> <p>Valid values: <code>single-az</code> |\
              \ <code>cross-az</code>.</p> <p>This option is only supported for Memcached\
              \ clusters.</p> <note> <p>You cannot specify <code>single-az</code>\
              \ if the Memcached cluster already has cache nodes in different Availability\
              \ Zones. If <code>cross-az</code> is specified, existing Memcached nodes\
              \ remain in their current Availability Zone.</p> <p>Only newly created\
              \ nodes are located in different Availability Zones. </p> </note>"
        NewAvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/PreferredAvailabilityZoneList'
          - description: "<note> <p>This option is only supported on Memcached clusters.</p>\
              \ </note> <p>The list of Availability Zones where the new Memcached\
              \ cache nodes are created.</p> <p>This parameter is only valid when\
              \ <code>NumCacheNodes</code> in the request is greater than the sum\
              \ of the number of active cache nodes and the number of cache nodes\
              \ pending creation (which may be zero). The number of Availability Zones\
              \ supplied in this list must match the cache nodes being added in this\
              \ request.</p> <p>Scenarios:</p> <ul> <li> <p> <b>Scenario 1:</b> You\
              \ have 3 active nodes and wish to add 2 nodes. Specify <code>NumCacheNodes=5</code>\
              \ (3 + 2) and optionally specify two Availability Zones for the two\
              \ new nodes.</p> </li> <li> <p> <b>Scenario 2:</b> You have 3 active\
              \ nodes and 2 nodes pending creation (from the scenario 1 call) and\
              \ want to add 1 more node. Specify <code>NumCacheNodes=6</code> ((3\
              \ + 2) + 1) and optionally specify an Availability Zone for the new\
              \ node.</p> </li> <li> <p> <b>Scenario 3:</b> You want to cancel all\
              \ pending operations. Specify <code>NumCacheNodes=3</code> to cancel\
              \ all pending operations.</p> </li> </ul> <p>The Availability Zone placement\
              \ of nodes pending creation cannot be modified. If you wish to cancel\
              \ any nodes pending creation, add 0 nodes by setting <code>NumCacheNodes</code>\
              \ to the number of current nodes.</p> <p>If <code>cross-az</code> is\
              \ specified, existing Memcached nodes remain in their current Availability\
              \ Zone. Only newly created nodes can be located in different Availability\
              \ Zones. For guidance on how to move existing Memcached nodes to different\
              \ Availability Zones, see the <b>Availability Zone Considerations</b>\
              \ section of <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html\"\
              >Cache Node Considerations for Memcached</a>.</p> <p> <b>Impact of new\
              \ add/remove requests upon pending requests</b> </p> <ul> <li> <p>Scenario-1</p>\
              \ <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request:\
              \ Delete</p> </li> <li> <p>Result: The new delete, pending or immediate,\
              \ replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-2</p>\
              \ <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request:\
              \ Create</p> </li> <li> <p>Result: The new create, pending or immediate,\
              \ replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-3</p>\
              \ <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request:\
              \ Delete</p> </li> <li> <p>Result: The new delete, pending or immediate,\
              \ replaces the pending create.</p> </li> </ul> </li> <li> <p>Scenario-4</p>\
              \ <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request:\
              \ Create</p> </li> <li> <p>Result: The new create is added to the pending\
              \ create.</p> <important> <p> <b>Important:</b> If the new create request\
              \ is <b>Apply Immediately - Yes</b>, all creates are performed immediately.\
              \ If the new create request is <b>Apply Immediately - No</b>, all creates\
              \ are pending.</p> </important> </li> </ul> </li> </ul>"
        CacheSecurityGroupNames:
          allOf:
          - $ref: '#/components/schemas/CacheSecurityGroupNameList'
          - description: "<p>A list of cache security group names to authorize on\
              \ this cluster. This change is asynchronously applied as soon as possible.</p>\
              \ <p>You can use this parameter only with clusters that are created\
              \ outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints:\
              \ Must contain no more than 255 alphanumeric characters. Must not be\
              \ \"Default\".</p>"
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdsList'
          - description: <p>Specifies the VPC Security Groups associated with the
              cluster.</p> <p>This parameter can be used only with clusters that are
              created in an Amazon Virtual Private Cloud (Amazon VPC).</p>
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the weekly time range during which maintenance\
              \ on the cluster is performed. It is specified as a range in the format\
              \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
              \ is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p>\
              \ <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code>\
              \ </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code>\
              \ </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code>\
              \ </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example:\
              \ <code>sun:23:00-mon:01:30</code> </p>"
        NotificationTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic
              to which notifications are sent.</p> <note> <p>The Amazon SNS topic
              owner must be same as the cluster owner.</p> </note>
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache parameter group to apply to this cluster.
              This change is asynchronously applied as soon as possible for parameters
              when the <code>ApplyImmediately</code> parameter is specified as <code>true</code>
              for this request.
        NotificationTopicStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The status of the Amazon SNS notification topic. Notifications\
              \ are sent only if the status is <code>active</code>.</p> <p>Valid values:\
              \ <code>active</code> | <code>inactive</code> </p>"
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>If <code>true</code>, this parameter causes the modifications\
              \ in this request and any pending modifications to be applied, asynchronously\
              \ and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>\
              \ setting for the cluster.</p> <p>If <code>false</code>, changes to\
              \ the cluster are applied on the next maintenance reboot, or the next\
              \ failure reboot, whichever occurs first.</p> <important> <p>If you\
              \ perform a <code>ModifyCacheCluster</code> before a pending modification\
              \ is applied, the pending modification is replaced by the newer modification.</p>\
              \ </important> <p>Valid values: <code>true</code> | <code>false</code>\
              \ </p> <p>Default: <code>false</code> </p>"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The upgraded version of the cache engine to be run on\
              \ the cache nodes.</p> <p> <b>Important:</b> You can upgrade to a newer\
              \ engine version (see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement\"\
              >Selecting a Cache Engine and Version</a>), but you cannot downgrade\
              \ to an earlier engine version. If you want to use an earlier engine\
              \ version, you must delete the existing cluster and create it anew with\
              \ the earlier engine version. </p>"
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "\_If you are running Redis engine version 6.0 or later,\
              \ set this parameter to yes if you want to opt-in to the next auto minor\
              \ version upgrade campaign. This parameter is disabled for previous\
              \ versions.\_ "
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which ElastiCache retains automatic\
              \ cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code>\
              \ to 5, a snapshot that was taken today is retained for 5 days before\
              \ being deleted.</p> <note> <p>If the value of <code>SnapshotRetentionLimit</code>\
              \ is set to zero (0), backups are turned off.</p> </note>"
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The daily time range (in UTC) during which ElastiCache begins
              taking a daily snapshot of your cluster. '
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A valid cache node type that you want to scale this cluster
              up to.
        AuthToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Reserved parameter. The password used to access a password\
              \ protected server. This parameter must be specified with the <code>auth-token-update</code>\
              \ parameter. Password constraints:</p> <ul> <li> <p>Must be only printable\
              \ ASCII characters</p> </li> <li> <p>Must be at least 16 characters\
              \ and no more than 128 characters in length</p> </li> <li> <p>Cannot\
              \ contain any of the following characters: '/', '\"', or '@', '%'</p>\
              \ </li> </ul> <p> For more information, see AUTH password at <a href=\"\
              http://redis.io/commands/AUTH\">AUTH</a>.</p>"
        AuthTokenUpdateStrategy:
          allOf:
          - $ref: '#/components/schemas/AuthTokenUpdateStrategyType'
          - description: "<p>Specifies the strategy to use to update the AUTH token.\
              \ This parameter must be specified with the <code>auth-token</code>\
              \ parameter. Possible values:</p> <ul> <li> <p>Rotate</p> </li> <li>\
              \ <p>Set</p> </li> </ul> <p> For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html\"\
              >Authenticating Users with Redis AUTH</a> </p>"
        LogDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryConfigurationRequestList'
          - description: "Specifies the destination, format and type of the logs."
        IpDiscovery:
          allOf:
          - $ref: '#/components/schemas/IpDiscovery'
          - description: "The network type you choose when modifying a cluster, either\
              \ <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported for workloads\
              \ using Redis engine version 6.2 onward or Memcached engine version\
              \ 1.6.6 on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
              >Nitro system</a>."
      required:
      - CacheClusterId
      title: ModifyCacheClusterMessage
      type: object
    ParameterNameValueList:
      items:
        $ref: '#/components/schemas/GET_ModifyCacheParameterGroup_ParameterNameValues_parameter_inner'
      type: array
    ModifyCacheParameterGroupMessage:
      description: Represents the input of a <code>ModifyCacheParameterGroup</code>
        operation.
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache parameter group to modify.
        ParameterNameValues:
          allOf:
          - $ref: '#/components/schemas/ParameterNameValueList'
          - description: An array of parameter names and values for the parameter
              update. You must supply at least one parameter name and value; subsequent
              arguments are optional. A maximum of 20 parameters may be modified per
              request.
      required:
      - CacheParameterGroupName
      - ParameterNameValues
      title: ModifyCacheParameterGroupMessage
      type: object
    ModifyCacheSubnetGroupMessage:
      description: Represents the input of a <code>ModifyCacheSubnetGroup</code> operation.
      properties:
        CacheSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name for the cache subnet group. This value is stored\
              \ as a lowercase string.</p> <p>Constraints: Must contain no more than\
              \ 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code>\
              \ </p>"
        CacheSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the cache subnet group.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdentifierList'
          - description: The EC2 subnet IDs for the cache subnet group.
      required:
      - CacheSubnetGroupName
      title: ModifyCacheSubnetGroupMessage
      type: object
    ModifyGlobalReplicationGroupMessage:
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "This parameter causes the modifications in this request\
              \ and any pending modifications to be applied, asynchronously and as\
              \ soon as possible. Modifications to Global Replication Groups cannot\
              \ be requested to be applied in PreferredMaintenceWindow. "
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A valid cache node type that you want to scale this Global
              datastore to.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The upgraded version of the cache engine to be run on the
              clusters in the Global datastore. '
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache parameter group to use with the Global
              datastore. It must be compatible with the major engine version used
              by the Global datastore.
        GlobalReplicationGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the Global datastore
        AutomaticFailoverEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: 'Determines whether a read replica is automatically promoted
              to read/write primary if the existing primary encounters a failure. '
      required:
      - ApplyImmediately
      - GlobalReplicationGroupId
      title: ModifyGlobalReplicationGroupMessage
      type: object
    UserGroupIdList:
      items:
        $ref: '#/components/schemas/UserGroupId'
      type: array
    ModifyReplicationGroupMessage:
      description: Represents the input of a <code>ModifyReplicationGroups</code>
        operation.
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the replication group to modify.
        ReplicationGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description for the replication group. Maximum length is
              255 characters.
        PrimaryClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "For replication groups with a single primary, if this parameter\
              \ is specified, ElastiCache promotes the specified cluster in the specified\
              \ replication group to the primary role. The nodes of all other clusters\
              \ in the replication group are read replicas."
        SnapshottingClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cluster ID that is used as the daily snapshot source
              for the replication group. This parameter cannot be set for Redis (cluster
              mode enabled) replication groups.
        AutomaticFailoverEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>Determines whether a read replica is automatically promoted\
              \ to read/write primary if the existing primary encounters a failure.</p>\
              \ <p>Valid values: <code>true</code> | <code>false</code> </p>"
        MultiAZEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: A flag to indicate MultiAZ is enabled.
        NodeGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - deprecated: true
            description: Deprecated. This parameter is not used.
        CacheSecurityGroupNames:
          allOf:
          - $ref: '#/components/schemas/CacheSecurityGroupNameList'
          - description: "<p>A list of cache security group names to authorize for\
              \ the clusters in this replication group. This change is asynchronously\
              \ applied as soon as possible.</p> <p>This parameter can be used only\
              \ with replication group containing clusters running outside of an Amazon\
              \ Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain\
              \ no more than 255 alphanumeric characters. Must not be <code>Default</code>.</p>"
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdsList'
          - description: <p>Specifies the VPC Security Groups associated with the
              clusters in the replication group.</p> <p>This parameter can be used
              only with replication group containing clusters running in an Amazon
              Virtual Private Cloud (Amazon VPC).</p>
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the weekly time range during which maintenance\
              \ on the cluster is performed. It is specified as a range in the format\
              \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
              \ is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p>\
              \ <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code>\
              \ </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code>\
              \ </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code>\
              \ </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example:\
              \ <code>sun:23:00-mon:01:30</code> </p>"
        NotificationTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The Amazon Resource Name (ARN) of the Amazon SNS topic
              to which notifications are sent.</p> <note> <p>The Amazon SNS topic
              owner must be same as the replication group owner. </p> </note>
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache parameter group to apply to all of
              the clusters in this replication group. This change is asynchronously
              applied as soon as possible for parameters when the <code>ApplyImmediately</code>
              parameter is specified as <code>true</code> for this request.
        NotificationTopicStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The status of the Amazon SNS notification topic for the\
              \ replication group. Notifications are sent only if the status is <code>active</code>.</p>\
              \ <p>Valid values: <code>active</code> | <code>inactive</code> </p>"
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>If <code>true</code>, this parameter causes the modifications\
              \ in this request and any pending modifications to be applied, asynchronously\
              \ and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>\
              \ setting for the replication group.</p> <p>If <code>false</code>, changes\
              \ to the nodes in the replication group are applied on the next maintenance\
              \ reboot, or the next failure reboot, whichever occurs first.</p> <p>Valid\
              \ values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code>\
              \ </p>"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The upgraded version of the cache engine to be run on\
              \ the clusters in the replication group.</p> <p> <b>Important:</b> You\
              \ can upgrade to a newer engine version (see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement\"\
              >Selecting a Cache Engine and Version</a>), but you cannot downgrade\
              \ to an earlier engine version. If you want to use an earlier engine\
              \ version, you must delete the existing replication group and create\
              \ it anew with the earlier engine version. </p>"
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "\_If you are running Redis engine version 6.0 or later,\
              \ set this parameter to yes if you want to opt-in to the next auto minor\
              \ version upgrade campaign. This parameter is disabled for previous\
              \ versions.\_ "
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which ElastiCache retains automatic\
              \ node group (shard) snapshots before deleting them. For example, if\
              \ you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that\
              \ was taken today is retained for 5 days before being deleted.</p> <p>\
              \ <b>Important</b> If the value of SnapshotRetentionLimit is set to\
              \ zero (0), backups are turned off.</p>"
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range (in UTC) during which ElastiCache\
              \ begins taking a daily snapshot of the node group (shard) specified\
              \ by <code>SnapshottingClusterId</code>.</p> <p>Example: <code>05:00-09:00</code>\
              \ </p> <p>If you do not specify this parameter, ElastiCache automatically\
              \ chooses an appropriate time range.</p>"
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A valid cache node type that you want to scale this replication
              group to.
        AuthToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Reserved parameter. The password used to access a password\
              \ protected server. This parameter must be specified with the <code>auth-token-update-strategy\
              \ </code> parameter. Password constraints:</p> <ul> <li> <p>Must be\
              \ only printable ASCII characters</p> </li> <li> <p>Must be at least\
              \ 16 characters and no more than 128 characters in length</p> </li>\
              \ <li> <p>Cannot contain any of the following characters: '/', '\"',\
              \ or '@', '%'</p> </li> </ul> <p> For more information, see AUTH password\
              \ at <a href=\"http://redis.io/commands/AUTH\">AUTH</a>.</p>"
        AuthTokenUpdateStrategy:
          allOf:
          - $ref: '#/components/schemas/AuthTokenUpdateStrategyType'
          - description: "<p>Specifies the strategy to use to update the AUTH token.\
              \ This parameter must be specified with the <code>auth-token</code>\
              \ parameter. Possible values:</p> <ul> <li> <p>Rotate</p> </li> <li>\
              \ <p>Set</p> </li> </ul> <p> For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html\"\
              >Authenticating Users with Redis AUTH</a> </p>"
        UserGroupIdsToAdd:
          allOf:
          - $ref: '#/components/schemas/UserGroupIdList'
          - description: The ID of the user group you are associating with the replication
              group.
        UserGroupIdsToRemove:
          allOf:
          - $ref: '#/components/schemas/UserGroupIdList'
          - description: "The ID of the user group to disassociate from the replication\
              \ group, meaning the users in the group no longer can access the replication\
              \ group."
        RemoveUserGroups:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Removes the user group associated with this replication group.
        LogDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryConfigurationRequestList'
          - description: "Specifies the destination, format and type of the logs."
        IpDiscovery:
          allOf:
          - $ref: '#/components/schemas/IpDiscovery'
          - description: "The network type you choose when modifying a cluster, either\
              \ <code>ipv4</code> | <code>ipv6</code>. IPv6 is supported for workloads\
              \ using Redis engine version 6.2 onward or Memcached engine version\
              \ 1.6.6 on all instances built on the <a href=\"https://aws.amazon.com/ec2/nitro/\"\
              >Nitro system</a>."
        TransitEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A flag that enables in-transit encryption when set to true.\
              \ If you are enabling in-transit encryption for an existing cluster,\
              \ you must also set <code>TransitEncryptionMode</code> to <code>preferred</code>."
        TransitEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/TransitEncryptionMode'
          - description: "<p>A setting that allows you to migrate your clients to\
              \ use in-transit encryption, with no downtime.</p> <p>You must set <code>TransitEncryptionEnabled</code>\
              \ to <code>true</code>, for your existing cluster, and set <code>TransitEncryptionMode</code>\
              \ to <code>preferred</code> in the same request to allow both encrypted\
              \ and unencrypted connections at the same time. Once you migrate all\
              \ your Redis clients to use encrypted connections you can set the value\
              \ to <code>required</code> to allow encrypted connections only.</p>\
              \ <p>Setting <code>TransitEncryptionMode</code> to <code>required</code>\
              \ is a two-step process that requires you to first set the <code>TransitEncryptionMode</code>\
              \ to <code>preferred</code> first, after that you can set <code>TransitEncryptionMode</code>\
              \ to <code>required</code>. </p>"
      required:
      - ReplicationGroupId
      title: ModifyReplicationGroupMessage
      type: object
    ReshardingConfigurationList:
      items:
        $ref: '#/components/schemas/GET_ModifyReplicationGroupShardConfiguration_ReshardingConfiguration_parameter_inner'
      type: array
    NodeGroupsToRemoveList:
      items:
        allOf:
        - $ref: '#/components/schemas/AllowedNodeGroupId'
        - xml:
            name: NodeGroupToRemove
      type: array
    NodeGroupsToRetainList:
      items:
        allOf:
        - $ref: '#/components/schemas/AllowedNodeGroupId'
        - xml:
            name: NodeGroupToRetain
      type: array
    ModifyReplicationGroupShardConfigurationMessage:
      description: Represents the input for a <code>ModifyReplicationGroupShardConfiguration</code>
        operation.
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Redis (cluster mode enabled) cluster (replication
              group) on which the shards are to be configured.
        NodeGroupCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of node groups (shards) that results from the
              modification of the shard configuration.
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Indicates that the shard reconfiguration process begins\
              \ immediately. At present, the only permitted value for this parameter\
              \ is <code>true</code>.</p> <p>Value: true</p>"
        ReshardingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ReshardingConfigurationList'
          - description: "<p>Specifies the preferred availability zones for each node\
              \ group in the cluster. If the value of <code>NodeGroupCount</code>\
              \ is greater than the current number of node groups (shards), you can\
              \ use this parameter to specify the preferred availability zones of\
              \ the cluster's shards. If you omit this parameter ElastiCache selects\
              \ availability zones for you.</p> <p>You can specify this parameter\
              \ only if the value of <code>NodeGroupCount</code> is greater than the\
              \ current number of node groups (shards).</p>"
        NodeGroupsToRemove:
          allOf:
          - $ref: '#/components/schemas/NodeGroupsToRemoveList'
          - description: "<p>If the value of <code>NodeGroupCount</code> is less than\
              \ the current number of node groups (shards), then either <code>NodeGroupsToRemove</code>\
              \ or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRemove</code>\
              \ is a list of <code>NodeGroupId</code>s to remove from the cluster.</p>\
              \ <p>ElastiCache for Redis will attempt to remove all node groups listed\
              \ by <code>NodeGroupsToRemove</code> from the cluster.</p>"
        NodeGroupsToRetain:
          allOf:
          - $ref: '#/components/schemas/NodeGroupsToRetainList'
          - description: "<p>If the value of <code>NodeGroupCount</code> is less than\
              \ the current number of node groups (shards), then either <code>NodeGroupsToRemove</code>\
              \ or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRetain</code>\
              \ is a list of <code>NodeGroupId</code>s to retain in the cluster.</p>\
              \ <p>ElastiCache for Redis will attempt to remove all node groups except\
              \ those listed by <code>NodeGroupsToRetain</code> from the cluster.</p>"
      required:
      - ApplyImmediately
      - NodeGroupCount
      - ReplicationGroupId
      title: ModifyReplicationGroupShardConfigurationMessage
      type: object
    ModifyUserGroupMessage:
      properties:
        UserGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the user group.
        UserIdsToAdd:
          allOf:
          - $ref: '#/components/schemas/UserIdListInput'
          - description: The list of user IDs to add to the user group.
        UserIdsToRemove:
          allOf:
          - $ref: '#/components/schemas/UserIdListInput'
          - description: The list of user IDs to remove from the user group.
      required:
      - UserGroupId
      title: ModifyUserGroupMessage
      type: object
    ModifyUserMessage:
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The ID of the user.
        AccessString:
          allOf:
          - $ref: '#/components/schemas/AccessString'
          - description: Access permissions string used for this user.
        AppendAccessString:
          allOf:
          - $ref: '#/components/schemas/AccessString'
          - description: Adds additional user permissions to the access string.
        Passwords:
          allOf:
          - $ref: '#/components/schemas/PasswordListInput'
          - description: The passwords belonging to the user. You are allowed up to
              two.
        NoPasswordRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Indicates no password is required for the user.
        AuthenticationMode:
          $ref: '#/components/schemas/CreateUserMessage_AuthenticationMode'
      required:
      - UserId
      title: ModifyUserMessage
      type: object
    MultiAZStatus:
      enum:
      - enabled
      - disabled
      type: string
    NodeGroupMemberList:
      items:
        $ref: '#/components/schemas/NodeGroupMemberList_inner'
      type: array
    NodeGroup:
      description: Represents a collection of cache nodes in a replication group.
        One node in the node group is the read/write primary node. All the other nodes
        are read-only Replica nodes.
      properties:
        NodeGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The identifier for the node group (shard). A Redis (cluster\
              \ mode disabled) replication group contains only 1 node group; therefore,\
              \ the node group ID is 0001. A Redis (cluster mode enabled) replication\
              \ group contains 1 to 90 node groups numbered 0001 to 0090. Optionally,\
              \ the user can provide the id for a node group. "
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current state of this replication group - <code>creating</code>,\
              \ <code>available</code>, <code>modifying</code>, <code>deleting</code>."
        PrimaryEndpoint:
          $ref: '#/components/schemas/NodeGroup_PrimaryEndpoint'
        ReaderEndpoint:
          $ref: '#/components/schemas/NodeGroup_ReaderEndpoint'
        Slots:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The keyspace for this node group (shard).
        NodeGroupMembers:
          allOf:
          - $ref: '#/components/schemas/NodeGroupMemberList'
          - description: A list containing information about individual nodes within
              the node group (shard).
      type: object
    OutpostArnsList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: OutpostArn
      type: array
    NodeGroupList:
      items:
        $ref: '#/components/schemas/NodeGroupList_inner'
      type: array
    NodeGroupMember:
      description: Represents a single node within a node group (shard).
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the cluster to which the node belongs.
        CacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the node within its cluster. A node ID is a numeric\
              \ identifier (0001, 0002, etc.)."
        ReadEndpoint:
          $ref: '#/components/schemas/NodeGroupMember_ReadEndpoint'
        PreferredAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Availability Zone in which the node is located.
        PreferredOutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The outpost ARN of the node group member.
        CurrentRole:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The role that is currently assigned to the node - <code>primary</code>
              or <code>replica</code>. This member is only applicable for Redis (cluster
              mode disabled) replication groups.
      type: object
    NodeGroupMemberUpdateStatus:
      description: 'The status of the service update on the node group member '
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cache cluster ID
        CacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The node ID of the cache cluster
        NodeUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/NodeUpdateStatus'
          - description: The update status of the node
        NodeDeletionDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The deletion date of the node
        NodeUpdateStartDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The start date of the update for a node
        NodeUpdateEndDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The end date of the update for a node
        NodeUpdateInitiatedBy:
          allOf:
          - $ref: '#/components/schemas/NodeUpdateInitiatedBy'
          - description: Reflects whether the update was initiated by the customer
              or automatically applied
        NodeUpdateInitiatedDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date when the update is triggered
        NodeUpdateStatusModifiedDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date when the NodeUpdateStatus was last modified
      type: object
    NodeGroupMemberUpdateStatusList:
      items:
        $ref: '#/components/schemas/NodeGroupMemberUpdateStatusList_inner'
      type: array
    NodeGroupUpdateStatus:
      description: 'The status of the service update on the node group '
      properties:
        NodeGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the node group
        NodeGroupMemberUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/NodeGroupMemberUpdateStatusList'
          - description: The status of the service update on the node group member
      type: object
    NodeGroupUpdateStatusList:
      items:
        $ref: '#/components/schemas/NodeGroupUpdateStatusList_inner'
      type: array
    NodeSnapshot:
      description: Represents an individual cache node in a snapshot of a cluster.
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique identifier for the source cluster.
        NodeGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique identifier for the source node group (shard).
        CacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cache node identifier for the node in the source cluster.
        NodeGroupConfiguration:
          $ref: '#/components/schemas/NodeSnapshot_NodeGroupConfiguration'
        CacheSize:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The size of the cache on the source cache node.
        CacheNodeCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the cache node was created in the
              source cluster.
        SnapshotCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the source node's metadata and cache
              data set was obtained for the snapshot.
      type: object
    NodeSnapshotList:
      items:
        $ref: '#/components/schemas/NodeSnapshotList_inner'
      type: array
    Parameter:
      description: Describes an individual setting that controls some aspect of ElastiCache
        behavior.
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter.
        ParameterValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the parameter.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the parameter.
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source of the parameter.
        DataType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The valid data type for the parameter.
        AllowedValues:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The valid range of values for the parameter.
        IsModifiable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether (<code>true</code>) or not (<code>false</code>)
              the parameter can be modified. Some parameters have security or operational
              implications that prevent them from being changed.
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The earliest cache engine version to which the parameter
              can apply.
        ChangeType:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          - description: "Indicates whether a change to the parameter is applied immediately\
              \ or requires a reboot for the change to be applied. You can force a\
              \ reboot or wait until the next maintenance window's reboot. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html\"\
              >Rebooting a Cluster</a>."
      type: object
    PendingAutomaticFailoverStatus:
      enum:
      - enabled
      - disabled
      type: string
    PendingLogDeliveryConfiguration:
      description: 'The log delivery configurations being modified '
      properties:
        LogType:
          allOf:
          - $ref: '#/components/schemas/LogType'
          - description: Refers to <a href="https://redis.io/commands/slowlog">slow-log</a>
              or engine-log..
        DestinationType:
          allOf:
          - $ref: '#/components/schemas/DestinationType'
          - description: "Returns the destination type, either CloudWatch Logs or\
              \ Kinesis Data Firehose."
        DestinationDetails:
          $ref: '#/components/schemas/LogDeliveryConfigurationRequest_DestinationDetails'
        LogFormat:
          allOf:
          - $ref: '#/components/schemas/LogFormat'
          - description: "Returns the log format, either JSON or TEXT"
      type: object
    PendingLogDeliveryConfigurationList:
      items:
        $ref: '#/components/schemas/PendingLogDeliveryConfiguration'
      type: array
    ProcessedUpdateAction:
      description: Update action that has been processed for the corresponding apply/stop
        request
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the replication group
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the cache cluster
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
        UpdateActionStatus:
          allOf:
          - $ref: '#/components/schemas/UpdateActionStatus'
          - description: The status of the update action on the Redis cluster
      type: object
    ProcessedUpdateActionList:
      items:
        $ref: '#/components/schemas/ProcessedUpdateActionList_inner'
      type: array
    PurchaseReservedCacheNodesOfferingMessage:
      description: Represents the input of a <code>PurchaseReservedCacheNodesOffering</code>
        operation.
      properties:
        ReservedCacheNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The ID of the reserved cache node offering to purchase.</p>\
              \ <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
        ReservedCacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A customer-specified identifier to track this reservation.</p>\
              \ <note> <p>The Reserved Cache Node ID is an unique customer-specified\
              \ identifier to track this reservation. If this parameter is not specified,\
              \ ElastiCache automatically generates an identifier for the reservation.</p>\
              \ </note> <p>Example: myreservationID</p>"
        CacheNodeCount:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of cache node instances to reserve.</p> <p>Default:\
              \ <code>1</code> </p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
      required:
      - ReservedCacheNodesOfferingId
      title: PurchaseReservedCacheNodesOfferingMessage
      type: object
    ReservedCacheNode:
      description: Represents the output of a <code>PurchaseReservedCacheNodesOffering</code>
        operation.
      properties:
        ReservedCacheNodeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifier for the reservation.
        ReservedCacheNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering identifier.
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The cache node type for the reserved cache nodes.</p>\
              \ <p>The following node types are supported by ElastiCache. Generally\
              \ speaking, the current generation types provide more memory and computational\
              \ power at lower cost when compared to their equivalent previous generation\
              \ counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current\
              \ generation: </p> <p> <b>M6g node types</b> (available only for Redis\
              \ engine version 5.0.6 onward and for Memcached engine version 1.5.16\
              \ onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
              \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
              \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p>\
              \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
              \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
              \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p>\
              \ <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
              \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
              \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
              \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
              \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p>\
              \ <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
              \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
              \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li>\
              \ <li> <p>Previous generation: (not recommended. Existing clusters are\
              \ still supported but creation of new clusters is not supported for\
              \ these types.)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code>\
              \ </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
              \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>\
              \ <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
              \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
              \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>C1 node\
              \ types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
              \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p>\
              \ <b>R6g node types</b> (available only for Redis engine version 5.0.6\
              \ onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
              \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
              \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
              \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
              \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p>\
              \ <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
              \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
              \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>M2 node\
              \ types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,\
              \ <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>,\
              \ <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,\
              \ <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional\
              \ node type info</b> </p> <ul> <li> <p>All current generation instance\
              \ types are created in Amazon VPC by default.</p> </li> <li> <p>Redis\
              \ append-only files (AOF) are not supported for T1 or T2 instances.</p>\
              \ </li> <li> <p>Redis Multi-AZ with automatic failover is not supported\
              \ on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code>\
              \ and <code>appendfsync</code> are not supported on Redis version 2.8.22\
              \ and later.</p> </li> </ul>"
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The time the reservation started.
        Duration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The duration of the reservation in seconds.
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The fixed price charged for this reserved cache node.
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The hourly price charged for this reserved cache node.
        CacheNodeCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of cache nodes that have been reserved.
        ProductDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the reserved cache node.
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering type of this reserved cache node.
        State:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state of the reserved cache node.
        RecurringCharges:
          allOf:
          - $ref: '#/components/schemas/RecurringChargeList'
          - description: The recurring price charged to run this reserved cache node.
        ReservationARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon Resource Name (ARN) of the reserved cache\
              \ node.</p> <p>Example: <code>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</code>\
              \ </p>"
      type: object
    RebalanceSlotsInGlobalReplicationGroupMessage:
      properties:
        GlobalReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Global datastore
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If <code>True</code>, redistribution is applied immediately."
      required:
      - ApplyImmediately
      - GlobalReplicationGroupId
      title: RebalanceSlotsInGlobalReplicationGroupMessage
      type: object
    RebootCacheClusterMessage:
      description: Represents the input of a <code>RebootCacheCluster</code> operation.
      properties:
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cluster identifier. This parameter is stored as a lowercase
              string.
        CacheNodeIdsToReboot:
          allOf:
          - $ref: '#/components/schemas/CacheNodeIdsList'
          - description: "A list of cache node IDs to reboot. A node ID is a numeric\
              \ identifier (0001, 0002, etc.). To reboot an entire cluster, specify\
              \ all of the cache node IDs."
      required:
      - CacheClusterId
      - CacheNodeIdsToReboot
      title: RebootCacheClusterMessage
      type: object
    RecurringCharge:
      description: "Contains the specific price and frequency of a recurring charges\
        \ for a reserved cache node, or for a reserved cache node offering."
      properties:
        RecurringChargeAmount:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The monetary amount of the recurring charge.
        RecurringChargeFrequency:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The frequency of the recurring charge.
      type: object
    RecurringChargeList:
      items:
        $ref: '#/components/schemas/RecurringChargeList_inner'
      type: array
    RemoveTagsFromResourceMessage:
      description: Represents the input of a <code>RemoveTagsFromResource</code> operation.
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon Resource Name (ARN) of the resource from which\
              \ you want the tags removed, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code>\
              \ or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p>\
              \ <p>For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Service Namespaces</a>.</p>"
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/KeyList'
          - description: A list of <code>TagKeys</code> identifying the tags you want
              removed from the named resource.
      required:
      - ResourceName
      - TagKeys
      title: RemoveTagsFromResourceMessage
      type: object
    ReplicationGroupPendingModifiedValues:
      description: "The settings to be applied to the Redis replication group, either\
        \ immediately or during the next maintenance window."
      properties:
        PrimaryClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The primary cluster ID that is applied immediately (if <code>--apply-immediately</code>\
              \ was specified), or during the next maintenance window."
        AutomaticFailoverStatus:
          allOf:
          - $ref: '#/components/schemas/PendingAutomaticFailoverStatus'
          - description: Indicates the status of automatic failover for this Redis
              replication group.
        Resharding:
          $ref: '#/components/schemas/ReplicationGroupPendingModifiedValues_Resharding'
        AuthTokenStatus:
          allOf:
          - $ref: '#/components/schemas/AuthTokenUpdateStatus'
          - description: The auth token status
        UserGroups:
          $ref: '#/components/schemas/ReplicationGroupPendingModifiedValues_UserGroups'
        LogDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/PendingLogDeliveryConfigurationList'
          - description: 'The log delivery configurations being modified '
        TransitEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: A flag that enables in-transit encryption when set to true.
        TransitEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/TransitEncryptionMode'
          - description: "A setting that allows you to migrate your clients to use\
              \ in-transit encryption, with no downtime."
      type: object
    ReplicationGroupOutpostArnList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: ReplicationGroupOutpostArn
      type: array
    ReplicationGroupList:
      items:
        $ref: '#/components/schemas/ReplicationGroupList_inner'
      type: array
    ReshardingStatus:
      description: The status of an online resharding operation.
      properties:
        SlotMigration:
          $ref: '#/components/schemas/ReshardingStatus_SlotMigration'
      type: object
    UserGroupsUpdateStatus:
      description: The status of the user group update.
      properties:
        UserGroupIdsToAdd:
          allOf:
          - $ref: '#/components/schemas/UserGroupIdList'
          - description: The ID of the user group to add.
        UserGroupIdsToRemove:
          allOf:
          - $ref: '#/components/schemas/UserGroupIdList'
          - description: The ID of the user group to remove.
      type: object
    ReservedCacheNodeList:
      items:
        $ref: '#/components/schemas/ReservedCacheNodeList_inner'
      type: array
    ReservedCacheNodesOffering:
      description: Describes all of the attributes of a reserved cache node offering.
      properties:
        ReservedCacheNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique identifier for the reserved cache node offering.
        CacheNodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The cache node type for the reserved cache node.</p>\
              \ <p>The following node types are supported by ElastiCache. Generally\
              \ speaking, the current generation types provide more memory and computational\
              \ power at lower cost when compared to their equivalent previous generation\
              \ counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current\
              \ generation: </p> <p> <b>M6g node types</b> (available only for Redis\
              \ engine version 5.0.6 onward and for Memcached engine version 1.5.16\
              \ onward): <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>,\
              \ <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>,\
              \ <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p>\
              \ <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>,\
              \ <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>,\
              \ <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p>\
              \ <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>,\
              \ <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code>\
              \ </p> <p> <b>T4g node types</b> (available only for Redis engine version\
              \ 5.0.6 onward and Memcached engine version 1.5.16 onward): <code>cache.t4g.micro</code>,\
              \ <code>cache.t4g.small</code>, <code>cache.t4g.medium</code> </p> <p>\
              \ <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>,\
              \ <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>,\
              \ <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li>\
              \ <li> <p>Previous generation: (not recommended. Existing clusters are\
              \ still supported but creation of new clusters is not supported for\
              \ these types.)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code>\
              \ </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>,\
              \ <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p>\
              \ <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>,\
              \ <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li>\
              \ </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>C1 node\
              \ types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li>\
              \ <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p>\
              \ <b>R6g node types</b> (available only for Redis engine version 5.0.6\
              \ onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>,\
              \ <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>,\
              \ <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code>\
              \ </p> <note> <p>For region availability, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion\"\
              >Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>,\
              \ <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>,\
              \ <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p>\
              \ <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>,\
              \ <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>,\
              \ <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation:\
              \ (not recommended. Existing clusters are still supported but creation\
              \ of new clusters is not supported for these types.)</p> <p> <b>M2 node\
              \ types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>,\
              \ <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>,\
              \ <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>,\
              \ <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional\
              \ node type info</b> </p> <ul> <li> <p>All current generation instance\
              \ types are created in Amazon VPC by default.</p> </li> <li> <p>Redis\
              \ append-only files (AOF) are not supported for T1 or T2 instances.</p>\
              \ </li> <li> <p>Redis Multi-AZ with automatic failover is not supported\
              \ on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code>\
              \ and <code>appendfsync</code> are not supported on Redis version 2.8.22\
              \ and later.</p> </li> </ul>"
        Duration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The duration of the offering. in seconds.
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The fixed price charged for this offering.
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The hourly price charged for this offering.
        ProductDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cache engine used by the offering.
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering type.
        RecurringCharges:
          allOf:
          - $ref: '#/components/schemas/RecurringChargeList'
          - description: The recurring price charged to run this reserved cache node.
      type: object
    ReservedCacheNodesOfferingList:
      items:
        $ref: '#/components/schemas/ReservedCacheNodesOfferingList_inner'
      type: array
    ResetCacheParameterGroupMessage:
      description: Represents the input of a <code>ResetCacheParameterGroup</code>
        operation.
      properties:
        CacheParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache parameter group to reset.
        ResetAllParameters:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>If <code>true</code>, all parameters in the cache parameter\
              \ group are reset to their default values. If <code>false</code>, only\
              \ the parameters listed by <code>ParameterNameValues</code> are reset\
              \ to their default values.</p> <p>Valid values: <code>true</code> |\
              \ <code>false</code> </p>"
        ParameterNameValues:
          allOf:
          - $ref: '#/components/schemas/ParameterNameValueList'
          - description: "An array of parameter names to reset to their default values.\
              \ If <code>ResetAllParameters</code> is <code>true</code>, do not use\
              \ <code>ParameterNameValues</code>. If <code>ResetAllParameters</code>\
              \ is <code>false</code>, you must specify the name of at least one parameter\
              \ to reset."
      required:
      - CacheParameterGroupName
      title: ResetCacheParameterGroupMessage
      type: object
    SlotMigration:
      description: Represents the progress of an online resharding operation.
      properties:
        ProgressPercentage:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The percentage of the slot migration that is complete.
      type: object
    RevokeCacheSecurityGroupIngressMessage:
      description: Represents the input of a <code>RevokeCacheSecurityGroupIngress</code>
        operation.
      properties:
        CacheSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cache security group to revoke ingress from.
        EC2SecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon EC2 security group to revoke access
              from.
        EC2SecurityGroupOwnerId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon account number of the Amazon EC2 security group
              owner. Note that this is not the same thing as an Amazon access key
              ID - you must provide a valid Amazon account number for this parameter.
      required:
      - CacheSecurityGroupName
      - EC2SecurityGroupName
      - EC2SecurityGroupOwnerId
      title: RevokeCacheSecurityGroupIngressMessage
      type: object
    SecurityGroupMembership:
      description: Represents a single cache security group and its status.
      properties:
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the cache security group.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The status of the cache security group membership. The status\
              \ changes whenever a cache security group is modified, or when the cache\
              \ security groups assigned to a cluster are modified."
      type: object
    ServiceUpdateSeverity:
      enum:
      - critical
      - important
      - medium
      - low
      type: string
    ServiceUpdateType:
      enum:
      - security-update
      type: string
    ServiceUpdate:
      description: An update that you can apply to your Redis clusters.
      properties:
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
        ServiceUpdateReleaseDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date when the service update is initially available
        ServiceUpdateEndDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date after which the service update is no longer available
        ServiceUpdateSeverity:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateSeverity'
          - description: The severity of the service update
        ServiceUpdateRecommendedApplyByDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The recommendend date to apply the service update in order\
              \ to ensure compliance. For information on compliance, see <a href=\"\
              https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/elasticache-compliance.html#elasticache-compliance-self-service\"\
              >Self-Service Security Updates for Compliance</a>."
        ServiceUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateStatus'
          - description: The status of the service update
        ServiceUpdateDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides details of the service update
        ServiceUpdateType:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateType'
          - description: Reflects the nature of the service update
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Elasticache engine to which the update applies. Either
              Redis or Memcached
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Elasticache engine version to which the update applies.
              Either Redis or Memcached engine version
        AutoUpdateAfterRecommendedApplyByDate:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: 'Indicates whether the service update will be automatically
              applied once the recommended apply-by date has expired. '
        EstimatedUpdateTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The estimated length of time the service update will take
      type: object
    ServiceUpdateList:
      items:
        $ref: '#/components/schemas/ServiceUpdateList_inner'
      type: array
    SlaMet:
      enum:
      - "true"
      - "false"
      - n/a
      type: string
    StartMigrationMessage:
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the replication group to which data should be migrated.
        CustomerNodeEndpointList:
          allOf:
          - $ref: '#/components/schemas/CustomerNodeEndpointList'
          - description: "List of endpoints from which data should be migrated. For\
              \ Redis (cluster mode disabled), list should have only one element."
      required:
      - CustomerNodeEndpointList
      - ReplicationGroupId
      title: StartMigrationMessage
      type: object
    SubnetOutpost:
      description: The ID of the outpost subnet.
      properties:
        SubnetOutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The outpost ARN of the subnet.
      type: object
    Subnet:
      description: Represents the subnet associated with a cluster. This parameter
        refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and
        used with ElastiCache.
      properties:
        SubnetIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifier for the subnet.
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/Subnet_SubnetAvailabilityZone'
        SubnetOutpost:
          $ref: '#/components/schemas/Subnet_SubnetOutpost'
        SupportedNetworkTypes:
          allOf:
          - $ref: '#/components/schemas/NetworkTypeList'
          - description: Either <code>ipv4</code> | <code>ipv6</code> | <code>dual_stack</code>.
              IPv6 is supported for workloads using Redis engine version 6.2 onward
              or Memcached engine version 1.6.6 on all instances built on the <a href="https://aws.amazon.com/ec2/nitro/">Nitro
              system</a>.
      type: object
    TestFailoverMessage:
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the replication group (console: cluster) whose\
              \ automatic failover is being tested by this operation."
        NodeGroupId:
          allOf:
          - $ref: '#/components/schemas/AllowedNodeGroupId'
          - description: The name of the node group (called shard in the console)
              in this replication group on which automatic failover is to be tested.
              You may test automatic failover on up to 5 node groups in any rolling
              24-hour period.
      required:
      - NodeGroupId
      - ReplicationGroupId
      title: TestFailoverMessage
      type: object
    UGReplicationGroupIdList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    UnprocessedUpdateAction:
      description: Update action that has failed to be processed for the corresponding
        apply/stop request
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The replication group ID
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the cache cluster
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
        ErrorType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error type for requests that are not processed
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message that describes the reason the request was
              not processed
      type: object
    UnprocessedUpdateActionList:
      items:
        $ref: '#/components/schemas/UnprocessedUpdateActionList_inner'
      type: array
    UpdateAction:
      description: The status of the service update for a specific replication group
      properties:
        ReplicationGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the replication group
        CacheClusterId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the cache cluster
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
        ServiceUpdateReleaseDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date the update is first available
        ServiceUpdateSeverity:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateSeverity'
          - description: The severity of the service update
        ServiceUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateStatus'
          - description: The status of the service update
        ServiceUpdateRecommendedApplyByDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The recommended date to apply the service update to ensure\
              \ compliance. For information on compliance, see <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/elasticache-compliance.html#elasticache-compliance-self-service\"\
              >Self-Service Security Updates for Compliance</a>."
        ServiceUpdateType:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateType'
          - description: 'Reflects the nature of the service update '
        UpdateActionAvailableDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date that the service update is available to a replication
              group
        UpdateActionStatus:
          allOf:
          - $ref: '#/components/schemas/UpdateActionStatus'
          - description: The status of the update action
        NodesUpdated:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The progress of the service update on the replication group
        UpdateActionStatusModifiedDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date when the UpdateActionStatus was last modified
        SlaMet:
          allOf:
          - $ref: '#/components/schemas/SlaMet'
          - description: "If yes, all nodes in the replication group have been updated\
              \ by the recommended apply-by date. If no, at least one node in the\
              \ replication group have not been updated by the recommended apply-by\
              \ date. If N/A, the replication group was created after the recommended\
              \ apply-by date."
        NodeGroupUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/NodeGroupUpdateStatusList'
          - description: The status of the service update on the node group
        CacheNodeUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/CacheNodeUpdateStatusList'
          - description: The status of the service update on the cache node
        EstimatedUpdateTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The estimated length of time for the update to complete
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Elasticache engine to which the update applies. Either
              Redis or Memcached
      type: object
    UpdateActionList:
      items:
        $ref: '#/components/schemas/UpdateActionList_inner'
      type: array
    UserIdList:
      items:
        $ref: '#/components/schemas/UserId'
      type: array
    UserGroupPendingChanges:
      description: Returns the updates being applied to the user group.
      properties:
        UserIdsToRemove:
          allOf:
          - $ref: '#/components/schemas/UserIdList'
          - description: The list of user IDs to remove.
        UserIdsToAdd:
          allOf:
          - $ref: '#/components/schemas/UserIdList'
          - description: The list of user IDs to add.
      type: object
    GET_AddTagsToResource_Tags_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - xml:
          name: Tag
    GET_CreateCacheCluster_LogDeliveryConfigurations_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/LogDeliveryConfigurationRequest'
      - xml:
          name: LogDeliveryConfigurationRequest
    GET_CreateReplicationGroup_NodeGroupConfiguration_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/NodeGroupConfiguration'
      - xml:
          name: NodeGroupConfiguration
    GET_CreateUser_AuthenticationMode_parameter:
      description: Specifies the authentication mode to use.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/InputAuthenticationType'
          - description: "Specifies the authentication type. Possible options are\
              \ IAM authentication, password and no password."
        Passwords:
          allOf:
          - $ref: '#/components/schemas/PasswordListInput'
          - description: Specifies the passwords to use for authentication if <code>Type</code>
              is set to <code>password</code>.
      type: object
    GET_DecreaseReplicaCount_ReplicaConfiguration_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/ConfigureShard'
      - xml:
          name: ConfigureShard
    GET_DescribeUpdateActions_ServiceUpdateTimeRange_parameter:
      description: Filters update actions from the service updates that are in available
        status during the time range.
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The start time of the time range filter
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The end time of the time range filter
      type: object
    GET_IncreaseNodeGroupsInGlobalReplicationGroup_RegionalConfigurations_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/RegionalConfiguration'
      - xml:
          name: RegionalConfiguration
    GET_ModifyCacheParameterGroup_ParameterNameValues_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/ParameterNameValue'
      - xml:
          name: ParameterNameValue
    GET_ModifyReplicationGroupShardConfiguration_ReshardingConfiguration_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/ReshardingConfiguration'
      - xml:
          name: ReshardingConfiguration
    LogDeliveryConfigurationRequest_DestinationDetails:
      allOf:
      - $ref: '#/components/schemas/DestinationDetails'
      - description: Configuration details of either a CloudWatch Logs destination
          or Kinesis Data Firehose destination.
    User_Authentication:
      allOf:
      - $ref: '#/components/schemas/Authentication'
      - description: Denotes whether the user requires a password to authenticate.
    UserGroup_PendingChanges:
      allOf:
      - $ref: '#/components/schemas/UserGroupPendingChanges'
      - description: A list of updates being applied to the user group.
    CacheSecurityGroupMembershipList_inner:
      allOf:
      - $ref: '#/components/schemas/CacheSecurityGroupMembership'
      - xml:
          name: CacheSecurityGroup
    CacheNodeList_inner:
      allOf:
      - $ref: '#/components/schemas/CacheNode'
      - xml:
          name: CacheNode
    LogDeliveryConfigurationList_inner:
      allOf:
      - $ref: '#/components/schemas/LogDeliveryConfiguration'
      - xml:
          name: LogDeliveryConfiguration
    CacheCluster_ConfigurationEndpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: "<p>Represents a Memcached cluster endpoint which can be used\
          \ by an application to connect to any node in the cluster. The configuration\
          \ endpoint will always have <code>.cfg</code> in it.</p> <p>Example: <code>mem-3.9dvc4r<u>.cfg</u>.usw2.cache.amazonaws.com:11211</code>\
          \ </p>"
    CacheCluster_NotificationConfiguration:
      allOf:
      - $ref: '#/components/schemas/NotificationConfiguration'
      - description: 'Describes a notification topic and its status. Notification
          topics are used for publishing ElastiCache events to subscribers using Amazon
          Simple Notification Service (SNS). '
    CacheCluster_CacheParameterGroup:
      allOf:
      - $ref: '#/components/schemas/CacheParameterGroupStatus'
      - description: Status of the cache parameter group.
    CacheClusterList_inner:
      allOf:
      - $ref: '#/components/schemas/CacheCluster'
      - xml:
          name: CacheCluster
    CacheEngineVersionList_inner:
      allOf:
      - $ref: '#/components/schemas/CacheEngineVersion'
      - xml:
          name: CacheEngineVersion
    CacheNode_Endpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: The hostname for connecting to this cache node.
    CacheNodeTypeSpecificValueList_inner:
      allOf:
      - $ref: '#/components/schemas/CacheNodeTypeSpecificValue'
      - xml:
          name: CacheNodeTypeSpecificValue
    CacheNodeTypeSpecificParametersList_inner:
      allOf:
      - $ref: '#/components/schemas/CacheNodeTypeSpecificParameter'
      - xml:
          name: CacheNodeTypeSpecificParameter
    CacheNodeUpdateStatusList_inner:
      allOf:
      - $ref: '#/components/schemas/CacheNodeUpdateStatus'
      - xml:
          name: CacheNodeUpdateStatus
    ParametersList_inner:
      allOf:
      - $ref: '#/components/schemas/Parameter'
      - xml:
          name: Parameter
    CacheParameterGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/CacheParameterGroup'
      - xml:
          name: CacheParameterGroup
    EC2SecurityGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/EC2SecurityGroup'
      - xml:
          name: EC2SecurityGroup
    CacheSecurityGroups_inner:
      allOf:
      - $ref: '#/components/schemas/CacheSecurityGroup'
      - xml:
          name: CacheSecurityGroup
    SubnetList_inner:
      allOf:
      - $ref: '#/components/schemas/Subnet'
      - xml:
          name: Subnet
    CacheSubnetGroups_inner:
      allOf:
      - $ref: '#/components/schemas/CacheSubnetGroup'
      - xml:
          name: CacheSubnetGroup
    ReplicationGroup_GlobalReplicationGroupInfo:
      allOf:
      - $ref: '#/components/schemas/GlobalReplicationGroupInfo'
      - description: The name of the Global datastore and role of this replication
          group in the Global datastore.
    ReplicationGroup_PendingModifiedValues:
      allOf:
      - $ref: '#/components/schemas/ReplicationGroupPendingModifiedValues'
      - description: "A group of settings to be applied to the replication group,\
          \ either immediately or during the next maintenance window."
    ReplicationGroup_ConfigurationEndpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: The configuration endpoint for this replication group. Use the
          configuration endpoint to connect to this replication group.
    CreateUserMessage_AuthenticationMode:
      allOf:
      - $ref: '#/components/schemas/AuthenticationMode'
      - description: Specifies how to authenticate the user.
    GlobalReplicationGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/GlobalReplicationGroup'
      - xml:
          name: GlobalReplicationGroup
    SnapshotList_inner:
      allOf:
      - $ref: '#/components/schemas/Snapshot'
      - xml:
          name: Snapshot
    DescribeUpdateActionsMessage_ServiceUpdateTimeRange:
      allOf:
      - $ref: '#/components/schemas/TimeRangeFilter'
      - description: The range of time specified to search for service updates that
          are in available status
    DestinationDetails_CloudWatchLogsDetails:
      allOf:
      - $ref: '#/components/schemas/CloudWatchLogsDestinationDetails'
      - description: The configuration details of the CloudWatch Logs destination.
    DestinationDetails_KinesisFirehoseDetails:
      allOf:
      - $ref: '#/components/schemas/KinesisFirehoseDestinationDetails'
      - description: The configuration details of the Kinesis Data Firehose destination.
    EventList_inner:
      allOf:
      - $ref: '#/components/schemas/Event'
      - xml:
          name: Event
    GlobalNodeGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/GlobalNodeGroup'
      - xml:
          name: GlobalNodeGroup
    GlobalReplicationGroupMemberList_inner:
      allOf:
      - $ref: '#/components/schemas/GlobalReplicationGroupMember'
      - xml:
          name: GlobalReplicationGroupMember
    NodeGroupMemberList_inner:
      allOf:
      - $ref: '#/components/schemas/NodeGroupMember'
      - xml:
          name: NodeGroupMember
    NodeGroup_PrimaryEndpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: The endpoint of the primary node in this node group (shard).
    NodeGroup_ReaderEndpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: The endpoint of the replica nodes in this node group (shard).
    NodeGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/NodeGroup'
      - xml:
          name: NodeGroup
    NodeGroupMember_ReadEndpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: The information required for client programs to connect to a
          node for read operations. The read endpoint is only applicable on Redis
          (cluster mode disabled) clusters.
    NodeGroupMemberUpdateStatusList_inner:
      allOf:
      - $ref: '#/components/schemas/NodeGroupMemberUpdateStatus'
      - xml:
          name: NodeGroupMemberUpdateStatus
    NodeGroupUpdateStatusList_inner:
      allOf:
      - $ref: '#/components/schemas/NodeGroupUpdateStatus'
      - xml:
          name: NodeGroupUpdateStatus
    NodeSnapshot_NodeGroupConfiguration:
      allOf:
      - $ref: '#/components/schemas/NodeGroupConfiguration'
      - description: The configuration for the source node group (shard).
    NodeSnapshotList_inner:
      allOf:
      - $ref: '#/components/schemas/NodeSnapshot'
      - xml:
          name: NodeSnapshot
    ProcessedUpdateActionList_inner:
      allOf:
      - $ref: '#/components/schemas/ProcessedUpdateAction'
      - xml:
          name: ProcessedUpdateAction
    RecurringChargeList_inner:
      allOf:
      - $ref: '#/components/schemas/RecurringCharge'
      - xml:
          name: RecurringCharge
    ReplicationGroupPendingModifiedValues_Resharding:
      allOf:
      - $ref: '#/components/schemas/ReshardingStatus'
      - description: The status of an online resharding operation.
    ReplicationGroupPendingModifiedValues_UserGroups:
      allOf:
      - $ref: '#/components/schemas/UserGroupsUpdateStatus'
      - description: The user group being modified.
    ReplicationGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/ReplicationGroup'
      - xml:
          name: ReplicationGroup
    ReshardingStatus_SlotMigration:
      allOf:
      - $ref: '#/components/schemas/SlotMigration'
      - description: Represents the progress of an online resharding operation.
    ReservedCacheNodeList_inner:
      allOf:
      - $ref: '#/components/schemas/ReservedCacheNode'
      - xml:
          name: ReservedCacheNode
    ReservedCacheNodesOfferingList_inner:
      allOf:
      - $ref: '#/components/schemas/ReservedCacheNodesOffering'
      - xml:
          name: ReservedCacheNodesOffering
    ServiceUpdateList_inner:
      allOf:
      - $ref: '#/components/schemas/ServiceUpdate'
      - xml:
          name: ServiceUpdate
    Subnet_SubnetAvailabilityZone:
      allOf:
      - $ref: '#/components/schemas/AvailabilityZone'
      - description: The Availability Zone associated with the subnet.
    Subnet_SubnetOutpost:
      allOf:
      - $ref: '#/components/schemas/SubnetOutpost'
      - description: The outpost ARN of the subnet.
    UnprocessedUpdateActionList_inner:
      allOf:
      - $ref: '#/components/schemas/UnprocessedUpdateAction'
      - xml:
          name: UnprocessedUpdateAction
    UpdateActionList_inner:
      allOf:
      - $ref: '#/components/schemas/UpdateAction'
      - xml:
          name: UpdateAction
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

