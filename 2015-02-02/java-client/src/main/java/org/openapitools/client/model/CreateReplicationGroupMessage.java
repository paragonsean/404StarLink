/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IpDiscovery;
import org.openapitools.client.model.NetworkType;
import org.openapitools.client.model.TransitEncryptionMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the input of a &lt;code&gt;CreateReplicationGroup&lt;/code&gt; operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:56:10.865581-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateReplicationGroupMessage {
  public static final String SERIALIZED_NAME_REPLICATION_GROUP_ID = "ReplicationGroupId";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_ID)
  private String replicationGroupId;

  public static final String SERIALIZED_NAME_REPLICATION_GROUP_DESCRIPTION = "ReplicationGroupDescription";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_DESCRIPTION)
  private String replicationGroupDescription;

  public static final String SERIALIZED_NAME_GLOBAL_REPLICATION_GROUP_ID = "GlobalReplicationGroupId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_REPLICATION_GROUP_ID)
  private String globalReplicationGroupId;

  public static final String SERIALIZED_NAME_PRIMARY_CLUSTER_ID = "PrimaryClusterId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CLUSTER_ID)
  private String primaryClusterId;

  public static final String SERIALIZED_NAME_AUTOMATIC_FAILOVER_ENABLED = "AutomaticFailoverEnabled";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_FAILOVER_ENABLED)
  private Boolean automaticFailoverEnabled;

  public static final String SERIALIZED_NAME_MULTI_A_Z_ENABLED = "MultiAZEnabled";
  @SerializedName(SERIALIZED_NAME_MULTI_A_Z_ENABLED)
  private Boolean multiAZEnabled;

  public static final String SERIALIZED_NAME_NUM_CACHE_CLUSTERS = "NumCacheClusters";
  @SerializedName(SERIALIZED_NAME_NUM_CACHE_CLUSTERS)
  private Integer numCacheClusters;

  public static final String SERIALIZED_NAME_PREFERRED_CACHE_CLUSTER_A_ZS = "PreferredCacheClusterAZs";
  @SerializedName(SERIALIZED_NAME_PREFERRED_CACHE_CLUSTER_A_ZS)
  private List preferredCacheClusterAZs;

  public static final String SERIALIZED_NAME_NUM_NODE_GROUPS = "NumNodeGroups";
  @SerializedName(SERIALIZED_NAME_NUM_NODE_GROUPS)
  private Integer numNodeGroups;

  public static final String SERIALIZED_NAME_REPLICAS_PER_NODE_GROUP = "ReplicasPerNodeGroup";
  @SerializedName(SERIALIZED_NAME_REPLICAS_PER_NODE_GROUP)
  private Integer replicasPerNodeGroup;

  public static final String SERIALIZED_NAME_NODE_GROUP_CONFIGURATION = "NodeGroupConfiguration";
  @SerializedName(SERIALIZED_NAME_NODE_GROUP_CONFIGURATION)
  private List nodeGroupConfiguration;

  public static final String SERIALIZED_NAME_CACHE_NODE_TYPE = "CacheNodeType";
  @SerializedName(SERIALIZED_NAME_CACHE_NODE_TYPE)
  private String cacheNodeType;

  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private String engine;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_CACHE_PARAMETER_GROUP_NAME = "CacheParameterGroupName";
  @SerializedName(SERIALIZED_NAME_CACHE_PARAMETER_GROUP_NAME)
  private String cacheParameterGroupName;

  public static final String SERIALIZED_NAME_CACHE_SUBNET_GROUP_NAME = "CacheSubnetGroupName";
  @SerializedName(SERIALIZED_NAME_CACHE_SUBNET_GROUP_NAME)
  private String cacheSubnetGroupName;

  public static final String SERIALIZED_NAME_CACHE_SECURITY_GROUP_NAMES = "CacheSecurityGroupNames";
  @SerializedName(SERIALIZED_NAME_CACHE_SECURITY_GROUP_NAMES)
  private List cacheSecurityGroupNames;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_SNAPSHOT_ARNS = "SnapshotArns";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_ARNS)
  private List snapshotArns;

  public static final String SERIALIZED_NAME_SNAPSHOT_NAME = "SnapshotName";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_NAME)
  private String snapshotName;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_NOTIFICATION_TOPIC_ARN = "NotificationTopicArn";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TOPIC_ARN)
  private String notificationTopicArn;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT = "SnapshotRetentionLimit";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT)
  private Integer snapshotRetentionLimit;

  public static final String SERIALIZED_NAME_SNAPSHOT_WINDOW = "SnapshotWindow";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_WINDOW)
  private String snapshotWindow;

  public static final String SERIALIZED_NAME_AUTH_TOKEN = "AuthToken";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN)
  private String authToken;

  public static final String SERIALIZED_NAME_TRANSIT_ENCRYPTION_ENABLED = "TransitEncryptionEnabled";
  @SerializedName(SERIALIZED_NAME_TRANSIT_ENCRYPTION_ENABLED)
  private Boolean transitEncryptionEnabled;

  public static final String SERIALIZED_NAME_AT_REST_ENCRYPTION_ENABLED = "AtRestEncryptionEnabled";
  @SerializedName(SERIALIZED_NAME_AT_REST_ENCRYPTION_ENABLED)
  private Boolean atRestEncryptionEnabled;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_USER_GROUP_IDS = "UserGroupIds";
  @SerializedName(SERIALIZED_NAME_USER_GROUP_IDS)
  private List userGroupIds;

  public static final String SERIALIZED_NAME_LOG_DELIVERY_CONFIGURATIONS = "LogDeliveryConfigurations";
  @SerializedName(SERIALIZED_NAME_LOG_DELIVERY_CONFIGURATIONS)
  private List logDeliveryConfigurations;

  public static final String SERIALIZED_NAME_DATA_TIERING_ENABLED = "DataTieringEnabled";
  @SerializedName(SERIALIZED_NAME_DATA_TIERING_ENABLED)
  private Boolean dataTieringEnabled;

  public static final String SERIALIZED_NAME_NETWORK_TYPE = "NetworkType";
  @SerializedName(SERIALIZED_NAME_NETWORK_TYPE)
  private NetworkType networkType;

  public static final String SERIALIZED_NAME_IP_DISCOVERY = "IpDiscovery";
  @SerializedName(SERIALIZED_NAME_IP_DISCOVERY)
  private IpDiscovery ipDiscovery;

  public static final String SERIALIZED_NAME_TRANSIT_ENCRYPTION_MODE = "TransitEncryptionMode";
  @SerializedName(SERIALIZED_NAME_TRANSIT_ENCRYPTION_MODE)
  private TransitEncryptionMode transitEncryptionMode;

  public CreateReplicationGroupMessage() {
  }

  public CreateReplicationGroupMessage replicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
    return this;
  }

  /**
   * Get replicationGroupId
   * @return replicationGroupId
   */
  @javax.annotation.Nonnull
  public String getReplicationGroupId() {
    return replicationGroupId;
  }

  public void setReplicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
  }


  public CreateReplicationGroupMessage replicationGroupDescription(String replicationGroupDescription) {
    this.replicationGroupDescription = replicationGroupDescription;
    return this;
  }

  /**
   * Get replicationGroupDescription
   * @return replicationGroupDescription
   */
  @javax.annotation.Nonnull
  public String getReplicationGroupDescription() {
    return replicationGroupDescription;
  }

  public void setReplicationGroupDescription(String replicationGroupDescription) {
    this.replicationGroupDescription = replicationGroupDescription;
  }


  public CreateReplicationGroupMessage globalReplicationGroupId(String globalReplicationGroupId) {
    this.globalReplicationGroupId = globalReplicationGroupId;
    return this;
  }

  /**
   * Get globalReplicationGroupId
   * @return globalReplicationGroupId
   */
  @javax.annotation.Nullable
  public String getGlobalReplicationGroupId() {
    return globalReplicationGroupId;
  }

  public void setGlobalReplicationGroupId(String globalReplicationGroupId) {
    this.globalReplicationGroupId = globalReplicationGroupId;
  }


  public CreateReplicationGroupMessage primaryClusterId(String primaryClusterId) {
    this.primaryClusterId = primaryClusterId;
    return this;
  }

  /**
   * Get primaryClusterId
   * @return primaryClusterId
   */
  @javax.annotation.Nullable
  public String getPrimaryClusterId() {
    return primaryClusterId;
  }

  public void setPrimaryClusterId(String primaryClusterId) {
    this.primaryClusterId = primaryClusterId;
  }


  public CreateReplicationGroupMessage automaticFailoverEnabled(Boolean automaticFailoverEnabled) {
    this.automaticFailoverEnabled = automaticFailoverEnabled;
    return this;
  }

  /**
   * Get automaticFailoverEnabled
   * @return automaticFailoverEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAutomaticFailoverEnabled() {
    return automaticFailoverEnabled;
  }

  public void setAutomaticFailoverEnabled(Boolean automaticFailoverEnabled) {
    this.automaticFailoverEnabled = automaticFailoverEnabled;
  }


  public CreateReplicationGroupMessage multiAZEnabled(Boolean multiAZEnabled) {
    this.multiAZEnabled = multiAZEnabled;
    return this;
  }

  /**
   * Get multiAZEnabled
   * @return multiAZEnabled
   */
  @javax.annotation.Nullable
  public Boolean getMultiAZEnabled() {
    return multiAZEnabled;
  }

  public void setMultiAZEnabled(Boolean multiAZEnabled) {
    this.multiAZEnabled = multiAZEnabled;
  }


  public CreateReplicationGroupMessage numCacheClusters(Integer numCacheClusters) {
    this.numCacheClusters = numCacheClusters;
    return this;
  }

  /**
   * Get numCacheClusters
   * @return numCacheClusters
   */
  @javax.annotation.Nullable
  public Integer getNumCacheClusters() {
    return numCacheClusters;
  }

  public void setNumCacheClusters(Integer numCacheClusters) {
    this.numCacheClusters = numCacheClusters;
  }


  public CreateReplicationGroupMessage preferredCacheClusterAZs(List preferredCacheClusterAZs) {
    this.preferredCacheClusterAZs = preferredCacheClusterAZs;
    return this;
  }

  /**
   * Get preferredCacheClusterAZs
   * @return preferredCacheClusterAZs
   */
  @javax.annotation.Nullable
  public List getPreferredCacheClusterAZs() {
    return preferredCacheClusterAZs;
  }

  public void setPreferredCacheClusterAZs(List preferredCacheClusterAZs) {
    this.preferredCacheClusterAZs = preferredCacheClusterAZs;
  }


  public CreateReplicationGroupMessage numNodeGroups(Integer numNodeGroups) {
    this.numNodeGroups = numNodeGroups;
    return this;
  }

  /**
   * Get numNodeGroups
   * @return numNodeGroups
   */
  @javax.annotation.Nullable
  public Integer getNumNodeGroups() {
    return numNodeGroups;
  }

  public void setNumNodeGroups(Integer numNodeGroups) {
    this.numNodeGroups = numNodeGroups;
  }


  public CreateReplicationGroupMessage replicasPerNodeGroup(Integer replicasPerNodeGroup) {
    this.replicasPerNodeGroup = replicasPerNodeGroup;
    return this;
  }

  /**
   * Get replicasPerNodeGroup
   * @return replicasPerNodeGroup
   */
  @javax.annotation.Nullable
  public Integer getReplicasPerNodeGroup() {
    return replicasPerNodeGroup;
  }

  public void setReplicasPerNodeGroup(Integer replicasPerNodeGroup) {
    this.replicasPerNodeGroup = replicasPerNodeGroup;
  }


  public CreateReplicationGroupMessage nodeGroupConfiguration(List nodeGroupConfiguration) {
    this.nodeGroupConfiguration = nodeGroupConfiguration;
    return this;
  }

  /**
   * Get nodeGroupConfiguration
   * @return nodeGroupConfiguration
   */
  @javax.annotation.Nullable
  public List getNodeGroupConfiguration() {
    return nodeGroupConfiguration;
  }

  public void setNodeGroupConfiguration(List nodeGroupConfiguration) {
    this.nodeGroupConfiguration = nodeGroupConfiguration;
  }


  public CreateReplicationGroupMessage cacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
    return this;
  }

  /**
   * Get cacheNodeType
   * @return cacheNodeType
   */
  @javax.annotation.Nullable
  public String getCacheNodeType() {
    return cacheNodeType;
  }

  public void setCacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
  }


  public CreateReplicationGroupMessage engine(String engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }


  public CreateReplicationGroupMessage engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public CreateReplicationGroupMessage cacheParameterGroupName(String cacheParameterGroupName) {
    this.cacheParameterGroupName = cacheParameterGroupName;
    return this;
  }

  /**
   * Get cacheParameterGroupName
   * @return cacheParameterGroupName
   */
  @javax.annotation.Nullable
  public String getCacheParameterGroupName() {
    return cacheParameterGroupName;
  }

  public void setCacheParameterGroupName(String cacheParameterGroupName) {
    this.cacheParameterGroupName = cacheParameterGroupName;
  }


  public CreateReplicationGroupMessage cacheSubnetGroupName(String cacheSubnetGroupName) {
    this.cacheSubnetGroupName = cacheSubnetGroupName;
    return this;
  }

  /**
   * Get cacheSubnetGroupName
   * @return cacheSubnetGroupName
   */
  @javax.annotation.Nullable
  public String getCacheSubnetGroupName() {
    return cacheSubnetGroupName;
  }

  public void setCacheSubnetGroupName(String cacheSubnetGroupName) {
    this.cacheSubnetGroupName = cacheSubnetGroupName;
  }


  public CreateReplicationGroupMessage cacheSecurityGroupNames(List cacheSecurityGroupNames) {
    this.cacheSecurityGroupNames = cacheSecurityGroupNames;
    return this;
  }

  /**
   * Get cacheSecurityGroupNames
   * @return cacheSecurityGroupNames
   */
  @javax.annotation.Nullable
  public List getCacheSecurityGroupNames() {
    return cacheSecurityGroupNames;
  }

  public void setCacheSecurityGroupNames(List cacheSecurityGroupNames) {
    this.cacheSecurityGroupNames = cacheSecurityGroupNames;
  }


  public CreateReplicationGroupMessage securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public CreateReplicationGroupMessage tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateReplicationGroupMessage snapshotArns(List snapshotArns) {
    this.snapshotArns = snapshotArns;
    return this;
  }

  /**
   * Get snapshotArns
   * @return snapshotArns
   */
  @javax.annotation.Nullable
  public List getSnapshotArns() {
    return snapshotArns;
  }

  public void setSnapshotArns(List snapshotArns) {
    this.snapshotArns = snapshotArns;
  }


  public CreateReplicationGroupMessage snapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
    return this;
  }

  /**
   * Get snapshotName
   * @return snapshotName
   */
  @javax.annotation.Nullable
  public String getSnapshotName() {
    return snapshotName;
  }

  public void setSnapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
  }


  public CreateReplicationGroupMessage preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public CreateReplicationGroupMessage port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public CreateReplicationGroupMessage notificationTopicArn(String notificationTopicArn) {
    this.notificationTopicArn = notificationTopicArn;
    return this;
  }

  /**
   * Get notificationTopicArn
   * @return notificationTopicArn
   */
  @javax.annotation.Nullable
  public String getNotificationTopicArn() {
    return notificationTopicArn;
  }

  public void setNotificationTopicArn(String notificationTopicArn) {
    this.notificationTopicArn = notificationTopicArn;
  }


  public CreateReplicationGroupMessage autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public CreateReplicationGroupMessage snapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
    return this;
  }

  /**
   * Get snapshotRetentionLimit
   * @return snapshotRetentionLimit
   */
  @javax.annotation.Nullable
  public Integer getSnapshotRetentionLimit() {
    return snapshotRetentionLimit;
  }

  public void setSnapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
  }


  public CreateReplicationGroupMessage snapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
    return this;
  }

  /**
   * Get snapshotWindow
   * @return snapshotWindow
   */
  @javax.annotation.Nullable
  public String getSnapshotWindow() {
    return snapshotWindow;
  }

  public void setSnapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
  }


  public CreateReplicationGroupMessage authToken(String authToken) {
    this.authToken = authToken;
    return this;
  }

  /**
   * Get authToken
   * @return authToken
   */
  @javax.annotation.Nullable
  public String getAuthToken() {
    return authToken;
  }

  public void setAuthToken(String authToken) {
    this.authToken = authToken;
  }


  public CreateReplicationGroupMessage transitEncryptionEnabled(Boolean transitEncryptionEnabled) {
    this.transitEncryptionEnabled = transitEncryptionEnabled;
    return this;
  }

  /**
   * Get transitEncryptionEnabled
   * @return transitEncryptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTransitEncryptionEnabled() {
    return transitEncryptionEnabled;
  }

  public void setTransitEncryptionEnabled(Boolean transitEncryptionEnabled) {
    this.transitEncryptionEnabled = transitEncryptionEnabled;
  }


  public CreateReplicationGroupMessage atRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
    this.atRestEncryptionEnabled = atRestEncryptionEnabled;
    return this;
  }

  /**
   * Get atRestEncryptionEnabled
   * @return atRestEncryptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAtRestEncryptionEnabled() {
    return atRestEncryptionEnabled;
  }

  public void setAtRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
    this.atRestEncryptionEnabled = atRestEncryptionEnabled;
  }


  public CreateReplicationGroupMessage kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public CreateReplicationGroupMessage userGroupIds(List userGroupIds) {
    this.userGroupIds = userGroupIds;
    return this;
  }

  /**
   * Get userGroupIds
   * @return userGroupIds
   */
  @javax.annotation.Nullable
  public List getUserGroupIds() {
    return userGroupIds;
  }

  public void setUserGroupIds(List userGroupIds) {
    this.userGroupIds = userGroupIds;
  }


  public CreateReplicationGroupMessage logDeliveryConfigurations(List logDeliveryConfigurations) {
    this.logDeliveryConfigurations = logDeliveryConfigurations;
    return this;
  }

  /**
   * Get logDeliveryConfigurations
   * @return logDeliveryConfigurations
   */
  @javax.annotation.Nullable
  public List getLogDeliveryConfigurations() {
    return logDeliveryConfigurations;
  }

  public void setLogDeliveryConfigurations(List logDeliveryConfigurations) {
    this.logDeliveryConfigurations = logDeliveryConfigurations;
  }


  public CreateReplicationGroupMessage dataTieringEnabled(Boolean dataTieringEnabled) {
    this.dataTieringEnabled = dataTieringEnabled;
    return this;
  }

  /**
   * Get dataTieringEnabled
   * @return dataTieringEnabled
   */
  @javax.annotation.Nullable
  public Boolean getDataTieringEnabled() {
    return dataTieringEnabled;
  }

  public void setDataTieringEnabled(Boolean dataTieringEnabled) {
    this.dataTieringEnabled = dataTieringEnabled;
  }


  public CreateReplicationGroupMessage networkType(NetworkType networkType) {
    this.networkType = networkType;
    return this;
  }

  /**
   * Get networkType
   * @return networkType
   */
  @javax.annotation.Nullable
  public NetworkType getNetworkType() {
    return networkType;
  }

  public void setNetworkType(NetworkType networkType) {
    this.networkType = networkType;
  }


  public CreateReplicationGroupMessage ipDiscovery(IpDiscovery ipDiscovery) {
    this.ipDiscovery = ipDiscovery;
    return this;
  }

  /**
   * Get ipDiscovery
   * @return ipDiscovery
   */
  @javax.annotation.Nullable
  public IpDiscovery getIpDiscovery() {
    return ipDiscovery;
  }

  public void setIpDiscovery(IpDiscovery ipDiscovery) {
    this.ipDiscovery = ipDiscovery;
  }


  public CreateReplicationGroupMessage transitEncryptionMode(TransitEncryptionMode transitEncryptionMode) {
    this.transitEncryptionMode = transitEncryptionMode;
    return this;
  }

  /**
   * Get transitEncryptionMode
   * @return transitEncryptionMode
   */
  @javax.annotation.Nullable
  public TransitEncryptionMode getTransitEncryptionMode() {
    return transitEncryptionMode;
  }

  public void setTransitEncryptionMode(TransitEncryptionMode transitEncryptionMode) {
    this.transitEncryptionMode = transitEncryptionMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateReplicationGroupMessage createReplicationGroupMessage = (CreateReplicationGroupMessage) o;
    return Objects.equals(this.replicationGroupId, createReplicationGroupMessage.replicationGroupId) &&
        Objects.equals(this.replicationGroupDescription, createReplicationGroupMessage.replicationGroupDescription) &&
        Objects.equals(this.globalReplicationGroupId, createReplicationGroupMessage.globalReplicationGroupId) &&
        Objects.equals(this.primaryClusterId, createReplicationGroupMessage.primaryClusterId) &&
        Objects.equals(this.automaticFailoverEnabled, createReplicationGroupMessage.automaticFailoverEnabled) &&
        Objects.equals(this.multiAZEnabled, createReplicationGroupMessage.multiAZEnabled) &&
        Objects.equals(this.numCacheClusters, createReplicationGroupMessage.numCacheClusters) &&
        Objects.equals(this.preferredCacheClusterAZs, createReplicationGroupMessage.preferredCacheClusterAZs) &&
        Objects.equals(this.numNodeGroups, createReplicationGroupMessage.numNodeGroups) &&
        Objects.equals(this.replicasPerNodeGroup, createReplicationGroupMessage.replicasPerNodeGroup) &&
        Objects.equals(this.nodeGroupConfiguration, createReplicationGroupMessage.nodeGroupConfiguration) &&
        Objects.equals(this.cacheNodeType, createReplicationGroupMessage.cacheNodeType) &&
        Objects.equals(this.engine, createReplicationGroupMessage.engine) &&
        Objects.equals(this.engineVersion, createReplicationGroupMessage.engineVersion) &&
        Objects.equals(this.cacheParameterGroupName, createReplicationGroupMessage.cacheParameterGroupName) &&
        Objects.equals(this.cacheSubnetGroupName, createReplicationGroupMessage.cacheSubnetGroupName) &&
        Objects.equals(this.cacheSecurityGroupNames, createReplicationGroupMessage.cacheSecurityGroupNames) &&
        Objects.equals(this.securityGroupIds, createReplicationGroupMessage.securityGroupIds) &&
        Objects.equals(this.tags, createReplicationGroupMessage.tags) &&
        Objects.equals(this.snapshotArns, createReplicationGroupMessage.snapshotArns) &&
        Objects.equals(this.snapshotName, createReplicationGroupMessage.snapshotName) &&
        Objects.equals(this.preferredMaintenanceWindow, createReplicationGroupMessage.preferredMaintenanceWindow) &&
        Objects.equals(this.port, createReplicationGroupMessage.port) &&
        Objects.equals(this.notificationTopicArn, createReplicationGroupMessage.notificationTopicArn) &&
        Objects.equals(this.autoMinorVersionUpgrade, createReplicationGroupMessage.autoMinorVersionUpgrade) &&
        Objects.equals(this.snapshotRetentionLimit, createReplicationGroupMessage.snapshotRetentionLimit) &&
        Objects.equals(this.snapshotWindow, createReplicationGroupMessage.snapshotWindow) &&
        Objects.equals(this.authToken, createReplicationGroupMessage.authToken) &&
        Objects.equals(this.transitEncryptionEnabled, createReplicationGroupMessage.transitEncryptionEnabled) &&
        Objects.equals(this.atRestEncryptionEnabled, createReplicationGroupMessage.atRestEncryptionEnabled) &&
        Objects.equals(this.kmsKeyId, createReplicationGroupMessage.kmsKeyId) &&
        Objects.equals(this.userGroupIds, createReplicationGroupMessage.userGroupIds) &&
        Objects.equals(this.logDeliveryConfigurations, createReplicationGroupMessage.logDeliveryConfigurations) &&
        Objects.equals(this.dataTieringEnabled, createReplicationGroupMessage.dataTieringEnabled) &&
        Objects.equals(this.networkType, createReplicationGroupMessage.networkType) &&
        Objects.equals(this.ipDiscovery, createReplicationGroupMessage.ipDiscovery) &&
        Objects.equals(this.transitEncryptionMode, createReplicationGroupMessage.transitEncryptionMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(replicationGroupId, replicationGroupDescription, globalReplicationGroupId, primaryClusterId, automaticFailoverEnabled, multiAZEnabled, numCacheClusters, preferredCacheClusterAZs, numNodeGroups, replicasPerNodeGroup, nodeGroupConfiguration, cacheNodeType, engine, engineVersion, cacheParameterGroupName, cacheSubnetGroupName, cacheSecurityGroupNames, securityGroupIds, tags, snapshotArns, snapshotName, preferredMaintenanceWindow, port, notificationTopicArn, autoMinorVersionUpgrade, snapshotRetentionLimit, snapshotWindow, authToken, transitEncryptionEnabled, atRestEncryptionEnabled, kmsKeyId, userGroupIds, logDeliveryConfigurations, dataTieringEnabled, networkType, ipDiscovery, transitEncryptionMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateReplicationGroupMessage {\n");
    sb.append("    replicationGroupId: ").append(toIndentedString(replicationGroupId)).append("\n");
    sb.append("    replicationGroupDescription: ").append(toIndentedString(replicationGroupDescription)).append("\n");
    sb.append("    globalReplicationGroupId: ").append(toIndentedString(globalReplicationGroupId)).append("\n");
    sb.append("    primaryClusterId: ").append(toIndentedString(primaryClusterId)).append("\n");
    sb.append("    automaticFailoverEnabled: ").append(toIndentedString(automaticFailoverEnabled)).append("\n");
    sb.append("    multiAZEnabled: ").append(toIndentedString(multiAZEnabled)).append("\n");
    sb.append("    numCacheClusters: ").append(toIndentedString(numCacheClusters)).append("\n");
    sb.append("    preferredCacheClusterAZs: ").append(toIndentedString(preferredCacheClusterAZs)).append("\n");
    sb.append("    numNodeGroups: ").append(toIndentedString(numNodeGroups)).append("\n");
    sb.append("    replicasPerNodeGroup: ").append(toIndentedString(replicasPerNodeGroup)).append("\n");
    sb.append("    nodeGroupConfiguration: ").append(toIndentedString(nodeGroupConfiguration)).append("\n");
    sb.append("    cacheNodeType: ").append(toIndentedString(cacheNodeType)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    cacheParameterGroupName: ").append(toIndentedString(cacheParameterGroupName)).append("\n");
    sb.append("    cacheSubnetGroupName: ").append(toIndentedString(cacheSubnetGroupName)).append("\n");
    sb.append("    cacheSecurityGroupNames: ").append(toIndentedString(cacheSecurityGroupNames)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    snapshotArns: ").append(toIndentedString(snapshotArns)).append("\n");
    sb.append("    snapshotName: ").append(toIndentedString(snapshotName)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    notificationTopicArn: ").append(toIndentedString(notificationTopicArn)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    snapshotRetentionLimit: ").append(toIndentedString(snapshotRetentionLimit)).append("\n");
    sb.append("    snapshotWindow: ").append(toIndentedString(snapshotWindow)).append("\n");
    sb.append("    authToken: ").append(toIndentedString(authToken)).append("\n");
    sb.append("    transitEncryptionEnabled: ").append(toIndentedString(transitEncryptionEnabled)).append("\n");
    sb.append("    atRestEncryptionEnabled: ").append(toIndentedString(atRestEncryptionEnabled)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    userGroupIds: ").append(toIndentedString(userGroupIds)).append("\n");
    sb.append("    logDeliveryConfigurations: ").append(toIndentedString(logDeliveryConfigurations)).append("\n");
    sb.append("    dataTieringEnabled: ").append(toIndentedString(dataTieringEnabled)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    ipDiscovery: ").append(toIndentedString(ipDiscovery)).append("\n");
    sb.append("    transitEncryptionMode: ").append(toIndentedString(transitEncryptionMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ReplicationGroupId");
    openapiFields.add("ReplicationGroupDescription");
    openapiFields.add("GlobalReplicationGroupId");
    openapiFields.add("PrimaryClusterId");
    openapiFields.add("AutomaticFailoverEnabled");
    openapiFields.add("MultiAZEnabled");
    openapiFields.add("NumCacheClusters");
    openapiFields.add("PreferredCacheClusterAZs");
    openapiFields.add("NumNodeGroups");
    openapiFields.add("ReplicasPerNodeGroup");
    openapiFields.add("NodeGroupConfiguration");
    openapiFields.add("CacheNodeType");
    openapiFields.add("Engine");
    openapiFields.add("EngineVersion");
    openapiFields.add("CacheParameterGroupName");
    openapiFields.add("CacheSubnetGroupName");
    openapiFields.add("CacheSecurityGroupNames");
    openapiFields.add("SecurityGroupIds");
    openapiFields.add("Tags");
    openapiFields.add("SnapshotArns");
    openapiFields.add("SnapshotName");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("Port");
    openapiFields.add("NotificationTopicArn");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("SnapshotRetentionLimit");
    openapiFields.add("SnapshotWindow");
    openapiFields.add("AuthToken");
    openapiFields.add("TransitEncryptionEnabled");
    openapiFields.add("AtRestEncryptionEnabled");
    openapiFields.add("KmsKeyId");
    openapiFields.add("UserGroupIds");
    openapiFields.add("LogDeliveryConfigurations");
    openapiFields.add("DataTieringEnabled");
    openapiFields.add("NetworkType");
    openapiFields.add("IpDiscovery");
    openapiFields.add("TransitEncryptionMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ReplicationGroupId");
    openapiRequiredFields.add("ReplicationGroupDescription");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateReplicationGroupMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateReplicationGroupMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateReplicationGroupMessage is not found in the empty JSON string", CreateReplicationGroupMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateReplicationGroupMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateReplicationGroupMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateReplicationGroupMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ReplicationGroupId`
      String.validateJsonElement(jsonObj.get("ReplicationGroupId"));
      // validate the required field `ReplicationGroupDescription`
      String.validateJsonElement(jsonObj.get("ReplicationGroupDescription"));
      // validate the optional field `GlobalReplicationGroupId`
      if (jsonObj.get("GlobalReplicationGroupId") != null && !jsonObj.get("GlobalReplicationGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GlobalReplicationGroupId"));
      }
      // validate the optional field `PrimaryClusterId`
      if (jsonObj.get("PrimaryClusterId") != null && !jsonObj.get("PrimaryClusterId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PrimaryClusterId"));
      }
      // validate the optional field `AutomaticFailoverEnabled`
      if (jsonObj.get("AutomaticFailoverEnabled") != null && !jsonObj.get("AutomaticFailoverEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutomaticFailoverEnabled"));
      }
      // validate the optional field `MultiAZEnabled`
      if (jsonObj.get("MultiAZEnabled") != null && !jsonObj.get("MultiAZEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("MultiAZEnabled"));
      }
      // validate the optional field `NumCacheClusters`
      if (jsonObj.get("NumCacheClusters") != null && !jsonObj.get("NumCacheClusters").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumCacheClusters"));
      }
      // validate the optional field `PreferredCacheClusterAZs`
      if (jsonObj.get("PreferredCacheClusterAZs") != null && !jsonObj.get("PreferredCacheClusterAZs").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PreferredCacheClusterAZs"));
      }
      // validate the optional field `NumNodeGroups`
      if (jsonObj.get("NumNodeGroups") != null && !jsonObj.get("NumNodeGroups").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumNodeGroups"));
      }
      // validate the optional field `ReplicasPerNodeGroup`
      if (jsonObj.get("ReplicasPerNodeGroup") != null && !jsonObj.get("ReplicasPerNodeGroup").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ReplicasPerNodeGroup"));
      }
      // validate the optional field `NodeGroupConfiguration`
      if (jsonObj.get("NodeGroupConfiguration") != null && !jsonObj.get("NodeGroupConfiguration").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NodeGroupConfiguration"));
      }
      // validate the optional field `CacheNodeType`
      if (jsonObj.get("CacheNodeType") != null && !jsonObj.get("CacheNodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheNodeType"));
      }
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Engine"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `CacheParameterGroupName`
      if (jsonObj.get("CacheParameterGroupName") != null && !jsonObj.get("CacheParameterGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheParameterGroupName"));
      }
      // validate the optional field `CacheSubnetGroupName`
      if (jsonObj.get("CacheSubnetGroupName") != null && !jsonObj.get("CacheSubnetGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheSubnetGroupName"));
      }
      // validate the optional field `CacheSecurityGroupNames`
      if (jsonObj.get("CacheSecurityGroupNames") != null && !jsonObj.get("CacheSecurityGroupNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CacheSecurityGroupNames"));
      }
      // validate the optional field `SecurityGroupIds`
      if (jsonObj.get("SecurityGroupIds") != null && !jsonObj.get("SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroupIds"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `SnapshotArns`
      if (jsonObj.get("SnapshotArns") != null && !jsonObj.get("SnapshotArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SnapshotArns"));
      }
      // validate the optional field `SnapshotName`
      if (jsonObj.get("SnapshotName") != null && !jsonObj.get("SnapshotName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotName"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `NotificationTopicArn`
      if (jsonObj.get("NotificationTopicArn") != null && !jsonObj.get("NotificationTopicArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotificationTopicArn"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `SnapshotRetentionLimit`
      if (jsonObj.get("SnapshotRetentionLimit") != null && !jsonObj.get("SnapshotRetentionLimit").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SnapshotRetentionLimit"));
      }
      // validate the optional field `SnapshotWindow`
      if (jsonObj.get("SnapshotWindow") != null && !jsonObj.get("SnapshotWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotWindow"));
      }
      // validate the optional field `AuthToken`
      if (jsonObj.get("AuthToken") != null && !jsonObj.get("AuthToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AuthToken"));
      }
      // validate the optional field `TransitEncryptionEnabled`
      if (jsonObj.get("TransitEncryptionEnabled") != null && !jsonObj.get("TransitEncryptionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("TransitEncryptionEnabled"));
      }
      // validate the optional field `AtRestEncryptionEnabled`
      if (jsonObj.get("AtRestEncryptionEnabled") != null && !jsonObj.get("AtRestEncryptionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AtRestEncryptionEnabled"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `UserGroupIds`
      if (jsonObj.get("UserGroupIds") != null && !jsonObj.get("UserGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("UserGroupIds"));
      }
      // validate the optional field `LogDeliveryConfigurations`
      if (jsonObj.get("LogDeliveryConfigurations") != null && !jsonObj.get("LogDeliveryConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LogDeliveryConfigurations"));
      }
      // validate the optional field `DataTieringEnabled`
      if (jsonObj.get("DataTieringEnabled") != null && !jsonObj.get("DataTieringEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DataTieringEnabled"));
      }
      // validate the optional field `NetworkType`
      if (jsonObj.get("NetworkType") != null && !jsonObj.get("NetworkType").isJsonNull()) {
        NetworkType.validateJsonElement(jsonObj.get("NetworkType"));
      }
      // validate the optional field `IpDiscovery`
      if (jsonObj.get("IpDiscovery") != null && !jsonObj.get("IpDiscovery").isJsonNull()) {
        IpDiscovery.validateJsonElement(jsonObj.get("IpDiscovery"));
      }
      // validate the optional field `TransitEncryptionMode`
      if (jsonObj.get("TransitEncryptionMode") != null && !jsonObj.get("TransitEncryptionMode").isJsonNull()) {
        TransitEncryptionMode.validateJsonElement(jsonObj.get("TransitEncryptionMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateReplicationGroupMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateReplicationGroupMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateReplicationGroupMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateReplicationGroupMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateReplicationGroupMessage>() {
           @Override
           public void write(JsonWriter out, CreateReplicationGroupMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateReplicationGroupMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateReplicationGroupMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateReplicationGroupMessage
   * @throws IOException if the JSON string is invalid with respect to CreateReplicationGroupMessage
   */
  public static CreateReplicationGroupMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateReplicationGroupMessage.class);
  }

  /**
   * Convert an instance of CreateReplicationGroupMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

