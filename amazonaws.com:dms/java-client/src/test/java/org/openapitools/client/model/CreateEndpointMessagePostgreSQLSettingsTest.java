/*
 * AWS Database Migration Service
 * <fullname>Database Migration Service</fullname> <p>Database Migration Service (DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is Database Migration Service?</a> in the <i>Database Migration Service User Guide.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PluginNameValue;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateEndpointMessagePostgreSQLSettings
 */
public class CreateEndpointMessagePostgreSQLSettingsTest {
    private final CreateEndpointMessagePostgreSQLSettings model = new CreateEndpointMessagePostgreSQLSettings();

    /**
     * Model tests for CreateEndpointMessagePostgreSQLSettings
     */
    @Test
    public void testCreateEndpointMessagePostgreSQLSettings() {
        // TODO: test CreateEndpointMessagePostgreSQLSettings
    }

    /**
     * Test the property 'afterConnectScript'
     */
    @Test
    public void afterConnectScriptTest() {
        // TODO: test afterConnectScript
    }

    /**
     * Test the property 'captureDdls'
     */
    @Test
    public void captureDdlsTest() {
        // TODO: test captureDdls
    }

    /**
     * Test the property 'maxFileSize'
     */
    @Test
    public void maxFileSizeTest() {
        // TODO: test maxFileSize
    }

    /**
     * Test the property 'databaseName'
     */
    @Test
    public void databaseNameTest() {
        // TODO: test databaseName
    }

    /**
     * Test the property 'ddlArtifactsSchema'
     */
    @Test
    public void ddlArtifactsSchemaTest() {
        // TODO: test ddlArtifactsSchema
    }

    /**
     * Test the property 'executeTimeout'
     */
    @Test
    public void executeTimeoutTest() {
        // TODO: test executeTimeout
    }

    /**
     * Test the property 'failTasksOnLobTruncation'
     */
    @Test
    public void failTasksOnLobTruncationTest() {
        // TODO: test failTasksOnLobTruncation
    }

    /**
     * Test the property 'heartbeatEnable'
     */
    @Test
    public void heartbeatEnableTest() {
        // TODO: test heartbeatEnable
    }

    /**
     * Test the property 'heartbeatSchema'
     */
    @Test
    public void heartbeatSchemaTest() {
        // TODO: test heartbeatSchema
    }

    /**
     * Test the property 'heartbeatFrequency'
     */
    @Test
    public void heartbeatFrequencyTest() {
        // TODO: test heartbeatFrequency
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'serverName'
     */
    @Test
    public void serverNameTest() {
        // TODO: test serverName
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'slotName'
     */
    @Test
    public void slotNameTest() {
        // TODO: test slotName
    }

    /**
     * Test the property 'pluginName'
     */
    @Test
    public void pluginNameTest() {
        // TODO: test pluginName
    }

    /**
     * Test the property 'secretsManagerAccessRoleArn'
     */
    @Test
    public void secretsManagerAccessRoleArnTest() {
        // TODO: test secretsManagerAccessRoleArn
    }

    /**
     * Test the property 'secretsManagerSecretId'
     */
    @Test
    public void secretsManagerSecretIdTest() {
        // TODO: test secretsManagerSecretId
    }

    /**
     * Test the property 'trimSpaceInChar'
     */
    @Test
    public void trimSpaceInCharTest() {
        // TODO: test trimSpaceInChar
    }

    /**
     * Test the property 'mapBooleanAsBoolean'
     */
    @Test
    public void mapBooleanAsBooleanTest() {
        // TODO: test mapBooleanAsBoolean
    }

}
