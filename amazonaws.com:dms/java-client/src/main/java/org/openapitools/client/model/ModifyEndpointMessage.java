/*
 * AWS Database Migration Service
 * <fullname>Database Migration Service</fullname> <p>Database Migration Service (DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is Database Migration Service?</a> in the <i>Database Migration Service User Guide.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateEndpointMessageDynamoDbSettings;
import org.openapitools.client.model.CreateEndpointMessageGcpMySQLSettings;
import org.openapitools.client.model.CreateEndpointMessageIBMDb2Settings;
import org.openapitools.client.model.CreateEndpointMessageKafkaSettings;
import org.openapitools.client.model.CreateEndpointMessageKinesisSettings;
import org.openapitools.client.model.CreateEndpointMessageMicrosoftSQLServerSettings;
import org.openapitools.client.model.CreateEndpointMessageMySQLSettings;
import org.openapitools.client.model.CreateEndpointMessageNeptuneSettings;
import org.openapitools.client.model.CreateEndpointMessageOracleSettings;
import org.openapitools.client.model.CreateEndpointMessagePostgreSQLSettings;
import org.openapitools.client.model.CreateEndpointMessageS3Settings;
import org.openapitools.client.model.CreateEndpointMessageSybaseSettings;
import org.openapitools.client.model.DmsSslModeValue;
import org.openapitools.client.model.ModifyEndpointMessageDmsTransferSettings;
import org.openapitools.client.model.ModifyEndpointMessageDocDbSettings;
import org.openapitools.client.model.ModifyEndpointMessageElasticsearchSettings;
import org.openapitools.client.model.ModifyEndpointMessageMongoDbSettings;
import org.openapitools.client.model.ModifyEndpointMessageRedisSettings;
import org.openapitools.client.model.RedshiftSettings;
import org.openapitools.client.model.ReplicationEndpointTypeValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p/&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:13:34.502814-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModifyEndpointMessage {
  public static final String SERIALIZED_NAME_ENDPOINT_ARN = "EndpointArn";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_ARN)
  private String endpointArn;

  public static final String SERIALIZED_NAME_ENDPOINT_IDENTIFIER = "EndpointIdentifier";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_IDENTIFIER)
  private String endpointIdentifier;

  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "EndpointType";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private ReplicationEndpointTypeValue endpointType;

  public static final String SERIALIZED_NAME_ENGINE_NAME = "EngineName";
  @SerializedName(SERIALIZED_NAME_ENGINE_NAME)
  private String engineName;

  public static final String SERIALIZED_NAME_USERNAME = "Username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD = "Password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_SERVER_NAME = "ServerName";
  @SerializedName(SERIALIZED_NAME_SERVER_NAME)
  private String serverName;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_DATABASE_NAME = "DatabaseName";
  @SerializedName(SERIALIZED_NAME_DATABASE_NAME)
  private String databaseName;

  public static final String SERIALIZED_NAME_EXTRA_CONNECTION_ATTRIBUTES = "ExtraConnectionAttributes";
  @SerializedName(SERIALIZED_NAME_EXTRA_CONNECTION_ATTRIBUTES)
  private String extraConnectionAttributes;

  public static final String SERIALIZED_NAME_CERTIFICATE_ARN = "CertificateArn";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ARN)
  private String certificateArn;

  public static final String SERIALIZED_NAME_SSL_MODE = "SslMode";
  @SerializedName(SERIALIZED_NAME_SSL_MODE)
  private DmsSslModeValue sslMode;

  public static final String SERIALIZED_NAME_SERVICE_ACCESS_ROLE_ARN = "ServiceAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCESS_ROLE_ARN)
  private String serviceAccessRoleArn;

  public static final String SERIALIZED_NAME_EXTERNAL_TABLE_DEFINITION = "ExternalTableDefinition";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_TABLE_DEFINITION)
  private String externalTableDefinition;

  public static final String SERIALIZED_NAME_DYNAMO_DB_SETTINGS = "DynamoDbSettings";
  @SerializedName(SERIALIZED_NAME_DYNAMO_DB_SETTINGS)
  private CreateEndpointMessageDynamoDbSettings dynamoDbSettings;

  public static final String SERIALIZED_NAME_S3_SETTINGS = "S3Settings";
  @SerializedName(SERIALIZED_NAME_S3_SETTINGS)
  private CreateEndpointMessageS3Settings s3Settings;

  public static final String SERIALIZED_NAME_DMS_TRANSFER_SETTINGS = "DmsTransferSettings";
  @SerializedName(SERIALIZED_NAME_DMS_TRANSFER_SETTINGS)
  private ModifyEndpointMessageDmsTransferSettings dmsTransferSettings;

  public static final String SERIALIZED_NAME_MONGO_DB_SETTINGS = "MongoDbSettings";
  @SerializedName(SERIALIZED_NAME_MONGO_DB_SETTINGS)
  private ModifyEndpointMessageMongoDbSettings mongoDbSettings;

  public static final String SERIALIZED_NAME_KINESIS_SETTINGS = "KinesisSettings";
  @SerializedName(SERIALIZED_NAME_KINESIS_SETTINGS)
  private CreateEndpointMessageKinesisSettings kinesisSettings;

  public static final String SERIALIZED_NAME_KAFKA_SETTINGS = "KafkaSettings";
  @SerializedName(SERIALIZED_NAME_KAFKA_SETTINGS)
  private CreateEndpointMessageKafkaSettings kafkaSettings;

  public static final String SERIALIZED_NAME_ELASTICSEARCH_SETTINGS = "ElasticsearchSettings";
  @SerializedName(SERIALIZED_NAME_ELASTICSEARCH_SETTINGS)
  private ModifyEndpointMessageElasticsearchSettings elasticsearchSettings;

  public static final String SERIALIZED_NAME_NEPTUNE_SETTINGS = "NeptuneSettings";
  @SerializedName(SERIALIZED_NAME_NEPTUNE_SETTINGS)
  private CreateEndpointMessageNeptuneSettings neptuneSettings;

  public static final String SERIALIZED_NAME_REDSHIFT_SETTINGS = "RedshiftSettings";
  @SerializedName(SERIALIZED_NAME_REDSHIFT_SETTINGS)
  private RedshiftSettings redshiftSettings;

  public static final String SERIALIZED_NAME_POSTGRE_S_Q_L_SETTINGS = "PostgreSQLSettings";
  @SerializedName(SERIALIZED_NAME_POSTGRE_S_Q_L_SETTINGS)
  private CreateEndpointMessagePostgreSQLSettings postgreSQLSettings;

  public static final String SERIALIZED_NAME_MY_S_Q_L_SETTINGS = "MySQLSettings";
  @SerializedName(SERIALIZED_NAME_MY_S_Q_L_SETTINGS)
  private CreateEndpointMessageMySQLSettings mySQLSettings;

  public static final String SERIALIZED_NAME_ORACLE_SETTINGS = "OracleSettings";
  @SerializedName(SERIALIZED_NAME_ORACLE_SETTINGS)
  private CreateEndpointMessageOracleSettings oracleSettings;

  public static final String SERIALIZED_NAME_SYBASE_SETTINGS = "SybaseSettings";
  @SerializedName(SERIALIZED_NAME_SYBASE_SETTINGS)
  private CreateEndpointMessageSybaseSettings sybaseSettings;

  public static final String SERIALIZED_NAME_MICROSOFT_S_Q_L_SERVER_SETTINGS = "MicrosoftSQLServerSettings";
  @SerializedName(SERIALIZED_NAME_MICROSOFT_S_Q_L_SERVER_SETTINGS)
  private CreateEndpointMessageMicrosoftSQLServerSettings microsoftSQLServerSettings;

  public static final String SERIALIZED_NAME_IB_M_DB2_SETTINGS = "IBMDb2Settings";
  @SerializedName(SERIALIZED_NAME_IB_M_DB2_SETTINGS)
  private CreateEndpointMessageIBMDb2Settings ibMDb2Settings;

  public static final String SERIALIZED_NAME_DOC_DB_SETTINGS = "DocDbSettings";
  @SerializedName(SERIALIZED_NAME_DOC_DB_SETTINGS)
  private ModifyEndpointMessageDocDbSettings docDbSettings;

  public static final String SERIALIZED_NAME_REDIS_SETTINGS = "RedisSettings";
  @SerializedName(SERIALIZED_NAME_REDIS_SETTINGS)
  private ModifyEndpointMessageRedisSettings redisSettings;

  public static final String SERIALIZED_NAME_EXACT_SETTINGS = "ExactSettings";
  @SerializedName(SERIALIZED_NAME_EXACT_SETTINGS)
  private Boolean exactSettings;

  public static final String SERIALIZED_NAME_GCP_MY_S_Q_L_SETTINGS = "GcpMySQLSettings";
  @SerializedName(SERIALIZED_NAME_GCP_MY_S_Q_L_SETTINGS)
  private CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings;

  public ModifyEndpointMessage() {
  }

  public ModifyEndpointMessage endpointArn(String endpointArn) {
    this.endpointArn = endpointArn;
    return this;
  }

  /**
   * Get endpointArn
   * @return endpointArn
   */
  @javax.annotation.Nonnull
  public String getEndpointArn() {
    return endpointArn;
  }

  public void setEndpointArn(String endpointArn) {
    this.endpointArn = endpointArn;
  }


  public ModifyEndpointMessage endpointIdentifier(String endpointIdentifier) {
    this.endpointIdentifier = endpointIdentifier;
    return this;
  }

  /**
   * Get endpointIdentifier
   * @return endpointIdentifier
   */
  @javax.annotation.Nullable
  public String getEndpointIdentifier() {
    return endpointIdentifier;
  }

  public void setEndpointIdentifier(String endpointIdentifier) {
    this.endpointIdentifier = endpointIdentifier;
  }


  public ModifyEndpointMessage endpointType(ReplicationEndpointTypeValue endpointType) {
    this.endpointType = endpointType;
    return this;
  }

  /**
   * Get endpointType
   * @return endpointType
   */
  @javax.annotation.Nullable
  public ReplicationEndpointTypeValue getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(ReplicationEndpointTypeValue endpointType) {
    this.endpointType = endpointType;
  }


  public ModifyEndpointMessage engineName(String engineName) {
    this.engineName = engineName;
    return this;
  }

  /**
   * Get engineName
   * @return engineName
   */
  @javax.annotation.Nullable
  public String getEngineName() {
    return engineName;
  }

  public void setEngineName(String engineName) {
    this.engineName = engineName;
  }


  public ModifyEndpointMessage username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  public ModifyEndpointMessage password(String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  public ModifyEndpointMessage serverName(String serverName) {
    this.serverName = serverName;
    return this;
  }

  /**
   * Get serverName
   * @return serverName
   */
  @javax.annotation.Nullable
  public String getServerName() {
    return serverName;
  }

  public void setServerName(String serverName) {
    this.serverName = serverName;
  }


  public ModifyEndpointMessage port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public ModifyEndpointMessage databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

  /**
   * Get databaseName
   * @return databaseName
   */
  @javax.annotation.Nullable
  public String getDatabaseName() {
    return databaseName;
  }

  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }


  public ModifyEndpointMessage extraConnectionAttributes(String extraConnectionAttributes) {
    this.extraConnectionAttributes = extraConnectionAttributes;
    return this;
  }

  /**
   * Get extraConnectionAttributes
   * @return extraConnectionAttributes
   */
  @javax.annotation.Nullable
  public String getExtraConnectionAttributes() {
    return extraConnectionAttributes;
  }

  public void setExtraConnectionAttributes(String extraConnectionAttributes) {
    this.extraConnectionAttributes = extraConnectionAttributes;
  }


  public ModifyEndpointMessage certificateArn(String certificateArn) {
    this.certificateArn = certificateArn;
    return this;
  }

  /**
   * Get certificateArn
   * @return certificateArn
   */
  @javax.annotation.Nullable
  public String getCertificateArn() {
    return certificateArn;
  }

  public void setCertificateArn(String certificateArn) {
    this.certificateArn = certificateArn;
  }


  public ModifyEndpointMessage sslMode(DmsSslModeValue sslMode) {
    this.sslMode = sslMode;
    return this;
  }

  /**
   * Get sslMode
   * @return sslMode
   */
  @javax.annotation.Nullable
  public DmsSslModeValue getSslMode() {
    return sslMode;
  }

  public void setSslMode(DmsSslModeValue sslMode) {
    this.sslMode = sslMode;
  }


  public ModifyEndpointMessage serviceAccessRoleArn(String serviceAccessRoleArn) {
    this.serviceAccessRoleArn = serviceAccessRoleArn;
    return this;
  }

  /**
   * Get serviceAccessRoleArn
   * @return serviceAccessRoleArn
   */
  @javax.annotation.Nullable
  public String getServiceAccessRoleArn() {
    return serviceAccessRoleArn;
  }

  public void setServiceAccessRoleArn(String serviceAccessRoleArn) {
    this.serviceAccessRoleArn = serviceAccessRoleArn;
  }


  public ModifyEndpointMessage externalTableDefinition(String externalTableDefinition) {
    this.externalTableDefinition = externalTableDefinition;
    return this;
  }

  /**
   * Get externalTableDefinition
   * @return externalTableDefinition
   */
  @javax.annotation.Nullable
  public String getExternalTableDefinition() {
    return externalTableDefinition;
  }

  public void setExternalTableDefinition(String externalTableDefinition) {
    this.externalTableDefinition = externalTableDefinition;
  }


  public ModifyEndpointMessage dynamoDbSettings(CreateEndpointMessageDynamoDbSettings dynamoDbSettings) {
    this.dynamoDbSettings = dynamoDbSettings;
    return this;
  }

  /**
   * Get dynamoDbSettings
   * @return dynamoDbSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageDynamoDbSettings getDynamoDbSettings() {
    return dynamoDbSettings;
  }

  public void setDynamoDbSettings(CreateEndpointMessageDynamoDbSettings dynamoDbSettings) {
    this.dynamoDbSettings = dynamoDbSettings;
  }


  public ModifyEndpointMessage s3Settings(CreateEndpointMessageS3Settings s3Settings) {
    this.s3Settings = s3Settings;
    return this;
  }

  /**
   * Get s3Settings
   * @return s3Settings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageS3Settings getS3Settings() {
    return s3Settings;
  }

  public void setS3Settings(CreateEndpointMessageS3Settings s3Settings) {
    this.s3Settings = s3Settings;
  }


  public ModifyEndpointMessage dmsTransferSettings(ModifyEndpointMessageDmsTransferSettings dmsTransferSettings) {
    this.dmsTransferSettings = dmsTransferSettings;
    return this;
  }

  /**
   * Get dmsTransferSettings
   * @return dmsTransferSettings
   */
  @javax.annotation.Nullable
  public ModifyEndpointMessageDmsTransferSettings getDmsTransferSettings() {
    return dmsTransferSettings;
  }

  public void setDmsTransferSettings(ModifyEndpointMessageDmsTransferSettings dmsTransferSettings) {
    this.dmsTransferSettings = dmsTransferSettings;
  }


  public ModifyEndpointMessage mongoDbSettings(ModifyEndpointMessageMongoDbSettings mongoDbSettings) {
    this.mongoDbSettings = mongoDbSettings;
    return this;
  }

  /**
   * Get mongoDbSettings
   * @return mongoDbSettings
   */
  @javax.annotation.Nullable
  public ModifyEndpointMessageMongoDbSettings getMongoDbSettings() {
    return mongoDbSettings;
  }

  public void setMongoDbSettings(ModifyEndpointMessageMongoDbSettings mongoDbSettings) {
    this.mongoDbSettings = mongoDbSettings;
  }


  public ModifyEndpointMessage kinesisSettings(CreateEndpointMessageKinesisSettings kinesisSettings) {
    this.kinesisSettings = kinesisSettings;
    return this;
  }

  /**
   * Get kinesisSettings
   * @return kinesisSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageKinesisSettings getKinesisSettings() {
    return kinesisSettings;
  }

  public void setKinesisSettings(CreateEndpointMessageKinesisSettings kinesisSettings) {
    this.kinesisSettings = kinesisSettings;
  }


  public ModifyEndpointMessage kafkaSettings(CreateEndpointMessageKafkaSettings kafkaSettings) {
    this.kafkaSettings = kafkaSettings;
    return this;
  }

  /**
   * Get kafkaSettings
   * @return kafkaSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageKafkaSettings getKafkaSettings() {
    return kafkaSettings;
  }

  public void setKafkaSettings(CreateEndpointMessageKafkaSettings kafkaSettings) {
    this.kafkaSettings = kafkaSettings;
  }


  public ModifyEndpointMessage elasticsearchSettings(ModifyEndpointMessageElasticsearchSettings elasticsearchSettings) {
    this.elasticsearchSettings = elasticsearchSettings;
    return this;
  }

  /**
   * Get elasticsearchSettings
   * @return elasticsearchSettings
   */
  @javax.annotation.Nullable
  public ModifyEndpointMessageElasticsearchSettings getElasticsearchSettings() {
    return elasticsearchSettings;
  }

  public void setElasticsearchSettings(ModifyEndpointMessageElasticsearchSettings elasticsearchSettings) {
    this.elasticsearchSettings = elasticsearchSettings;
  }


  public ModifyEndpointMessage neptuneSettings(CreateEndpointMessageNeptuneSettings neptuneSettings) {
    this.neptuneSettings = neptuneSettings;
    return this;
  }

  /**
   * Get neptuneSettings
   * @return neptuneSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageNeptuneSettings getNeptuneSettings() {
    return neptuneSettings;
  }

  public void setNeptuneSettings(CreateEndpointMessageNeptuneSettings neptuneSettings) {
    this.neptuneSettings = neptuneSettings;
  }


  public ModifyEndpointMessage redshiftSettings(RedshiftSettings redshiftSettings) {
    this.redshiftSettings = redshiftSettings;
    return this;
  }

  /**
   * Get redshiftSettings
   * @return redshiftSettings
   */
  @javax.annotation.Nullable
  public RedshiftSettings getRedshiftSettings() {
    return redshiftSettings;
  }

  public void setRedshiftSettings(RedshiftSettings redshiftSettings) {
    this.redshiftSettings = redshiftSettings;
  }


  public ModifyEndpointMessage postgreSQLSettings(CreateEndpointMessagePostgreSQLSettings postgreSQLSettings) {
    this.postgreSQLSettings = postgreSQLSettings;
    return this;
  }

  /**
   * Get postgreSQLSettings
   * @return postgreSQLSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessagePostgreSQLSettings getPostgreSQLSettings() {
    return postgreSQLSettings;
  }

  public void setPostgreSQLSettings(CreateEndpointMessagePostgreSQLSettings postgreSQLSettings) {
    this.postgreSQLSettings = postgreSQLSettings;
  }


  public ModifyEndpointMessage mySQLSettings(CreateEndpointMessageMySQLSettings mySQLSettings) {
    this.mySQLSettings = mySQLSettings;
    return this;
  }

  /**
   * Get mySQLSettings
   * @return mySQLSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageMySQLSettings getMySQLSettings() {
    return mySQLSettings;
  }

  public void setMySQLSettings(CreateEndpointMessageMySQLSettings mySQLSettings) {
    this.mySQLSettings = mySQLSettings;
  }


  public ModifyEndpointMessage oracleSettings(CreateEndpointMessageOracleSettings oracleSettings) {
    this.oracleSettings = oracleSettings;
    return this;
  }

  /**
   * Get oracleSettings
   * @return oracleSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageOracleSettings getOracleSettings() {
    return oracleSettings;
  }

  public void setOracleSettings(CreateEndpointMessageOracleSettings oracleSettings) {
    this.oracleSettings = oracleSettings;
  }


  public ModifyEndpointMessage sybaseSettings(CreateEndpointMessageSybaseSettings sybaseSettings) {
    this.sybaseSettings = sybaseSettings;
    return this;
  }

  /**
   * Get sybaseSettings
   * @return sybaseSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageSybaseSettings getSybaseSettings() {
    return sybaseSettings;
  }

  public void setSybaseSettings(CreateEndpointMessageSybaseSettings sybaseSettings) {
    this.sybaseSettings = sybaseSettings;
  }


  public ModifyEndpointMessage microsoftSQLServerSettings(CreateEndpointMessageMicrosoftSQLServerSettings microsoftSQLServerSettings) {
    this.microsoftSQLServerSettings = microsoftSQLServerSettings;
    return this;
  }

  /**
   * Get microsoftSQLServerSettings
   * @return microsoftSQLServerSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageMicrosoftSQLServerSettings getMicrosoftSQLServerSettings() {
    return microsoftSQLServerSettings;
  }

  public void setMicrosoftSQLServerSettings(CreateEndpointMessageMicrosoftSQLServerSettings microsoftSQLServerSettings) {
    this.microsoftSQLServerSettings = microsoftSQLServerSettings;
  }


  public ModifyEndpointMessage ibMDb2Settings(CreateEndpointMessageIBMDb2Settings ibMDb2Settings) {
    this.ibMDb2Settings = ibMDb2Settings;
    return this;
  }

  /**
   * Get ibMDb2Settings
   * @return ibMDb2Settings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageIBMDb2Settings getIbMDb2Settings() {
    return ibMDb2Settings;
  }

  public void setIbMDb2Settings(CreateEndpointMessageIBMDb2Settings ibMDb2Settings) {
    this.ibMDb2Settings = ibMDb2Settings;
  }


  public ModifyEndpointMessage docDbSettings(ModifyEndpointMessageDocDbSettings docDbSettings) {
    this.docDbSettings = docDbSettings;
    return this;
  }

  /**
   * Get docDbSettings
   * @return docDbSettings
   */
  @javax.annotation.Nullable
  public ModifyEndpointMessageDocDbSettings getDocDbSettings() {
    return docDbSettings;
  }

  public void setDocDbSettings(ModifyEndpointMessageDocDbSettings docDbSettings) {
    this.docDbSettings = docDbSettings;
  }


  public ModifyEndpointMessage redisSettings(ModifyEndpointMessageRedisSettings redisSettings) {
    this.redisSettings = redisSettings;
    return this;
  }

  /**
   * Get redisSettings
   * @return redisSettings
   */
  @javax.annotation.Nullable
  public ModifyEndpointMessageRedisSettings getRedisSettings() {
    return redisSettings;
  }

  public void setRedisSettings(ModifyEndpointMessageRedisSettings redisSettings) {
    this.redisSettings = redisSettings;
  }


  public ModifyEndpointMessage exactSettings(Boolean exactSettings) {
    this.exactSettings = exactSettings;
    return this;
  }

  /**
   * Get exactSettings
   * @return exactSettings
   */
  @javax.annotation.Nullable
  public Boolean getExactSettings() {
    return exactSettings;
  }

  public void setExactSettings(Boolean exactSettings) {
    this.exactSettings = exactSettings;
  }


  public ModifyEndpointMessage gcpMySQLSettings(CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings) {
    this.gcpMySQLSettings = gcpMySQLSettings;
    return this;
  }

  /**
   * Get gcpMySQLSettings
   * @return gcpMySQLSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageGcpMySQLSettings getGcpMySQLSettings() {
    return gcpMySQLSettings;
  }

  public void setGcpMySQLSettings(CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings) {
    this.gcpMySQLSettings = gcpMySQLSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyEndpointMessage modifyEndpointMessage = (ModifyEndpointMessage) o;
    return Objects.equals(this.endpointArn, modifyEndpointMessage.endpointArn) &&
        Objects.equals(this.endpointIdentifier, modifyEndpointMessage.endpointIdentifier) &&
        Objects.equals(this.endpointType, modifyEndpointMessage.endpointType) &&
        Objects.equals(this.engineName, modifyEndpointMessage.engineName) &&
        Objects.equals(this.username, modifyEndpointMessage.username) &&
        Objects.equals(this.password, modifyEndpointMessage.password) &&
        Objects.equals(this.serverName, modifyEndpointMessage.serverName) &&
        Objects.equals(this.port, modifyEndpointMessage.port) &&
        Objects.equals(this.databaseName, modifyEndpointMessage.databaseName) &&
        Objects.equals(this.extraConnectionAttributes, modifyEndpointMessage.extraConnectionAttributes) &&
        Objects.equals(this.certificateArn, modifyEndpointMessage.certificateArn) &&
        Objects.equals(this.sslMode, modifyEndpointMessage.sslMode) &&
        Objects.equals(this.serviceAccessRoleArn, modifyEndpointMessage.serviceAccessRoleArn) &&
        Objects.equals(this.externalTableDefinition, modifyEndpointMessage.externalTableDefinition) &&
        Objects.equals(this.dynamoDbSettings, modifyEndpointMessage.dynamoDbSettings) &&
        Objects.equals(this.s3Settings, modifyEndpointMessage.s3Settings) &&
        Objects.equals(this.dmsTransferSettings, modifyEndpointMessage.dmsTransferSettings) &&
        Objects.equals(this.mongoDbSettings, modifyEndpointMessage.mongoDbSettings) &&
        Objects.equals(this.kinesisSettings, modifyEndpointMessage.kinesisSettings) &&
        Objects.equals(this.kafkaSettings, modifyEndpointMessage.kafkaSettings) &&
        Objects.equals(this.elasticsearchSettings, modifyEndpointMessage.elasticsearchSettings) &&
        Objects.equals(this.neptuneSettings, modifyEndpointMessage.neptuneSettings) &&
        Objects.equals(this.redshiftSettings, modifyEndpointMessage.redshiftSettings) &&
        Objects.equals(this.postgreSQLSettings, modifyEndpointMessage.postgreSQLSettings) &&
        Objects.equals(this.mySQLSettings, modifyEndpointMessage.mySQLSettings) &&
        Objects.equals(this.oracleSettings, modifyEndpointMessage.oracleSettings) &&
        Objects.equals(this.sybaseSettings, modifyEndpointMessage.sybaseSettings) &&
        Objects.equals(this.microsoftSQLServerSettings, modifyEndpointMessage.microsoftSQLServerSettings) &&
        Objects.equals(this.ibMDb2Settings, modifyEndpointMessage.ibMDb2Settings) &&
        Objects.equals(this.docDbSettings, modifyEndpointMessage.docDbSettings) &&
        Objects.equals(this.redisSettings, modifyEndpointMessage.redisSettings) &&
        Objects.equals(this.exactSettings, modifyEndpointMessage.exactSettings) &&
        Objects.equals(this.gcpMySQLSettings, modifyEndpointMessage.gcpMySQLSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointArn, endpointIdentifier, endpointType, engineName, username, password, serverName, port, databaseName, extraConnectionAttributes, certificateArn, sslMode, serviceAccessRoleArn, externalTableDefinition, dynamoDbSettings, s3Settings, dmsTransferSettings, mongoDbSettings, kinesisSettings, kafkaSettings, elasticsearchSettings, neptuneSettings, redshiftSettings, postgreSQLSettings, mySQLSettings, oracleSettings, sybaseSettings, microsoftSQLServerSettings, ibMDb2Settings, docDbSettings, redisSettings, exactSettings, gcpMySQLSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyEndpointMessage {\n");
    sb.append("    endpointArn: ").append(toIndentedString(endpointArn)).append("\n");
    sb.append("    endpointIdentifier: ").append(toIndentedString(endpointIdentifier)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    engineName: ").append(toIndentedString(engineName)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    extraConnectionAttributes: ").append(toIndentedString(extraConnectionAttributes)).append("\n");
    sb.append("    certificateArn: ").append(toIndentedString(certificateArn)).append("\n");
    sb.append("    sslMode: ").append(toIndentedString(sslMode)).append("\n");
    sb.append("    serviceAccessRoleArn: ").append(toIndentedString(serviceAccessRoleArn)).append("\n");
    sb.append("    externalTableDefinition: ").append(toIndentedString(externalTableDefinition)).append("\n");
    sb.append("    dynamoDbSettings: ").append(toIndentedString(dynamoDbSettings)).append("\n");
    sb.append("    s3Settings: ").append(toIndentedString(s3Settings)).append("\n");
    sb.append("    dmsTransferSettings: ").append(toIndentedString(dmsTransferSettings)).append("\n");
    sb.append("    mongoDbSettings: ").append(toIndentedString(mongoDbSettings)).append("\n");
    sb.append("    kinesisSettings: ").append(toIndentedString(kinesisSettings)).append("\n");
    sb.append("    kafkaSettings: ").append(toIndentedString(kafkaSettings)).append("\n");
    sb.append("    elasticsearchSettings: ").append(toIndentedString(elasticsearchSettings)).append("\n");
    sb.append("    neptuneSettings: ").append(toIndentedString(neptuneSettings)).append("\n");
    sb.append("    redshiftSettings: ").append(toIndentedString(redshiftSettings)).append("\n");
    sb.append("    postgreSQLSettings: ").append(toIndentedString(postgreSQLSettings)).append("\n");
    sb.append("    mySQLSettings: ").append(toIndentedString(mySQLSettings)).append("\n");
    sb.append("    oracleSettings: ").append(toIndentedString(oracleSettings)).append("\n");
    sb.append("    sybaseSettings: ").append(toIndentedString(sybaseSettings)).append("\n");
    sb.append("    microsoftSQLServerSettings: ").append(toIndentedString(microsoftSQLServerSettings)).append("\n");
    sb.append("    ibMDb2Settings: ").append(toIndentedString(ibMDb2Settings)).append("\n");
    sb.append("    docDbSettings: ").append(toIndentedString(docDbSettings)).append("\n");
    sb.append("    redisSettings: ").append(toIndentedString(redisSettings)).append("\n");
    sb.append("    exactSettings: ").append(toIndentedString(exactSettings)).append("\n");
    sb.append("    gcpMySQLSettings: ").append(toIndentedString(gcpMySQLSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EndpointArn");
    openapiFields.add("EndpointIdentifier");
    openapiFields.add("EndpointType");
    openapiFields.add("EngineName");
    openapiFields.add("Username");
    openapiFields.add("Password");
    openapiFields.add("ServerName");
    openapiFields.add("Port");
    openapiFields.add("DatabaseName");
    openapiFields.add("ExtraConnectionAttributes");
    openapiFields.add("CertificateArn");
    openapiFields.add("SslMode");
    openapiFields.add("ServiceAccessRoleArn");
    openapiFields.add("ExternalTableDefinition");
    openapiFields.add("DynamoDbSettings");
    openapiFields.add("S3Settings");
    openapiFields.add("DmsTransferSettings");
    openapiFields.add("MongoDbSettings");
    openapiFields.add("KinesisSettings");
    openapiFields.add("KafkaSettings");
    openapiFields.add("ElasticsearchSettings");
    openapiFields.add("NeptuneSettings");
    openapiFields.add("RedshiftSettings");
    openapiFields.add("PostgreSQLSettings");
    openapiFields.add("MySQLSettings");
    openapiFields.add("OracleSettings");
    openapiFields.add("SybaseSettings");
    openapiFields.add("MicrosoftSQLServerSettings");
    openapiFields.add("IBMDb2Settings");
    openapiFields.add("DocDbSettings");
    openapiFields.add("RedisSettings");
    openapiFields.add("ExactSettings");
    openapiFields.add("GcpMySQLSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("EndpointArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModifyEndpointMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyEndpointMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyEndpointMessage is not found in the empty JSON string", ModifyEndpointMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModifyEndpointMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModifyEndpointMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModifyEndpointMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `EndpointArn`
      String.validateJsonElement(jsonObj.get("EndpointArn"));
      // validate the optional field `EndpointIdentifier`
      if (jsonObj.get("EndpointIdentifier") != null && !jsonObj.get("EndpointIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndpointIdentifier"));
      }
      // validate the optional field `EndpointType`
      if (jsonObj.get("EndpointType") != null && !jsonObj.get("EndpointType").isJsonNull()) {
        ReplicationEndpointTypeValue.validateJsonElement(jsonObj.get("EndpointType"));
      }
      // validate the optional field `EngineName`
      if (jsonObj.get("EngineName") != null && !jsonObj.get("EngineName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineName"));
      }
      // validate the optional field `Username`
      if (jsonObj.get("Username") != null && !jsonObj.get("Username").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Username"));
      }
      // validate the optional field `Password`
      if (jsonObj.get("Password") != null && !jsonObj.get("Password").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Password"));
      }
      // validate the optional field `ServerName`
      if (jsonObj.get("ServerName") != null && !jsonObj.get("ServerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerName"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `DatabaseName`
      if (jsonObj.get("DatabaseName") != null && !jsonObj.get("DatabaseName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatabaseName"));
      }
      // validate the optional field `ExtraConnectionAttributes`
      if (jsonObj.get("ExtraConnectionAttributes") != null && !jsonObj.get("ExtraConnectionAttributes").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExtraConnectionAttributes"));
      }
      // validate the optional field `CertificateArn`
      if (jsonObj.get("CertificateArn") != null && !jsonObj.get("CertificateArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CertificateArn"));
      }
      // validate the optional field `SslMode`
      if (jsonObj.get("SslMode") != null && !jsonObj.get("SslMode").isJsonNull()) {
        DmsSslModeValue.validateJsonElement(jsonObj.get("SslMode"));
      }
      // validate the optional field `ServiceAccessRoleArn`
      if (jsonObj.get("ServiceAccessRoleArn") != null && !jsonObj.get("ServiceAccessRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceAccessRoleArn"));
      }
      // validate the optional field `ExternalTableDefinition`
      if (jsonObj.get("ExternalTableDefinition") != null && !jsonObj.get("ExternalTableDefinition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExternalTableDefinition"));
      }
      // validate the optional field `DynamoDbSettings`
      if (jsonObj.get("DynamoDbSettings") != null && !jsonObj.get("DynamoDbSettings").isJsonNull()) {
        CreateEndpointMessageDynamoDbSettings.validateJsonElement(jsonObj.get("DynamoDbSettings"));
      }
      // validate the optional field `S3Settings`
      if (jsonObj.get("S3Settings") != null && !jsonObj.get("S3Settings").isJsonNull()) {
        CreateEndpointMessageS3Settings.validateJsonElement(jsonObj.get("S3Settings"));
      }
      // validate the optional field `DmsTransferSettings`
      if (jsonObj.get("DmsTransferSettings") != null && !jsonObj.get("DmsTransferSettings").isJsonNull()) {
        ModifyEndpointMessageDmsTransferSettings.validateJsonElement(jsonObj.get("DmsTransferSettings"));
      }
      // validate the optional field `MongoDbSettings`
      if (jsonObj.get("MongoDbSettings") != null && !jsonObj.get("MongoDbSettings").isJsonNull()) {
        ModifyEndpointMessageMongoDbSettings.validateJsonElement(jsonObj.get("MongoDbSettings"));
      }
      // validate the optional field `KinesisSettings`
      if (jsonObj.get("KinesisSettings") != null && !jsonObj.get("KinesisSettings").isJsonNull()) {
        CreateEndpointMessageKinesisSettings.validateJsonElement(jsonObj.get("KinesisSettings"));
      }
      // validate the optional field `KafkaSettings`
      if (jsonObj.get("KafkaSettings") != null && !jsonObj.get("KafkaSettings").isJsonNull()) {
        CreateEndpointMessageKafkaSettings.validateJsonElement(jsonObj.get("KafkaSettings"));
      }
      // validate the optional field `ElasticsearchSettings`
      if (jsonObj.get("ElasticsearchSettings") != null && !jsonObj.get("ElasticsearchSettings").isJsonNull()) {
        ModifyEndpointMessageElasticsearchSettings.validateJsonElement(jsonObj.get("ElasticsearchSettings"));
      }
      // validate the optional field `NeptuneSettings`
      if (jsonObj.get("NeptuneSettings") != null && !jsonObj.get("NeptuneSettings").isJsonNull()) {
        CreateEndpointMessageNeptuneSettings.validateJsonElement(jsonObj.get("NeptuneSettings"));
      }
      // validate the optional field `RedshiftSettings`
      if (jsonObj.get("RedshiftSettings") != null && !jsonObj.get("RedshiftSettings").isJsonNull()) {
        RedshiftSettings.validateJsonElement(jsonObj.get("RedshiftSettings"));
      }
      // validate the optional field `PostgreSQLSettings`
      if (jsonObj.get("PostgreSQLSettings") != null && !jsonObj.get("PostgreSQLSettings").isJsonNull()) {
        CreateEndpointMessagePostgreSQLSettings.validateJsonElement(jsonObj.get("PostgreSQLSettings"));
      }
      // validate the optional field `MySQLSettings`
      if (jsonObj.get("MySQLSettings") != null && !jsonObj.get("MySQLSettings").isJsonNull()) {
        CreateEndpointMessageMySQLSettings.validateJsonElement(jsonObj.get("MySQLSettings"));
      }
      // validate the optional field `OracleSettings`
      if (jsonObj.get("OracleSettings") != null && !jsonObj.get("OracleSettings").isJsonNull()) {
        CreateEndpointMessageOracleSettings.validateJsonElement(jsonObj.get("OracleSettings"));
      }
      // validate the optional field `SybaseSettings`
      if (jsonObj.get("SybaseSettings") != null && !jsonObj.get("SybaseSettings").isJsonNull()) {
        CreateEndpointMessageSybaseSettings.validateJsonElement(jsonObj.get("SybaseSettings"));
      }
      // validate the optional field `MicrosoftSQLServerSettings`
      if (jsonObj.get("MicrosoftSQLServerSettings") != null && !jsonObj.get("MicrosoftSQLServerSettings").isJsonNull()) {
        CreateEndpointMessageMicrosoftSQLServerSettings.validateJsonElement(jsonObj.get("MicrosoftSQLServerSettings"));
      }
      // validate the optional field `IBMDb2Settings`
      if (jsonObj.get("IBMDb2Settings") != null && !jsonObj.get("IBMDb2Settings").isJsonNull()) {
        CreateEndpointMessageIBMDb2Settings.validateJsonElement(jsonObj.get("IBMDb2Settings"));
      }
      // validate the optional field `DocDbSettings`
      if (jsonObj.get("DocDbSettings") != null && !jsonObj.get("DocDbSettings").isJsonNull()) {
        ModifyEndpointMessageDocDbSettings.validateJsonElement(jsonObj.get("DocDbSettings"));
      }
      // validate the optional field `RedisSettings`
      if (jsonObj.get("RedisSettings") != null && !jsonObj.get("RedisSettings").isJsonNull()) {
        ModifyEndpointMessageRedisSettings.validateJsonElement(jsonObj.get("RedisSettings"));
      }
      // validate the optional field `ExactSettings`
      if (jsonObj.get("ExactSettings") != null && !jsonObj.get("ExactSettings").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ExactSettings"));
      }
      // validate the optional field `GcpMySQLSettings`
      if (jsonObj.get("GcpMySQLSettings") != null && !jsonObj.get("GcpMySQLSettings").isJsonNull()) {
        CreateEndpointMessageGcpMySQLSettings.validateJsonElement(jsonObj.get("GcpMySQLSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyEndpointMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyEndpointMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyEndpointMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyEndpointMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyEndpointMessage>() {
           @Override
           public void write(JsonWriter out, ModifyEndpointMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyEndpointMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModifyEndpointMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModifyEndpointMessage
   * @throws IOException if the JSON string is invalid with respect to ModifyEndpointMessage
   */
  public static ModifyEndpointMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyEndpointMessage.class);
  }

  /**
   * Convert an instance of ModifyEndpointMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

