/*
 * AWS Database Migration Service
 * <fullname>Database Migration Service</fullname> <p>Database Migration Service (DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is Database Migration Service?</a> in the <i>Database Migration Service User Guide.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p/&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:13:34.502814-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartReplicationTaskAssessmentRunMessage {
  public static final String SERIALIZED_NAME_REPLICATION_TASK_ARN = "ReplicationTaskArn";
  @SerializedName(SERIALIZED_NAME_REPLICATION_TASK_ARN)
  private String replicationTaskArn;

  public static final String SERIALIZED_NAME_SERVICE_ACCESS_ROLE_ARN = "ServiceAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCESS_ROLE_ARN)
  private String serviceAccessRoleArn;

  public static final String SERIALIZED_NAME_RESULT_LOCATION_BUCKET = "ResultLocationBucket";
  @SerializedName(SERIALIZED_NAME_RESULT_LOCATION_BUCKET)
  private String resultLocationBucket;

  public static final String SERIALIZED_NAME_RESULT_LOCATION_FOLDER = "ResultLocationFolder";
  @SerializedName(SERIALIZED_NAME_RESULT_LOCATION_FOLDER)
  private String resultLocationFolder;

  public static final String SERIALIZED_NAME_RESULT_ENCRYPTION_MODE = "ResultEncryptionMode";
  @SerializedName(SERIALIZED_NAME_RESULT_ENCRYPTION_MODE)
  private String resultEncryptionMode;

  public static final String SERIALIZED_NAME_RESULT_KMS_KEY_ARN = "ResultKmsKeyArn";
  @SerializedName(SERIALIZED_NAME_RESULT_KMS_KEY_ARN)
  private String resultKmsKeyArn;

  public static final String SERIALIZED_NAME_ASSESSMENT_RUN_NAME = "AssessmentRunName";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_RUN_NAME)
  private String assessmentRunName;

  public static final String SERIALIZED_NAME_INCLUDE_ONLY = "IncludeOnly";
  @SerializedName(SERIALIZED_NAME_INCLUDE_ONLY)
  private List includeOnly;

  public static final String SERIALIZED_NAME_EXCLUDE = "Exclude";
  @SerializedName(SERIALIZED_NAME_EXCLUDE)
  private List exclude;

  public StartReplicationTaskAssessmentRunMessage() {
  }

  public StartReplicationTaskAssessmentRunMessage replicationTaskArn(String replicationTaskArn) {
    this.replicationTaskArn = replicationTaskArn;
    return this;
  }

  /**
   * Get replicationTaskArn
   * @return replicationTaskArn
   */
  @javax.annotation.Nonnull
  public String getReplicationTaskArn() {
    return replicationTaskArn;
  }

  public void setReplicationTaskArn(String replicationTaskArn) {
    this.replicationTaskArn = replicationTaskArn;
  }


  public StartReplicationTaskAssessmentRunMessage serviceAccessRoleArn(String serviceAccessRoleArn) {
    this.serviceAccessRoleArn = serviceAccessRoleArn;
    return this;
  }

  /**
   * Get serviceAccessRoleArn
   * @return serviceAccessRoleArn
   */
  @javax.annotation.Nonnull
  public String getServiceAccessRoleArn() {
    return serviceAccessRoleArn;
  }

  public void setServiceAccessRoleArn(String serviceAccessRoleArn) {
    this.serviceAccessRoleArn = serviceAccessRoleArn;
  }


  public StartReplicationTaskAssessmentRunMessage resultLocationBucket(String resultLocationBucket) {
    this.resultLocationBucket = resultLocationBucket;
    return this;
  }

  /**
   * Get resultLocationBucket
   * @return resultLocationBucket
   */
  @javax.annotation.Nonnull
  public String getResultLocationBucket() {
    return resultLocationBucket;
  }

  public void setResultLocationBucket(String resultLocationBucket) {
    this.resultLocationBucket = resultLocationBucket;
  }


  public StartReplicationTaskAssessmentRunMessage resultLocationFolder(String resultLocationFolder) {
    this.resultLocationFolder = resultLocationFolder;
    return this;
  }

  /**
   * Get resultLocationFolder
   * @return resultLocationFolder
   */
  @javax.annotation.Nullable
  public String getResultLocationFolder() {
    return resultLocationFolder;
  }

  public void setResultLocationFolder(String resultLocationFolder) {
    this.resultLocationFolder = resultLocationFolder;
  }


  public StartReplicationTaskAssessmentRunMessage resultEncryptionMode(String resultEncryptionMode) {
    this.resultEncryptionMode = resultEncryptionMode;
    return this;
  }

  /**
   * Get resultEncryptionMode
   * @return resultEncryptionMode
   */
  @javax.annotation.Nullable
  public String getResultEncryptionMode() {
    return resultEncryptionMode;
  }

  public void setResultEncryptionMode(String resultEncryptionMode) {
    this.resultEncryptionMode = resultEncryptionMode;
  }


  public StartReplicationTaskAssessmentRunMessage resultKmsKeyArn(String resultKmsKeyArn) {
    this.resultKmsKeyArn = resultKmsKeyArn;
    return this;
  }

  /**
   * Get resultKmsKeyArn
   * @return resultKmsKeyArn
   */
  @javax.annotation.Nullable
  public String getResultKmsKeyArn() {
    return resultKmsKeyArn;
  }

  public void setResultKmsKeyArn(String resultKmsKeyArn) {
    this.resultKmsKeyArn = resultKmsKeyArn;
  }


  public StartReplicationTaskAssessmentRunMessage assessmentRunName(String assessmentRunName) {
    this.assessmentRunName = assessmentRunName;
    return this;
  }

  /**
   * Get assessmentRunName
   * @return assessmentRunName
   */
  @javax.annotation.Nonnull
  public String getAssessmentRunName() {
    return assessmentRunName;
  }

  public void setAssessmentRunName(String assessmentRunName) {
    this.assessmentRunName = assessmentRunName;
  }


  public StartReplicationTaskAssessmentRunMessage includeOnly(List includeOnly) {
    this.includeOnly = includeOnly;
    return this;
  }

  /**
   * Get includeOnly
   * @return includeOnly
   */
  @javax.annotation.Nullable
  public List getIncludeOnly() {
    return includeOnly;
  }

  public void setIncludeOnly(List includeOnly) {
    this.includeOnly = includeOnly;
  }


  public StartReplicationTaskAssessmentRunMessage exclude(List exclude) {
    this.exclude = exclude;
    return this;
  }

  /**
   * Get exclude
   * @return exclude
   */
  @javax.annotation.Nullable
  public List getExclude() {
    return exclude;
  }

  public void setExclude(List exclude) {
    this.exclude = exclude;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartReplicationTaskAssessmentRunMessage startReplicationTaskAssessmentRunMessage = (StartReplicationTaskAssessmentRunMessage) o;
    return Objects.equals(this.replicationTaskArn, startReplicationTaskAssessmentRunMessage.replicationTaskArn) &&
        Objects.equals(this.serviceAccessRoleArn, startReplicationTaskAssessmentRunMessage.serviceAccessRoleArn) &&
        Objects.equals(this.resultLocationBucket, startReplicationTaskAssessmentRunMessage.resultLocationBucket) &&
        Objects.equals(this.resultLocationFolder, startReplicationTaskAssessmentRunMessage.resultLocationFolder) &&
        Objects.equals(this.resultEncryptionMode, startReplicationTaskAssessmentRunMessage.resultEncryptionMode) &&
        Objects.equals(this.resultKmsKeyArn, startReplicationTaskAssessmentRunMessage.resultKmsKeyArn) &&
        Objects.equals(this.assessmentRunName, startReplicationTaskAssessmentRunMessage.assessmentRunName) &&
        Objects.equals(this.includeOnly, startReplicationTaskAssessmentRunMessage.includeOnly) &&
        Objects.equals(this.exclude, startReplicationTaskAssessmentRunMessage.exclude);
  }

  @Override
  public int hashCode() {
    return Objects.hash(replicationTaskArn, serviceAccessRoleArn, resultLocationBucket, resultLocationFolder, resultEncryptionMode, resultKmsKeyArn, assessmentRunName, includeOnly, exclude);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartReplicationTaskAssessmentRunMessage {\n");
    sb.append("    replicationTaskArn: ").append(toIndentedString(replicationTaskArn)).append("\n");
    sb.append("    serviceAccessRoleArn: ").append(toIndentedString(serviceAccessRoleArn)).append("\n");
    sb.append("    resultLocationBucket: ").append(toIndentedString(resultLocationBucket)).append("\n");
    sb.append("    resultLocationFolder: ").append(toIndentedString(resultLocationFolder)).append("\n");
    sb.append("    resultEncryptionMode: ").append(toIndentedString(resultEncryptionMode)).append("\n");
    sb.append("    resultKmsKeyArn: ").append(toIndentedString(resultKmsKeyArn)).append("\n");
    sb.append("    assessmentRunName: ").append(toIndentedString(assessmentRunName)).append("\n");
    sb.append("    includeOnly: ").append(toIndentedString(includeOnly)).append("\n");
    sb.append("    exclude: ").append(toIndentedString(exclude)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ReplicationTaskArn");
    openapiFields.add("ServiceAccessRoleArn");
    openapiFields.add("ResultLocationBucket");
    openapiFields.add("ResultLocationFolder");
    openapiFields.add("ResultEncryptionMode");
    openapiFields.add("ResultKmsKeyArn");
    openapiFields.add("AssessmentRunName");
    openapiFields.add("IncludeOnly");
    openapiFields.add("Exclude");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ReplicationTaskArn");
    openapiRequiredFields.add("ServiceAccessRoleArn");
    openapiRequiredFields.add("ResultLocationBucket");
    openapiRequiredFields.add("AssessmentRunName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartReplicationTaskAssessmentRunMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartReplicationTaskAssessmentRunMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartReplicationTaskAssessmentRunMessage is not found in the empty JSON string", StartReplicationTaskAssessmentRunMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartReplicationTaskAssessmentRunMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartReplicationTaskAssessmentRunMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartReplicationTaskAssessmentRunMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ReplicationTaskArn`
      String.validateJsonElement(jsonObj.get("ReplicationTaskArn"));
      // validate the required field `ServiceAccessRoleArn`
      String.validateJsonElement(jsonObj.get("ServiceAccessRoleArn"));
      // validate the required field `ResultLocationBucket`
      String.validateJsonElement(jsonObj.get("ResultLocationBucket"));
      // validate the optional field `ResultLocationFolder`
      if (jsonObj.get("ResultLocationFolder") != null && !jsonObj.get("ResultLocationFolder").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResultLocationFolder"));
      }
      // validate the optional field `ResultEncryptionMode`
      if (jsonObj.get("ResultEncryptionMode") != null && !jsonObj.get("ResultEncryptionMode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResultEncryptionMode"));
      }
      // validate the optional field `ResultKmsKeyArn`
      if (jsonObj.get("ResultKmsKeyArn") != null && !jsonObj.get("ResultKmsKeyArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResultKmsKeyArn"));
      }
      // validate the required field `AssessmentRunName`
      String.validateJsonElement(jsonObj.get("AssessmentRunName"));
      // validate the optional field `IncludeOnly`
      if (jsonObj.get("IncludeOnly") != null && !jsonObj.get("IncludeOnly").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("IncludeOnly"));
      }
      // validate the optional field `Exclude`
      if (jsonObj.get("Exclude") != null && !jsonObj.get("Exclude").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Exclude"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartReplicationTaskAssessmentRunMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartReplicationTaskAssessmentRunMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartReplicationTaskAssessmentRunMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartReplicationTaskAssessmentRunMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<StartReplicationTaskAssessmentRunMessage>() {
           @Override
           public void write(JsonWriter out, StartReplicationTaskAssessmentRunMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartReplicationTaskAssessmentRunMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartReplicationTaskAssessmentRunMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartReplicationTaskAssessmentRunMessage
   * @throws IOException if the JSON string is invalid with respect to StartReplicationTaskAssessmentRunMessage
   */
  public static StartReplicationTaskAssessmentRunMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartReplicationTaskAssessmentRunMessage.class);
  }

  /**
   * Convert an instance of StartReplicationTaskAssessmentRunMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

