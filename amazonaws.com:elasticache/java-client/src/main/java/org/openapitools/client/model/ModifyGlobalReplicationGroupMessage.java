/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModifyGlobalReplicationGroupMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:54:06.397774-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModifyGlobalReplicationGroupMessage {
  public static final String SERIALIZED_NAME_GLOBAL_REPLICATION_GROUP_ID = "GlobalReplicationGroupId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_REPLICATION_GROUP_ID)
  private String globalReplicationGroupId;

  public static final String SERIALIZED_NAME_APPLY_IMMEDIATELY = "ApplyImmediately";
  @SerializedName(SERIALIZED_NAME_APPLY_IMMEDIATELY)
  private Boolean applyImmediately;

  public static final String SERIALIZED_NAME_CACHE_NODE_TYPE = "CacheNodeType";
  @SerializedName(SERIALIZED_NAME_CACHE_NODE_TYPE)
  private String cacheNodeType;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_CACHE_PARAMETER_GROUP_NAME = "CacheParameterGroupName";
  @SerializedName(SERIALIZED_NAME_CACHE_PARAMETER_GROUP_NAME)
  private String cacheParameterGroupName;

  public static final String SERIALIZED_NAME_GLOBAL_REPLICATION_GROUP_DESCRIPTION = "GlobalReplicationGroupDescription";
  @SerializedName(SERIALIZED_NAME_GLOBAL_REPLICATION_GROUP_DESCRIPTION)
  private String globalReplicationGroupDescription;

  public static final String SERIALIZED_NAME_AUTOMATIC_FAILOVER_ENABLED = "AutomaticFailoverEnabled";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_FAILOVER_ENABLED)
  private Boolean automaticFailoverEnabled;

  public ModifyGlobalReplicationGroupMessage() {
  }

  public ModifyGlobalReplicationGroupMessage globalReplicationGroupId(String globalReplicationGroupId) {
    this.globalReplicationGroupId = globalReplicationGroupId;
    return this;
  }

  /**
   * Get globalReplicationGroupId
   * @return globalReplicationGroupId
   */
  @javax.annotation.Nonnull
  public String getGlobalReplicationGroupId() {
    return globalReplicationGroupId;
  }

  public void setGlobalReplicationGroupId(String globalReplicationGroupId) {
    this.globalReplicationGroupId = globalReplicationGroupId;
  }


  public ModifyGlobalReplicationGroupMessage applyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
    return this;
  }

  /**
   * Get applyImmediately
   * @return applyImmediately
   */
  @javax.annotation.Nonnull
  public Boolean getApplyImmediately() {
    return applyImmediately;
  }

  public void setApplyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
  }


  public ModifyGlobalReplicationGroupMessage cacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
    return this;
  }

  /**
   * Get cacheNodeType
   * @return cacheNodeType
   */
  @javax.annotation.Nullable
  public String getCacheNodeType() {
    return cacheNodeType;
  }

  public void setCacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
  }


  public ModifyGlobalReplicationGroupMessage engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public ModifyGlobalReplicationGroupMessage cacheParameterGroupName(String cacheParameterGroupName) {
    this.cacheParameterGroupName = cacheParameterGroupName;
    return this;
  }

  /**
   * Get cacheParameterGroupName
   * @return cacheParameterGroupName
   */
  @javax.annotation.Nullable
  public String getCacheParameterGroupName() {
    return cacheParameterGroupName;
  }

  public void setCacheParameterGroupName(String cacheParameterGroupName) {
    this.cacheParameterGroupName = cacheParameterGroupName;
  }


  public ModifyGlobalReplicationGroupMessage globalReplicationGroupDescription(String globalReplicationGroupDescription) {
    this.globalReplicationGroupDescription = globalReplicationGroupDescription;
    return this;
  }

  /**
   * Get globalReplicationGroupDescription
   * @return globalReplicationGroupDescription
   */
  @javax.annotation.Nullable
  public String getGlobalReplicationGroupDescription() {
    return globalReplicationGroupDescription;
  }

  public void setGlobalReplicationGroupDescription(String globalReplicationGroupDescription) {
    this.globalReplicationGroupDescription = globalReplicationGroupDescription;
  }


  public ModifyGlobalReplicationGroupMessage automaticFailoverEnabled(Boolean automaticFailoverEnabled) {
    this.automaticFailoverEnabled = automaticFailoverEnabled;
    return this;
  }

  /**
   * Get automaticFailoverEnabled
   * @return automaticFailoverEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAutomaticFailoverEnabled() {
    return automaticFailoverEnabled;
  }

  public void setAutomaticFailoverEnabled(Boolean automaticFailoverEnabled) {
    this.automaticFailoverEnabled = automaticFailoverEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyGlobalReplicationGroupMessage modifyGlobalReplicationGroupMessage = (ModifyGlobalReplicationGroupMessage) o;
    return Objects.equals(this.globalReplicationGroupId, modifyGlobalReplicationGroupMessage.globalReplicationGroupId) &&
        Objects.equals(this.applyImmediately, modifyGlobalReplicationGroupMessage.applyImmediately) &&
        Objects.equals(this.cacheNodeType, modifyGlobalReplicationGroupMessage.cacheNodeType) &&
        Objects.equals(this.engineVersion, modifyGlobalReplicationGroupMessage.engineVersion) &&
        Objects.equals(this.cacheParameterGroupName, modifyGlobalReplicationGroupMessage.cacheParameterGroupName) &&
        Objects.equals(this.globalReplicationGroupDescription, modifyGlobalReplicationGroupMessage.globalReplicationGroupDescription) &&
        Objects.equals(this.automaticFailoverEnabled, modifyGlobalReplicationGroupMessage.automaticFailoverEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(globalReplicationGroupId, applyImmediately, cacheNodeType, engineVersion, cacheParameterGroupName, globalReplicationGroupDescription, automaticFailoverEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyGlobalReplicationGroupMessage {\n");
    sb.append("    globalReplicationGroupId: ").append(toIndentedString(globalReplicationGroupId)).append("\n");
    sb.append("    applyImmediately: ").append(toIndentedString(applyImmediately)).append("\n");
    sb.append("    cacheNodeType: ").append(toIndentedString(cacheNodeType)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    cacheParameterGroupName: ").append(toIndentedString(cacheParameterGroupName)).append("\n");
    sb.append("    globalReplicationGroupDescription: ").append(toIndentedString(globalReplicationGroupDescription)).append("\n");
    sb.append("    automaticFailoverEnabled: ").append(toIndentedString(automaticFailoverEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("GlobalReplicationGroupId");
    openapiFields.add("ApplyImmediately");
    openapiFields.add("CacheNodeType");
    openapiFields.add("EngineVersion");
    openapiFields.add("CacheParameterGroupName");
    openapiFields.add("GlobalReplicationGroupDescription");
    openapiFields.add("AutomaticFailoverEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("GlobalReplicationGroupId");
    openapiRequiredFields.add("ApplyImmediately");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModifyGlobalReplicationGroupMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyGlobalReplicationGroupMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyGlobalReplicationGroupMessage is not found in the empty JSON string", ModifyGlobalReplicationGroupMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModifyGlobalReplicationGroupMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModifyGlobalReplicationGroupMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModifyGlobalReplicationGroupMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `GlobalReplicationGroupId`
      String.validateJsonElement(jsonObj.get("GlobalReplicationGroupId"));
      // validate the required field `ApplyImmediately`
      Boolean.validateJsonElement(jsonObj.get("ApplyImmediately"));
      // validate the optional field `CacheNodeType`
      if (jsonObj.get("CacheNodeType") != null && !jsonObj.get("CacheNodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheNodeType"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `CacheParameterGroupName`
      if (jsonObj.get("CacheParameterGroupName") != null && !jsonObj.get("CacheParameterGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheParameterGroupName"));
      }
      // validate the optional field `GlobalReplicationGroupDescription`
      if (jsonObj.get("GlobalReplicationGroupDescription") != null && !jsonObj.get("GlobalReplicationGroupDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GlobalReplicationGroupDescription"));
      }
      // validate the optional field `AutomaticFailoverEnabled`
      if (jsonObj.get("AutomaticFailoverEnabled") != null && !jsonObj.get("AutomaticFailoverEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutomaticFailoverEnabled"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyGlobalReplicationGroupMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyGlobalReplicationGroupMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyGlobalReplicationGroupMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyGlobalReplicationGroupMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyGlobalReplicationGroupMessage>() {
           @Override
           public void write(JsonWriter out, ModifyGlobalReplicationGroupMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyGlobalReplicationGroupMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModifyGlobalReplicationGroupMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModifyGlobalReplicationGroupMessage
   * @throws IOException if the JSON string is invalid with respect to ModifyGlobalReplicationGroupMessage
   */
  public static ModifyGlobalReplicationGroupMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyGlobalReplicationGroupMessage.class);
  }

  /**
   * Convert an instance of ModifyGlobalReplicationGroupMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

