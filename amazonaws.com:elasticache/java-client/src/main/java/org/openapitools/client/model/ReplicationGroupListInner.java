/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutomaticFailoverStatus;
import org.openapitools.client.model.DataTieringStatus;
import org.openapitools.client.model.IpDiscovery;
import org.openapitools.client.model.MultiAZStatus;
import org.openapitools.client.model.NetworkType;
import org.openapitools.client.model.ReplicationGroupConfigurationEndpoint;
import org.openapitools.client.model.ReplicationGroupGlobalReplicationGroupInfo;
import org.openapitools.client.model.ReplicationGroupPendingModifiedValues;
import org.openapitools.client.model.TransitEncryptionMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ReplicationGroupListInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:56:16.135451-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ReplicationGroupListInner {
  public static final String SERIALIZED_NAME_REPLICATION_GROUP_ID = "ReplicationGroupId";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_ID)
  private String replicationGroupId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GLOBAL_REPLICATION_GROUP_INFO = "GlobalReplicationGroupInfo";
  @SerializedName(SERIALIZED_NAME_GLOBAL_REPLICATION_GROUP_INFO)
  private ReplicationGroupGlobalReplicationGroupInfo globalReplicationGroupInfo;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_PENDING_MODIFIED_VALUES = "PendingModifiedValues";
  @SerializedName(SERIALIZED_NAME_PENDING_MODIFIED_VALUES)
  private ReplicationGroupPendingModifiedValues pendingModifiedValues;

  public static final String SERIALIZED_NAME_MEMBER_CLUSTERS = "MemberClusters";
  @SerializedName(SERIALIZED_NAME_MEMBER_CLUSTERS)
  private List memberClusters;

  public static final String SERIALIZED_NAME_NODE_GROUPS = "NodeGroups";
  @SerializedName(SERIALIZED_NAME_NODE_GROUPS)
  private List nodeGroups;

  public static final String SERIALIZED_NAME_SNAPSHOTTING_CLUSTER_ID = "SnapshottingClusterId";
  @SerializedName(SERIALIZED_NAME_SNAPSHOTTING_CLUSTER_ID)
  private String snapshottingClusterId;

  public static final String SERIALIZED_NAME_AUTOMATIC_FAILOVER = "AutomaticFailover";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_FAILOVER)
  private AutomaticFailoverStatus automaticFailover;

  public static final String SERIALIZED_NAME_MULTI_A_Z = "MultiAZ";
  @SerializedName(SERIALIZED_NAME_MULTI_A_Z)
  private MultiAZStatus multiAZ;

  public static final String SERIALIZED_NAME_CONFIGURATION_ENDPOINT = "ConfigurationEndpoint";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_ENDPOINT)
  private ReplicationGroupConfigurationEndpoint configurationEndpoint;

  public static final String SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT = "SnapshotRetentionLimit";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT)
  private Integer snapshotRetentionLimit;

  public static final String SERIALIZED_NAME_SNAPSHOT_WINDOW = "SnapshotWindow";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_WINDOW)
  private String snapshotWindow;

  public static final String SERIALIZED_NAME_CLUSTER_ENABLED = "ClusterEnabled";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ENABLED)
  private Boolean clusterEnabled;

  public static final String SERIALIZED_NAME_CACHE_NODE_TYPE = "CacheNodeType";
  @SerializedName(SERIALIZED_NAME_CACHE_NODE_TYPE)
  private String cacheNodeType;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_ENABLED = "AuthTokenEnabled";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_ENABLED)
  private Boolean authTokenEnabled;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_LAST_MODIFIED_DATE = "AuthTokenLastModifiedDate";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_LAST_MODIFIED_DATE)
  private OffsetDateTime authTokenLastModifiedDate;

  public static final String SERIALIZED_NAME_TRANSIT_ENCRYPTION_ENABLED = "TransitEncryptionEnabled";
  @SerializedName(SERIALIZED_NAME_TRANSIT_ENCRYPTION_ENABLED)
  private Boolean transitEncryptionEnabled;

  public static final String SERIALIZED_NAME_AT_REST_ENCRYPTION_ENABLED = "AtRestEncryptionEnabled";
  @SerializedName(SERIALIZED_NAME_AT_REST_ENCRYPTION_ENABLED)
  private Boolean atRestEncryptionEnabled;

  public static final String SERIALIZED_NAME_MEMBER_CLUSTERS_OUTPOST_ARNS = "MemberClustersOutpostArns";
  @SerializedName(SERIALIZED_NAME_MEMBER_CLUSTERS_OUTPOST_ARNS)
  private List memberClustersOutpostArns;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_A_R_N = "ARN";
  @SerializedName(SERIALIZED_NAME_A_R_N)
  private String ARN;

  public static final String SERIALIZED_NAME_USER_GROUP_IDS = "UserGroupIds";
  @SerializedName(SERIALIZED_NAME_USER_GROUP_IDS)
  private List userGroupIds;

  public static final String SERIALIZED_NAME_LOG_DELIVERY_CONFIGURATIONS = "LogDeliveryConfigurations";
  @SerializedName(SERIALIZED_NAME_LOG_DELIVERY_CONFIGURATIONS)
  private List logDeliveryConfigurations;

  public static final String SERIALIZED_NAME_REPLICATION_GROUP_CREATE_TIME = "ReplicationGroupCreateTime";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_CREATE_TIME)
  private OffsetDateTime replicationGroupCreateTime;

  public static final String SERIALIZED_NAME_DATA_TIERING = "DataTiering";
  @SerializedName(SERIALIZED_NAME_DATA_TIERING)
  private DataTieringStatus dataTiering;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_NETWORK_TYPE = "NetworkType";
  @SerializedName(SERIALIZED_NAME_NETWORK_TYPE)
  private NetworkType networkType;

  public static final String SERIALIZED_NAME_IP_DISCOVERY = "IpDiscovery";
  @SerializedName(SERIALIZED_NAME_IP_DISCOVERY)
  private IpDiscovery ipDiscovery;

  public static final String SERIALIZED_NAME_TRANSIT_ENCRYPTION_MODE = "TransitEncryptionMode";
  @SerializedName(SERIALIZED_NAME_TRANSIT_ENCRYPTION_MODE)
  private TransitEncryptionMode transitEncryptionMode;

  public ReplicationGroupListInner() {
  }

  public ReplicationGroupListInner replicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
    return this;
  }

  /**
   * Get replicationGroupId
   * @return replicationGroupId
   */
  @javax.annotation.Nullable
  public String getReplicationGroupId() {
    return replicationGroupId;
  }

  public void setReplicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
  }


  public ReplicationGroupListInner description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ReplicationGroupListInner globalReplicationGroupInfo(ReplicationGroupGlobalReplicationGroupInfo globalReplicationGroupInfo) {
    this.globalReplicationGroupInfo = globalReplicationGroupInfo;
    return this;
  }

  /**
   * Get globalReplicationGroupInfo
   * @return globalReplicationGroupInfo
   */
  @javax.annotation.Nullable
  public ReplicationGroupGlobalReplicationGroupInfo getGlobalReplicationGroupInfo() {
    return globalReplicationGroupInfo;
  }

  public void setGlobalReplicationGroupInfo(ReplicationGroupGlobalReplicationGroupInfo globalReplicationGroupInfo) {
    this.globalReplicationGroupInfo = globalReplicationGroupInfo;
  }


  public ReplicationGroupListInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ReplicationGroupListInner pendingModifiedValues(ReplicationGroupPendingModifiedValues pendingModifiedValues) {
    this.pendingModifiedValues = pendingModifiedValues;
    return this;
  }

  /**
   * Get pendingModifiedValues
   * @return pendingModifiedValues
   */
  @javax.annotation.Nullable
  public ReplicationGroupPendingModifiedValues getPendingModifiedValues() {
    return pendingModifiedValues;
  }

  public void setPendingModifiedValues(ReplicationGroupPendingModifiedValues pendingModifiedValues) {
    this.pendingModifiedValues = pendingModifiedValues;
  }


  public ReplicationGroupListInner memberClusters(List memberClusters) {
    this.memberClusters = memberClusters;
    return this;
  }

  /**
   * Get memberClusters
   * @return memberClusters
   */
  @javax.annotation.Nullable
  public List getMemberClusters() {
    return memberClusters;
  }

  public void setMemberClusters(List memberClusters) {
    this.memberClusters = memberClusters;
  }


  public ReplicationGroupListInner nodeGroups(List nodeGroups) {
    this.nodeGroups = nodeGroups;
    return this;
  }

  /**
   * Get nodeGroups
   * @return nodeGroups
   */
  @javax.annotation.Nullable
  public List getNodeGroups() {
    return nodeGroups;
  }

  public void setNodeGroups(List nodeGroups) {
    this.nodeGroups = nodeGroups;
  }


  public ReplicationGroupListInner snapshottingClusterId(String snapshottingClusterId) {
    this.snapshottingClusterId = snapshottingClusterId;
    return this;
  }

  /**
   * Get snapshottingClusterId
   * @return snapshottingClusterId
   */
  @javax.annotation.Nullable
  public String getSnapshottingClusterId() {
    return snapshottingClusterId;
  }

  public void setSnapshottingClusterId(String snapshottingClusterId) {
    this.snapshottingClusterId = snapshottingClusterId;
  }


  public ReplicationGroupListInner automaticFailover(AutomaticFailoverStatus automaticFailover) {
    this.automaticFailover = automaticFailover;
    return this;
  }

  /**
   * Get automaticFailover
   * @return automaticFailover
   */
  @javax.annotation.Nullable
  public AutomaticFailoverStatus getAutomaticFailover() {
    return automaticFailover;
  }

  public void setAutomaticFailover(AutomaticFailoverStatus automaticFailover) {
    this.automaticFailover = automaticFailover;
  }


  public ReplicationGroupListInner multiAZ(MultiAZStatus multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

  /**
   * Get multiAZ
   * @return multiAZ
   */
  @javax.annotation.Nullable
  public MultiAZStatus getMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(MultiAZStatus multiAZ) {
    this.multiAZ = multiAZ;
  }


  public ReplicationGroupListInner configurationEndpoint(ReplicationGroupConfigurationEndpoint configurationEndpoint) {
    this.configurationEndpoint = configurationEndpoint;
    return this;
  }

  /**
   * Get configurationEndpoint
   * @return configurationEndpoint
   */
  @javax.annotation.Nullable
  public ReplicationGroupConfigurationEndpoint getConfigurationEndpoint() {
    return configurationEndpoint;
  }

  public void setConfigurationEndpoint(ReplicationGroupConfigurationEndpoint configurationEndpoint) {
    this.configurationEndpoint = configurationEndpoint;
  }


  public ReplicationGroupListInner snapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
    return this;
  }

  /**
   * Get snapshotRetentionLimit
   * @return snapshotRetentionLimit
   */
  @javax.annotation.Nullable
  public Integer getSnapshotRetentionLimit() {
    return snapshotRetentionLimit;
  }

  public void setSnapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
  }


  public ReplicationGroupListInner snapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
    return this;
  }

  /**
   * Get snapshotWindow
   * @return snapshotWindow
   */
  @javax.annotation.Nullable
  public String getSnapshotWindow() {
    return snapshotWindow;
  }

  public void setSnapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
  }


  public ReplicationGroupListInner clusterEnabled(Boolean clusterEnabled) {
    this.clusterEnabled = clusterEnabled;
    return this;
  }

  /**
   * Get clusterEnabled
   * @return clusterEnabled
   */
  @javax.annotation.Nullable
  public Boolean getClusterEnabled() {
    return clusterEnabled;
  }

  public void setClusterEnabled(Boolean clusterEnabled) {
    this.clusterEnabled = clusterEnabled;
  }


  public ReplicationGroupListInner cacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
    return this;
  }

  /**
   * Get cacheNodeType
   * @return cacheNodeType
   */
  @javax.annotation.Nullable
  public String getCacheNodeType() {
    return cacheNodeType;
  }

  public void setCacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
  }


  public ReplicationGroupListInner authTokenEnabled(Boolean authTokenEnabled) {
    this.authTokenEnabled = authTokenEnabled;
    return this;
  }

  /**
   * Get authTokenEnabled
   * @return authTokenEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAuthTokenEnabled() {
    return authTokenEnabled;
  }

  public void setAuthTokenEnabled(Boolean authTokenEnabled) {
    this.authTokenEnabled = authTokenEnabled;
  }


  public ReplicationGroupListInner authTokenLastModifiedDate(OffsetDateTime authTokenLastModifiedDate) {
    this.authTokenLastModifiedDate = authTokenLastModifiedDate;
    return this;
  }

  /**
   * Get authTokenLastModifiedDate
   * @return authTokenLastModifiedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAuthTokenLastModifiedDate() {
    return authTokenLastModifiedDate;
  }

  public void setAuthTokenLastModifiedDate(OffsetDateTime authTokenLastModifiedDate) {
    this.authTokenLastModifiedDate = authTokenLastModifiedDate;
  }


  public ReplicationGroupListInner transitEncryptionEnabled(Boolean transitEncryptionEnabled) {
    this.transitEncryptionEnabled = transitEncryptionEnabled;
    return this;
  }

  /**
   * Get transitEncryptionEnabled
   * @return transitEncryptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTransitEncryptionEnabled() {
    return transitEncryptionEnabled;
  }

  public void setTransitEncryptionEnabled(Boolean transitEncryptionEnabled) {
    this.transitEncryptionEnabled = transitEncryptionEnabled;
  }


  public ReplicationGroupListInner atRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
    this.atRestEncryptionEnabled = atRestEncryptionEnabled;
    return this;
  }

  /**
   * Get atRestEncryptionEnabled
   * @return atRestEncryptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAtRestEncryptionEnabled() {
    return atRestEncryptionEnabled;
  }

  public void setAtRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
    this.atRestEncryptionEnabled = atRestEncryptionEnabled;
  }


  public ReplicationGroupListInner memberClustersOutpostArns(List memberClustersOutpostArns) {
    this.memberClustersOutpostArns = memberClustersOutpostArns;
    return this;
  }

  /**
   * Get memberClustersOutpostArns
   * @return memberClustersOutpostArns
   */
  @javax.annotation.Nullable
  public List getMemberClustersOutpostArns() {
    return memberClustersOutpostArns;
  }

  public void setMemberClustersOutpostArns(List memberClustersOutpostArns) {
    this.memberClustersOutpostArns = memberClustersOutpostArns;
  }


  public ReplicationGroupListInner kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public ReplicationGroupListInner ARN(String ARN) {
    this.ARN = ARN;
    return this;
  }

  /**
   * Get ARN
   * @return ARN
   */
  @javax.annotation.Nullable
  public String getARN() {
    return ARN;
  }

  public void setARN(String ARN) {
    this.ARN = ARN;
  }


  public ReplicationGroupListInner userGroupIds(List userGroupIds) {
    this.userGroupIds = userGroupIds;
    return this;
  }

  /**
   * Get userGroupIds
   * @return userGroupIds
   */
  @javax.annotation.Nullable
  public List getUserGroupIds() {
    return userGroupIds;
  }

  public void setUserGroupIds(List userGroupIds) {
    this.userGroupIds = userGroupIds;
  }


  public ReplicationGroupListInner logDeliveryConfigurations(List logDeliveryConfigurations) {
    this.logDeliveryConfigurations = logDeliveryConfigurations;
    return this;
  }

  /**
   * Get logDeliveryConfigurations
   * @return logDeliveryConfigurations
   */
  @javax.annotation.Nullable
  public List getLogDeliveryConfigurations() {
    return logDeliveryConfigurations;
  }

  public void setLogDeliveryConfigurations(List logDeliveryConfigurations) {
    this.logDeliveryConfigurations = logDeliveryConfigurations;
  }


  public ReplicationGroupListInner replicationGroupCreateTime(OffsetDateTime replicationGroupCreateTime) {
    this.replicationGroupCreateTime = replicationGroupCreateTime;
    return this;
  }

  /**
   * Get replicationGroupCreateTime
   * @return replicationGroupCreateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getReplicationGroupCreateTime() {
    return replicationGroupCreateTime;
  }

  public void setReplicationGroupCreateTime(OffsetDateTime replicationGroupCreateTime) {
    this.replicationGroupCreateTime = replicationGroupCreateTime;
  }


  public ReplicationGroupListInner dataTiering(DataTieringStatus dataTiering) {
    this.dataTiering = dataTiering;
    return this;
  }

  /**
   * Get dataTiering
   * @return dataTiering
   */
  @javax.annotation.Nullable
  public DataTieringStatus getDataTiering() {
    return dataTiering;
  }

  public void setDataTiering(DataTieringStatus dataTiering) {
    this.dataTiering = dataTiering;
  }


  public ReplicationGroupListInner autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public ReplicationGroupListInner networkType(NetworkType networkType) {
    this.networkType = networkType;
    return this;
  }

  /**
   * Get networkType
   * @return networkType
   */
  @javax.annotation.Nullable
  public NetworkType getNetworkType() {
    return networkType;
  }

  public void setNetworkType(NetworkType networkType) {
    this.networkType = networkType;
  }


  public ReplicationGroupListInner ipDiscovery(IpDiscovery ipDiscovery) {
    this.ipDiscovery = ipDiscovery;
    return this;
  }

  /**
   * Get ipDiscovery
   * @return ipDiscovery
   */
  @javax.annotation.Nullable
  public IpDiscovery getIpDiscovery() {
    return ipDiscovery;
  }

  public void setIpDiscovery(IpDiscovery ipDiscovery) {
    this.ipDiscovery = ipDiscovery;
  }


  public ReplicationGroupListInner transitEncryptionMode(TransitEncryptionMode transitEncryptionMode) {
    this.transitEncryptionMode = transitEncryptionMode;
    return this;
  }

  /**
   * Get transitEncryptionMode
   * @return transitEncryptionMode
   */
  @javax.annotation.Nullable
  public TransitEncryptionMode getTransitEncryptionMode() {
    return transitEncryptionMode;
  }

  public void setTransitEncryptionMode(TransitEncryptionMode transitEncryptionMode) {
    this.transitEncryptionMode = transitEncryptionMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplicationGroupListInner replicationGroupListInner = (ReplicationGroupListInner) o;
    return Objects.equals(this.replicationGroupId, replicationGroupListInner.replicationGroupId) &&
        Objects.equals(this.description, replicationGroupListInner.description) &&
        Objects.equals(this.globalReplicationGroupInfo, replicationGroupListInner.globalReplicationGroupInfo) &&
        Objects.equals(this.status, replicationGroupListInner.status) &&
        Objects.equals(this.pendingModifiedValues, replicationGroupListInner.pendingModifiedValues) &&
        Objects.equals(this.memberClusters, replicationGroupListInner.memberClusters) &&
        Objects.equals(this.nodeGroups, replicationGroupListInner.nodeGroups) &&
        Objects.equals(this.snapshottingClusterId, replicationGroupListInner.snapshottingClusterId) &&
        Objects.equals(this.automaticFailover, replicationGroupListInner.automaticFailover) &&
        Objects.equals(this.multiAZ, replicationGroupListInner.multiAZ) &&
        Objects.equals(this.configurationEndpoint, replicationGroupListInner.configurationEndpoint) &&
        Objects.equals(this.snapshotRetentionLimit, replicationGroupListInner.snapshotRetentionLimit) &&
        Objects.equals(this.snapshotWindow, replicationGroupListInner.snapshotWindow) &&
        Objects.equals(this.clusterEnabled, replicationGroupListInner.clusterEnabled) &&
        Objects.equals(this.cacheNodeType, replicationGroupListInner.cacheNodeType) &&
        Objects.equals(this.authTokenEnabled, replicationGroupListInner.authTokenEnabled) &&
        Objects.equals(this.authTokenLastModifiedDate, replicationGroupListInner.authTokenLastModifiedDate) &&
        Objects.equals(this.transitEncryptionEnabled, replicationGroupListInner.transitEncryptionEnabled) &&
        Objects.equals(this.atRestEncryptionEnabled, replicationGroupListInner.atRestEncryptionEnabled) &&
        Objects.equals(this.memberClustersOutpostArns, replicationGroupListInner.memberClustersOutpostArns) &&
        Objects.equals(this.kmsKeyId, replicationGroupListInner.kmsKeyId) &&
        Objects.equals(this.ARN, replicationGroupListInner.ARN) &&
        Objects.equals(this.userGroupIds, replicationGroupListInner.userGroupIds) &&
        Objects.equals(this.logDeliveryConfigurations, replicationGroupListInner.logDeliveryConfigurations) &&
        Objects.equals(this.replicationGroupCreateTime, replicationGroupListInner.replicationGroupCreateTime) &&
        Objects.equals(this.dataTiering, replicationGroupListInner.dataTiering) &&
        Objects.equals(this.autoMinorVersionUpgrade, replicationGroupListInner.autoMinorVersionUpgrade) &&
        Objects.equals(this.networkType, replicationGroupListInner.networkType) &&
        Objects.equals(this.ipDiscovery, replicationGroupListInner.ipDiscovery) &&
        Objects.equals(this.transitEncryptionMode, replicationGroupListInner.transitEncryptionMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(replicationGroupId, description, globalReplicationGroupInfo, status, pendingModifiedValues, memberClusters, nodeGroups, snapshottingClusterId, automaticFailover, multiAZ, configurationEndpoint, snapshotRetentionLimit, snapshotWindow, clusterEnabled, cacheNodeType, authTokenEnabled, authTokenLastModifiedDate, transitEncryptionEnabled, atRestEncryptionEnabled, memberClustersOutpostArns, kmsKeyId, ARN, userGroupIds, logDeliveryConfigurations, replicationGroupCreateTime, dataTiering, autoMinorVersionUpgrade, networkType, ipDiscovery, transitEncryptionMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplicationGroupListInner {\n");
    sb.append("    replicationGroupId: ").append(toIndentedString(replicationGroupId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    globalReplicationGroupInfo: ").append(toIndentedString(globalReplicationGroupInfo)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    pendingModifiedValues: ").append(toIndentedString(pendingModifiedValues)).append("\n");
    sb.append("    memberClusters: ").append(toIndentedString(memberClusters)).append("\n");
    sb.append("    nodeGroups: ").append(toIndentedString(nodeGroups)).append("\n");
    sb.append("    snapshottingClusterId: ").append(toIndentedString(snapshottingClusterId)).append("\n");
    sb.append("    automaticFailover: ").append(toIndentedString(automaticFailover)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    configurationEndpoint: ").append(toIndentedString(configurationEndpoint)).append("\n");
    sb.append("    snapshotRetentionLimit: ").append(toIndentedString(snapshotRetentionLimit)).append("\n");
    sb.append("    snapshotWindow: ").append(toIndentedString(snapshotWindow)).append("\n");
    sb.append("    clusterEnabled: ").append(toIndentedString(clusterEnabled)).append("\n");
    sb.append("    cacheNodeType: ").append(toIndentedString(cacheNodeType)).append("\n");
    sb.append("    authTokenEnabled: ").append(toIndentedString(authTokenEnabled)).append("\n");
    sb.append("    authTokenLastModifiedDate: ").append(toIndentedString(authTokenLastModifiedDate)).append("\n");
    sb.append("    transitEncryptionEnabled: ").append(toIndentedString(transitEncryptionEnabled)).append("\n");
    sb.append("    atRestEncryptionEnabled: ").append(toIndentedString(atRestEncryptionEnabled)).append("\n");
    sb.append("    memberClustersOutpostArns: ").append(toIndentedString(memberClustersOutpostArns)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    ARN: ").append(toIndentedString(ARN)).append("\n");
    sb.append("    userGroupIds: ").append(toIndentedString(userGroupIds)).append("\n");
    sb.append("    logDeliveryConfigurations: ").append(toIndentedString(logDeliveryConfigurations)).append("\n");
    sb.append("    replicationGroupCreateTime: ").append(toIndentedString(replicationGroupCreateTime)).append("\n");
    sb.append("    dataTiering: ").append(toIndentedString(dataTiering)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    ipDiscovery: ").append(toIndentedString(ipDiscovery)).append("\n");
    sb.append("    transitEncryptionMode: ").append(toIndentedString(transitEncryptionMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ReplicationGroupId");
    openapiFields.add("Description");
    openapiFields.add("GlobalReplicationGroupInfo");
    openapiFields.add("Status");
    openapiFields.add("PendingModifiedValues");
    openapiFields.add("MemberClusters");
    openapiFields.add("NodeGroups");
    openapiFields.add("SnapshottingClusterId");
    openapiFields.add("AutomaticFailover");
    openapiFields.add("MultiAZ");
    openapiFields.add("ConfigurationEndpoint");
    openapiFields.add("SnapshotRetentionLimit");
    openapiFields.add("SnapshotWindow");
    openapiFields.add("ClusterEnabled");
    openapiFields.add("CacheNodeType");
    openapiFields.add("AuthTokenEnabled");
    openapiFields.add("AuthTokenLastModifiedDate");
    openapiFields.add("TransitEncryptionEnabled");
    openapiFields.add("AtRestEncryptionEnabled");
    openapiFields.add("MemberClustersOutpostArns");
    openapiFields.add("KmsKeyId");
    openapiFields.add("ARN");
    openapiFields.add("UserGroupIds");
    openapiFields.add("LogDeliveryConfigurations");
    openapiFields.add("ReplicationGroupCreateTime");
    openapiFields.add("DataTiering");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("NetworkType");
    openapiFields.add("IpDiscovery");
    openapiFields.add("TransitEncryptionMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ReplicationGroupListInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ReplicationGroupListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReplicationGroupListInner is not found in the empty JSON string", ReplicationGroupListInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ReplicationGroupListInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ReplicationGroupListInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ReplicationGroupId`
      if (jsonObj.get("ReplicationGroupId") != null && !jsonObj.get("ReplicationGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReplicationGroupId"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `GlobalReplicationGroupInfo`
      if (jsonObj.get("GlobalReplicationGroupInfo") != null && !jsonObj.get("GlobalReplicationGroupInfo").isJsonNull()) {
        ReplicationGroupGlobalReplicationGroupInfo.validateJsonElement(jsonObj.get("GlobalReplicationGroupInfo"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `PendingModifiedValues`
      if (jsonObj.get("PendingModifiedValues") != null && !jsonObj.get("PendingModifiedValues").isJsonNull()) {
        ReplicationGroupPendingModifiedValues.validateJsonElement(jsonObj.get("PendingModifiedValues"));
      }
      // validate the optional field `MemberClusters`
      if (jsonObj.get("MemberClusters") != null && !jsonObj.get("MemberClusters").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MemberClusters"));
      }
      // validate the optional field `NodeGroups`
      if (jsonObj.get("NodeGroups") != null && !jsonObj.get("NodeGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NodeGroups"));
      }
      // validate the optional field `SnapshottingClusterId`
      if (jsonObj.get("SnapshottingClusterId") != null && !jsonObj.get("SnapshottingClusterId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshottingClusterId"));
      }
      // validate the optional field `AutomaticFailover`
      if (jsonObj.get("AutomaticFailover") != null && !jsonObj.get("AutomaticFailover").isJsonNull()) {
        AutomaticFailoverStatus.validateJsonElement(jsonObj.get("AutomaticFailover"));
      }
      // validate the optional field `MultiAZ`
      if (jsonObj.get("MultiAZ") != null && !jsonObj.get("MultiAZ").isJsonNull()) {
        MultiAZStatus.validateJsonElement(jsonObj.get("MultiAZ"));
      }
      // validate the optional field `ConfigurationEndpoint`
      if (jsonObj.get("ConfigurationEndpoint") != null && !jsonObj.get("ConfigurationEndpoint").isJsonNull()) {
        ReplicationGroupConfigurationEndpoint.validateJsonElement(jsonObj.get("ConfigurationEndpoint"));
      }
      // validate the optional field `SnapshotRetentionLimit`
      if (jsonObj.get("SnapshotRetentionLimit") != null && !jsonObj.get("SnapshotRetentionLimit").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SnapshotRetentionLimit"));
      }
      // validate the optional field `SnapshotWindow`
      if (jsonObj.get("SnapshotWindow") != null && !jsonObj.get("SnapshotWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotWindow"));
      }
      // validate the optional field `ClusterEnabled`
      if (jsonObj.get("ClusterEnabled") != null && !jsonObj.get("ClusterEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ClusterEnabled"));
      }
      // validate the optional field `CacheNodeType`
      if (jsonObj.get("CacheNodeType") != null && !jsonObj.get("CacheNodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheNodeType"));
      }
      // validate the optional field `AuthTokenEnabled`
      if (jsonObj.get("AuthTokenEnabled") != null && !jsonObj.get("AuthTokenEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AuthTokenEnabled"));
      }
      // validate the optional field `AuthTokenLastModifiedDate`
      if (jsonObj.get("AuthTokenLastModifiedDate") != null && !jsonObj.get("AuthTokenLastModifiedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("AuthTokenLastModifiedDate"));
      }
      // validate the optional field `TransitEncryptionEnabled`
      if (jsonObj.get("TransitEncryptionEnabled") != null && !jsonObj.get("TransitEncryptionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("TransitEncryptionEnabled"));
      }
      // validate the optional field `AtRestEncryptionEnabled`
      if (jsonObj.get("AtRestEncryptionEnabled") != null && !jsonObj.get("AtRestEncryptionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AtRestEncryptionEnabled"));
      }
      // validate the optional field `MemberClustersOutpostArns`
      if (jsonObj.get("MemberClustersOutpostArns") != null && !jsonObj.get("MemberClustersOutpostArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MemberClustersOutpostArns"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `ARN`
      if (jsonObj.get("ARN") != null && !jsonObj.get("ARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ARN"));
      }
      // validate the optional field `UserGroupIds`
      if (jsonObj.get("UserGroupIds") != null && !jsonObj.get("UserGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("UserGroupIds"));
      }
      // validate the optional field `LogDeliveryConfigurations`
      if (jsonObj.get("LogDeliveryConfigurations") != null && !jsonObj.get("LogDeliveryConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LogDeliveryConfigurations"));
      }
      // validate the optional field `ReplicationGroupCreateTime`
      if (jsonObj.get("ReplicationGroupCreateTime") != null && !jsonObj.get("ReplicationGroupCreateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ReplicationGroupCreateTime"));
      }
      // validate the optional field `DataTiering`
      if (jsonObj.get("DataTiering") != null && !jsonObj.get("DataTiering").isJsonNull()) {
        DataTieringStatus.validateJsonElement(jsonObj.get("DataTiering"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `NetworkType`
      if (jsonObj.get("NetworkType") != null && !jsonObj.get("NetworkType").isJsonNull()) {
        NetworkType.validateJsonElement(jsonObj.get("NetworkType"));
      }
      // validate the optional field `IpDiscovery`
      if (jsonObj.get("IpDiscovery") != null && !jsonObj.get("IpDiscovery").isJsonNull()) {
        IpDiscovery.validateJsonElement(jsonObj.get("IpDiscovery"));
      }
      // validate the optional field `TransitEncryptionMode`
      if (jsonObj.get("TransitEncryptionMode") != null && !jsonObj.get("TransitEncryptionMode").isJsonNull()) {
        TransitEncryptionMode.validateJsonElement(jsonObj.get("TransitEncryptionMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReplicationGroupListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReplicationGroupListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReplicationGroupListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReplicationGroupListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ReplicationGroupListInner>() {
           @Override
           public void write(JsonWriter out, ReplicationGroupListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReplicationGroupListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ReplicationGroupListInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ReplicationGroupListInner
   * @throws IOException if the JSON string is invalid with respect to ReplicationGroupListInner
   */
  public static ReplicationGroupListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReplicationGroupListInner.class);
  }

  /**
   * Convert an instance of ReplicationGroupListInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

