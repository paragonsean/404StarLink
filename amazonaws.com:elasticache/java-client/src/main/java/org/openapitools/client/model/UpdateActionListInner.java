/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ServiceUpdateSeverity;
import org.openapitools.client.model.ServiceUpdateStatus;
import org.openapitools.client.model.ServiceUpdateType;
import org.openapitools.client.model.SlaMet;
import org.openapitools.client.model.UpdateActionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateActionListInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:54:06.397774-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateActionListInner {
  public static final String SERIALIZED_NAME_REPLICATION_GROUP_ID = "ReplicationGroupId";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_ID)
  private String replicationGroupId;

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_ID = "CacheClusterId";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_ID)
  private String cacheClusterId;

  public static final String SERIALIZED_NAME_SERVICE_UPDATE_NAME = "ServiceUpdateName";
  @SerializedName(SERIALIZED_NAME_SERVICE_UPDATE_NAME)
  private String serviceUpdateName;

  public static final String SERIALIZED_NAME_SERVICE_UPDATE_RELEASE_DATE = "ServiceUpdateReleaseDate";
  @SerializedName(SERIALIZED_NAME_SERVICE_UPDATE_RELEASE_DATE)
  private OffsetDateTime serviceUpdateReleaseDate;

  public static final String SERIALIZED_NAME_SERVICE_UPDATE_SEVERITY = "ServiceUpdateSeverity";
  @SerializedName(SERIALIZED_NAME_SERVICE_UPDATE_SEVERITY)
  private ServiceUpdateSeverity serviceUpdateSeverity;

  public static final String SERIALIZED_NAME_SERVICE_UPDATE_STATUS = "ServiceUpdateStatus";
  @SerializedName(SERIALIZED_NAME_SERVICE_UPDATE_STATUS)
  private ServiceUpdateStatus serviceUpdateStatus;

  public static final String SERIALIZED_NAME_SERVICE_UPDATE_RECOMMENDED_APPLY_BY_DATE = "ServiceUpdateRecommendedApplyByDate";
  @SerializedName(SERIALIZED_NAME_SERVICE_UPDATE_RECOMMENDED_APPLY_BY_DATE)
  private OffsetDateTime serviceUpdateRecommendedApplyByDate;

  public static final String SERIALIZED_NAME_SERVICE_UPDATE_TYPE = "ServiceUpdateType";
  @SerializedName(SERIALIZED_NAME_SERVICE_UPDATE_TYPE)
  private ServiceUpdateType serviceUpdateType;

  public static final String SERIALIZED_NAME_UPDATE_ACTION_AVAILABLE_DATE = "UpdateActionAvailableDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_ACTION_AVAILABLE_DATE)
  private OffsetDateTime updateActionAvailableDate;

  public static final String SERIALIZED_NAME_UPDATE_ACTION_STATUS = "UpdateActionStatus";
  @SerializedName(SERIALIZED_NAME_UPDATE_ACTION_STATUS)
  private UpdateActionStatus updateActionStatus;

  public static final String SERIALIZED_NAME_NODES_UPDATED = "NodesUpdated";
  @SerializedName(SERIALIZED_NAME_NODES_UPDATED)
  private String nodesUpdated;

  public static final String SERIALIZED_NAME_UPDATE_ACTION_STATUS_MODIFIED_DATE = "UpdateActionStatusModifiedDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_ACTION_STATUS_MODIFIED_DATE)
  private OffsetDateTime updateActionStatusModifiedDate;

  public static final String SERIALIZED_NAME_SLA_MET = "SlaMet";
  @SerializedName(SERIALIZED_NAME_SLA_MET)
  private SlaMet slaMet;

  public static final String SERIALIZED_NAME_NODE_GROUP_UPDATE_STATUS = "NodeGroupUpdateStatus";
  @SerializedName(SERIALIZED_NAME_NODE_GROUP_UPDATE_STATUS)
  private List nodeGroupUpdateStatus;

  public static final String SERIALIZED_NAME_CACHE_NODE_UPDATE_STATUS = "CacheNodeUpdateStatus";
  @SerializedName(SERIALIZED_NAME_CACHE_NODE_UPDATE_STATUS)
  private List cacheNodeUpdateStatus;

  public static final String SERIALIZED_NAME_ESTIMATED_UPDATE_TIME = "EstimatedUpdateTime";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_UPDATE_TIME)
  private String estimatedUpdateTime;

  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private String engine;

  public UpdateActionListInner() {
  }

  public UpdateActionListInner replicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
    return this;
  }

  /**
   * Get replicationGroupId
   * @return replicationGroupId
   */
  @javax.annotation.Nullable
  public String getReplicationGroupId() {
    return replicationGroupId;
  }

  public void setReplicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
  }


  public UpdateActionListInner cacheClusterId(String cacheClusterId) {
    this.cacheClusterId = cacheClusterId;
    return this;
  }

  /**
   * Get cacheClusterId
   * @return cacheClusterId
   */
  @javax.annotation.Nullable
  public String getCacheClusterId() {
    return cacheClusterId;
  }

  public void setCacheClusterId(String cacheClusterId) {
    this.cacheClusterId = cacheClusterId;
  }


  public UpdateActionListInner serviceUpdateName(String serviceUpdateName) {
    this.serviceUpdateName = serviceUpdateName;
    return this;
  }

  /**
   * Get serviceUpdateName
   * @return serviceUpdateName
   */
  @javax.annotation.Nullable
  public String getServiceUpdateName() {
    return serviceUpdateName;
  }

  public void setServiceUpdateName(String serviceUpdateName) {
    this.serviceUpdateName = serviceUpdateName;
  }


  public UpdateActionListInner serviceUpdateReleaseDate(OffsetDateTime serviceUpdateReleaseDate) {
    this.serviceUpdateReleaseDate = serviceUpdateReleaseDate;
    return this;
  }

  /**
   * Get serviceUpdateReleaseDate
   * @return serviceUpdateReleaseDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getServiceUpdateReleaseDate() {
    return serviceUpdateReleaseDate;
  }

  public void setServiceUpdateReleaseDate(OffsetDateTime serviceUpdateReleaseDate) {
    this.serviceUpdateReleaseDate = serviceUpdateReleaseDate;
  }


  public UpdateActionListInner serviceUpdateSeverity(ServiceUpdateSeverity serviceUpdateSeverity) {
    this.serviceUpdateSeverity = serviceUpdateSeverity;
    return this;
  }

  /**
   * Get serviceUpdateSeverity
   * @return serviceUpdateSeverity
   */
  @javax.annotation.Nullable
  public ServiceUpdateSeverity getServiceUpdateSeverity() {
    return serviceUpdateSeverity;
  }

  public void setServiceUpdateSeverity(ServiceUpdateSeverity serviceUpdateSeverity) {
    this.serviceUpdateSeverity = serviceUpdateSeverity;
  }


  public UpdateActionListInner serviceUpdateStatus(ServiceUpdateStatus serviceUpdateStatus) {
    this.serviceUpdateStatus = serviceUpdateStatus;
    return this;
  }

  /**
   * Get serviceUpdateStatus
   * @return serviceUpdateStatus
   */
  @javax.annotation.Nullable
  public ServiceUpdateStatus getServiceUpdateStatus() {
    return serviceUpdateStatus;
  }

  public void setServiceUpdateStatus(ServiceUpdateStatus serviceUpdateStatus) {
    this.serviceUpdateStatus = serviceUpdateStatus;
  }


  public UpdateActionListInner serviceUpdateRecommendedApplyByDate(OffsetDateTime serviceUpdateRecommendedApplyByDate) {
    this.serviceUpdateRecommendedApplyByDate = serviceUpdateRecommendedApplyByDate;
    return this;
  }

  /**
   * Get serviceUpdateRecommendedApplyByDate
   * @return serviceUpdateRecommendedApplyByDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getServiceUpdateRecommendedApplyByDate() {
    return serviceUpdateRecommendedApplyByDate;
  }

  public void setServiceUpdateRecommendedApplyByDate(OffsetDateTime serviceUpdateRecommendedApplyByDate) {
    this.serviceUpdateRecommendedApplyByDate = serviceUpdateRecommendedApplyByDate;
  }


  public UpdateActionListInner serviceUpdateType(ServiceUpdateType serviceUpdateType) {
    this.serviceUpdateType = serviceUpdateType;
    return this;
  }

  /**
   * Get serviceUpdateType
   * @return serviceUpdateType
   */
  @javax.annotation.Nullable
  public ServiceUpdateType getServiceUpdateType() {
    return serviceUpdateType;
  }

  public void setServiceUpdateType(ServiceUpdateType serviceUpdateType) {
    this.serviceUpdateType = serviceUpdateType;
  }


  public UpdateActionListInner updateActionAvailableDate(OffsetDateTime updateActionAvailableDate) {
    this.updateActionAvailableDate = updateActionAvailableDate;
    return this;
  }

  /**
   * Get updateActionAvailableDate
   * @return updateActionAvailableDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdateActionAvailableDate() {
    return updateActionAvailableDate;
  }

  public void setUpdateActionAvailableDate(OffsetDateTime updateActionAvailableDate) {
    this.updateActionAvailableDate = updateActionAvailableDate;
  }


  public UpdateActionListInner updateActionStatus(UpdateActionStatus updateActionStatus) {
    this.updateActionStatus = updateActionStatus;
    return this;
  }

  /**
   * Get updateActionStatus
   * @return updateActionStatus
   */
  @javax.annotation.Nullable
  public UpdateActionStatus getUpdateActionStatus() {
    return updateActionStatus;
  }

  public void setUpdateActionStatus(UpdateActionStatus updateActionStatus) {
    this.updateActionStatus = updateActionStatus;
  }


  public UpdateActionListInner nodesUpdated(String nodesUpdated) {
    this.nodesUpdated = nodesUpdated;
    return this;
  }

  /**
   * Get nodesUpdated
   * @return nodesUpdated
   */
  @javax.annotation.Nullable
  public String getNodesUpdated() {
    return nodesUpdated;
  }

  public void setNodesUpdated(String nodesUpdated) {
    this.nodesUpdated = nodesUpdated;
  }


  public UpdateActionListInner updateActionStatusModifiedDate(OffsetDateTime updateActionStatusModifiedDate) {
    this.updateActionStatusModifiedDate = updateActionStatusModifiedDate;
    return this;
  }

  /**
   * Get updateActionStatusModifiedDate
   * @return updateActionStatusModifiedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdateActionStatusModifiedDate() {
    return updateActionStatusModifiedDate;
  }

  public void setUpdateActionStatusModifiedDate(OffsetDateTime updateActionStatusModifiedDate) {
    this.updateActionStatusModifiedDate = updateActionStatusModifiedDate;
  }


  public UpdateActionListInner slaMet(SlaMet slaMet) {
    this.slaMet = slaMet;
    return this;
  }

  /**
   * Get slaMet
   * @return slaMet
   */
  @javax.annotation.Nullable
  public SlaMet getSlaMet() {
    return slaMet;
  }

  public void setSlaMet(SlaMet slaMet) {
    this.slaMet = slaMet;
  }


  public UpdateActionListInner nodeGroupUpdateStatus(List nodeGroupUpdateStatus) {
    this.nodeGroupUpdateStatus = nodeGroupUpdateStatus;
    return this;
  }

  /**
   * Get nodeGroupUpdateStatus
   * @return nodeGroupUpdateStatus
   */
  @javax.annotation.Nullable
  public List getNodeGroupUpdateStatus() {
    return nodeGroupUpdateStatus;
  }

  public void setNodeGroupUpdateStatus(List nodeGroupUpdateStatus) {
    this.nodeGroupUpdateStatus = nodeGroupUpdateStatus;
  }


  public UpdateActionListInner cacheNodeUpdateStatus(List cacheNodeUpdateStatus) {
    this.cacheNodeUpdateStatus = cacheNodeUpdateStatus;
    return this;
  }

  /**
   * Get cacheNodeUpdateStatus
   * @return cacheNodeUpdateStatus
   */
  @javax.annotation.Nullable
  public List getCacheNodeUpdateStatus() {
    return cacheNodeUpdateStatus;
  }

  public void setCacheNodeUpdateStatus(List cacheNodeUpdateStatus) {
    this.cacheNodeUpdateStatus = cacheNodeUpdateStatus;
  }


  public UpdateActionListInner estimatedUpdateTime(String estimatedUpdateTime) {
    this.estimatedUpdateTime = estimatedUpdateTime;
    return this;
  }

  /**
   * Get estimatedUpdateTime
   * @return estimatedUpdateTime
   */
  @javax.annotation.Nullable
  public String getEstimatedUpdateTime() {
    return estimatedUpdateTime;
  }

  public void setEstimatedUpdateTime(String estimatedUpdateTime) {
    this.estimatedUpdateTime = estimatedUpdateTime;
  }


  public UpdateActionListInner engine(String engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateActionListInner updateActionListInner = (UpdateActionListInner) o;
    return Objects.equals(this.replicationGroupId, updateActionListInner.replicationGroupId) &&
        Objects.equals(this.cacheClusterId, updateActionListInner.cacheClusterId) &&
        Objects.equals(this.serviceUpdateName, updateActionListInner.serviceUpdateName) &&
        Objects.equals(this.serviceUpdateReleaseDate, updateActionListInner.serviceUpdateReleaseDate) &&
        Objects.equals(this.serviceUpdateSeverity, updateActionListInner.serviceUpdateSeverity) &&
        Objects.equals(this.serviceUpdateStatus, updateActionListInner.serviceUpdateStatus) &&
        Objects.equals(this.serviceUpdateRecommendedApplyByDate, updateActionListInner.serviceUpdateRecommendedApplyByDate) &&
        Objects.equals(this.serviceUpdateType, updateActionListInner.serviceUpdateType) &&
        Objects.equals(this.updateActionAvailableDate, updateActionListInner.updateActionAvailableDate) &&
        Objects.equals(this.updateActionStatus, updateActionListInner.updateActionStatus) &&
        Objects.equals(this.nodesUpdated, updateActionListInner.nodesUpdated) &&
        Objects.equals(this.updateActionStatusModifiedDate, updateActionListInner.updateActionStatusModifiedDate) &&
        Objects.equals(this.slaMet, updateActionListInner.slaMet) &&
        Objects.equals(this.nodeGroupUpdateStatus, updateActionListInner.nodeGroupUpdateStatus) &&
        Objects.equals(this.cacheNodeUpdateStatus, updateActionListInner.cacheNodeUpdateStatus) &&
        Objects.equals(this.estimatedUpdateTime, updateActionListInner.estimatedUpdateTime) &&
        Objects.equals(this.engine, updateActionListInner.engine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(replicationGroupId, cacheClusterId, serviceUpdateName, serviceUpdateReleaseDate, serviceUpdateSeverity, serviceUpdateStatus, serviceUpdateRecommendedApplyByDate, serviceUpdateType, updateActionAvailableDate, updateActionStatus, nodesUpdated, updateActionStatusModifiedDate, slaMet, nodeGroupUpdateStatus, cacheNodeUpdateStatus, estimatedUpdateTime, engine);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateActionListInner {\n");
    sb.append("    replicationGroupId: ").append(toIndentedString(replicationGroupId)).append("\n");
    sb.append("    cacheClusterId: ").append(toIndentedString(cacheClusterId)).append("\n");
    sb.append("    serviceUpdateName: ").append(toIndentedString(serviceUpdateName)).append("\n");
    sb.append("    serviceUpdateReleaseDate: ").append(toIndentedString(serviceUpdateReleaseDate)).append("\n");
    sb.append("    serviceUpdateSeverity: ").append(toIndentedString(serviceUpdateSeverity)).append("\n");
    sb.append("    serviceUpdateStatus: ").append(toIndentedString(serviceUpdateStatus)).append("\n");
    sb.append("    serviceUpdateRecommendedApplyByDate: ").append(toIndentedString(serviceUpdateRecommendedApplyByDate)).append("\n");
    sb.append("    serviceUpdateType: ").append(toIndentedString(serviceUpdateType)).append("\n");
    sb.append("    updateActionAvailableDate: ").append(toIndentedString(updateActionAvailableDate)).append("\n");
    sb.append("    updateActionStatus: ").append(toIndentedString(updateActionStatus)).append("\n");
    sb.append("    nodesUpdated: ").append(toIndentedString(nodesUpdated)).append("\n");
    sb.append("    updateActionStatusModifiedDate: ").append(toIndentedString(updateActionStatusModifiedDate)).append("\n");
    sb.append("    slaMet: ").append(toIndentedString(slaMet)).append("\n");
    sb.append("    nodeGroupUpdateStatus: ").append(toIndentedString(nodeGroupUpdateStatus)).append("\n");
    sb.append("    cacheNodeUpdateStatus: ").append(toIndentedString(cacheNodeUpdateStatus)).append("\n");
    sb.append("    estimatedUpdateTime: ").append(toIndentedString(estimatedUpdateTime)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ReplicationGroupId");
    openapiFields.add("CacheClusterId");
    openapiFields.add("ServiceUpdateName");
    openapiFields.add("ServiceUpdateReleaseDate");
    openapiFields.add("ServiceUpdateSeverity");
    openapiFields.add("ServiceUpdateStatus");
    openapiFields.add("ServiceUpdateRecommendedApplyByDate");
    openapiFields.add("ServiceUpdateType");
    openapiFields.add("UpdateActionAvailableDate");
    openapiFields.add("UpdateActionStatus");
    openapiFields.add("NodesUpdated");
    openapiFields.add("UpdateActionStatusModifiedDate");
    openapiFields.add("SlaMet");
    openapiFields.add("NodeGroupUpdateStatus");
    openapiFields.add("CacheNodeUpdateStatus");
    openapiFields.add("EstimatedUpdateTime");
    openapiFields.add("Engine");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateActionListInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateActionListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateActionListInner is not found in the empty JSON string", UpdateActionListInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateActionListInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateActionListInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ReplicationGroupId`
      if (jsonObj.get("ReplicationGroupId") != null && !jsonObj.get("ReplicationGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReplicationGroupId"));
      }
      // validate the optional field `CacheClusterId`
      if (jsonObj.get("CacheClusterId") != null && !jsonObj.get("CacheClusterId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheClusterId"));
      }
      // validate the optional field `ServiceUpdateName`
      if (jsonObj.get("ServiceUpdateName") != null && !jsonObj.get("ServiceUpdateName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceUpdateName"));
      }
      // validate the optional field `ServiceUpdateReleaseDate`
      if (jsonObj.get("ServiceUpdateReleaseDate") != null && !jsonObj.get("ServiceUpdateReleaseDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ServiceUpdateReleaseDate"));
      }
      // validate the optional field `ServiceUpdateSeverity`
      if (jsonObj.get("ServiceUpdateSeverity") != null && !jsonObj.get("ServiceUpdateSeverity").isJsonNull()) {
        ServiceUpdateSeverity.validateJsonElement(jsonObj.get("ServiceUpdateSeverity"));
      }
      // validate the optional field `ServiceUpdateStatus`
      if (jsonObj.get("ServiceUpdateStatus") != null && !jsonObj.get("ServiceUpdateStatus").isJsonNull()) {
        ServiceUpdateStatus.validateJsonElement(jsonObj.get("ServiceUpdateStatus"));
      }
      // validate the optional field `ServiceUpdateRecommendedApplyByDate`
      if (jsonObj.get("ServiceUpdateRecommendedApplyByDate") != null && !jsonObj.get("ServiceUpdateRecommendedApplyByDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ServiceUpdateRecommendedApplyByDate"));
      }
      // validate the optional field `ServiceUpdateType`
      if (jsonObj.get("ServiceUpdateType") != null && !jsonObj.get("ServiceUpdateType").isJsonNull()) {
        ServiceUpdateType.validateJsonElement(jsonObj.get("ServiceUpdateType"));
      }
      // validate the optional field `UpdateActionAvailableDate`
      if (jsonObj.get("UpdateActionAvailableDate") != null && !jsonObj.get("UpdateActionAvailableDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("UpdateActionAvailableDate"));
      }
      // validate the optional field `UpdateActionStatus`
      if (jsonObj.get("UpdateActionStatus") != null && !jsonObj.get("UpdateActionStatus").isJsonNull()) {
        UpdateActionStatus.validateJsonElement(jsonObj.get("UpdateActionStatus"));
      }
      // validate the optional field `NodesUpdated`
      if (jsonObj.get("NodesUpdated") != null && !jsonObj.get("NodesUpdated").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NodesUpdated"));
      }
      // validate the optional field `UpdateActionStatusModifiedDate`
      if (jsonObj.get("UpdateActionStatusModifiedDate") != null && !jsonObj.get("UpdateActionStatusModifiedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("UpdateActionStatusModifiedDate"));
      }
      // validate the optional field `SlaMet`
      if (jsonObj.get("SlaMet") != null && !jsonObj.get("SlaMet").isJsonNull()) {
        SlaMet.validateJsonElement(jsonObj.get("SlaMet"));
      }
      // validate the optional field `NodeGroupUpdateStatus`
      if (jsonObj.get("NodeGroupUpdateStatus") != null && !jsonObj.get("NodeGroupUpdateStatus").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NodeGroupUpdateStatus"));
      }
      // validate the optional field `CacheNodeUpdateStatus`
      if (jsonObj.get("CacheNodeUpdateStatus") != null && !jsonObj.get("CacheNodeUpdateStatus").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CacheNodeUpdateStatus"));
      }
      // validate the optional field `EstimatedUpdateTime`
      if (jsonObj.get("EstimatedUpdateTime") != null && !jsonObj.get("EstimatedUpdateTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EstimatedUpdateTime"));
      }
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Engine"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateActionListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateActionListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateActionListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateActionListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateActionListInner>() {
           @Override
           public void write(JsonWriter out, UpdateActionListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateActionListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateActionListInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateActionListInner
   * @throws IOException if the JSON string is invalid with respect to UpdateActionListInner
   */
  public static UpdateActionListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateActionListInner.class);
  }

  /**
   * Convert an instance of UpdateActionListInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

