/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CacheClusterCacheParameterGroup;
import org.openapitools.client.model.CacheClusterConfigurationEndpoint;
import org.openapitools.client.model.CacheClusterNotificationConfiguration;
import org.openapitools.client.model.IpDiscovery;
import org.openapitools.client.model.NetworkType;
import org.openapitools.client.model.PendingModifiedValues;
import org.openapitools.client.model.TransitEncryptionMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CacheCluster
 */
public class CacheClusterTest {
    private final CacheCluster model = new CacheCluster();

    /**
     * Model tests for CacheCluster
     */
    @Test
    public void testCacheCluster() {
        // TODO: test CacheCluster
    }

    /**
     * Test the property 'cacheClusterId'
     */
    @Test
    public void cacheClusterIdTest() {
        // TODO: test cacheClusterId
    }

    /**
     * Test the property 'configurationEndpoint'
     */
    @Test
    public void configurationEndpointTest() {
        // TODO: test configurationEndpoint
    }

    /**
     * Test the property 'clientDownloadLandingPage'
     */
    @Test
    public void clientDownloadLandingPageTest() {
        // TODO: test clientDownloadLandingPage
    }

    /**
     * Test the property 'cacheNodeType'
     */
    @Test
    public void cacheNodeTypeTest() {
        // TODO: test cacheNodeType
    }

    /**
     * Test the property 'engine'
     */
    @Test
    public void engineTest() {
        // TODO: test engine
    }

    /**
     * Test the property 'engineVersion'
     */
    @Test
    public void engineVersionTest() {
        // TODO: test engineVersion
    }

    /**
     * Test the property 'cacheClusterStatus'
     */
    @Test
    public void cacheClusterStatusTest() {
        // TODO: test cacheClusterStatus
    }

    /**
     * Test the property 'numCacheNodes'
     */
    @Test
    public void numCacheNodesTest() {
        // TODO: test numCacheNodes
    }

    /**
     * Test the property 'preferredAvailabilityZone'
     */
    @Test
    public void preferredAvailabilityZoneTest() {
        // TODO: test preferredAvailabilityZone
    }

    /**
     * Test the property 'preferredOutpostArn'
     */
    @Test
    public void preferredOutpostArnTest() {
        // TODO: test preferredOutpostArn
    }

    /**
     * Test the property 'cacheClusterCreateTime'
     */
    @Test
    public void cacheClusterCreateTimeTest() {
        // TODO: test cacheClusterCreateTime
    }

    /**
     * Test the property 'preferredMaintenanceWindow'
     */
    @Test
    public void preferredMaintenanceWindowTest() {
        // TODO: test preferredMaintenanceWindow
    }

    /**
     * Test the property 'pendingModifiedValues'
     */
    @Test
    public void pendingModifiedValuesTest() {
        // TODO: test pendingModifiedValues
    }

    /**
     * Test the property 'notificationConfiguration'
     */
    @Test
    public void notificationConfigurationTest() {
        // TODO: test notificationConfiguration
    }

    /**
     * Test the property 'cacheSecurityGroups'
     */
    @Test
    public void cacheSecurityGroupsTest() {
        // TODO: test cacheSecurityGroups
    }

    /**
     * Test the property 'cacheParameterGroup'
     */
    @Test
    public void cacheParameterGroupTest() {
        // TODO: test cacheParameterGroup
    }

    /**
     * Test the property 'cacheSubnetGroupName'
     */
    @Test
    public void cacheSubnetGroupNameTest() {
        // TODO: test cacheSubnetGroupName
    }

    /**
     * Test the property 'cacheNodes'
     */
    @Test
    public void cacheNodesTest() {
        // TODO: test cacheNodes
    }

    /**
     * Test the property 'autoMinorVersionUpgrade'
     */
    @Test
    public void autoMinorVersionUpgradeTest() {
        // TODO: test autoMinorVersionUpgrade
    }

    /**
     * Test the property 'securityGroups'
     */
    @Test
    public void securityGroupsTest() {
        // TODO: test securityGroups
    }

    /**
     * Test the property 'replicationGroupId'
     */
    @Test
    public void replicationGroupIdTest() {
        // TODO: test replicationGroupId
    }

    /**
     * Test the property 'snapshotRetentionLimit'
     */
    @Test
    public void snapshotRetentionLimitTest() {
        // TODO: test snapshotRetentionLimit
    }

    /**
     * Test the property 'snapshotWindow'
     */
    @Test
    public void snapshotWindowTest() {
        // TODO: test snapshotWindow
    }

    /**
     * Test the property 'authTokenEnabled'
     */
    @Test
    public void authTokenEnabledTest() {
        // TODO: test authTokenEnabled
    }

    /**
     * Test the property 'authTokenLastModifiedDate'
     */
    @Test
    public void authTokenLastModifiedDateTest() {
        // TODO: test authTokenLastModifiedDate
    }

    /**
     * Test the property 'transitEncryptionEnabled'
     */
    @Test
    public void transitEncryptionEnabledTest() {
        // TODO: test transitEncryptionEnabled
    }

    /**
     * Test the property 'atRestEncryptionEnabled'
     */
    @Test
    public void atRestEncryptionEnabledTest() {
        // TODO: test atRestEncryptionEnabled
    }

    /**
     * Test the property 'ARN'
     */
    @Test
    public void ARNTest() {
        // TODO: test ARN
    }

    /**
     * Test the property 'replicationGroupLogDeliveryEnabled'
     */
    @Test
    public void replicationGroupLogDeliveryEnabledTest() {
        // TODO: test replicationGroupLogDeliveryEnabled
    }

    /**
     * Test the property 'logDeliveryConfigurations'
     */
    @Test
    public void logDeliveryConfigurationsTest() {
        // TODO: test logDeliveryConfigurations
    }

    /**
     * Test the property 'networkType'
     */
    @Test
    public void networkTypeTest() {
        // TODO: test networkType
    }

    /**
     * Test the property 'ipDiscovery'
     */
    @Test
    public void ipDiscoveryTest() {
        // TODO: test ipDiscovery
    }

    /**
     * Test the property 'transitEncryptionMode'
     */
    @Test
    public void transitEncryptionModeTest() {
        // TODO: test transitEncryptionMode
    }

}
