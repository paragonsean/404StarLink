/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AZMode;
import org.openapitools.client.model.AuthTokenUpdateStrategyType;
import org.openapitools.client.model.IpDiscovery;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModifyCacheClusterMessage
 */
public class ModifyCacheClusterMessageTest {
    private final ModifyCacheClusterMessage model = new ModifyCacheClusterMessage();

    /**
     * Model tests for ModifyCacheClusterMessage
     */
    @Test
    public void testModifyCacheClusterMessage() {
        // TODO: test ModifyCacheClusterMessage
    }

    /**
     * Test the property 'cacheClusterId'
     */
    @Test
    public void cacheClusterIdTest() {
        // TODO: test cacheClusterId
    }

    /**
     * Test the property 'numCacheNodes'
     */
    @Test
    public void numCacheNodesTest() {
        // TODO: test numCacheNodes
    }

    /**
     * Test the property 'cacheNodeIdsToRemove'
     */
    @Test
    public void cacheNodeIdsToRemoveTest() {
        // TODO: test cacheNodeIdsToRemove
    }

    /**
     * Test the property 'azMode'
     */
    @Test
    public void azModeTest() {
        // TODO: test azMode
    }

    /**
     * Test the property 'newAvailabilityZones'
     */
    @Test
    public void newAvailabilityZonesTest() {
        // TODO: test newAvailabilityZones
    }

    /**
     * Test the property 'cacheSecurityGroupNames'
     */
    @Test
    public void cacheSecurityGroupNamesTest() {
        // TODO: test cacheSecurityGroupNames
    }

    /**
     * Test the property 'securityGroupIds'
     */
    @Test
    public void securityGroupIdsTest() {
        // TODO: test securityGroupIds
    }

    /**
     * Test the property 'preferredMaintenanceWindow'
     */
    @Test
    public void preferredMaintenanceWindowTest() {
        // TODO: test preferredMaintenanceWindow
    }

    /**
     * Test the property 'notificationTopicArn'
     */
    @Test
    public void notificationTopicArnTest() {
        // TODO: test notificationTopicArn
    }

    /**
     * Test the property 'cacheParameterGroupName'
     */
    @Test
    public void cacheParameterGroupNameTest() {
        // TODO: test cacheParameterGroupName
    }

    /**
     * Test the property 'notificationTopicStatus'
     */
    @Test
    public void notificationTopicStatusTest() {
        // TODO: test notificationTopicStatus
    }

    /**
     * Test the property 'applyImmediately'
     */
    @Test
    public void applyImmediatelyTest() {
        // TODO: test applyImmediately
    }

    /**
     * Test the property 'engineVersion'
     */
    @Test
    public void engineVersionTest() {
        // TODO: test engineVersion
    }

    /**
     * Test the property 'autoMinorVersionUpgrade'
     */
    @Test
    public void autoMinorVersionUpgradeTest() {
        // TODO: test autoMinorVersionUpgrade
    }

    /**
     * Test the property 'snapshotRetentionLimit'
     */
    @Test
    public void snapshotRetentionLimitTest() {
        // TODO: test snapshotRetentionLimit
    }

    /**
     * Test the property 'snapshotWindow'
     */
    @Test
    public void snapshotWindowTest() {
        // TODO: test snapshotWindow
    }

    /**
     * Test the property 'cacheNodeType'
     */
    @Test
    public void cacheNodeTypeTest() {
        // TODO: test cacheNodeType
    }

    /**
     * Test the property 'authToken'
     */
    @Test
    public void authTokenTest() {
        // TODO: test authToken
    }

    /**
     * Test the property 'authTokenUpdateStrategy'
     */
    @Test
    public void authTokenUpdateStrategyTest() {
        // TODO: test authTokenUpdateStrategy
    }

    /**
     * Test the property 'logDeliveryConfigurations'
     */
    @Test
    public void logDeliveryConfigurationsTest() {
        // TODO: test logDeliveryConfigurations
    }

    /**
     * Test the property 'ipDiscovery'
     */
    @Test
    public void ipDiscoveryTest() {
        // TODO: test ipDiscovery
    }

}
