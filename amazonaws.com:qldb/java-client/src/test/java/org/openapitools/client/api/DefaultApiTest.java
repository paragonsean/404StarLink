/*
 * Amazon QLDB
 * The control plane for Amazon QLDB
 *
 * The version of the OpenAPI document: 2019-01-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CancelJournalKinesisStreamResponse;
import org.openapitools.client.model.CreateLedgerRequest;
import org.openapitools.client.model.CreateLedgerResponse;
import org.openapitools.client.model.DescribeJournalKinesisStreamResponse;
import org.openapitools.client.model.DescribeJournalS3ExportResponse;
import org.openapitools.client.model.DescribeLedgerResponse;
import org.openapitools.client.model.ExportJournalToS3Request;
import org.openapitools.client.model.ExportJournalToS3Response;
import org.openapitools.client.model.GetBlockRequest;
import org.openapitools.client.model.GetBlockResponse;
import org.openapitools.client.model.GetDigestResponse;
import org.openapitools.client.model.GetRevisionRequest;
import org.openapitools.client.model.GetRevisionResponse;
import org.openapitools.client.model.ListJournalKinesisStreamsForLedgerResponse;
import org.openapitools.client.model.ListJournalS3ExportsForLedgerResponse;
import org.openapitools.client.model.ListJournalS3ExportsResponse;
import org.openapitools.client.model.ListLedgersResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.StreamJournalToKinesisRequest;
import org.openapitools.client.model.StreamJournalToKinesisResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateLedgerPermissionsModeRequest;
import org.openapitools.client.model.UpdateLedgerPermissionsModeResponse;
import org.openapitools.client.model.UpdateLedgerRequest;
import org.openapitools.client.model.UpdateLedgerResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Ends a given Amazon QLDB journal stream. Before a stream can be canceled, its current status must be &lt;code&gt;ACTIVE&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You can&#39;t restart a stream after you cancel it. Canceled QLDB stream resources are subject to a 7-day retention period, so they are automatically deleted after this limit expires.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelJournalKinesisStreamTest() throws ApiException {
        String name = null;
        String streamId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CancelJournalKinesisStreamResponse response = api.cancelJournalKinesisStream(name, streamId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a new ledger in your Amazon Web Services account in the current Region.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createLedgerTest() throws ApiException {
        CreateLedgerRequest createLedgerRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateLedgerResponse response = api.createLedger(createLedgerRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a ledger and all of its contents. This action is irreversible.&lt;/p&gt; &lt;p&gt;If deletion protection is enabled, you must first disable it before you can delete the ledger. You can disable it by calling the &lt;code&gt;UpdateLedger&lt;/code&gt; operation to set the flag to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLedgerTest() throws ApiException {
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteLedger(name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns detailed information about a given Amazon QLDB journal stream. The output includes the Amazon Resource Name (ARN), stream name, current status, creation time, and the parameters of the original stream creation request.&lt;/p&gt; &lt;p&gt;This action does not return any expired journal streams. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/qldb/latest/developerguide/streams.create.html#streams.create.states.expiration\&quot;&gt;Expiration for terminal streams&lt;/a&gt; in the &lt;i&gt;Amazon QLDB Developer Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeJournalKinesisStreamTest() throws ApiException {
        String name = null;
        String streamId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeJournalKinesisStreamResponse response = api.describeJournalKinesisStream(name, streamId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about a journal export job, including the ledger name, export ID, creation time, current status, and the parameters of the original export creation request.&lt;/p&gt; &lt;p&gt;This action does not return any expired export jobs. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration\&quot;&gt;Export job expiration&lt;/a&gt; in the &lt;i&gt;Amazon QLDB Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If the export job with the given &lt;code&gt;ExportId&lt;/code&gt; doesn&#39;t exist, then throws &lt;code&gt;ResourceNotFoundException&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If the ledger with the given &lt;code&gt;Name&lt;/code&gt; doesn&#39;t exist, then throws &lt;code&gt;ResourceNotFoundException&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeJournalS3ExportTest() throws ApiException {
        String name = null;
        String exportId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeJournalS3ExportResponse response = api.describeJournalS3Export(name, exportId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about a ledger, including its state, permissions mode, encryption at rest settings, and when it was created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeLedgerTest() throws ApiException {
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeLedgerResponse response = api.describeLedger(name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Exports journal contents within a date and time range from a ledger into a specified Amazon Simple Storage Service (Amazon S3) bucket. A journal export job can write the data objects in either the text or binary representation of Amazon Ion format, or in &lt;i&gt;JSON Lines&lt;/i&gt; text format.&lt;/p&gt; &lt;p&gt;In JSON Lines format, each journal block in the exported data object is a valid JSON object that is delimited by a newline. You can use this format to easily integrate JSON exports with analytics tools such as Glue and Amazon Athena because these services can parse newline-delimited JSON automatically. For more information about the format, see &lt;a href&#x3D;\&quot;https://jsonlines.org/\&quot;&gt;JSON Lines&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If the ledger with the given &lt;code&gt;Name&lt;/code&gt; doesn&#39;t exist, then throws &lt;code&gt;ResourceNotFoundException&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If the ledger with the given &lt;code&gt;Name&lt;/code&gt; is in &lt;code&gt;CREATING&lt;/code&gt; status, then throws &lt;code&gt;ResourcePreconditionNotMetException&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You can initiate up to two concurrent journal export requests for each ledger. Beyond this limit, journal export requests throw &lt;code&gt;LimitExceededException&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportJournalToS3Test() throws ApiException {
        String name = null;
        ExportJournalToS3Request exportJournalToS3Request = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ExportJournalToS3Response response = api.exportJournalToS3(name, exportJournalToS3Request, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a block object at a specified address in a journal. Also returns a proof of the specified block for verification if &lt;code&gt;DigestTipAddress&lt;/code&gt; is provided.&lt;/p&gt; &lt;p&gt;For information about the data contents in a block, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/qldb/latest/developerguide/journal-contents.html\&quot;&gt;Journal contents&lt;/a&gt; in the &lt;i&gt;Amazon QLDB Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If the specified ledger doesn&#39;t exist or is in &lt;code&gt;DELETING&lt;/code&gt; status, then throws &lt;code&gt;ResourceNotFoundException&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If the specified ledger is in &lt;code&gt;CREATING&lt;/code&gt; status, then throws &lt;code&gt;ResourcePreconditionNotMetException&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If no block exists with the specified address, then throws &lt;code&gt;InvalidParameterException&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBlockTest() throws ApiException {
        String name = null;
        GetBlockRequest getBlockRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBlockResponse response = api.getBlock(name, getBlockRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the digest of a ledger at the latest committed block in the journal. The response includes a 256-bit hash value and a block address.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDigestTest() throws ApiException {
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetDigestResponse response = api.getDigest(name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns a revision data object for a specified document ID and block address. Also returns a proof of the specified revision for verification if &lt;code&gt;DigestTipAddress&lt;/code&gt; is provided.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRevisionTest() throws ApiException {
        String name = null;
        GetRevisionRequest getRevisionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetRevisionResponse response = api.getRevision(name, getRevisionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns an array of all Amazon QLDB journal stream descriptors for a given ledger. The output of each stream descriptor includes the same details that are returned by &lt;code&gt;DescribeJournalKinesisStream&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;This action does not return any expired journal streams. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/qldb/latest/developerguide/streams.create.html#streams.create.states.expiration\&quot;&gt;Expiration for terminal streams&lt;/a&gt; in the &lt;i&gt;Amazon QLDB Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;This action returns a maximum of &lt;code&gt;MaxResults&lt;/code&gt; items. It is paginated so that you can retrieve all the items by calling &lt;code&gt;ListJournalKinesisStreamsForLedger&lt;/code&gt; multiple times.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listJournalKinesisStreamsForLedgerTest() throws ApiException {
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListJournalKinesisStreamsForLedgerResponse response = api.listJournalKinesisStreamsForLedger(name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns an array of journal export job descriptions for all ledgers that are associated with the current Amazon Web Services account and Region.&lt;/p&gt; &lt;p&gt;This action returns a maximum of &lt;code&gt;MaxResults&lt;/code&gt; items, and is paginated so that you can retrieve all the items by calling &lt;code&gt;ListJournalS3Exports&lt;/code&gt; multiple times.&lt;/p&gt; &lt;p&gt;This action does not return any expired export jobs. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration\&quot;&gt;Export job expiration&lt;/a&gt; in the &lt;i&gt;Amazon QLDB Developer Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listJournalS3ExportsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListJournalS3ExportsResponse response = api.listJournalS3Exports(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns an array of journal export job descriptions for a specified ledger.&lt;/p&gt; &lt;p&gt;This action returns a maximum of &lt;code&gt;MaxResults&lt;/code&gt; items, and is paginated so that you can retrieve all the items by calling &lt;code&gt;ListJournalS3ExportsForLedger&lt;/code&gt; multiple times.&lt;/p&gt; &lt;p&gt;This action does not return any expired export jobs. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration\&quot;&gt;Export job expiration&lt;/a&gt; in the &lt;i&gt;Amazon QLDB Developer Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listJournalS3ExportsForLedgerTest() throws ApiException {
        String name = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListJournalS3ExportsForLedgerResponse response = api.listJournalS3ExportsForLedger(name, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns an array of ledger summaries that are associated with the current Amazon Web Services account and Region.&lt;/p&gt; &lt;p&gt;This action returns a maximum of 100 items and is paginated so that you can retrieve all the items by calling &lt;code&gt;ListLedgers&lt;/code&gt; multiple times.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLedgersTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListLedgersResponse response = api.listLedgers(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Returns all tags for a specified Amazon QLDB resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a journal stream for a given Amazon QLDB ledger. The stream captures every document revision that is committed to the ledger&#39;s journal and delivers the data to a specified Amazon Kinesis Data Streams resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamJournalToKinesisTest() throws ApiException {
        String name = null;
        StreamJournalToKinesisRequest streamJournalToKinesisRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StreamJournalToKinesisResponse response = api.streamJournalToKinesis(name, streamJournalToKinesisRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Adds one or more tags to a specified Amazon QLDB resource.&lt;/p&gt; &lt;p&gt;A resource can have up to 50 tags. If you try to create more than 50 tags for a resource, your request fails and returns an error.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes one or more tags from a specified Amazon QLDB resource. You can specify up to 50 tag keys to remove.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates properties on a ledger.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLedgerTest() throws ApiException {
        String name = null;
        UpdateLedgerRequest updateLedgerRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateLedgerResponse response = api.updateLedger(name, updateLedgerRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the permissions mode of a ledger.&lt;/p&gt; &lt;important&gt; &lt;p&gt;Before you switch to the &lt;code&gt;STANDARD&lt;/code&gt; permissions mode, you must first create all required IAM policies and table tags to avoid disruption to your users. To learn more, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/qldb/latest/developerguide/ledger-management.basics.html#ledger-mgmt.basics.update-permissions.migrating\&quot;&gt;Migrating to the standard permissions mode&lt;/a&gt; in the &lt;i&gt;Amazon QLDB Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLedgerPermissionsModeTest() throws ApiException {
        String name = null;
        UpdateLedgerPermissionsModeRequest updateLedgerPermissionsModeRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateLedgerPermissionsModeResponse response = api.updateLedgerPermissionsMode(name, updateLedgerPermissionsModeRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
