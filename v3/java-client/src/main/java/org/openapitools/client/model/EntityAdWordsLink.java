/*
 * Google Analytics API
 * Views and manages your Google Analytics data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdWordsAccount;
import org.openapitools.client.model.EntityAdWordsLinkEntity;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * JSON template for Analytics Entity Google Ads Link.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:01:26.696972-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EntityAdWordsLink {
  public static final String SERIALIZED_NAME_AD_WORDS_ACCOUNTS = "adWordsAccounts";
  @SerializedName(SERIALIZED_NAME_AD_WORDS_ACCOUNTS)
  private List<AdWordsAccount> adWordsAccounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENTITY = "entity";
  @SerializedName(SERIALIZED_NAME_ENTITY)
  private EntityAdWordsLinkEntity entity;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "analytics#entityAdWordsLink";

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROFILE_IDS = "profileIds";
  @SerializedName(SERIALIZED_NAME_PROFILE_IDS)
  private List<String> profileIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SELF_LINK = "selfLink";
  @SerializedName(SERIALIZED_NAME_SELF_LINK)
  private String selfLink;

  public EntityAdWordsLink() {
  }

  public EntityAdWordsLink adWordsAccounts(List<AdWordsAccount> adWordsAccounts) {
    this.adWordsAccounts = adWordsAccounts;
    return this;
  }

  public EntityAdWordsLink addAdWordsAccountsItem(AdWordsAccount adWordsAccountsItem) {
    if (this.adWordsAccounts == null) {
      this.adWordsAccounts = new ArrayList<>();
    }
    this.adWordsAccounts.add(adWordsAccountsItem);
    return this;
  }

  /**
   * A list of Google Ads client accounts. These cannot be MCC accounts. This field is required when creating a Google Ads link. It cannot be empty.
   * @return adWordsAccounts
   */
  @javax.annotation.Nullable
  public List<AdWordsAccount> getAdWordsAccounts() {
    return adWordsAccounts;
  }

  public void setAdWordsAccounts(List<AdWordsAccount> adWordsAccounts) {
    this.adWordsAccounts = adWordsAccounts;
  }


  public EntityAdWordsLink entity(EntityAdWordsLinkEntity entity) {
    this.entity = entity;
    return this;
  }

  /**
   * Get entity
   * @return entity
   */
  @javax.annotation.Nullable
  public EntityAdWordsLinkEntity getEntity() {
    return entity;
  }

  public void setEntity(EntityAdWordsLinkEntity entity) {
    this.entity = entity;
  }


  public EntityAdWordsLink id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Entity Google Ads link ID
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public EntityAdWordsLink kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Resource type for entity Google Ads link.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public EntityAdWordsLink name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the link. This field is required when creating a Google Ads link.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public EntityAdWordsLink profileIds(List<String> profileIds) {
    this.profileIds = profileIds;
    return this;
  }

  public EntityAdWordsLink addProfileIdsItem(String profileIdsItem) {
    if (this.profileIds == null) {
      this.profileIds = new ArrayList<>();
    }
    this.profileIds.add(profileIdsItem);
    return this;
  }

  /**
   * IDs of linked Views (Profiles) represented as strings.
   * @return profileIds
   */
  @javax.annotation.Nullable
  public List<String> getProfileIds() {
    return profileIds;
  }

  public void setProfileIds(List<String> profileIds) {
    this.profileIds = profileIds;
  }


  public EntityAdWordsLink selfLink(String selfLink) {
    this.selfLink = selfLink;
    return this;
  }

  /**
   * URL link for this Google Analytics - Google Ads link.
   * @return selfLink
   */
  @javax.annotation.Nullable
  public String getSelfLink() {
    return selfLink;
  }

  public void setSelfLink(String selfLink) {
    this.selfLink = selfLink;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityAdWordsLink entityAdWordsLink = (EntityAdWordsLink) o;
    return Objects.equals(this.adWordsAccounts, entityAdWordsLink.adWordsAccounts) &&
        Objects.equals(this.entity, entityAdWordsLink.entity) &&
        Objects.equals(this.id, entityAdWordsLink.id) &&
        Objects.equals(this.kind, entityAdWordsLink.kind) &&
        Objects.equals(this.name, entityAdWordsLink.name) &&
        Objects.equals(this.profileIds, entityAdWordsLink.profileIds) &&
        Objects.equals(this.selfLink, entityAdWordsLink.selfLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adWordsAccounts, entity, id, kind, name, profileIds, selfLink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityAdWordsLink {\n");
    sb.append("    adWordsAccounts: ").append(toIndentedString(adWordsAccounts)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    profileIds: ").append(toIndentedString(profileIds)).append("\n");
    sb.append("    selfLink: ").append(toIndentedString(selfLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adWordsAccounts");
    openapiFields.add("entity");
    openapiFields.add("id");
    openapiFields.add("kind");
    openapiFields.add("name");
    openapiFields.add("profileIds");
    openapiFields.add("selfLink");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EntityAdWordsLink
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EntityAdWordsLink.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EntityAdWordsLink is not found in the empty JSON string", EntityAdWordsLink.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EntityAdWordsLink.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EntityAdWordsLink` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("adWordsAccounts") != null && !jsonObj.get("adWordsAccounts").isJsonNull()) {
        JsonArray jsonArrayadWordsAccounts = jsonObj.getAsJsonArray("adWordsAccounts");
        if (jsonArrayadWordsAccounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("adWordsAccounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `adWordsAccounts` to be an array in the JSON string but got `%s`", jsonObj.get("adWordsAccounts").toString()));
          }

          // validate the optional field `adWordsAccounts` (array)
          for (int i = 0; i < jsonArrayadWordsAccounts.size(); i++) {
            AdWordsAccount.validateJsonElement(jsonArrayadWordsAccounts.get(i));
          };
        }
      }
      // validate the optional field `entity`
      if (jsonObj.get("entity") != null && !jsonObj.get("entity").isJsonNull()) {
        EntityAdWordsLinkEntity.validateJsonElement(jsonObj.get("entity"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("profileIds") != null && !jsonObj.get("profileIds").isJsonNull() && !jsonObj.get("profileIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileIds` to be an array in the JSON string but got `%s`", jsonObj.get("profileIds").toString()));
      }
      if ((jsonObj.get("selfLink") != null && !jsonObj.get("selfLink").isJsonNull()) && !jsonObj.get("selfLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `selfLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("selfLink").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EntityAdWordsLink.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EntityAdWordsLink' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EntityAdWordsLink> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EntityAdWordsLink.class));

       return (TypeAdapter<T>) new TypeAdapter<EntityAdWordsLink>() {
           @Override
           public void write(JsonWriter out, EntityAdWordsLink value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EntityAdWordsLink read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EntityAdWordsLink given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EntityAdWordsLink
   * @throws IOException if the JSON string is invalid with respect to EntityAdWordsLink
   */
  public static EntityAdWordsLink fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EntityAdWordsLink.class);
  }

  /**
   * Convert an instance of EntityAdWordsLink to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

