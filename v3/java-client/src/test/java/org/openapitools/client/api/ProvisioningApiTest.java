/*
 * Google Analytics API
 * Views and manages your Google Analytics data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountTicket;
import org.openapitools.client.model.AccountTreeRequest;
import org.openapitools.client.model.AccountTreeResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProvisioningApi
 */
@Disabled
public class ProvisioningApiTest {

    private final ProvisioningApi api = new ProvisioningApi();

    /**
     * Creates an account ticket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsProvisioningCreateAccountTicketTest() throws ApiException {
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        AccountTicket accountTicket = null;
        AccountTicket response = api.analyticsProvisioningCreateAccountTicket(alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, accountTicket);
        // TODO: test validations
    }

    /**
     * Provision account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsProvisioningCreateAccountTreeTest() throws ApiException {
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        AccountTreeRequest accountTreeRequest = null;
        AccountTreeResponse response = api.analyticsProvisioningCreateAccountTree(alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, accountTreeRequest);
        // TODO: test validations
    }

}
