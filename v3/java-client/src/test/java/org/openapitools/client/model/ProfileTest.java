/*
 * Google Analytics API
 * Views and manages your Google Analytics data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ProfileChildLink;
import org.openapitools.client.model.ProfileParentLink;
import org.openapitools.client.model.ProfilePermissions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Profile
 */
public class ProfileTest {
    private final Profile model = new Profile();

    /**
     * Model tests for Profile
     */
    @Test
    public void testProfile() {
        // TODO: test Profile
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'botFilteringEnabled'
     */
    @Test
    public void botFilteringEnabledTest() {
        // TODO: test botFilteringEnabled
    }

    /**
     * Test the property 'childLink'
     */
    @Test
    public void childLinkTest() {
        // TODO: test childLink
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'defaultPage'
     */
    @Test
    public void defaultPageTest() {
        // TODO: test defaultPage
    }

    /**
     * Test the property 'eCommerceTracking'
     */
    @Test
    public void eCommerceTrackingTest() {
        // TODO: test eCommerceTracking
    }

    /**
     * Test the property 'enhancedECommerceTracking'
     */
    @Test
    public void enhancedECommerceTrackingTest() {
        // TODO: test enhancedECommerceTracking
    }

    /**
     * Test the property 'excludeQueryParameters'
     */
    @Test
    public void excludeQueryParametersTest() {
        // TODO: test excludeQueryParameters
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'internalWebPropertyId'
     */
    @Test
    public void internalWebPropertyIdTest() {
        // TODO: test internalWebPropertyId
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'parentLink'
     */
    @Test
    public void parentLinkTest() {
        // TODO: test parentLink
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'selfLink'
     */
    @Test
    public void selfLinkTest() {
        // TODO: test selfLink
    }

    /**
     * Test the property 'siteSearchCategoryParameters'
     */
    @Test
    public void siteSearchCategoryParametersTest() {
        // TODO: test siteSearchCategoryParameters
    }

    /**
     * Test the property 'siteSearchQueryParameters'
     */
    @Test
    public void siteSearchQueryParametersTest() {
        // TODO: test siteSearchQueryParameters
    }

    /**
     * Test the property 'starred'
     */
    @Test
    public void starredTest() {
        // TODO: test starred
    }

    /**
     * Test the property 'stripSiteSearchCategoryParameters'
     */
    @Test
    public void stripSiteSearchCategoryParametersTest() {
        // TODO: test stripSiteSearchCategoryParameters
    }

    /**
     * Test the property 'stripSiteSearchQueryParameters'
     */
    @Test
    public void stripSiteSearchQueryParametersTest() {
        // TODO: test stripSiteSearchQueryParameters
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'webPropertyId'
     */
    @Test
    public void webPropertyIdTest() {
        // TODO: test webPropertyId
    }

    /**
     * Test the property 'websiteUrl'
     */
    @Test
    public void websiteUrlTest() {
        // TODO: test websiteUrl
    }

}
