/*
 * Google Analytics API
 * Views and manages your Google Analytics data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GaData;
import org.openapitools.client.model.McfData;
import org.openapitools.client.model.RealtimeData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataApi
 */
@Disabled
public class DataApiTest {

    private final DataApi api = new DataApi();

    /**
     * Returns Analytics data for a view (profile).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsDataGaGetTest() throws ApiException {
        String ids = null;
        String startDate = null;
        String endDate = null;
        String metrics = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String dimensions = null;
        String filters = null;
        Boolean includeEmptyRows = null;
        Integer maxResults = null;
        String output = null;
        String samplingLevel = null;
        String segment = null;
        String sort = null;
        Integer startIndex = null;
        GaData response = api.analyticsDataGaGet(ids, startDate, endDate, metrics, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, dimensions, filters, includeEmptyRows, maxResults, output, samplingLevel, segment, sort, startIndex);
        // TODO: test validations
    }

    /**
     * Returns Analytics Multi-Channel Funnels data for a view (profile).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsDataMcfGetTest() throws ApiException {
        String ids = null;
        String startDate = null;
        String endDate = null;
        String metrics = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String dimensions = null;
        String filters = null;
        Integer maxResults = null;
        String samplingLevel = null;
        String sort = null;
        Integer startIndex = null;
        McfData response = api.analyticsDataMcfGet(ids, startDate, endDate, metrics, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, dimensions, filters, maxResults, samplingLevel, sort, startIndex);
        // TODO: test validations
    }

    /**
     * Returns real time data for a view (profile).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsDataRealtimeGetTest() throws ApiException {
        String ids = null;
        String metrics = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String dimensions = null;
        String filters = null;
        Integer maxResults = null;
        String sort = null;
        RealtimeData response = api.analyticsDataRealtimeGet(ids, metrics, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, dimensions, filters, maxResults, sort);
        // TODO: test validations
    }

}
