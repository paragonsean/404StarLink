# coding: utf-8

"""
    Maps

    The Maps API web services suite offers the following APIs:   - Raster   The Maps Raster API renders map data that is divided into gridded sections called tiles. Tiles are square images (png or jpg format) in various sizes which are available at 19 different zoom levels, ranging from 0 to 20. For zoom level 0, the entire earth is displayed on one single tile, while at zoom level 20, the world is divided into 2<sup>40</sup> tiles.   - Vector   Similar to Maps Raster API, the Maps Vector API serves data on different zoom level ranging from 0 to 22. For zoom level 0, the entire earth is displayed on one single tile, while at zoom level 22, the world is divided into 2<sup>44</sup> tiles.   The Maps Vector Service delivers geographic map data packaged in a vector representation of squared sections called vector tiles. Each tile includes pre-defined collections of map features (points, lines, road shapes, water polygons, building footprints, ect.) delivered in one of the specified vector formats. Format of the tile is formally described using protobuf schema.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.wmswmts_api import WMSWMTSApi


class TestWMSWMTSApi(unittest.TestCase):
    """WMSWMTSApi unit test stubs"""

    def setUp(self) -> None:
        self.api = WMSWMTSApi()

    def tearDown(self) -> None:
        pass

    def test_get_capabilities(self) -> None:
        """Test case for get_capabilities

        GetCapabilities
        """
        pass

    def test_get_map(self) -> None:
        """Test case for get_map

        GetMap
        """
        pass

    def test_map_version_number_wmts_key_wmts_version_wmts_capabilities_xml_get(self) -> None:
        """Test case for map_version_number_wmts_key_wmts_version_wmts_capabilities_xml_get

        WMTS
        """
        pass


if __name__ == '__main__':
    unittest.main()
