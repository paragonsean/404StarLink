/*
 * Amazon Lightsail
 * <p>Amazon Lightsail is the easiest way to get started with Amazon Web Services (Amazon Web Services) for developers who need to build websites or web applications. It includes everything you need to launch your project quickly - instances (virtual private servers), container services, storage buckets, managed databases, SSD-based block storage, static IP addresses, load balancers, content delivery network (CDN) distributions, DNS management of registered domains, and resource snapshots (backups) - for a low, predictable monthly price.</p> <p>You can manage your Lightsail resources using the Lightsail console, Lightsail API, Command Line Interface (CLI), or SDKs. For more information about Lightsail concepts and tasks, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli\">Amazon Lightsail Developer Guide</a>.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the Lightsail service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Lightsail service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lightsail.html\">Amazon Lightsail Endpoints and Quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LoadBalancerTlsCertificateFailureReason;
import org.openapitools.client.model.LoadBalancerTlsCertificateLocation;
import org.openapitools.client.model.LoadBalancerTlsCertificateRenewalSummary;
import org.openapitools.client.model.LoadBalancerTlsCertificateRevocationReason;
import org.openapitools.client.model.LoadBalancerTlsCertificateStatus;
import org.openapitools.client.model.ResourceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Describes a load balancer SSL/TLS certificate.&lt;/p&gt; &lt;p&gt;TLS is just an updated, more secure version of Secure Socket Layer (SSL).&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:08:38.220643-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LoadBalancerTlsCertificate {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_SUPPORT_CODE = "supportCode";
  @SerializedName(SERIALIZED_NAME_SUPPORT_CODE)
  private String supportCode;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private LoadBalancerTlsCertificateLocation location;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private ResourceType resourceType;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_NAME = "loadBalancerName";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_NAME)
  private String loadBalancerName;

  public static final String SERIALIZED_NAME_IS_ATTACHED = "isAttached";
  @SerializedName(SERIALIZED_NAME_IS_ATTACHED)
  private Boolean isAttached;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private LoadBalancerTlsCertificateStatus status;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "domainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_DOMAIN_VALIDATION_RECORDS = "domainValidationRecords";
  @SerializedName(SERIALIZED_NAME_DOMAIN_VALIDATION_RECORDS)
  private List domainValidationRecords;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "failureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private LoadBalancerTlsCertificateFailureReason failureReason;

  public static final String SERIALIZED_NAME_ISSUED_AT = "issuedAt";
  @SerializedName(SERIALIZED_NAME_ISSUED_AT)
  private OffsetDateTime issuedAt;

  public static final String SERIALIZED_NAME_ISSUER = "issuer";
  @SerializedName(SERIALIZED_NAME_ISSUER)
  private String issuer;

  public static final String SERIALIZED_NAME_KEY_ALGORITHM = "keyAlgorithm";
  @SerializedName(SERIALIZED_NAME_KEY_ALGORITHM)
  private String keyAlgorithm;

  public static final String SERIALIZED_NAME_NOT_AFTER = "notAfter";
  @SerializedName(SERIALIZED_NAME_NOT_AFTER)
  private OffsetDateTime notAfter;

  public static final String SERIALIZED_NAME_NOT_BEFORE = "notBefore";
  @SerializedName(SERIALIZED_NAME_NOT_BEFORE)
  private OffsetDateTime notBefore;

  public static final String SERIALIZED_NAME_RENEWAL_SUMMARY = "renewalSummary";
  @SerializedName(SERIALIZED_NAME_RENEWAL_SUMMARY)
  private LoadBalancerTlsCertificateRenewalSummary renewalSummary;

  public static final String SERIALIZED_NAME_REVOCATION_REASON = "revocationReason";
  @SerializedName(SERIALIZED_NAME_REVOCATION_REASON)
  private LoadBalancerTlsCertificateRevocationReason revocationReason;

  public static final String SERIALIZED_NAME_REVOKED_AT = "revokedAt";
  @SerializedName(SERIALIZED_NAME_REVOKED_AT)
  private OffsetDateTime revokedAt;

  public static final String SERIALIZED_NAME_SERIAL = "serial";
  @SerializedName(SERIALIZED_NAME_SERIAL)
  private String serial;

  public static final String SERIALIZED_NAME_SIGNATURE_ALGORITHM = "signatureAlgorithm";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_ALGORITHM)
  private String signatureAlgorithm;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_SUBJECT_ALTERNATIVE_NAMES = "subjectAlternativeNames";
  @SerializedName(SERIALIZED_NAME_SUBJECT_ALTERNATIVE_NAMES)
  private List subjectAlternativeNames;

  public LoadBalancerTlsCertificate() {
  }

  public LoadBalancerTlsCertificate name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public LoadBalancerTlsCertificate arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public LoadBalancerTlsCertificate supportCode(String supportCode) {
    this.supportCode = supportCode;
    return this;
  }

  /**
   * Get supportCode
   * @return supportCode
   */
  @javax.annotation.Nullable
  public String getSupportCode() {
    return supportCode;
  }

  public void setSupportCode(String supportCode) {
    this.supportCode = supportCode;
  }


  public LoadBalancerTlsCertificate createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public LoadBalancerTlsCertificate location(LoadBalancerTlsCertificateLocation location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public LoadBalancerTlsCertificateLocation getLocation() {
    return location;
  }

  public void setLocation(LoadBalancerTlsCertificateLocation location) {
    this.location = location;
  }


  public LoadBalancerTlsCertificate resourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public ResourceType getResourceType() {
    return resourceType;
  }

  public void setResourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
  }


  public LoadBalancerTlsCertificate tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public LoadBalancerTlsCertificate loadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
    return this;
  }

  /**
   * Get loadBalancerName
   * @return loadBalancerName
   */
  @javax.annotation.Nullable
  public String getLoadBalancerName() {
    return loadBalancerName;
  }

  public void setLoadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
  }


  public LoadBalancerTlsCertificate isAttached(Boolean isAttached) {
    this.isAttached = isAttached;
    return this;
  }

  /**
   * Get isAttached
   * @return isAttached
   */
  @javax.annotation.Nullable
  public Boolean getIsAttached() {
    return isAttached;
  }

  public void setIsAttached(Boolean isAttached) {
    this.isAttached = isAttached;
  }


  public LoadBalancerTlsCertificate status(LoadBalancerTlsCertificateStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public LoadBalancerTlsCertificateStatus getStatus() {
    return status;
  }

  public void setStatus(LoadBalancerTlsCertificateStatus status) {
    this.status = status;
  }


  public LoadBalancerTlsCertificate domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

  /**
   * Get domainName
   * @return domainName
   */
  @javax.annotation.Nullable
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public LoadBalancerTlsCertificate domainValidationRecords(List domainValidationRecords) {
    this.domainValidationRecords = domainValidationRecords;
    return this;
  }

  /**
   * Get domainValidationRecords
   * @return domainValidationRecords
   */
  @javax.annotation.Nullable
  public List getDomainValidationRecords() {
    return domainValidationRecords;
  }

  public void setDomainValidationRecords(List domainValidationRecords) {
    this.domainValidationRecords = domainValidationRecords;
  }


  public LoadBalancerTlsCertificate failureReason(LoadBalancerTlsCertificateFailureReason failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public LoadBalancerTlsCertificateFailureReason getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(LoadBalancerTlsCertificateFailureReason failureReason) {
    this.failureReason = failureReason;
  }


  public LoadBalancerTlsCertificate issuedAt(OffsetDateTime issuedAt) {
    this.issuedAt = issuedAt;
    return this;
  }

  /**
   * Get issuedAt
   * @return issuedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getIssuedAt() {
    return issuedAt;
  }

  public void setIssuedAt(OffsetDateTime issuedAt) {
    this.issuedAt = issuedAt;
  }


  public LoadBalancerTlsCertificate issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

  /**
   * Get issuer
   * @return issuer
   */
  @javax.annotation.Nullable
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }


  public LoadBalancerTlsCertificate keyAlgorithm(String keyAlgorithm) {
    this.keyAlgorithm = keyAlgorithm;
    return this;
  }

  /**
   * Get keyAlgorithm
   * @return keyAlgorithm
   */
  @javax.annotation.Nullable
  public String getKeyAlgorithm() {
    return keyAlgorithm;
  }

  public void setKeyAlgorithm(String keyAlgorithm) {
    this.keyAlgorithm = keyAlgorithm;
  }


  public LoadBalancerTlsCertificate notAfter(OffsetDateTime notAfter) {
    this.notAfter = notAfter;
    return this;
  }

  /**
   * Get notAfter
   * @return notAfter
   */
  @javax.annotation.Nullable
  public OffsetDateTime getNotAfter() {
    return notAfter;
  }

  public void setNotAfter(OffsetDateTime notAfter) {
    this.notAfter = notAfter;
  }


  public LoadBalancerTlsCertificate notBefore(OffsetDateTime notBefore) {
    this.notBefore = notBefore;
    return this;
  }

  /**
   * Get notBefore
   * @return notBefore
   */
  @javax.annotation.Nullable
  public OffsetDateTime getNotBefore() {
    return notBefore;
  }

  public void setNotBefore(OffsetDateTime notBefore) {
    this.notBefore = notBefore;
  }


  public LoadBalancerTlsCertificate renewalSummary(LoadBalancerTlsCertificateRenewalSummary renewalSummary) {
    this.renewalSummary = renewalSummary;
    return this;
  }

  /**
   * Get renewalSummary
   * @return renewalSummary
   */
  @javax.annotation.Nullable
  public LoadBalancerTlsCertificateRenewalSummary getRenewalSummary() {
    return renewalSummary;
  }

  public void setRenewalSummary(LoadBalancerTlsCertificateRenewalSummary renewalSummary) {
    this.renewalSummary = renewalSummary;
  }


  public LoadBalancerTlsCertificate revocationReason(LoadBalancerTlsCertificateRevocationReason revocationReason) {
    this.revocationReason = revocationReason;
    return this;
  }

  /**
   * Get revocationReason
   * @return revocationReason
   */
  @javax.annotation.Nullable
  public LoadBalancerTlsCertificateRevocationReason getRevocationReason() {
    return revocationReason;
  }

  public void setRevocationReason(LoadBalancerTlsCertificateRevocationReason revocationReason) {
    this.revocationReason = revocationReason;
  }


  public LoadBalancerTlsCertificate revokedAt(OffsetDateTime revokedAt) {
    this.revokedAt = revokedAt;
    return this;
  }

  /**
   * Get revokedAt
   * @return revokedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRevokedAt() {
    return revokedAt;
  }

  public void setRevokedAt(OffsetDateTime revokedAt) {
    this.revokedAt = revokedAt;
  }


  public LoadBalancerTlsCertificate serial(String serial) {
    this.serial = serial;
    return this;
  }

  /**
   * Get serial
   * @return serial
   */
  @javax.annotation.Nullable
  public String getSerial() {
    return serial;
  }

  public void setSerial(String serial) {
    this.serial = serial;
  }


  public LoadBalancerTlsCertificate signatureAlgorithm(String signatureAlgorithm) {
    this.signatureAlgorithm = signatureAlgorithm;
    return this;
  }

  /**
   * Get signatureAlgorithm
   * @return signatureAlgorithm
   */
  @javax.annotation.Nullable
  public String getSignatureAlgorithm() {
    return signatureAlgorithm;
  }

  public void setSignatureAlgorithm(String signatureAlgorithm) {
    this.signatureAlgorithm = signatureAlgorithm;
  }


  public LoadBalancerTlsCertificate subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public LoadBalancerTlsCertificate subjectAlternativeNames(List subjectAlternativeNames) {
    this.subjectAlternativeNames = subjectAlternativeNames;
    return this;
  }

  /**
   * Get subjectAlternativeNames
   * @return subjectAlternativeNames
   */
  @javax.annotation.Nullable
  public List getSubjectAlternativeNames() {
    return subjectAlternativeNames;
  }

  public void setSubjectAlternativeNames(List subjectAlternativeNames) {
    this.subjectAlternativeNames = subjectAlternativeNames;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadBalancerTlsCertificate loadBalancerTlsCertificate = (LoadBalancerTlsCertificate) o;
    return Objects.equals(this.name, loadBalancerTlsCertificate.name) &&
        Objects.equals(this.arn, loadBalancerTlsCertificate.arn) &&
        Objects.equals(this.supportCode, loadBalancerTlsCertificate.supportCode) &&
        Objects.equals(this.createdAt, loadBalancerTlsCertificate.createdAt) &&
        Objects.equals(this.location, loadBalancerTlsCertificate.location) &&
        Objects.equals(this.resourceType, loadBalancerTlsCertificate.resourceType) &&
        Objects.equals(this.tags, loadBalancerTlsCertificate.tags) &&
        Objects.equals(this.loadBalancerName, loadBalancerTlsCertificate.loadBalancerName) &&
        Objects.equals(this.isAttached, loadBalancerTlsCertificate.isAttached) &&
        Objects.equals(this.status, loadBalancerTlsCertificate.status) &&
        Objects.equals(this.domainName, loadBalancerTlsCertificate.domainName) &&
        Objects.equals(this.domainValidationRecords, loadBalancerTlsCertificate.domainValidationRecords) &&
        Objects.equals(this.failureReason, loadBalancerTlsCertificate.failureReason) &&
        Objects.equals(this.issuedAt, loadBalancerTlsCertificate.issuedAt) &&
        Objects.equals(this.issuer, loadBalancerTlsCertificate.issuer) &&
        Objects.equals(this.keyAlgorithm, loadBalancerTlsCertificate.keyAlgorithm) &&
        Objects.equals(this.notAfter, loadBalancerTlsCertificate.notAfter) &&
        Objects.equals(this.notBefore, loadBalancerTlsCertificate.notBefore) &&
        Objects.equals(this.renewalSummary, loadBalancerTlsCertificate.renewalSummary) &&
        Objects.equals(this.revocationReason, loadBalancerTlsCertificate.revocationReason) &&
        Objects.equals(this.revokedAt, loadBalancerTlsCertificate.revokedAt) &&
        Objects.equals(this.serial, loadBalancerTlsCertificate.serial) &&
        Objects.equals(this.signatureAlgorithm, loadBalancerTlsCertificate.signatureAlgorithm) &&
        Objects.equals(this.subject, loadBalancerTlsCertificate.subject) &&
        Objects.equals(this.subjectAlternativeNames, loadBalancerTlsCertificate.subjectAlternativeNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, arn, supportCode, createdAt, location, resourceType, tags, loadBalancerName, isAttached, status, domainName, domainValidationRecords, failureReason, issuedAt, issuer, keyAlgorithm, notAfter, notBefore, renewalSummary, revocationReason, revokedAt, serial, signatureAlgorithm, subject, subjectAlternativeNames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadBalancerTlsCertificate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    supportCode: ").append(toIndentedString(supportCode)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    loadBalancerName: ").append(toIndentedString(loadBalancerName)).append("\n");
    sb.append("    isAttached: ").append(toIndentedString(isAttached)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    domainValidationRecords: ").append(toIndentedString(domainValidationRecords)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    issuedAt: ").append(toIndentedString(issuedAt)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    keyAlgorithm: ").append(toIndentedString(keyAlgorithm)).append("\n");
    sb.append("    notAfter: ").append(toIndentedString(notAfter)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    renewalSummary: ").append(toIndentedString(renewalSummary)).append("\n");
    sb.append("    revocationReason: ").append(toIndentedString(revocationReason)).append("\n");
    sb.append("    revokedAt: ").append(toIndentedString(revokedAt)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    signatureAlgorithm: ").append(toIndentedString(signatureAlgorithm)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    subjectAlternativeNames: ").append(toIndentedString(subjectAlternativeNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("arn");
    openapiFields.add("supportCode");
    openapiFields.add("createdAt");
    openapiFields.add("location");
    openapiFields.add("resourceType");
    openapiFields.add("tags");
    openapiFields.add("loadBalancerName");
    openapiFields.add("isAttached");
    openapiFields.add("status");
    openapiFields.add("domainName");
    openapiFields.add("domainValidationRecords");
    openapiFields.add("failureReason");
    openapiFields.add("issuedAt");
    openapiFields.add("issuer");
    openapiFields.add("keyAlgorithm");
    openapiFields.add("notAfter");
    openapiFields.add("notBefore");
    openapiFields.add("renewalSummary");
    openapiFields.add("revocationReason");
    openapiFields.add("revokedAt");
    openapiFields.add("serial");
    openapiFields.add("signatureAlgorithm");
    openapiFields.add("subject");
    openapiFields.add("subjectAlternativeNames");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoadBalancerTlsCertificate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoadBalancerTlsCertificate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoadBalancerTlsCertificate is not found in the empty JSON string", LoadBalancerTlsCertificate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoadBalancerTlsCertificate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoadBalancerTlsCertificate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `supportCode`
      if (jsonObj.get("supportCode") != null && !jsonObj.get("supportCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("supportCode"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        LoadBalancerTlsCertificateLocation.validateJsonElement(jsonObj.get("location"));
      }
      // validate the optional field `resourceType`
      if (jsonObj.get("resourceType") != null && !jsonObj.get("resourceType").isJsonNull()) {
        ResourceType.validateJsonElement(jsonObj.get("resourceType"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `loadBalancerName`
      if (jsonObj.get("loadBalancerName") != null && !jsonObj.get("loadBalancerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("loadBalancerName"));
      }
      // validate the optional field `isAttached`
      if (jsonObj.get("isAttached") != null && !jsonObj.get("isAttached").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("isAttached"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        LoadBalancerTlsCertificateStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `domainName`
      if (jsonObj.get("domainName") != null && !jsonObj.get("domainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("domainName"));
      }
      // validate the optional field `domainValidationRecords`
      if (jsonObj.get("domainValidationRecords") != null && !jsonObj.get("domainValidationRecords").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("domainValidationRecords"));
      }
      // validate the optional field `failureReason`
      if (jsonObj.get("failureReason") != null && !jsonObj.get("failureReason").isJsonNull()) {
        LoadBalancerTlsCertificateFailureReason.validateJsonElement(jsonObj.get("failureReason"));
      }
      // validate the optional field `issuedAt`
      if (jsonObj.get("issuedAt") != null && !jsonObj.get("issuedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("issuedAt"));
      }
      // validate the optional field `issuer`
      if (jsonObj.get("issuer") != null && !jsonObj.get("issuer").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("issuer"));
      }
      // validate the optional field `keyAlgorithm`
      if (jsonObj.get("keyAlgorithm") != null && !jsonObj.get("keyAlgorithm").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("keyAlgorithm"));
      }
      // validate the optional field `notAfter`
      if (jsonObj.get("notAfter") != null && !jsonObj.get("notAfter").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("notAfter"));
      }
      // validate the optional field `notBefore`
      if (jsonObj.get("notBefore") != null && !jsonObj.get("notBefore").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("notBefore"));
      }
      // validate the optional field `renewalSummary`
      if (jsonObj.get("renewalSummary") != null && !jsonObj.get("renewalSummary").isJsonNull()) {
        LoadBalancerTlsCertificateRenewalSummary.validateJsonElement(jsonObj.get("renewalSummary"));
      }
      // validate the optional field `revocationReason`
      if (jsonObj.get("revocationReason") != null && !jsonObj.get("revocationReason").isJsonNull()) {
        LoadBalancerTlsCertificateRevocationReason.validateJsonElement(jsonObj.get("revocationReason"));
      }
      // validate the optional field `revokedAt`
      if (jsonObj.get("revokedAt") != null && !jsonObj.get("revokedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("revokedAt"));
      }
      // validate the optional field `serial`
      if (jsonObj.get("serial") != null && !jsonObj.get("serial").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serial"));
      }
      // validate the optional field `signatureAlgorithm`
      if (jsonObj.get("signatureAlgorithm") != null && !jsonObj.get("signatureAlgorithm").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("signatureAlgorithm"));
      }
      // validate the optional field `subject`
      if (jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("subject"));
      }
      // validate the optional field `subjectAlternativeNames`
      if (jsonObj.get("subjectAlternativeNames") != null && !jsonObj.get("subjectAlternativeNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("subjectAlternativeNames"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoadBalancerTlsCertificate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoadBalancerTlsCertificate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoadBalancerTlsCertificate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoadBalancerTlsCertificate.class));

       return (TypeAdapter<T>) new TypeAdapter<LoadBalancerTlsCertificate>() {
           @Override
           public void write(JsonWriter out, LoadBalancerTlsCertificate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoadBalancerTlsCertificate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoadBalancerTlsCertificate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoadBalancerTlsCertificate
   * @throws IOException if the JSON string is invalid with respect to LoadBalancerTlsCertificate
   */
  public static LoadBalancerTlsCertificate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoadBalancerTlsCertificate.class);
  }

  /**
   * Convert an instance of LoadBalancerTlsCertificate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

