# coding: utf-8

"""
    Soccer v3 Stats

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.round import Round

class TestRound(unittest.TestCase):
    """Round unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Round:
        """Test Round
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Round`
        """
        model = Round()
        if include_optional:
            return Round(
                current_round = True,
                current_week = 56,
                end_date = '',
                games = [
                    openapi_client.models.game.Game(
                        attendance = 56, 
                        away_team_country_code = '', 
                        away_team_formation = '', 
                        away_team_id = 56, 
                        away_team_key = '', 
                        away_team_money_line = 56, 
                        away_team_name = '', 
                        away_team_point_spread_payout = 56, 
                        away_team_score = 56, 
                        away_team_score_extra_time = 56, 
                        away_team_score_penalty = 56, 
                        away_team_score_period1 = 56, 
                        away_team_score_period2 = 56, 
                        clock = 56, 
                        clock_display = '', 
                        clock_extra = 56, 
                        date_time = '', 
                        day = '', 
                        draw_money_line = 56, 
                        game_id = 56, 
                        global_away_team_id = 56, 
                        global_game_id = 56, 
                        global_home_team_id = 56, 
                        group = '', 
                        home_team_country_code = '', 
                        home_team_formation = '', 
                        home_team_id = 56, 
                        home_team_key = '', 
                        home_team_money_line = 56, 
                        home_team_name = '', 
                        home_team_point_spread_payout = 56, 
                        home_team_score = 56, 
                        home_team_score_extra_time = 56, 
                        home_team_score_penalty = 56, 
                        home_team_score_period1 = 56, 
                        home_team_score_period2 = 56, 
                        is_closed = True, 
                        over_payout = 56, 
                        over_under = 1.337, 
                        period = '', 
                        playoff_aggregate_score = openapi_client.models.playoff_aggregate_score.PlayoffAggregateScore(
                            created = '', 
                            team_a_aggregate_score = 56, 
                            team_a_id = 56, 
                            team_b_aggregate_score = 56, 
                            team_b_id = 56, 
                            updated = '', 
                            winning_team_id = 56, ), 
                        point_spread = 1.337, 
                        round_id = 56, 
                        season = 56, 
                        season_type = 56, 
                        status = '', 
                        under_payout = 56, 
                        updated = '', 
                        updated_utc = '', 
                        venue_id = 56, 
                        venue_type = '', 
                        week = 56, 
                        winner = '', )
                    ],
                name = '',
                player_seasons = [
                    openapi_client.models.player_season.PlayerSeason(
                        assists = 1.337, 
                        blocked_shots = 1.337, 
                        corners_won = 1.337, 
                        crosses = 1.337, 
                        defender_clean_sheets = 1.337, 
                        fantasy_points = 1.337, 
                        fantasy_points_draft_kings = 1.337, 
                        fantasy_points_fan_duel = 1.337, 
                        fantasy_points_mondogoal = 1.337, 
                        fantasy_points_yahoo = 1.337, 
                        fouled = 1.337, 
                        fouls = 1.337, 
                        games = 56, 
                        global_team_id = 56, 
                        goalkeeper_clean_sheets = 1.337, 
                        goalkeeper_goals_against = 1.337, 
                        goalkeeper_saves = 1.337, 
                        goalkeeper_single_goal_against = 1.337, 
                        goalkeeper_wins = 1.337, 
                        goals = 1.337, 
                        interceptions = 1.337, 
                        last_man_tackle = 1.337, 
                        minutes = 1.337, 
                        name = '', 
                        offsides = 1.337, 
                        opponent_score = 1.337, 
                        own_goals = 1.337, 
                        passes = 1.337, 
                        passes_completed = 1.337, 
                        penalties_conceded = 1.337, 
                        penalties_won = 1.337, 
                        penalty_kick_goals = 1.337, 
                        penalty_kick_misses = 1.337, 
                        penalty_kick_saves = 1.337, 
                        player_id = 56, 
                        position = '', 
                        position_category = '', 
                        red_cards = 1.337, 
                        round_id = 56, 
                        score = 1.337, 
                        season = 56, 
                        season_type = 56, 
                        short_name = '', 
                        shots = 1.337, 
                        shots_on_goal = 1.337, 
                        started = 56, 
                        stat_id = 56, 
                        tackles = 1.337, 
                        tackles_won = 1.337, 
                        team = '', 
                        team_id = 56, 
                        touches = 1.337, 
                        updated = '', 
                        updated_utc = '', 
                        yellow_cards = 1.337, 
                        yellow_red_cards = 1.337, )
                    ],
                round_id = 56,
                season = 56,
                season_id = 56,
                season_type = 56,
                standings = [
                    openapi_client.models.standing.Standing(
                        draws = 56, 
                        games = 56, 
                        global_team_id = 56, 
                        goals_against = 56, 
                        goals_differential = 56, 
                        goals_scored = 56, 
                        group = '', 
                        losses = 56, 
                        name = '', 
                        order = 56, 
                        points = 56, 
                        round_id = 56, 
                        scope = '', 
                        short_name = '', 
                        standing_id = 56, 
                        team_id = 56, 
                        wins = 56, )
                    ],
                start_date = '',
                team_seasons = [
                    openapi_client.models.team_season.TeamSeason(
                        assists = 1.337, 
                        blocked_shots = 1.337, 
                        corners_won = 1.337, 
                        crosses = 1.337, 
                        defender_clean_sheets = 1.337, 
                        fantasy_points = 1.337, 
                        fantasy_points_draft_kings = 1.337, 
                        fantasy_points_fan_duel = 1.337, 
                        fantasy_points_mondogoal = 1.337, 
                        fantasy_points_yahoo = 1.337, 
                        fouled = 1.337, 
                        fouls = 1.337, 
                        games = 56, 
                        global_team_id = 56, 
                        goalkeeper_clean_sheets = 1.337, 
                        goalkeeper_goals_against = 1.337, 
                        goalkeeper_saves = 1.337, 
                        goalkeeper_single_goal_against = 1.337, 
                        goalkeeper_wins = 1.337, 
                        goals = 1.337, 
                        interceptions = 1.337, 
                        last_man_tackle = 1.337, 
                        minutes = 1.337, 
                        name = '', 
                        offsides = 1.337, 
                        opponent_score = 1.337, 
                        own_goals = 1.337, 
                        passes = 1.337, 
                        passes_completed = 1.337, 
                        penalties_conceded = 1.337, 
                        penalties_won = 1.337, 
                        penalty_kick_goals = 1.337, 
                        penalty_kick_misses = 1.337, 
                        penalty_kick_saves = 1.337, 
                        possession = 1.337, 
                        red_cards = 1.337, 
                        round_id = 56, 
                        score = 1.337, 
                        season = 56, 
                        season_type = 56, 
                        shots = 1.337, 
                        shots_on_goal = 1.337, 
                        stat_id = 56, 
                        tackles = 1.337, 
                        tackles_won = 1.337, 
                        team = '', 
                        team_id = 56, 
                        touches = 1.337, 
                        updated = '', 
                        updated_utc = '', 
                        yellow_cards = 1.337, 
                        yellow_red_cards = 1.337, )
                    ],
                type = ''
            )
        else:
            return Round(
        )
        """

    def testRound(self):
        """Test Round"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
