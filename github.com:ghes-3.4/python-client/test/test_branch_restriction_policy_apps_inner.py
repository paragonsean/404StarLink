# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.branch_restriction_policy_apps_inner import BranchRestrictionPolicyAppsInner

class TestBranchRestrictionPolicyAppsInner(unittest.TestCase):
    """BranchRestrictionPolicyAppsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BranchRestrictionPolicyAppsInner:
        """Test BranchRestrictionPolicyAppsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BranchRestrictionPolicyAppsInner`
        """
        model = BranchRestrictionPolicyAppsInner()
        if include_optional:
            return BranchRestrictionPolicyAppsInner(
                created_at = '',
                description = '',
                events = [
                    ''
                    ],
                external_url = '',
                html_url = '',
                id = 56,
                name = '',
                node_id = '',
                owner = openapi_client.models.branch_restriction_policy_apps_inner_owner.branch_restriction_policy_apps_inner_owner(
                    avatar_url = '', 
                    description = '', 
                    events_url = '', 
                    followers_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"', 
                    following_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"', 
                    gists_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"', 
                    gravatar_id = '""', 
                    hooks_url = '', 
                    html_url = '"https://github.com/testorg-ea8ec76d71c3af4b"', 
                    id = 56, 
                    issues_url = '', 
                    login = '', 
                    members_url = '', 
                    node_id = '', 
                    organizations_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"', 
                    public_members_url = '', 
                    received_events_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"', 
                    repos_url = '', 
                    site_admin = False, 
                    starred_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"', 
                    subscriptions_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"', 
                    type = '"Organization"', 
                    url = '', ),
                permissions = openapi_client.models.branch_restriction_policy_apps_inner_permissions.branch_restriction_policy_apps_inner_permissions(
                    contents = '', 
                    issues = '', 
                    metadata = '', 
                    single_file = '', ),
                slug = '',
                updated_at = ''
            )
        else:
            return BranchRestrictionPolicyAppsInner(
        )
        """

    def testBranchRestrictionPolicyAppsInner(self):
        """Test BranchRestrictionPolicyAppsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
