# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.hook import Hook

class TestHook(unittest.TestCase):
    """Hook unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Hook:
        """Test Hook
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Hook`
        """
        model = Hook()
        if include_optional:
            return Hook(
                active = True,
                config = openapi_client.models.hook_config.hook_config(
                    content_type = '"json"', 
                    digest = '"sha256"', 
                    email = '"foo@bar.com"', 
                    insecure_ssl = null, 
                    password = '"foo"', 
                    room = '"roomer"', 
                    secret = '"********"', 
                    subdomain = '"foo"', 
                    token = '"abc"', 
                    url = 'https://example.com/webhook', ),
                created_at = '2011-09-06T17:26:27Z',
                deliveries_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries',
                events = ["push","pull_request"],
                id = 42,
                last_response = openapi_client.models.hook_response.Hook Response(
                    code = 56, 
                    message = '', 
                    status = '', ),
                name = 'web',
                ping_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/pings',
                test_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/test',
                type = '',
                updated_at = '2011-09-06T20:39:23Z',
                url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1'
            )
        else:
            return Hook(
                active = True,
                config = openapi_client.models.hook_config.hook_config(
                    content_type = '"json"', 
                    digest = '"sha256"', 
                    email = '"foo@bar.com"', 
                    insecure_ssl = null, 
                    password = '"foo"', 
                    room = '"roomer"', 
                    secret = '"********"', 
                    subdomain = '"foo"', 
                    token = '"abc"', 
                    url = 'https://example.com/webhook', ),
                created_at = '2011-09-06T17:26:27Z',
                events = ["push","pull_request"],
                id = 42,
                last_response = openapi_client.models.hook_response.Hook Response(
                    code = 56, 
                    message = '', 
                    status = '', ),
                name = 'web',
                ping_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/pings',
                test_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/test',
                type = '',
                updated_at = '2011-09-06T20:39:23Z',
                url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1',
        )
        """

    def testHook(self):
        """Test Hook"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
