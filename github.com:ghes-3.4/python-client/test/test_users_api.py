# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.users_api import UsersApi


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UsersApi()

    def tearDown(self) -> None:
        pass

    def test_users_add_email_for_authenticated_user(self) -> None:
        """Test case for users_add_email_for_authenticated_user

        Add an email address for the authenticated user
        """
        pass

    def test_users_check_following_for_user(self) -> None:
        """Test case for users_check_following_for_user

        Check if a user follows another user
        """
        pass

    def test_users_check_person_is_followed_by_authenticated(self) -> None:
        """Test case for users_check_person_is_followed_by_authenticated

        Check if a person is followed by the authenticated user
        """
        pass

    def test_users_create_gpg_key_for_authenticated_user(self) -> None:
        """Test case for users_create_gpg_key_for_authenticated_user

        Create a GPG key for the authenticated user
        """
        pass

    def test_users_create_public_ssh_key_for_authenticated_user(self) -> None:
        """Test case for users_create_public_ssh_key_for_authenticated_user

        Create a public SSH key for the authenticated user
        """
        pass

    def test_users_delete_email_for_authenticated_user(self) -> None:
        """Test case for users_delete_email_for_authenticated_user

        Delete an email address for the authenticated user
        """
        pass

    def test_users_delete_gpg_key_for_authenticated_user(self) -> None:
        """Test case for users_delete_gpg_key_for_authenticated_user

        Delete a GPG key for the authenticated user
        """
        pass

    def test_users_delete_public_ssh_key_for_authenticated_user(self) -> None:
        """Test case for users_delete_public_ssh_key_for_authenticated_user

        Delete a public SSH key for the authenticated user
        """
        pass

    def test_users_follow(self) -> None:
        """Test case for users_follow

        Follow a user
        """
        pass

    def test_users_get_authenticated(self) -> None:
        """Test case for users_get_authenticated

        Get the authenticated user
        """
        pass

    def test_users_get_by_username(self) -> None:
        """Test case for users_get_by_username

        Get a user
        """
        pass

    def test_users_get_context_for_user(self) -> None:
        """Test case for users_get_context_for_user

        Get contextual information for a user
        """
        pass

    def test_users_get_gpg_key_for_authenticated_user(self) -> None:
        """Test case for users_get_gpg_key_for_authenticated_user

        Get a GPG key for the authenticated user
        """
        pass

    def test_users_get_public_ssh_key_for_authenticated_user(self) -> None:
        """Test case for users_get_public_ssh_key_for_authenticated_user

        Get a public SSH key for the authenticated user
        """
        pass

    def test_users_list(self) -> None:
        """Test case for users_list

        List users
        """
        pass

    def test_users_list_emails_for_authenticated_user(self) -> None:
        """Test case for users_list_emails_for_authenticated_user

        List email addresses for the authenticated user
        """
        pass

    def test_users_list_followed_by_authenticated_user(self) -> None:
        """Test case for users_list_followed_by_authenticated_user

        List the people the authenticated user follows
        """
        pass

    def test_users_list_followers_for_authenticated_user(self) -> None:
        """Test case for users_list_followers_for_authenticated_user

        List followers of the authenticated user
        """
        pass

    def test_users_list_followers_for_user(self) -> None:
        """Test case for users_list_followers_for_user

        List followers of a user
        """
        pass

    def test_users_list_following_for_user(self) -> None:
        """Test case for users_list_following_for_user

        List the people a user follows
        """
        pass

    def test_users_list_gpg_keys_for_authenticated_user(self) -> None:
        """Test case for users_list_gpg_keys_for_authenticated_user

        List GPG keys for the authenticated user
        """
        pass

    def test_users_list_gpg_keys_for_user(self) -> None:
        """Test case for users_list_gpg_keys_for_user

        List GPG keys for a user
        """
        pass

    def test_users_list_public_emails_for_authenticated_user(self) -> None:
        """Test case for users_list_public_emails_for_authenticated_user

        List public email addresses for the authenticated user
        """
        pass

    def test_users_list_public_keys_for_user(self) -> None:
        """Test case for users_list_public_keys_for_user

        List public keys for a user
        """
        pass

    def test_users_list_public_ssh_keys_for_authenticated_user(self) -> None:
        """Test case for users_list_public_ssh_keys_for_authenticated_user

        List public SSH keys for the authenticated user
        """
        pass

    def test_users_unfollow(self) -> None:
        """Test case for users_unfollow

        Unfollow a user
        """
        pass

    def test_users_update_authenticated(self) -> None:
        """Test case for users_update_authenticated

        Update the authenticated user
        """
        pass


if __name__ == '__main__':
    unittest.main()
