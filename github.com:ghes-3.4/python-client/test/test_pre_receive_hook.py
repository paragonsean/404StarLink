# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pre_receive_hook import PreReceiveHook

class TestPreReceiveHook(unittest.TestCase):
    """PreReceiveHook unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PreReceiveHook:
        """Test PreReceiveHook
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PreReceiveHook`
        """
        model = PreReceiveHook()
        if include_optional:
            return PreReceiveHook(
                allow_downstream_configuration = True,
                enforcement = '',
                environment = openapi_client.models.pre_receive_hook_environment.pre_receive_hook_environment(
                    created_at = '', 
                    default_environment = True, 
                    download = openapi_client.models.pre_receive_environment_download.pre_receive_environment_download(
                        downloaded_at = '', 
                        message = '', 
                        state = '', 
                        url = '', ), 
                    hooks_count = 56, 
                    html_url = '', 
                    id = 56, 
                    image_url = '', 
                    name = '', 
                    url = '', ),
                id = 56,
                name = '',
                script = '',
                script_repository = openapi_client.models.pre_receive_hook_script_repository.pre_receive_hook_script_repository(
                    full_name = '', 
                    html_url = '', 
                    id = 56, 
                    url = '', )
            )
        else:
            return PreReceiveHook(
        )
        """

    def testPreReceiveHook(self):
        """Test PreReceiveHook"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
