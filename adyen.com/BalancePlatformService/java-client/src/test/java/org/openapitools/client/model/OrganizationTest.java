/*
 * Configuration API
 * The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Versioning The Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/bcl/v1/accountHolders ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v1`.
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Address3;
import org.openapitools.client.model.PhoneNumber2;
import org.openapitools.client.model.StockData;
import org.openapitools.client.model.WebData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Organization
 */
public class OrganizationTest {
    private final Organization model = new Organization();

    /**
     * Model tests for Organization
     */
    @Test
    public void testOrganization() {
        // TODO: test Organization
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'doingBusinessAs'
     */
    @Test
    public void doingBusinessAsTest() {
        // TODO: test doingBusinessAs
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'legalName'
     */
    @Test
    public void legalNameTest() {
        // TODO: test legalName
    }

    /**
     * Test the property 'phone'
     */
    @Test
    public void phoneTest() {
        // TODO: test phone
    }

    /**
     * Test the property 'principalPlaceOfBusiness'
     */
    @Test
    public void principalPlaceOfBusinessTest() {
        // TODO: test principalPlaceOfBusiness
    }

    /**
     * Test the property 'registeredAddress'
     */
    @Test
    public void registeredAddressTest() {
        // TODO: test registeredAddress
    }

    /**
     * Test the property 'registrationNumber'
     */
    @Test
    public void registrationNumberTest() {
        // TODO: test registrationNumber
    }

    /**
     * Test the property 'stockData'
     */
    @Test
    public void stockDataTest() {
        // TODO: test stockData
    }

    /**
     * Test the property 'taxExempt'
     */
    @Test
    public void taxExemptTest() {
        // TODO: test taxExempt
    }

    /**
     * Test the property 'taxId'
     */
    @Test
    public void taxIdTest() {
        // TODO: test taxId
    }

    /**
     * Test the property 'taxIdAbsenceReason'
     */
    @Test
    public void taxIdAbsenceReasonTest() {
        // TODO: test taxIdAbsenceReason
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'webData'
     */
    @Test
    public void webDataTest() {
        // TODO: test webData
    }

}
