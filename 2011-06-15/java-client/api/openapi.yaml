openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Security Token Service</fullname> <p>Security Token Service\
    \ (STS) enables you to request temporary, limited-privilege credentials for Identity\
    \ and Access Management (IAM) users or for users that you authenticate (federated\
    \ users). This guide provides descriptions of the STS API. For more information\
    \ about using this service, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\"\
    >Temporary Security Credentials</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Security Token Service
  version: 2011-06-15
  x-release: v4
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: sts
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sts-2011-06-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sts/
servers:
- description: The general AWS STS multi-region endpoint
  url: https://sts.amazonaws.com
- description: The AWS STS endpoint for AWS GovCloud (US) and AWS GovCloud (US-East)
  url: "http://sts.{region}.amazonaws.com"
  variables:
    region:
      default: us-gov-west-1
      description: The AWS region
      enum:
      - us-gov-west-1
      - us-gov-east-1
- description: The AWS STS endpoint for AWS GovCloud (US) and AWS GovCloud (US-East)
  url: "https://sts.{region}.amazonaws.com"
  variables:
    region:
      default: us-gov-west-1
      description: The AWS region
      enum:
      - us-gov-west-1
      - us-gov-east-1
- description: The AWS STS endpoint for China (Beijing) and China (Ningxia)
  url: "http://sts.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS STS endpoint for China (Beijing) and China (Ningxia)
  url: "https://sts.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#Action=AssumeRole:
    get:
      description: "<p>Returns a set of temporary security credentials that you can\
        \ use to access Amazon Web Services resources. These temporary credentials\
        \ consist of an access key ID, a secret access key, and a security token.\
        \ Typically, you use <code>AssumeRole</code> within your account or for cross-account\
        \ access. For a comparison of <code>AssumeRole</code> with other API operations\
        \ that produce temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <p> <b>Permissions</b> </p> <p>The temporary security credentials\
        \ created by <code>AssumeRole</code> can be used to make API calls to any\
        \ Amazon Web Services service with the following exception: You cannot call\
        \ the Amazon Web Services STS <code>GetFederationToken</code> or <code>GetSessionToken</code>\
        \ API operations.</p> <p>(Optional) You can pass inline or managed <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >session policies</a> to this operation. You can pass a single JSON policy\
        \ document to use as an inline session policy. You can also specify up to\
        \ 10 managed policy Amazon Resource Names (ARNs) to use as managed session\
        \ policies. The plaintext that you use for both inline and managed session\
        \ policies can't exceed 2,048 characters. Passing policies to this operation\
        \ returns new temporary credentials. The resulting session's permissions are\
        \ the intersection of the role's identity-based policy and the session policies.\
        \ You can use the role's temporary credentials in subsequent Amazon Web Services\
        \ API calls to access resources in the account that owns the role. You cannot\
        \ use session policies to grant more permissions than those allowed by the\
        \ identity-based policy of the role that is being assumed. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>When you create\
        \ a role, you create two policies: A role trust policy that specifies <i>who</i>\
        \ can assume the role and a permissions policy that specifies <i>what</i>\
        \ can be done with the role. You specify the trusted principal who is allowed\
        \ to assume the role in the role trust policy.</p> <p>To assume a role from\
        \ a different account, your Amazon Web Services account must be trusted by\
        \ the role. The trust relationship is defined in the role's trust policy when\
        \ the role is created. That trust policy states which accounts are allowed\
        \ to delegate that access to users in the account. </p> <p>A user who wants\
        \ to access a role in a different account must also have permissions that\
        \ are delegated from the user account administrator. The administrator must\
        \ attach a policy that allows the user to call <code>AssumeRole</code> for\
        \ the ARN of the role in the other account.</p> <p>To allow a user to assume\
        \ a role in the same account, you can do either of the following:</p> <ul>\
        \ <li> <p>Attach a policy to the user that allows the user to call <code>AssumeRole</code>\
        \ (as long as the role's trust policy trusts the account).</p> </li> <li>\
        \ <p>Add the user as a principal directly in the role's trust policy.</p>\
        \ </li> </ul> <p>You can do either because the roleâ€™s trust policy acts as\
        \ an IAM resource-based policy. When a resource-based policy grants access\
        \ to a principal in the same account, no additional identity-based policy\
        \ is required. For more information about trust policies and resource-based\
        \ policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\"\
        >IAM Policies</a> in the <i>IAM User Guide</i>.</p> <p> <b>Tags</b> </p> <p>(Optional)\
        \ You can pass tag key-value pairs to your session. These tags are called\
        \ session tags. For more information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <p>An administrator\
        \ must grant you the permissions necessary to pass session tags. The administrator\
        \ can also create granular permissions to allow you to pass only specific\
        \ session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\"\
        >Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM\
        \ User Guide</i>.</p> <p>You can set the session tags as transitive. Transitive\
        \ tags persist during role chaining. For more information, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\"\
        >Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>.</p> <p>\
        \ <b>Using MFA with AssumeRole</b> </p> <p>(Optional) You can include multi-factor\
        \ authentication (MFA) information when you call <code>AssumeRole</code>.\
        \ This is useful for cross-account scenarios to ensure that the user that\
        \ assumes the role has been authenticated with an Amazon Web Services MFA\
        \ device. In that scenario, the trust policy of the role being assumed includes\
        \ a condition that tests for MFA authentication. If the caller does not include\
        \ valid MFA information, the request to assume the role is denied. The condition\
        \ in a trust policy that tests for MFA authentication might look like the\
        \ following example.</p> <p> <code>\"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\"\
        : true}}</code> </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html\"\
        >Configuring MFA-Protected API Access</a> in the <i>IAM User Guide</i> guide.</p>\
        \ <p>To use MFA with <code>AssumeRole</code>, you pass values for the <code>SerialNumber</code>\
        \ and <code>TokenCode</code> parameters. The <code>SerialNumber</code> value\
        \ identifies the user's hardware or virtual MFA device. The <code>TokenCode</code>\
        \ is the time-based one-time password (TOTP) that the MFA device produces.\
        \ </p>"
      operationId: GET_AssumeRole
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the role to assume.
        explode: true
        in: query
        name: RoleArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]+"
          type: string
        style: form
      - description: "<p>An identifier for the assumed role session.</p> <p>Use the\
          \ role session name to uniquely identify a session when the same role is\
          \ assumed by different principals or for different reasons. In cross-account\
          \ scenarios, the role session name is visible to, and can be logged by the\
          \ account that owns the role. The role session name is also used in the\
          \ ARN of the assumed role principal. This means that subsequent cross-account\
          \ API requests that use the temporary security credentials will expose the\
          \ role session name to the external account in their CloudTrail logs.</p>\
          \ <p>The regex used to validate this parameter is a string of characters\
          \ consisting of upper- and lower-case alphanumeric characters with no spaces.\
          \ You can also include underscores or any of the following characters: =,.@-</p>"
        explode: true
        in: query
        name: RoleSessionName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "[\\w+=,.@-]*"
          type: string
        style: form
      - description: "<p>The Amazon Resource Names (ARNs) of the IAM managed policies\
          \ that you want to use as managed session policies. The policies must exist\
          \ in the same account as the role.</p> <p>This parameter is optional. You\
          \ can provide up to 10 managed policy ARNs. However, the plaintext that\
          \ you use for both inline and managed session policies can't exceed 2,048\
          \ characters. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
          \ in the Amazon Web Services General Reference.</p> <note> <p>An Amazon\
          \ Web Services conversion compresses the passed inline session policy, managed\
          \ policy ARNs, and session tags into a packed binary format that has a separate\
          \ limit. Your request can fail for this limit even if your plaintext meets\
          \ the other requirements. The <code>PackedPolicySize</code> response element\
          \ indicates by percentage how close the policies and tags for your request\
          \ are to the upper size limit.</p> </note> <p>Passing policies to this operation\
          \ returns new temporary credentials. The resulting session's permissions\
          \ are the intersection of the role's identity-based policy and the session\
          \ policies. You can use the role's temporary credentials in subsequent Amazon\
          \ Web Services API calls to access resources in the account that owns the\
          \ role. You cannot use session policies to grant more permissions than those\
          \ allowed by the identity-based policy of the role that is being assumed.\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >Session Policies</a> in the <i>IAM User Guide</i>.</p>"
        explode: true
        in: query
        name: PolicyArns
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PolicyDescriptorType'
          type: array
        style: form
      - description: "<p>An IAM policy in JSON format that you want to use as an inline\
          \ session policy.</p> <p>This parameter is optional. Passing policies to\
          \ this operation returns new temporary credentials. The resulting session's\
          \ permissions are the intersection of the role's identity-based policy and\
          \ the session policies. You can use the role's temporary credentials in\
          \ subsequent Amazon Web Services API calls to access resources in the account\
          \ that owns the role. You cannot use session policies to grant more permissions\
          \ than those allowed by the identity-based policy of the role that is being\
          \ assumed. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plaintext\
          \ that you use for both inline and managed session policies can't exceed\
          \ 2,048 characters. The JSON policy characters can be any ASCII character\
          \ from the space character to the end of the valid character list (\\u0020\
          \ through \\u00FF). It can also include the tab (\\u0009), linefeed (\\\
          u000A), and carriage return (\\u000D) characters.</p> <note> <p>An Amazon\
          \ Web Services conversion compresses the passed inline session policy, managed\
          \ policy ARNs, and session tags into a packed binary format that has a separate\
          \ limit. Your request can fail for this limit even if your plaintext meets\
          \ the other requirements. The <code>PackedPolicySize</code> response element\
          \ indicates by percentage how close the policies and tags for your request\
          \ are to the upper size limit.</p> </note>"
        explode: true
        in: query
        name: Policy
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
          type: string
        style: form
      - description: "<p>The duration, in seconds, of the role session. The value\
          \ specified can range from 900 seconds (15 minutes) up to the maximum session\
          \ duration set for the role. The maximum session duration setting can have\
          \ a value from 1 hour to 12 hours. If you specify a value higher than this\
          \ setting or the administrator setting (whichever is lower), the operation\
          \ fails. For example, if you specify a session duration of 12 hours, but\
          \ your administrator set the maximum session duration to 6 hours, your operation\
          \ fails. </p> <p>Role chaining limits your Amazon Web Services CLI or Amazon\
          \ Web Services API role session to a maximum of one hour. When you use the\
          \ <code>AssumeRole</code> API operation to assume a role, you can specify\
          \ the duration of your role session with the <code>DurationSeconds</code>\
          \ parameter. You can specify a parameter value of up to 43200 seconds (12\
          \ hours), depending on the maximum session duration setting for your role.\
          \ However, if you assume a role using role chaining and provide a <code>DurationSeconds</code>\
          \ parameter value greater than one hour, the operation fails. To learn how\
          \ to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
          >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM\
          \ User Guide</i>.</p> <p>By default, the value is set to <code>3600</code>\
          \ seconds. </p> <note> <p>The <code>DurationSeconds</code> parameter is\
          \ separate from the duration of a console session that you might request\
          \ using the returned credentials. The request to the federation endpoint\
          \ for a console sign-in token takes a <code>SessionDuration</code> parameter\
          \ that specifies the maximum length of the console session. For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\"\
          >Creating a URL that Enables Federated Users to Access the Amazon Web Services\
          \ Management Console</a> in the <i>IAM User Guide</i>.</p> </note>"
        explode: true
        in: query
        name: DurationSeconds
        required: false
        schema:
          maximum: 43200
          minimum: 900
          type: integer
        style: form
      - description: "<p>A list of session tags that you want to pass. Each session\
          \ tag consists of a key name and an associated value. For more information\
          \ about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
          >Tagging Amazon Web Services STS Sessions</a> in the <i>IAM User Guide</i>.</p>\
          \ <p>This parameter is optional. You can pass up to 50 session tags. The\
          \ plaintext session tag keys canâ€™t exceed 128 characters, and the values\
          \ canâ€™t exceed 256 characters. For these and additional limits, see <a href=\"\
          https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
          >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p> <note>\
          \ <p>An Amazon Web Services conversion compresses the passed inline session\
          \ policy, managed policy ARNs, and session tags into a packed binary format\
          \ that has a separate limit. Your request can fail for this limit even if\
          \ your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
          \ response element indicates by percentage how close the policies and tags\
          \ for your request are to the upper size limit.</p> </note> <p>You can pass\
          \ a session tag with the same key as a tag that is already attached to the\
          \ role. When you do, session tags override a role tag with the same key.\
          \ </p> <p>Tag keyâ€“value pairs are not case sensitive, but case is preserved.\
          \ This means that you cannot have separate <code>Department</code> and <code>department</code>\
          \ tag keys. Assume that the role has the <code>Department</code>=<code>Marketing</code>\
          \ tag and you pass the <code>department</code>=<code>engineering</code>\
          \ session tag. <code>Department</code> and <code>department</code> are not\
          \ saved as separate tags, and the session tag passed in the request takes\
          \ precedence over the role tag.</p> <p>Additionally, if you used temporary\
          \ credentials to perform this operation, the new session inherits any transitive\
          \ session tags from the calling session. If you pass a session tag with\
          \ the same key as an inherited tag, the operation fails. To view the inherited\
          \ tags for a session, see the CloudTrail logs. For more information, see\
          \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_ctlogs\"\
          >Viewing Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>.</p>"
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
        style: form
      - description: "<p>A list of keys for session tags that you want to set as transitive.\
          \ If you set a tag key as transitive, the corresponding key and value passes\
          \ to subsequent sessions in a role chain. For more information, see <a href=\"\
          https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\"\
          >Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>.</p>\
          \ <p>This parameter is optional. When you set session tags as transitive,\
          \ the session policy and session tags packed binary limit is not affected.</p>\
          \ <p>If you choose not to specify a transitive tag key, then no tags are\
          \ passed from this session to any subsequent sessions.</p>"
        explode: true
        in: query
        name: TransitiveTagKeys
        required: false
        schema:
          items:
            $ref: '#/components/schemas/tagKeyType'
          maxItems: 50
          type: array
        style: form
      - description: "<p>A unique identifier that might be required when you assume\
          \ a role in another account. If the administrator of the account to which\
          \ the role belongs provided you with an external ID, then provide that value\
          \ in the <code>ExternalId</code> parameter. This value can be any string,\
          \ such as a passphrase or account number. A cross-account role is usually\
          \ set up to trust everyone in an account. Therefore, the administrator of\
          \ the trusting account might send an external ID to the administrator of\
          \ the trusted account. That way, only someone with the ID can assume the\
          \ role, rather than everyone in the account. For more information about\
          \ the external ID, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html\"\
          >How to Use an External ID When Granting Access to Your Amazon Web Services\
          \ Resources to a Third Party</a> in the <i>IAM User Guide</i>.</p> <p>The\
          \ regex used to validate this parameter is a string of characters consisting\
          \ of upper- and lower-case alphanumeric characters with no spaces. You can\
          \ also include underscores or any of the following characters: =,.@:/-</p>"
        explode: true
        in: query
        name: ExternalId
        required: false
        schema:
          maxLength: 1224
          minLength: 2
          pattern: "[\\w+=,.@:\\/-]*"
          type: string
        style: form
      - description: "<p>The identification number of the MFA device that is associated\
          \ with the user who is making the <code>AssumeRole</code> call. Specify\
          \ this value if the trust policy of the role being assumed includes a condition\
          \ that requires MFA authentication. The value is either the serial number\
          \ for a hardware device (such as <code>GAHT12345678</code>) or an Amazon\
          \ Resource Name (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>).</p>\
          \ <p>The regex used to validate this parameter is a string of characters\
          \ consisting of upper- and lower-case alphanumeric characters with no spaces.\
          \ You can also include underscores or any of the following characters: =,.@-</p>"
        explode: true
        in: query
        name: SerialNumber
        required: false
        schema:
          maxLength: 256
          minLength: 9
          pattern: "[\\w+=/:,.@-]*"
          type: string
        style: form
      - description: "<p>The value provided by the MFA device, if the trust policy\
          \ of the role being assumed requires MFA. (In other words, if the policy\
          \ includes a condition that tests for MFA). If the role being assumed requires\
          \ MFA and if the <code>TokenCode</code> value is missing or expired, the\
          \ <code>AssumeRole</code> call returns an \"access denied\" error.</p> <p>The\
          \ format for this parameter, as described by its regex pattern, is a sequence\
          \ of six numeric digits.</p>"
        explode: true
        in: query
        name: TokenCode
        required: false
        schema:
          maxLength: 6
          minLength: 6
          pattern: "[\\d]*"
          type: string
        style: form
      - description: "<p>The source identity specified by the principal that is calling\
          \ the <code>AssumeRole</code> operation.</p> <p>You can require users to\
          \ specify a source identity when they assume a role. You do this by using\
          \ the <code>sts:SourceIdentity</code> condition key in a role trust policy.\
          \ You can use source identity information in CloudTrail logs to determine\
          \ who took actions with a role. You can use the <code>aws:SourceIdentity</code>\
          \ condition key to further control access to Amazon Web Services resources\
          \ based on the value of source identity. For more information about using\
          \ source identity, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\"\
          >Monitor and control actions taken with assumed roles</a> in the <i>IAM\
          \ User Guide</i>.</p> <p>The regex used to validate this parameter is a\
          \ string of characters consisting of upper- and lower-case alphanumeric\
          \ characters with no spaces. You can also include underscores or any of\
          \ the following characters: =,.@-. You cannot use a value that begins with\
          \ the text <code>aws:</code>. This prefix is reserved for Amazon Web Services\
          \ internal use.</p>"
        explode: true
        in: query
        name: SourceIdentity
        required: false
        schema:
          maxLength: 64
          minLength: 2
          pattern: "[\\w+=,.@-]*"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AssumeRole
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssumeRoleResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PackedPolicyTooLargeException'
          description: PackedPolicyTooLargeException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpiredTokenException'
          description: ExpiredTokenException
      x-aws-operation-name: AssumeRole
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a set of temporary security credentials that you can\
        \ use to access Amazon Web Services resources. These temporary credentials\
        \ consist of an access key ID, a secret access key, and a security token.\
        \ Typically, you use <code>AssumeRole</code> within your account or for cross-account\
        \ access. For a comparison of <code>AssumeRole</code> with other API operations\
        \ that produce temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <p> <b>Permissions</b> </p> <p>The temporary security credentials\
        \ created by <code>AssumeRole</code> can be used to make API calls to any\
        \ Amazon Web Services service with the following exception: You cannot call\
        \ the Amazon Web Services STS <code>GetFederationToken</code> or <code>GetSessionToken</code>\
        \ API operations.</p> <p>(Optional) You can pass inline or managed <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >session policies</a> to this operation. You can pass a single JSON policy\
        \ document to use as an inline session policy. You can also specify up to\
        \ 10 managed policy Amazon Resource Names (ARNs) to use as managed session\
        \ policies. The plaintext that you use for both inline and managed session\
        \ policies can't exceed 2,048 characters. Passing policies to this operation\
        \ returns new temporary credentials. The resulting session's permissions are\
        \ the intersection of the role's identity-based policy and the session policies.\
        \ You can use the role's temporary credentials in subsequent Amazon Web Services\
        \ API calls to access resources in the account that owns the role. You cannot\
        \ use session policies to grant more permissions than those allowed by the\
        \ identity-based policy of the role that is being assumed. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>When you create\
        \ a role, you create two policies: A role trust policy that specifies <i>who</i>\
        \ can assume the role and a permissions policy that specifies <i>what</i>\
        \ can be done with the role. You specify the trusted principal who is allowed\
        \ to assume the role in the role trust policy.</p> <p>To assume a role from\
        \ a different account, your Amazon Web Services account must be trusted by\
        \ the role. The trust relationship is defined in the role's trust policy when\
        \ the role is created. That trust policy states which accounts are allowed\
        \ to delegate that access to users in the account. </p> <p>A user who wants\
        \ to access a role in a different account must also have permissions that\
        \ are delegated from the user account administrator. The administrator must\
        \ attach a policy that allows the user to call <code>AssumeRole</code> for\
        \ the ARN of the role in the other account.</p> <p>To allow a user to assume\
        \ a role in the same account, you can do either of the following:</p> <ul>\
        \ <li> <p>Attach a policy to the user that allows the user to call <code>AssumeRole</code>\
        \ (as long as the role's trust policy trusts the account).</p> </li> <li>\
        \ <p>Add the user as a principal directly in the role's trust policy.</p>\
        \ </li> </ul> <p>You can do either because the roleâ€™s trust policy acts as\
        \ an IAM resource-based policy. When a resource-based policy grants access\
        \ to a principal in the same account, no additional identity-based policy\
        \ is required. For more information about trust policies and resource-based\
        \ policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\"\
        >IAM Policies</a> in the <i>IAM User Guide</i>.</p> <p> <b>Tags</b> </p> <p>(Optional)\
        \ You can pass tag key-value pairs to your session. These tags are called\
        \ session tags. For more information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <p>An administrator\
        \ must grant you the permissions necessary to pass session tags. The administrator\
        \ can also create granular permissions to allow you to pass only specific\
        \ session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\"\
        >Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM\
        \ User Guide</i>.</p> <p>You can set the session tags as transitive. Transitive\
        \ tags persist during role chaining. For more information, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\"\
        >Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>.</p> <p>\
        \ <b>Using MFA with AssumeRole</b> </p> <p>(Optional) You can include multi-factor\
        \ authentication (MFA) information when you call <code>AssumeRole</code>.\
        \ This is useful for cross-account scenarios to ensure that the user that\
        \ assumes the role has been authenticated with an Amazon Web Services MFA\
        \ device. In that scenario, the trust policy of the role being assumed includes\
        \ a condition that tests for MFA authentication. If the caller does not include\
        \ valid MFA information, the request to assume the role is denied. The condition\
        \ in a trust policy that tests for MFA authentication might look like the\
        \ following example.</p> <p> <code>\"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\"\
        : true}}</code> </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html\"\
        >Configuring MFA-Protected API Access</a> in the <i>IAM User Guide</i> guide.</p>\
        \ <p>To use MFA with <code>AssumeRole</code>, you pass values for the <code>SerialNumber</code>\
        \ and <code>TokenCode</code> parameters. The <code>SerialNumber</code> value\
        \ identifies the user's hardware or virtual MFA device. The <code>TokenCode</code>\
        \ is the time-based one-time password (TOTP) that the MFA device produces.\
        \ </p>"
      operationId: POST_AssumeRole
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AssumeRole
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssumeRoleRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssumeRoleResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PackedPolicyTooLargeException'
          description: PackedPolicyTooLargeException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpiredTokenException'
          description: ExpiredTokenException
      x-aws-operation-name: AssumeRole
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=AssumeRoleWithSAML:
    get:
      description: "<p>Returns a set of temporary security credentials for users who\
        \ have been authenticated via a SAML authentication response. This operation\
        \ provides a mechanism for tying an enterprise identity store or directory\
        \ to role-based Amazon Web Services access without user-specific credentials\
        \ or configuration. For a comparison of <code>AssumeRoleWithSAML</code> with\
        \ the other API operations that produce temporary credentials, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <p>The temporary security credentials returned by this operation\
        \ consist of an access key ID, a secret access key, and a security token.\
        \ Applications can use these temporary security credentials to sign calls\
        \ to Amazon Web Services services.</p> <p> <b>Session Duration</b> </p> <p>By\
        \ default, the temporary security credentials created by <code>AssumeRoleWithSAML</code>\
        \ last for one hour. However, you can use the optional <code>DurationSeconds</code>\
        \ parameter to specify the duration of your session. Your role session lasts\
        \ for the duration that you specify, or until the time specified in the SAML\
        \ authentication response's <code>SessionNotOnOrAfter</code> value, whichever\
        \ is shorter. You can provide a <code>DurationSeconds</code> value from 900\
        \ seconds (15 minutes) up to the maximum session duration setting for the\
        \ role. This setting can have a value from 1 hour to 12 hours. To learn how\
        \ to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
        >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM User\
        \ Guide</i>. The maximum session duration limit applies when you use the <code>AssumeRole*</code>\
        \ API operations or the <code>assume-role*</code> CLI commands. However the\
        \ limit does not apply when you use those operations to create a console URL.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\"\
        >Using IAM Roles</a> in the <i>IAM User Guide</i>.</p> <note> <p> <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-role-chaining\"\
        >Role chaining</a> limits your CLI or Amazon Web Services API role session\
        \ to a maximum of one hour. When you use the <code>AssumeRole</code> API operation\
        \ to assume a role, you can specify the duration of your role session with\
        \ the <code>DurationSeconds</code> parameter. You can specify a parameter\
        \ value of up to 43200 seconds (12 hours), depending on the maximum session\
        \ duration setting for your role. However, if you assume a role using role\
        \ chaining and provide a <code>DurationSeconds</code> parameter value greater\
        \ than one hour, the operation fails.</p> </note> <p> <b>Permissions</b> </p>\
        \ <p>The temporary security credentials created by <code>AssumeRoleWithSAML</code>\
        \ can be used to make API calls to any Amazon Web Services service with the\
        \ following exception: you cannot call the STS <code>GetFederationToken</code>\
        \ or <code>GetSessionToken</code> API operations.</p> <p>(Optional) You can\
        \ pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >session policies</a> to this operation. You can pass a single JSON policy\
        \ document to use as an inline session policy. You can also specify up to\
        \ 10 managed policy Amazon Resource Names (ARNs) to use as managed session\
        \ policies. The plaintext that you use for both inline and managed session\
        \ policies can't exceed 2,048 characters. Passing policies to this operation\
        \ returns new temporary credentials. The resulting session's permissions are\
        \ the intersection of the role's identity-based policy and the session policies.\
        \ You can use the role's temporary credentials in subsequent Amazon Web Services\
        \ API calls to access resources in the account that owns the role. You cannot\
        \ use session policies to grant more permissions than those allowed by the\
        \ identity-based policy of the role that is being assumed. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>Calling <code>AssumeRoleWithSAML</code>\
        \ does not require the use of Amazon Web Services security credentials. The\
        \ identity of the caller is validated by using keys in the metadata document\
        \ that is uploaded for the SAML provider entity for your identity provider.\
        \ </p> <important> <p>Calling <code>AssumeRoleWithSAML</code> can result in\
        \ an entry in your CloudTrail logs. The entry includes the value in the <code>NameID</code>\
        \ element of the SAML assertion. We recommend that you use a <code>NameIDType</code>\
        \ that is not associated with any personally identifiable information (PII).\
        \ For example, you could instead use the persistent identifier (<code>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</code>).</p>\
        \ </important> <p> <b>Tags</b> </p> <p>(Optional) You can configure your IdP\
        \ to pass attributes into your SAML assertion as session tags. Each session\
        \ tag consists of a key name and an associated value. For more information\
        \ about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <p>You\
        \ can pass up to 50 session tags. The plaintext session tag keys canâ€™t exceed\
        \ 128 characters and the values canâ€™t exceed 256 characters. For these and\
        \ additional limits, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
        >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p> <note>\
        \ <p>An Amazon Web Services conversion compresses the passed inline session\
        \ policy, managed policy ARNs, and session tags into a packed binary format\
        \ that has a separate limit. Your request can fail for this limit even if\
        \ your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
        \ response element indicates by percentage how close the policies and tags\
        \ for your request are to the upper size limit.</p> </note> <p>You can pass\
        \ a session tag with the same key as a tag that is attached to the role. When\
        \ you do, session tags override the role's tags with the same key.</p> <p>An\
        \ administrator must grant you the permissions necessary to pass session tags.\
        \ The administrator can also create granular permissions to allow you to pass\
        \ only specific session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\"\
        >Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM\
        \ User Guide</i>.</p> <p>You can set the session tags as transitive. Transitive\
        \ tags persist during role chaining. For more information, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\"\
        >Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>.</p> <p>\
        \ <b>SAML Configuration</b> </p> <p>Before your application can call <code>AssumeRoleWithSAML</code>,\
        \ you must configure your SAML identity provider (IdP) to issue the claims\
        \ required by Amazon Web Services. Additionally, you must use Identity and\
        \ Access Management (IAM) to create a SAML provider entity in your Amazon\
        \ Web Services account that represents your identity provider. You must also\
        \ create an IAM role that specifies this SAML provider in its trust policy.\
        \ </p> <p>For more information, see the following resources:</p> <ul> <li>\
        \ <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\"\
        >About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>. </p> </li>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html\"\
        >Creating SAML Identity Providers</a> in the <i>IAM User Guide</i>. </p> </li>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_relying-party.html\"\
        >Configuring a Relying Party and Claims</a> in the <i>IAM User Guide</i>.\
        \ </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_saml.html\"\
        >Creating a Role for SAML 2.0 Federation</a> in the <i>IAM User Guide</i>.\
        \ </p> </li> </ul>"
      operationId: GET_AssumeRoleWithSAML
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the role that the caller is
          assuming.
        explode: true
        in: query
        name: RoleArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]+"
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the SAML provider in IAM that
          describes the IdP.
        explode: true
        in: query
        name: PrincipalArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]+"
          type: string
        style: form
      - description: "<p>The base64 encoded SAML authentication response provided\
          \ by the IdP.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html\"\
          >Configuring a Relying Party and Adding Claims</a> in the <i>IAM User Guide</i>.\
          \ </p>"
        explode: true
        in: query
        name: SAMLAssertion
        required: true
        schema:
          maxLength: 100000
          minLength: 4
          type: string
        style: form
      - description: "<p>The Amazon Resource Names (ARNs) of the IAM managed policies\
          \ that you want to use as managed session policies. The policies must exist\
          \ in the same account as the role.</p> <p>This parameter is optional. You\
          \ can provide up to 10 managed policy ARNs. However, the plaintext that\
          \ you use for both inline and managed session policies can't exceed 2,048\
          \ characters. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
          \ in the Amazon Web Services General Reference.</p> <note> <p>An Amazon\
          \ Web Services conversion compresses the passed inline session policy, managed\
          \ policy ARNs, and session tags into a packed binary format that has a separate\
          \ limit. Your request can fail for this limit even if your plaintext meets\
          \ the other requirements. The <code>PackedPolicySize</code> response element\
          \ indicates by percentage how close the policies and tags for your request\
          \ are to the upper size limit.</p> </note> <p>Passing policies to this operation\
          \ returns new temporary credentials. The resulting session's permissions\
          \ are the intersection of the role's identity-based policy and the session\
          \ policies. You can use the role's temporary credentials in subsequent Amazon\
          \ Web Services API calls to access resources in the account that owns the\
          \ role. You cannot use session policies to grant more permissions than those\
          \ allowed by the identity-based policy of the role that is being assumed.\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >Session Policies</a> in the <i>IAM User Guide</i>.</p>"
        explode: true
        in: query
        name: PolicyArns
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PolicyDescriptorType'
          type: array
        style: form
      - description: "<p>An IAM policy in JSON format that you want to use as an inline\
          \ session policy.</p> <p>This parameter is optional. Passing policies to\
          \ this operation returns new temporary credentials. The resulting session's\
          \ permissions are the intersection of the role's identity-based policy and\
          \ the session policies. You can use the role's temporary credentials in\
          \ subsequent Amazon Web Services API calls to access resources in the account\
          \ that owns the role. You cannot use session policies to grant more permissions\
          \ than those allowed by the identity-based policy of the role that is being\
          \ assumed. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >Session Policies</a> in the <i>IAM User Guide</i>. </p> <p>The plaintext\
          \ that you use for both inline and managed session policies can't exceed\
          \ 2,048 characters. The JSON policy characters can be any ASCII character\
          \ from the space character to the end of the valid character list (\\u0020\
          \ through \\u00FF). It can also include the tab (\\u0009), linefeed (\\\
          u000A), and carriage return (\\u000D) characters.</p> <note> <p>An Amazon\
          \ Web Services conversion compresses the passed inline session policy, managed\
          \ policy ARNs, and session tags into a packed binary format that has a separate\
          \ limit. Your request can fail for this limit even if your plaintext meets\
          \ the other requirements. The <code>PackedPolicySize</code> response element\
          \ indicates by percentage how close the policies and tags for your request\
          \ are to the upper size limit.</p> </note>"
        explode: true
        in: query
        name: Policy
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
          type: string
        style: form
      - description: "<p>The duration, in seconds, of the role session. Your role\
          \ session lasts for the duration that you specify for the <code>DurationSeconds</code>\
          \ parameter, or until the time specified in the SAML authentication response's\
          \ <code>SessionNotOnOrAfter</code> value, whichever is shorter. You can\
          \ provide a <code>DurationSeconds</code> value from 900 seconds (15 minutes)\
          \ up to the maximum session duration setting for the role. This setting\
          \ can have a value from 1 hour to 12 hours. If you specify a value higher\
          \ than this setting, the operation fails. For example, if you specify a\
          \ session duration of 12 hours, but your administrator set the maximum session\
          \ duration to 6 hours, your operation fails. To learn how to view the maximum\
          \ value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
          >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM\
          \ User Guide</i>.</p> <p>By default, the value is set to <code>3600</code>\
          \ seconds. </p> <note> <p>The <code>DurationSeconds</code> parameter is\
          \ separate from the duration of a console session that you might request\
          \ using the returned credentials. The request to the federation endpoint\
          \ for a console sign-in token takes a <code>SessionDuration</code> parameter\
          \ that specifies the maximum length of the console session. For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\"\
          >Creating a URL that Enables Federated Users to Access the Amazon Web Services\
          \ Management Console</a> in the <i>IAM User Guide</i>.</p> </note>"
        explode: true
        in: query
        name: DurationSeconds
        required: false
        schema:
          maximum: 43200
          minimum: 900
          type: integer
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AssumeRoleWithSAML
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssumeRoleWithSAMLResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PackedPolicyTooLargeException'
          description: PackedPolicyTooLargeException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IDPRejectedClaimException'
          description: IDPRejectedClaimException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIdentityTokenException'
          description: InvalidIdentityTokenException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpiredTokenException'
          description: ExpiredTokenException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
      x-aws-operation-name: AssumeRoleWithSAML
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a set of temporary security credentials for users who\
        \ have been authenticated via a SAML authentication response. This operation\
        \ provides a mechanism for tying an enterprise identity store or directory\
        \ to role-based Amazon Web Services access without user-specific credentials\
        \ or configuration. For a comparison of <code>AssumeRoleWithSAML</code> with\
        \ the other API operations that produce temporary credentials, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <p>The temporary security credentials returned by this operation\
        \ consist of an access key ID, a secret access key, and a security token.\
        \ Applications can use these temporary security credentials to sign calls\
        \ to Amazon Web Services services.</p> <p> <b>Session Duration</b> </p> <p>By\
        \ default, the temporary security credentials created by <code>AssumeRoleWithSAML</code>\
        \ last for one hour. However, you can use the optional <code>DurationSeconds</code>\
        \ parameter to specify the duration of your session. Your role session lasts\
        \ for the duration that you specify, or until the time specified in the SAML\
        \ authentication response's <code>SessionNotOnOrAfter</code> value, whichever\
        \ is shorter. You can provide a <code>DurationSeconds</code> value from 900\
        \ seconds (15 minutes) up to the maximum session duration setting for the\
        \ role. This setting can have a value from 1 hour to 12 hours. To learn how\
        \ to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
        >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM User\
        \ Guide</i>. The maximum session duration limit applies when you use the <code>AssumeRole*</code>\
        \ API operations or the <code>assume-role*</code> CLI commands. However the\
        \ limit does not apply when you use those operations to create a console URL.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\"\
        >Using IAM Roles</a> in the <i>IAM User Guide</i>.</p> <note> <p> <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-role-chaining\"\
        >Role chaining</a> limits your CLI or Amazon Web Services API role session\
        \ to a maximum of one hour. When you use the <code>AssumeRole</code> API operation\
        \ to assume a role, you can specify the duration of your role session with\
        \ the <code>DurationSeconds</code> parameter. You can specify a parameter\
        \ value of up to 43200 seconds (12 hours), depending on the maximum session\
        \ duration setting for your role. However, if you assume a role using role\
        \ chaining and provide a <code>DurationSeconds</code> parameter value greater\
        \ than one hour, the operation fails.</p> </note> <p> <b>Permissions</b> </p>\
        \ <p>The temporary security credentials created by <code>AssumeRoleWithSAML</code>\
        \ can be used to make API calls to any Amazon Web Services service with the\
        \ following exception: you cannot call the STS <code>GetFederationToken</code>\
        \ or <code>GetSessionToken</code> API operations.</p> <p>(Optional) You can\
        \ pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >session policies</a> to this operation. You can pass a single JSON policy\
        \ document to use as an inline session policy. You can also specify up to\
        \ 10 managed policy Amazon Resource Names (ARNs) to use as managed session\
        \ policies. The plaintext that you use for both inline and managed session\
        \ policies can't exceed 2,048 characters. Passing policies to this operation\
        \ returns new temporary credentials. The resulting session's permissions are\
        \ the intersection of the role's identity-based policy and the session policies.\
        \ You can use the role's temporary credentials in subsequent Amazon Web Services\
        \ API calls to access resources in the account that owns the role. You cannot\
        \ use session policies to grant more permissions than those allowed by the\
        \ identity-based policy of the role that is being assumed. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>Calling <code>AssumeRoleWithSAML</code>\
        \ does not require the use of Amazon Web Services security credentials. The\
        \ identity of the caller is validated by using keys in the metadata document\
        \ that is uploaded for the SAML provider entity for your identity provider.\
        \ </p> <important> <p>Calling <code>AssumeRoleWithSAML</code> can result in\
        \ an entry in your CloudTrail logs. The entry includes the value in the <code>NameID</code>\
        \ element of the SAML assertion. We recommend that you use a <code>NameIDType</code>\
        \ that is not associated with any personally identifiable information (PII).\
        \ For example, you could instead use the persistent identifier (<code>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</code>).</p>\
        \ </important> <p> <b>Tags</b> </p> <p>(Optional) You can configure your IdP\
        \ to pass attributes into your SAML assertion as session tags. Each session\
        \ tag consists of a key name and an associated value. For more information\
        \ about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <p>You\
        \ can pass up to 50 session tags. The plaintext session tag keys canâ€™t exceed\
        \ 128 characters and the values canâ€™t exceed 256 characters. For these and\
        \ additional limits, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
        >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p> <note>\
        \ <p>An Amazon Web Services conversion compresses the passed inline session\
        \ policy, managed policy ARNs, and session tags into a packed binary format\
        \ that has a separate limit. Your request can fail for this limit even if\
        \ your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
        \ response element indicates by percentage how close the policies and tags\
        \ for your request are to the upper size limit.</p> </note> <p>You can pass\
        \ a session tag with the same key as a tag that is attached to the role. When\
        \ you do, session tags override the role's tags with the same key.</p> <p>An\
        \ administrator must grant you the permissions necessary to pass session tags.\
        \ The administrator can also create granular permissions to allow you to pass\
        \ only specific session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\"\
        >Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM\
        \ User Guide</i>.</p> <p>You can set the session tags as transitive. Transitive\
        \ tags persist during role chaining. For more information, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\"\
        >Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>.</p> <p>\
        \ <b>SAML Configuration</b> </p> <p>Before your application can call <code>AssumeRoleWithSAML</code>,\
        \ you must configure your SAML identity provider (IdP) to issue the claims\
        \ required by Amazon Web Services. Additionally, you must use Identity and\
        \ Access Management (IAM) to create a SAML provider entity in your Amazon\
        \ Web Services account that represents your identity provider. You must also\
        \ create an IAM role that specifies this SAML provider in its trust policy.\
        \ </p> <p>For more information, see the following resources:</p> <ul> <li>\
        \ <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\"\
        >About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>. </p> </li>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html\"\
        >Creating SAML Identity Providers</a> in the <i>IAM User Guide</i>. </p> </li>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_relying-party.html\"\
        >Configuring a Relying Party and Claims</a> in the <i>IAM User Guide</i>.\
        \ </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_saml.html\"\
        >Creating a Role for SAML 2.0 Federation</a> in the <i>IAM User Guide</i>.\
        \ </p> </li> </ul>"
      operationId: POST_AssumeRoleWithSAML
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AssumeRoleWithSAML
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssumeRoleWithSAMLRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssumeRoleWithSAMLResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PackedPolicyTooLargeException'
          description: PackedPolicyTooLargeException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IDPRejectedClaimException'
          description: IDPRejectedClaimException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIdentityTokenException'
          description: InvalidIdentityTokenException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpiredTokenException'
          description: ExpiredTokenException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
      x-aws-operation-name: AssumeRoleWithSAML
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=AssumeRoleWithWebIdentity:
    get:
      description: "<p>Returns a set of temporary security credentials for users who\
        \ have been authenticated in a mobile or web application with a web identity\
        \ provider. Example providers include the OAuth 2.0 providers Login with Amazon\
        \ and Facebook, or any OpenID Connect-compatible identity provider such as\
        \ Google or <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\"\
        >Amazon Cognito federated identities</a>.</p> <note> <p>For mobile applications,\
        \ we recommend that you use Amazon Cognito. You can use Amazon Cognito with\
        \ the <a href=\"http://aws.amazon.com/sdkforios/\">Amazon Web Services SDK\
        \ for iOS Developer Guide</a> and the <a href=\"http://aws.amazon.com/sdkforandroid/\"\
        >Amazon Web Services SDK for Android Developer Guide</a> to uniquely identify\
        \ a user. You can also supply the user with a consistent identity throughout\
        \ the lifetime of an application.</p> <p>To learn more about Amazon Cognito,\
        \ see <a href=\"https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e840\"\
        >Amazon Cognito Overview</a> in <i>Amazon Web Services SDK for Android Developer\
        \ Guide</i> and <a href=\"https://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth.html#d0e664\"\
        >Amazon Cognito Overview</a> in the <i>Amazon Web Services SDK for iOS Developer\
        \ Guide</i>.</p> </note> <p>Calling <code>AssumeRoleWithWebIdentity</code>\
        \ does not require the use of Amazon Web Services security credentials. Therefore,\
        \ you can distribute an application (for example, on mobile devices) that\
        \ requests temporary security credentials without including long-term Amazon\
        \ Web Services credentials in the application. You also don't need to deploy\
        \ server-based proxy services that use long-term Amazon Web Services credentials.\
        \ Instead, the identity of the caller is validated by using a token from the\
        \ web identity provider. For a comparison of <code>AssumeRoleWithWebIdentity</code>\
        \ with the other API operations that produce temporary credentials, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <p>The temporary security credentials returned by this API\
        \ consist of an access key ID, a secret access key, and a security token.\
        \ Applications can use these temporary security credentials to sign calls\
        \ to Amazon Web Services service API operations.</p> <p> <b>Session Duration</b>\
        \ </p> <p>By default, the temporary security credentials created by <code>AssumeRoleWithWebIdentity</code>\
        \ last for one hour. However, you can use the optional <code>DurationSeconds</code>\
        \ parameter to specify the duration of your session. You can provide a value\
        \ from 900 seconds (15 minutes) up to the maximum session duration setting\
        \ for the role. This setting can have a value from 1 hour to 12 hours. To\
        \ learn how to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
        >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM User\
        \ Guide</i>. The maximum session duration limit applies when you use the <code>AssumeRole*</code>\
        \ API operations or the <code>assume-role*</code> CLI commands. However the\
        \ limit does not apply when you use those operations to create a console URL.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\"\
        >Using IAM Roles</a> in the <i>IAM User Guide</i>. </p> <p> <b>Permissions</b>\
        \ </p> <p>The temporary security credentials created by <code>AssumeRoleWithWebIdentity</code>\
        \ can be used to make API calls to any Amazon Web Services service with the\
        \ following exception: you cannot call the STS <code>GetFederationToken</code>\
        \ or <code>GetSessionToken</code> API operations.</p> <p>(Optional) You can\
        \ pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >session policies</a> to this operation. You can pass a single JSON policy\
        \ document to use as an inline session policy. You can also specify up to\
        \ 10 managed policy Amazon Resource Names (ARNs) to use as managed session\
        \ policies. The plaintext that you use for both inline and managed session\
        \ policies can't exceed 2,048 characters. Passing policies to this operation\
        \ returns new temporary credentials. The resulting session's permissions are\
        \ the intersection of the role's identity-based policy and the session policies.\
        \ You can use the role's temporary credentials in subsequent Amazon Web Services\
        \ API calls to access resources in the account that owns the role. You cannot\
        \ use session policies to grant more permissions than those allowed by the\
        \ identity-based policy of the role that is being assumed. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p> <b>Tags</b> </p>\
        \ <p>(Optional) You can configure your IdP to pass attributes into your web\
        \ identity token as session tags. Each session tag consists of a key name\
        \ and an associated value. For more information about session tags, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <p>You\
        \ can pass up to 50 session tags. The plaintext session tag keys canâ€™t exceed\
        \ 128 characters and the values canâ€™t exceed 256 characters. For these and\
        \ additional limits, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
        >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p> <note>\
        \ <p>An Amazon Web Services conversion compresses the passed inline session\
        \ policy, managed policy ARNs, and session tags into a packed binary format\
        \ that has a separate limit. Your request can fail for this limit even if\
        \ your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
        \ response element indicates by percentage how close the policies and tags\
        \ for your request are to the upper size limit.</p> </note> <p>You can pass\
        \ a session tag with the same key as a tag that is attached to the role. When\
        \ you do, the session tag overrides the role tag with the same key.</p> <p>An\
        \ administrator must grant you the permissions necessary to pass session tags.\
        \ The administrator can also create granular permissions to allow you to pass\
        \ only specific session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\"\
        >Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM\
        \ User Guide</i>.</p> <p>You can set the session tags as transitive. Transitive\
        \ tags persist during role chaining. For more information, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\"\
        >Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>.</p> <p>\
        \ <b>Identities</b> </p> <p>Before your application can call <code>AssumeRoleWithWebIdentity</code>,\
        \ you must have an identity token from a supported identity provider and create\
        \ a role that the application can assume. The role that your application assumes\
        \ must trust the identity provider that is associated with the identity token.\
        \ In other words, the identity provider must be specified in the role's trust\
        \ policy. </p> <important> <p>Calling <code>AssumeRoleWithWebIdentity</code>\
        \ can result in an entry in your CloudTrail logs. The entry includes the <a\
        \ href=\"http://openid.net/specs/openid-connect-core-1_0.html#Claims\">Subject</a>\
        \ of the provided web identity token. We recommend that you avoid using any\
        \ personally identifiable information (PII) in this field. For example, you\
        \ could instead use a GUID or a pairwise identifier, as <a href=\"http://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTypes\"\
        >suggested in the OIDC specification</a>.</p> </important> <p>For more information\
        \ about how to use web identity federation and the <code>AssumeRoleWithWebIdentity</code>\
        \ API, see the following resources: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc_manual.html\"\
        >Using Web Identity Federation API Operations for Mobile Apps</a> and <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\"\
        >Federation Through a Web-based Identity Provider</a>. </p> </li> <li> <p>\
        \ <a href=\"https://aws.amazon.com/blogs/aws/the-aws-web-identity-federation-playground/\"\
        > Web Identity Federation Playground</a>. Walk through the process of authenticating\
        \ through Login with Amazon, Facebook, or Google, getting temporary security\
        \ credentials, and then using those credentials to make a request to Amazon\
        \ Web Services. </p> </li> <li> <p> <a href=\"http://aws.amazon.com/sdkforios/\"\
        >Amazon Web Services SDK for iOS Developer Guide</a> and <a href=\"http://aws.amazon.com/sdkforandroid/\"\
        >Amazon Web Services SDK for Android Developer Guide</a>. These toolkits contain\
        \ sample apps that show how to invoke the identity providers. The toolkits\
        \ then show how to use the information from these providers to get and use\
        \ temporary security credentials. </p> </li> <li> <p> <a href=\"http://aws.amazon.com/articles/web-identity-federation-with-mobile-applications\"\
        >Web Identity Federation with Mobile Applications</a>. This article discusses\
        \ web identity federation and shows an example of how to use web identity\
        \ federation to get access to content in Amazon S3. </p> </li> </ul>"
      operationId: GET_AssumeRoleWithWebIdentity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the role that the caller is
          assuming.
        explode: true
        in: query
        name: RoleArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]+"
          type: string
        style: form
      - description: "<p>An identifier for the assumed role session. Typically, you\
          \ pass the name or identifier that is associated with the user who is using\
          \ your application. That way, the temporary security credentials that your\
          \ application will use are associated with that user. This session name\
          \ is included as part of the ARN and assumed role ID in the <code>AssumedRoleUser</code>\
          \ response element.</p> <p>The regex used to validate this parameter is\
          \ a string of characters consisting of upper- and lower-case alphanumeric\
          \ characters with no spaces. You can also include underscores or any of\
          \ the following characters: =,.@-</p>"
        explode: true
        in: query
        name: RoleSessionName
        required: true
        schema:
          maxLength: 64
          minLength: 2
          pattern: "[\\w+=,.@-]*"
          type: string
        style: form
      - description: 'The OAuth 2.0 access token or OpenID Connect ID token that is
          provided by the identity provider. Your application must get this token
          by authenticating the user who is using your application with a web identity
          provider before the application makes an <code>AssumeRoleWithWebIdentity</code>
          call. '
        explode: true
        in: query
        name: WebIdentityToken
        required: true
        schema:
          maxLength: 20000
          minLength: 4
          type: string
        style: form
      - description: <p>The fully qualified host component of the domain name of the
          OAuth 2.0 identity provider. Do not specify this value for an OpenID Connect
          identity provider.</p> <p>Currently <code>www.amazon.com</code> and <code>graph.facebook.com</code>
          are the only supported identity providers for OAuth 2.0 access tokens. Do
          not include URL schemes and port numbers.</p> <p>Do not specify this value
          for OpenID Connect ID tokens.</p>
        explode: true
        in: query
        name: ProviderId
        required: false
        schema:
          maxLength: 2048
          minLength: 4
          type: string
        style: form
      - description: "<p>The Amazon Resource Names (ARNs) of the IAM managed policies\
          \ that you want to use as managed session policies. The policies must exist\
          \ in the same account as the role.</p> <p>This parameter is optional. You\
          \ can provide up to 10 managed policy ARNs. However, the plaintext that\
          \ you use for both inline and managed session policies can't exceed 2,048\
          \ characters. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
          \ in the Amazon Web Services General Reference.</p> <note> <p>An Amazon\
          \ Web Services conversion compresses the passed inline session policy, managed\
          \ policy ARNs, and session tags into a packed binary format that has a separate\
          \ limit. Your request can fail for this limit even if your plaintext meets\
          \ the other requirements. The <code>PackedPolicySize</code> response element\
          \ indicates by percentage how close the policies and tags for your request\
          \ are to the upper size limit.</p> </note> <p>Passing policies to this operation\
          \ returns new temporary credentials. The resulting session's permissions\
          \ are the intersection of the role's identity-based policy and the session\
          \ policies. You can use the role's temporary credentials in subsequent Amazon\
          \ Web Services API calls to access resources in the account that owns the\
          \ role. You cannot use session policies to grant more permissions than those\
          \ allowed by the identity-based policy of the role that is being assumed.\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >Session Policies</a> in the <i>IAM User Guide</i>.</p>"
        explode: true
        in: query
        name: PolicyArns
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PolicyDescriptorType'
          type: array
        style: form
      - description: "<p>An IAM policy in JSON format that you want to use as an inline\
          \ session policy.</p> <p>This parameter is optional. Passing policies to\
          \ this operation returns new temporary credentials. The resulting session's\
          \ permissions are the intersection of the role's identity-based policy and\
          \ the session policies. You can use the role's temporary credentials in\
          \ subsequent Amazon Web Services API calls to access resources in the account\
          \ that owns the role. You cannot use session policies to grant more permissions\
          \ than those allowed by the identity-based policy of the role that is being\
          \ assumed. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plaintext\
          \ that you use for both inline and managed session policies can't exceed\
          \ 2,048 characters. The JSON policy characters can be any ASCII character\
          \ from the space character to the end of the valid character list (\\u0020\
          \ through \\u00FF). It can also include the tab (\\u0009), linefeed (\\\
          u000A), and carriage return (\\u000D) characters.</p> <note> <p>An Amazon\
          \ Web Services conversion compresses the passed inline session policy, managed\
          \ policy ARNs, and session tags into a packed binary format that has a separate\
          \ limit. Your request can fail for this limit even if your plaintext meets\
          \ the other requirements. The <code>PackedPolicySize</code> response element\
          \ indicates by percentage how close the policies and tags for your request\
          \ are to the upper size limit.</p> </note>"
        explode: true
        in: query
        name: Policy
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
          type: string
        style: form
      - description: "<p>The duration, in seconds, of the role session. The value\
          \ can range from 900 seconds (15 minutes) up to the maximum session duration\
          \ setting for the role. This setting can have a value from 1 hour to 12\
          \ hours. If you specify a value higher than this setting, the operation\
          \ fails. For example, if you specify a session duration of 12 hours, but\
          \ your administrator set the maximum session duration to 6 hours, your operation\
          \ fails. To learn how to view the maximum value for your role, see <a href=\"\
          https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
          >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM\
          \ User Guide</i>.</p> <p>By default, the value is set to <code>3600</code>\
          \ seconds. </p> <note> <p>The <code>DurationSeconds</code> parameter is\
          \ separate from the duration of a console session that you might request\
          \ using the returned credentials. The request to the federation endpoint\
          \ for a console sign-in token takes a <code>SessionDuration</code> parameter\
          \ that specifies the maximum length of the console session. For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\"\
          >Creating a URL that Enables Federated Users to Access the Amazon Web Services\
          \ Management Console</a> in the <i>IAM User Guide</i>.</p> </note>"
        explode: true
        in: query
        name: DurationSeconds
        required: false
        schema:
          maximum: 43200
          minimum: 900
          type: integer
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AssumeRoleWithWebIdentity
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssumeRoleWithWebIdentityResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PackedPolicyTooLargeException'
          description: PackedPolicyTooLargeException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IDPRejectedClaimException'
          description: IDPRejectedClaimException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IDPCommunicationErrorException'
          description: IDPCommunicationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIdentityTokenException'
          description: InvalidIdentityTokenException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpiredTokenException'
          description: ExpiredTokenException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
      x-aws-operation-name: AssumeRoleWithWebIdentity
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a set of temporary security credentials for users who\
        \ have been authenticated in a mobile or web application with a web identity\
        \ provider. Example providers include the OAuth 2.0 providers Login with Amazon\
        \ and Facebook, or any OpenID Connect-compatible identity provider such as\
        \ Google or <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\"\
        >Amazon Cognito federated identities</a>.</p> <note> <p>For mobile applications,\
        \ we recommend that you use Amazon Cognito. You can use Amazon Cognito with\
        \ the <a href=\"http://aws.amazon.com/sdkforios/\">Amazon Web Services SDK\
        \ for iOS Developer Guide</a> and the <a href=\"http://aws.amazon.com/sdkforandroid/\"\
        >Amazon Web Services SDK for Android Developer Guide</a> to uniquely identify\
        \ a user. You can also supply the user with a consistent identity throughout\
        \ the lifetime of an application.</p> <p>To learn more about Amazon Cognito,\
        \ see <a href=\"https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e840\"\
        >Amazon Cognito Overview</a> in <i>Amazon Web Services SDK for Android Developer\
        \ Guide</i> and <a href=\"https://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth.html#d0e664\"\
        >Amazon Cognito Overview</a> in the <i>Amazon Web Services SDK for iOS Developer\
        \ Guide</i>.</p> </note> <p>Calling <code>AssumeRoleWithWebIdentity</code>\
        \ does not require the use of Amazon Web Services security credentials. Therefore,\
        \ you can distribute an application (for example, on mobile devices) that\
        \ requests temporary security credentials without including long-term Amazon\
        \ Web Services credentials in the application. You also don't need to deploy\
        \ server-based proxy services that use long-term Amazon Web Services credentials.\
        \ Instead, the identity of the caller is validated by using a token from the\
        \ web identity provider. For a comparison of <code>AssumeRoleWithWebIdentity</code>\
        \ with the other API operations that produce temporary credentials, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <p>The temporary security credentials returned by this API\
        \ consist of an access key ID, a secret access key, and a security token.\
        \ Applications can use these temporary security credentials to sign calls\
        \ to Amazon Web Services service API operations.</p> <p> <b>Session Duration</b>\
        \ </p> <p>By default, the temporary security credentials created by <code>AssumeRoleWithWebIdentity</code>\
        \ last for one hour. However, you can use the optional <code>DurationSeconds</code>\
        \ parameter to specify the duration of your session. You can provide a value\
        \ from 900 seconds (15 minutes) up to the maximum session duration setting\
        \ for the role. This setting can have a value from 1 hour to 12 hours. To\
        \ learn how to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
        >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM User\
        \ Guide</i>. The maximum session duration limit applies when you use the <code>AssumeRole*</code>\
        \ API operations or the <code>assume-role*</code> CLI commands. However the\
        \ limit does not apply when you use those operations to create a console URL.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\"\
        >Using IAM Roles</a> in the <i>IAM User Guide</i>. </p> <p> <b>Permissions</b>\
        \ </p> <p>The temporary security credentials created by <code>AssumeRoleWithWebIdentity</code>\
        \ can be used to make API calls to any Amazon Web Services service with the\
        \ following exception: you cannot call the STS <code>GetFederationToken</code>\
        \ or <code>GetSessionToken</code> API operations.</p> <p>(Optional) You can\
        \ pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >session policies</a> to this operation. You can pass a single JSON policy\
        \ document to use as an inline session policy. You can also specify up to\
        \ 10 managed policy Amazon Resource Names (ARNs) to use as managed session\
        \ policies. The plaintext that you use for both inline and managed session\
        \ policies can't exceed 2,048 characters. Passing policies to this operation\
        \ returns new temporary credentials. The resulting session's permissions are\
        \ the intersection of the role's identity-based policy and the session policies.\
        \ You can use the role's temporary credentials in subsequent Amazon Web Services\
        \ API calls to access resources in the account that owns the role. You cannot\
        \ use session policies to grant more permissions than those allowed by the\
        \ identity-based policy of the role that is being assumed. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p> <b>Tags</b> </p>\
        \ <p>(Optional) You can configure your IdP to pass attributes into your web\
        \ identity token as session tags. Each session tag consists of a key name\
        \ and an associated value. For more information about session tags, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <p>You\
        \ can pass up to 50 session tags. The plaintext session tag keys canâ€™t exceed\
        \ 128 characters and the values canâ€™t exceed 256 characters. For these and\
        \ additional limits, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
        >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p> <note>\
        \ <p>An Amazon Web Services conversion compresses the passed inline session\
        \ policy, managed policy ARNs, and session tags into a packed binary format\
        \ that has a separate limit. Your request can fail for this limit even if\
        \ your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
        \ response element indicates by percentage how close the policies and tags\
        \ for your request are to the upper size limit.</p> </note> <p>You can pass\
        \ a session tag with the same key as a tag that is attached to the role. When\
        \ you do, the session tag overrides the role tag with the same key.</p> <p>An\
        \ administrator must grant you the permissions necessary to pass session tags.\
        \ The administrator can also create granular permissions to allow you to pass\
        \ only specific session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\"\
        >Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM\
        \ User Guide</i>.</p> <p>You can set the session tags as transitive. Transitive\
        \ tags persist during role chaining. For more information, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\"\
        >Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>.</p> <p>\
        \ <b>Identities</b> </p> <p>Before your application can call <code>AssumeRoleWithWebIdentity</code>,\
        \ you must have an identity token from a supported identity provider and create\
        \ a role that the application can assume. The role that your application assumes\
        \ must trust the identity provider that is associated with the identity token.\
        \ In other words, the identity provider must be specified in the role's trust\
        \ policy. </p> <important> <p>Calling <code>AssumeRoleWithWebIdentity</code>\
        \ can result in an entry in your CloudTrail logs. The entry includes the <a\
        \ href=\"http://openid.net/specs/openid-connect-core-1_0.html#Claims\">Subject</a>\
        \ of the provided web identity token. We recommend that you avoid using any\
        \ personally identifiable information (PII) in this field. For example, you\
        \ could instead use a GUID or a pairwise identifier, as <a href=\"http://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTypes\"\
        >suggested in the OIDC specification</a>.</p> </important> <p>For more information\
        \ about how to use web identity federation and the <code>AssumeRoleWithWebIdentity</code>\
        \ API, see the following resources: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc_manual.html\"\
        >Using Web Identity Federation API Operations for Mobile Apps</a> and <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\"\
        >Federation Through a Web-based Identity Provider</a>. </p> </li> <li> <p>\
        \ <a href=\"https://aws.amazon.com/blogs/aws/the-aws-web-identity-federation-playground/\"\
        > Web Identity Federation Playground</a>. Walk through the process of authenticating\
        \ through Login with Amazon, Facebook, or Google, getting temporary security\
        \ credentials, and then using those credentials to make a request to Amazon\
        \ Web Services. </p> </li> <li> <p> <a href=\"http://aws.amazon.com/sdkforios/\"\
        >Amazon Web Services SDK for iOS Developer Guide</a> and <a href=\"http://aws.amazon.com/sdkforandroid/\"\
        >Amazon Web Services SDK for Android Developer Guide</a>. These toolkits contain\
        \ sample apps that show how to invoke the identity providers. The toolkits\
        \ then show how to use the information from these providers to get and use\
        \ temporary security credentials. </p> </li> <li> <p> <a href=\"http://aws.amazon.com/articles/web-identity-federation-with-mobile-applications\"\
        >Web Identity Federation with Mobile Applications</a>. This article discusses\
        \ web identity federation and shows an example of how to use web identity\
        \ federation to get access to content in Amazon S3. </p> </li> </ul>"
      operationId: POST_AssumeRoleWithWebIdentity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AssumeRoleWithWebIdentity
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssumeRoleWithWebIdentityRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssumeRoleWithWebIdentityResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PackedPolicyTooLargeException'
          description: PackedPolicyTooLargeException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IDPRejectedClaimException'
          description: IDPRejectedClaimException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IDPCommunicationErrorException'
          description: IDPCommunicationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIdentityTokenException'
          description: InvalidIdentityTokenException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpiredTokenException'
          description: ExpiredTokenException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
      x-aws-operation-name: AssumeRoleWithWebIdentity
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DecodeAuthorizationMessage:
    get:
      description: "<p>Decodes additional information about the authorization status\
        \ of a request from an encoded message returned in response to an Amazon Web\
        \ Services request.</p> <p>For example, if a user is not authorized to perform\
        \ an operation that he or she has requested, the request returns a <code>Client.UnauthorizedOperation</code>\
        \ response (an HTTP 403 response). Some Amazon Web Services operations additionally\
        \ return an encoded message that can provide details about this authorization\
        \ failure. </p> <note> <p>Only certain Amazon Web Services operations return\
        \ an encoded authorization message. The documentation for an individual operation\
        \ indicates whether that operation returns an encoded message in addition\
        \ to returning an HTTP code.</p> </note> <p>The message is encoded because\
        \ the details of the authorization status can contain privileged information\
        \ that the user who requested the operation should not see. To decode an authorization\
        \ status message, a user must be granted permissions through an IAM <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\">policy</a>\
        \ to request the <code>DecodeAuthorizationMessage</code> (<code>sts:DecodeAuthorizationMessage</code>)\
        \ action. </p> <p>The decoded message includes the following type of information:</p>\
        \ <ul> <li> <p>Whether the request was denied due to an explicit deny or due\
        \ to the absence of an explicit allow. For more information, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow\"\
        >Determining Whether a Request is Allowed or Denied</a> in the <i>IAM User\
        \ Guide</i>. </p> </li> <li> <p>The principal who made the request.</p> </li>\
        \ <li> <p>The requested action.</p> </li> <li> <p>The requested resource.</p>\
        \ </li> <li> <p>The values of condition keys in the context of the user's\
        \ request.</p> </li> </ul>"
      operationId: GET_DecodeAuthorizationMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The encoded message that was returned with the response.
        explode: true
        in: query
        name: EncodedMessage
        required: true
        schema:
          maxLength: 10240
          minLength: 1
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DecodeAuthorizationMessage
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecodeAuthorizationMessageResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthorizationMessageException'
          description: InvalidAuthorizationMessageException
      x-aws-operation-name: DecodeAuthorizationMessage
      x-accepts:
      - text/xml
    post:
      description: "<p>Decodes additional information about the authorization status\
        \ of a request from an encoded message returned in response to an Amazon Web\
        \ Services request.</p> <p>For example, if a user is not authorized to perform\
        \ an operation that he or she has requested, the request returns a <code>Client.UnauthorizedOperation</code>\
        \ response (an HTTP 403 response). Some Amazon Web Services operations additionally\
        \ return an encoded message that can provide details about this authorization\
        \ failure. </p> <note> <p>Only certain Amazon Web Services operations return\
        \ an encoded authorization message. The documentation for an individual operation\
        \ indicates whether that operation returns an encoded message in addition\
        \ to returning an HTTP code.</p> </note> <p>The message is encoded because\
        \ the details of the authorization status can contain privileged information\
        \ that the user who requested the operation should not see. To decode an authorization\
        \ status message, a user must be granted permissions through an IAM <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\">policy</a>\
        \ to request the <code>DecodeAuthorizationMessage</code> (<code>sts:DecodeAuthorizationMessage</code>)\
        \ action. </p> <p>The decoded message includes the following type of information:</p>\
        \ <ul> <li> <p>Whether the request was denied due to an explicit deny or due\
        \ to the absence of an explicit allow. For more information, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow\"\
        >Determining Whether a Request is Allowed or Denied</a> in the <i>IAM User\
        \ Guide</i>. </p> </li> <li> <p>The principal who made the request.</p> </li>\
        \ <li> <p>The requested action.</p> </li> <li> <p>The requested resource.</p>\
        \ </li> <li> <p>The values of condition keys in the context of the user's\
        \ request.</p> </li> </ul>"
      operationId: POST_DecodeAuthorizationMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DecodeAuthorizationMessage
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DecodeAuthorizationMessageRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DecodeAuthorizationMessageResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthorizationMessageException'
          description: InvalidAuthorizationMessageException
      x-aws-operation-name: DecodeAuthorizationMessage
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetAccessKeyInfo:
    get:
      description: "<p>Returns the account identifier for the specified access key\
        \ ID.</p> <p>Access keys consist of two parts: an access key ID (for example,\
        \ <code>AKIAIOSFODNN7EXAMPLE</code>) and a secret access key (for example,\
        \ <code>wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</code>). For more information\
        \ about access keys, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html\"\
        >Managing Access Keys for IAM Users</a> in the <i>IAM User Guide</i>.</p>\
        \ <p>When you pass an access key ID to this operation, it returns the ID of\
        \ the Amazon Web Services account to which the keys belong. Access key IDs\
        \ beginning with <code>AKIA</code> are long-term credentials for an IAM user\
        \ or the Amazon Web Services account root user. Access key IDs beginning with\
        \ <code>ASIA</code> are temporary credentials that are created using STS operations.\
        \ If the account in the response belongs to you, you can sign in as the root\
        \ user and review your root user access keys. Then, you can pull a <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html\"\
        >credentials report</a> to learn which IAM user owns the keys. To learn who\
        \ requested the temporary credentials for an <code>ASIA</code> access key,\
        \ view the STS events in your <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\"\
        >CloudTrail logs</a> in the <i>IAM User Guide</i>.</p> <p>This operation does\
        \ not indicate the state of the access key. The key might be active, inactive,\
        \ or deleted. Active keys might not have permissions to perform an operation.\
        \ Providing a deleted access key might return an error that the key doesn't\
        \ exist.</p>"
      operationId: GET_GetAccessKeyInfo
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The identifier of an access key.</p> <p>This parameter allows
          (through its regex pattern) a string of characters that can consist of any
          upper- or lowercase letter or digit.</p>
        explode: true
        in: query
        name: AccessKeyId
        required: true
        schema:
          maxLength: 128
          minLength: 16
          pattern: "[\\w]*"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetAccessKeyInfo
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessKeyInfoResponse'
          description: Success
      x-aws-operation-name: GetAccessKeyInfo
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns the account identifier for the specified access key\
        \ ID.</p> <p>Access keys consist of two parts: an access key ID (for example,\
        \ <code>AKIAIOSFODNN7EXAMPLE</code>) and a secret access key (for example,\
        \ <code>wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</code>). For more information\
        \ about access keys, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html\"\
        >Managing Access Keys for IAM Users</a> in the <i>IAM User Guide</i>.</p>\
        \ <p>When you pass an access key ID to this operation, it returns the ID of\
        \ the Amazon Web Services account to which the keys belong. Access key IDs\
        \ beginning with <code>AKIA</code> are long-term credentials for an IAM user\
        \ or the Amazon Web Services account root user. Access key IDs beginning with\
        \ <code>ASIA</code> are temporary credentials that are created using STS operations.\
        \ If the account in the response belongs to you, you can sign in as the root\
        \ user and review your root user access keys. Then, you can pull a <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html\"\
        >credentials report</a> to learn which IAM user owns the keys. To learn who\
        \ requested the temporary credentials for an <code>ASIA</code> access key,\
        \ view the STS events in your <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\"\
        >CloudTrail logs</a> in the <i>IAM User Guide</i>.</p> <p>This operation does\
        \ not indicate the state of the access key. The key might be active, inactive,\
        \ or deleted. Active keys might not have permissions to perform an operation.\
        \ Providing a deleted access key might return an error that the key doesn't\
        \ exist.</p>"
      operationId: POST_GetAccessKeyInfo
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetAccessKeyInfo
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetAccessKeyInfoRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccessKeyInfoResponse'
          description: Success
      x-aws-operation-name: GetAccessKeyInfo
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetCallerIdentity:
    get:
      description: "<p>Returns details about the IAM user or role whose credentials\
        \ are used to call the operation.</p> <note> <p>No permissions are required\
        \ to perform this operation. If an administrator adds a policy to your IAM\
        \ user or role that explicitly denies access to the <code>sts:GetCallerIdentity</code>\
        \ action, you can still perform this operation. Permissions are not required\
        \ because the same information is returned when an IAM user or role is denied\
        \ access. To view an example response, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_access-denied-delete-mfa\"\
        >I Am Not Authorized to Perform: iam:DeleteVirtualMFADevice</a> in the <i>IAM\
        \ User Guide</i>.</p> </note>"
      operationId: GET_GetCallerIdentity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetCallerIdentity
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCallerIdentityResponse'
          description: Success
      x-aws-operation-name: GetCallerIdentity
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns details about the IAM user or role whose credentials\
        \ are used to call the operation.</p> <note> <p>No permissions are required\
        \ to perform this operation. If an administrator adds a policy to your IAM\
        \ user or role that explicitly denies access to the <code>sts:GetCallerIdentity</code>\
        \ action, you can still perform this operation. Permissions are not required\
        \ because the same information is returned when an IAM user or role is denied\
        \ access. To view an example response, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_access-denied-delete-mfa\"\
        >I Am Not Authorized to Perform: iam:DeleteVirtualMFADevice</a> in the <i>IAM\
        \ User Guide</i>.</p> </note>"
      operationId: POST_GetCallerIdentity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetCallerIdentity
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetCallerIdentityRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCallerIdentityResponse'
          description: Success
      x-aws-operation-name: GetCallerIdentity
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetFederationToken:
    get:
      description: "<p>Returns a set of temporary security credentials (consisting\
        \ of an access key ID, a secret access key, and a security token) for a federated\
        \ user. A typical use is in a proxy application that gets temporary security\
        \ credentials on behalf of distributed applications inside a corporate network.\
        \ You must call the <code>GetFederationToken</code> operation using the long-term\
        \ security credentials of an IAM user. As a result, this call is appropriate\
        \ in contexts where those credentials can be safely stored, usually in a server-based\
        \ application. For a comparison of <code>GetFederationToken</code> with the\
        \ other API operations that produce temporary credentials, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <note> <p>You can create a mobile-based or browser-based\
        \ app that can authenticate users using a web identity provider like Login\
        \ with Amazon, Facebook, Google, or an OpenID Connect-compatible identity\
        \ provider. In this case, we recommend that you use <a href=\"http://aws.amazon.com/cognito/\"\
        >Amazon Cognito</a> or <code>AssumeRoleWithWebIdentity</code>. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\"\
        >Federation Through a Web-based Identity Provider</a> in the <i>IAM User Guide</i>.</p>\
        \ </note> <p>You can also call <code>GetFederationToken</code> using the security\
        \ credentials of an Amazon Web Services account root user, but we do not recommend\
        \ it. Instead, we recommend that you create an IAM user for the purpose of\
        \ the proxy application. Then attach a policy to the IAM user that limits\
        \ federated users to only the actions and resources that they need to access.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\"\
        >IAM Best Practices</a> in the <i>IAM User Guide</i>. </p> <p> <b>Session\
        \ duration</b> </p> <p>The temporary credentials are valid for the specified\
        \ duration, from 900 seconds (15 minutes) up to a maximum of 129,600 seconds\
        \ (36 hours). The default session duration is 43,200 seconds (12 hours). Temporary\
        \ credentials obtained by using the Amazon Web Services account root user\
        \ credentials have a maximum duration of 3,600 seconds (1 hour).</p> <p> <b>Permissions</b>\
        \ </p> <p>You can use the temporary credentials created by <code>GetFederationToken</code>\
        \ in any Amazon Web Services service with the following exceptions:</p> <ul>\
        \ <li> <p>You cannot call any IAM operations using the CLI or the Amazon Web\
        \ Services API. This limitation does not apply to console sessions.</p> </li>\
        \ <li> <p>You cannot call any STS operations except <code>GetCallerIdentity</code>.</p>\
        \ </li> </ul> <p>You can use temporary credentials for single sign-on (SSO)\
        \ to the console.</p> <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >session policy</a> to this operation. You can pass a single JSON policy document\
        \ to use as an inline session policy. You can also specify up to 10 managed\
        \ policy Amazon Resource Names (ARNs) to use as managed session policies.\
        \ The plaintext that you use for both inline and managed session policies\
        \ can't exceed 2,048 characters.</p> <p>Though the session policy parameters\
        \ are optional, if you do not pass a policy, then the resulting federated\
        \ user session has no permissions. When you pass session policies, the session\
        \ permissions are the intersection of the IAM user policies and the session\
        \ policies that you pass. This gives you a way to further restrict the permissions\
        \ for a federated user. You cannot use session policies to grant more permissions\
        \ than those that are defined in the permissions policy of the IAM user. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >Session Policies</a> in the <i>IAM User Guide</i>. For information about\
        \ using <code>GetFederationToken</code> to create temporary security credentials,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\"\
        >GetFederationTokenâ€”Federation Through a Custom Identity Broker</a>. </p>\
        \ <p>You can use the credentials to access a resource that has a resource-based\
        \ policy. If that policy specifically references the federated user session\
        \ in the <code>Principal</code> element of the policy, the session has the\
        \ permissions allowed by the policy. These permissions are granted in addition\
        \ to the permissions granted by the session policies.</p> <p> <b>Tags</b>\
        \ </p> <p>(Optional) You can pass tag key-value pairs to your session. These\
        \ are called session tags. For more information about session tags, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <note>\
        \ <p>You can create a mobile-based or browser-based app that can authenticate\
        \ users using a web identity provider like Login with Amazon, Facebook, Google,\
        \ or an OpenID Connect-compatible identity provider. In this case, we recommend\
        \ that you use <a href=\"http://aws.amazon.com/cognito/\">Amazon Cognito</a>\
        \ or <code>AssumeRoleWithWebIdentity</code>. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\"\
        >Federation Through a Web-based Identity Provider</a> in the <i>IAM User Guide</i>.</p>\
        \ </note> <p>An administrator must grant you the permissions necessary to\
        \ pass session tags. The administrator can also create granular permissions\
        \ to allow you to pass only specific session tags. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\"\
        >Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM\
        \ User Guide</i>.</p> <p>Tag keyâ€“value pairs are not case sensitive, but case\
        \ is preserved. This means that you cannot have separate <code>Department</code>\
        \ and <code>department</code> tag keys. Assume that the user that you are\
        \ federating has the <code>Department</code>=<code>Marketing</code> tag and\
        \ you pass the <code>department</code>=<code>engineering</code> session tag.\
        \ <code>Department</code> and <code>department</code> are not saved as separate\
        \ tags, and the session tag passed in the request takes precedence over the\
        \ user tag.</p>"
      operationId: GET_GetFederationToken
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the federated user. The name is used as an identifier\
          \ for the temporary security credentials (such as <code>Bob</code>). For\
          \ example, you can reference the federated user name in a resource-based\
          \ policy, such as in an Amazon S3 bucket policy.</p> <p>The regex used to\
          \ validate this parameter is a string of characters consisting of upper-\
          \ and lower-case alphanumeric characters with no spaces. You can also include\
          \ underscores or any of the following characters: =,.@-</p>"
        explode: true
        in: query
        name: Name
        required: true
        schema:
          maxLength: 32
          minLength: 2
          pattern: "[\\w+=,.@-]*"
          type: string
        style: form
      - description: "<p>An IAM policy in JSON format that you want to use as an inline\
          \ session policy.</p> <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >session policy</a> to this operation. You can pass a single JSON policy\
          \ document to use as an inline session policy. You can also specify up to\
          \ 10 managed policy Amazon Resource Names (ARNs) to use as managed session\
          \ policies.</p> <p>This parameter is optional. However, if you do not pass\
          \ any session policies, then the resulting federated user session has no\
          \ permissions.</p> <p>When you pass session policies, the session permissions\
          \ are the intersection of the IAM user policies and the session policies\
          \ that you pass. This gives you a way to further restrict the permissions\
          \ for a federated user. You cannot use session policies to grant more permissions\
          \ than those that are defined in the permissions policy of the IAM user.\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>The resulting\
          \ credentials can be used to access a resource that has a resource-based\
          \ policy. If that policy specifically references the federated user session\
          \ in the <code>Principal</code> element of the policy, the session has the\
          \ permissions allowed by the policy. These permissions are granted in addition\
          \ to the permissions that are granted by the session policies.</p> <p>The\
          \ plaintext that you use for both inline and managed session policies can't\
          \ exceed 2,048 characters. The JSON policy characters can be any ASCII character\
          \ from the space character to the end of the valid character list (\\u0020\
          \ through \\u00FF). It can also include the tab (\\u0009), linefeed (\\\
          u000A), and carriage return (\\u000D) characters.</p> <note> <p>An Amazon\
          \ Web Services conversion compresses the passed inline session policy, managed\
          \ policy ARNs, and session tags into a packed binary format that has a separate\
          \ limit. Your request can fail for this limit even if your plaintext meets\
          \ the other requirements. The <code>PackedPolicySize</code> response element\
          \ indicates by percentage how close the policies and tags for your request\
          \ are to the upper size limit.</p> </note>"
        explode: true
        in: query
        name: Policy
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
          type: string
        style: form
      - description: "<p>The Amazon Resource Names (ARNs) of the IAM managed policies\
          \ that you want to use as a managed session policy. The policies must exist\
          \ in the same account as the IAM user that is requesting federated access.</p>\
          \ <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >session policy</a> to this operation. You can pass a single JSON policy\
          \ document to use as an inline session policy. You can also specify up to\
          \ 10 managed policy Amazon Resource Names (ARNs) to use as managed session\
          \ policies. The plaintext that you use for both inline and managed session\
          \ policies can't exceed 2,048 characters. You can provide up to 10 managed\
          \ policy ARNs. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
          \ in the Amazon Web Services General Reference.</p> <p>This parameter is\
          \ optional. However, if you do not pass any session policies, then the resulting\
          \ federated user session has no permissions.</p> <p>When you pass session\
          \ policies, the session permissions are the intersection of the IAM user\
          \ policies and the session policies that you pass. This gives you a way\
          \ to further restrict the permissions for a federated user. You cannot use\
          \ session policies to grant more permissions than those that are defined\
          \ in the permissions policy of the IAM user. For more information, see <a\
          \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
          >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>The resulting\
          \ credentials can be used to access a resource that has a resource-based\
          \ policy. If that policy specifically references the federated user session\
          \ in the <code>Principal</code> element of the policy, the session has the\
          \ permissions allowed by the policy. These permissions are granted in addition\
          \ to the permissions that are granted by the session policies.</p> <note>\
          \ <p>An Amazon Web Services conversion compresses the passed inline session\
          \ policy, managed policy ARNs, and session tags into a packed binary format\
          \ that has a separate limit. Your request can fail for this limit even if\
          \ your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
          \ response element indicates by percentage how close the policies and tags\
          \ for your request are to the upper size limit.</p> </note>"
        explode: true
        in: query
        name: PolicyArns
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PolicyDescriptorType'
          type: array
        style: form
      - description: "The duration, in seconds, that the session should last. Acceptable\
          \ durations for federation sessions range from 900 seconds (15 minutes)\
          \ to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default.\
          \ Sessions obtained using Amazon Web Services account root user credentials\
          \ are restricted to a maximum of 3,600 seconds (one hour). If the specified\
          \ duration is longer than one hour, the session obtained by using root user\
          \ credentials defaults to one hour."
        explode: true
        in: query
        name: DurationSeconds
        required: false
        schema:
          maximum: 129600
          minimum: 900
          type: integer
        style: form
      - description: "<p>A list of session tags. Each session tag consists of a key\
          \ name and an associated value. For more information about session tags,\
          \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
          >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <p>This\
          \ parameter is optional. You can pass up to 50 session tags. The plaintext\
          \ session tag keys canâ€™t exceed 128 characters and the values canâ€™t exceed\
          \ 256 characters. For these and additional limits, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
          >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p> <note>\
          \ <p>An Amazon Web Services conversion compresses the passed inline session\
          \ policy, managed policy ARNs, and session tags into a packed binary format\
          \ that has a separate limit. Your request can fail for this limit even if\
          \ your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
          \ response element indicates by percentage how close the policies and tags\
          \ for your request are to the upper size limit.</p> </note> <p>You can pass\
          \ a session tag with the same key as a tag that is already attached to the\
          \ user you are federating. When you do, session tags override a user tag\
          \ with the same key. </p> <p>Tag keyâ€“value pairs are not case sensitive,\
          \ but case is preserved. This means that you cannot have separate <code>Department</code>\
          \ and <code>department</code> tag keys. Assume that the role has the <code>Department</code>=<code>Marketing</code>\
          \ tag and you pass the <code>department</code>=<code>engineering</code>\
          \ session tag. <code>Department</code> and <code>department</code> are not\
          \ saved as separate tags, and the session tag passed in the request takes\
          \ precedence over the role tag.</p>"
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetFederationToken
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFederationTokenResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PackedPolicyTooLargeException'
          description: PackedPolicyTooLargeException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
      x-aws-operation-name: GetFederationToken
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a set of temporary security credentials (consisting\
        \ of an access key ID, a secret access key, and a security token) for a federated\
        \ user. A typical use is in a proxy application that gets temporary security\
        \ credentials on behalf of distributed applications inside a corporate network.\
        \ You must call the <code>GetFederationToken</code> operation using the long-term\
        \ security credentials of an IAM user. As a result, this call is appropriate\
        \ in contexts where those credentials can be safely stored, usually in a server-based\
        \ application. For a comparison of <code>GetFederationToken</code> with the\
        \ other API operations that produce temporary credentials, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <note> <p>You can create a mobile-based or browser-based\
        \ app that can authenticate users using a web identity provider like Login\
        \ with Amazon, Facebook, Google, or an OpenID Connect-compatible identity\
        \ provider. In this case, we recommend that you use <a href=\"http://aws.amazon.com/cognito/\"\
        >Amazon Cognito</a> or <code>AssumeRoleWithWebIdentity</code>. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\"\
        >Federation Through a Web-based Identity Provider</a> in the <i>IAM User Guide</i>.</p>\
        \ </note> <p>You can also call <code>GetFederationToken</code> using the security\
        \ credentials of an Amazon Web Services account root user, but we do not recommend\
        \ it. Instead, we recommend that you create an IAM user for the purpose of\
        \ the proxy application. Then attach a policy to the IAM user that limits\
        \ federated users to only the actions and resources that they need to access.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\"\
        >IAM Best Practices</a> in the <i>IAM User Guide</i>. </p> <p> <b>Session\
        \ duration</b> </p> <p>The temporary credentials are valid for the specified\
        \ duration, from 900 seconds (15 minutes) up to a maximum of 129,600 seconds\
        \ (36 hours). The default session duration is 43,200 seconds (12 hours). Temporary\
        \ credentials obtained by using the Amazon Web Services account root user\
        \ credentials have a maximum duration of 3,600 seconds (1 hour).</p> <p> <b>Permissions</b>\
        \ </p> <p>You can use the temporary credentials created by <code>GetFederationToken</code>\
        \ in any Amazon Web Services service with the following exceptions:</p> <ul>\
        \ <li> <p>You cannot call any IAM operations using the CLI or the Amazon Web\
        \ Services API. This limitation does not apply to console sessions.</p> </li>\
        \ <li> <p>You cannot call any STS operations except <code>GetCallerIdentity</code>.</p>\
        \ </li> </ul> <p>You can use temporary credentials for single sign-on (SSO)\
        \ to the console.</p> <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >session policy</a> to this operation. You can pass a single JSON policy document\
        \ to use as an inline session policy. You can also specify up to 10 managed\
        \ policy Amazon Resource Names (ARNs) to use as managed session policies.\
        \ The plaintext that you use for both inline and managed session policies\
        \ can't exceed 2,048 characters.</p> <p>Though the session policy parameters\
        \ are optional, if you do not pass a policy, then the resulting federated\
        \ user session has no permissions. When you pass session policies, the session\
        \ permissions are the intersection of the IAM user policies and the session\
        \ policies that you pass. This gives you a way to further restrict the permissions\
        \ for a federated user. You cannot use session policies to grant more permissions\
        \ than those that are defined in the permissions policy of the IAM user. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
        >Session Policies</a> in the <i>IAM User Guide</i>. For information about\
        \ using <code>GetFederationToken</code> to create temporary security credentials,\
        \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\"\
        >GetFederationTokenâ€”Federation Through a Custom Identity Broker</a>. </p>\
        \ <p>You can use the credentials to access a resource that has a resource-based\
        \ policy. If that policy specifically references the federated user session\
        \ in the <code>Principal</code> element of the policy, the session has the\
        \ permissions allowed by the policy. These permissions are granted in addition\
        \ to the permissions granted by the session policies.</p> <p> <b>Tags</b>\
        \ </p> <p>(Optional) You can pass tag key-value pairs to your session. These\
        \ are called session tags. For more information about session tags, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <note>\
        \ <p>You can create a mobile-based or browser-based app that can authenticate\
        \ users using a web identity provider like Login with Amazon, Facebook, Google,\
        \ or an OpenID Connect-compatible identity provider. In this case, we recommend\
        \ that you use <a href=\"http://aws.amazon.com/cognito/\">Amazon Cognito</a>\
        \ or <code>AssumeRoleWithWebIdentity</code>. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\"\
        >Federation Through a Web-based Identity Provider</a> in the <i>IAM User Guide</i>.</p>\
        \ </note> <p>An administrator must grant you the permissions necessary to\
        \ pass session tags. The administrator can also create granular permissions\
        \ to allow you to pass only specific session tags. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\"\
        >Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM\
        \ User Guide</i>.</p> <p>Tag keyâ€“value pairs are not case sensitive, but case\
        \ is preserved. This means that you cannot have separate <code>Department</code>\
        \ and <code>department</code> tag keys. Assume that the user that you are\
        \ federating has the <code>Department</code>=<code>Marketing</code> tag and\
        \ you pass the <code>department</code>=<code>engineering</code> session tag.\
        \ <code>Department</code> and <code>department</code> are not saved as separate\
        \ tags, and the session tag passed in the request takes precedence over the\
        \ user tag.</p>"
      operationId: POST_GetFederationToken
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetFederationToken
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetFederationTokenRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFederationTokenResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PackedPolicyTooLargeException'
          description: PackedPolicyTooLargeException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
      x-aws-operation-name: GetFederationToken
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetSessionToken:
    get:
      description: "<p>Returns a set of temporary credentials for an Amazon Web Services\
        \ account or IAM user. The credentials consist of an access key ID, a secret\
        \ access key, and a security token. Typically, you use <code>GetSessionToken</code>\
        \ if you want to use MFA to protect programmatic calls to specific Amazon\
        \ Web Services API operations like Amazon EC2 <code>StopInstances</code>.\
        \ MFA-enabled IAM users would need to call <code>GetSessionToken</code> and\
        \ submit an MFA code that is associated with their MFA device. Using the temporary\
        \ security credentials that are returned from the call, IAM users can then\
        \ make programmatic calls to API operations that require MFA authentication.\
        \ If you do not supply a correct MFA code, then the API returns an access\
        \ denied error. For a comparison of <code>GetSessionToken</code> with the\
        \ other API operations that produce temporary credentials, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <note> <p>No permissions are required for users to perform\
        \ this operation. The purpose of the <code>sts:GetSessionToken</code> operation\
        \ is to authenticate the user using MFA. You cannot use policies to control\
        \ authentication operations. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_getsessiontoken.html\"\
        >Permissions for GetSessionToken</a> in the <i>IAM User Guide</i>.</p> </note>\
        \ <p> <b>Session Duration</b> </p> <p>The <code>GetSessionToken</code> operation\
        \ must be called by using the long-term Amazon Web Services security credentials\
        \ of the Amazon Web Services account root user or an IAM user. Credentials\
        \ that are created by IAM users are valid for the duration that you specify.\
        \ This duration can range from 900 seconds (15 minutes) up to a maximum of\
        \ 129,600 seconds (36 hours), with a default of 43,200 seconds (12 hours).\
        \ Credentials based on account credentials can range from 900 seconds (15\
        \ minutes) up to 3,600 seconds (1 hour), with a default of 1 hour. </p> <p>\
        \ <b>Permissions</b> </p> <p>The temporary security credentials created by\
        \ <code>GetSessionToken</code> can be used to make API calls to any Amazon\
        \ Web Services service with the following exceptions:</p> <ul> <li> <p>You\
        \ cannot call any IAM API operations unless MFA authentication information\
        \ is included in the request.</p> </li> <li> <p>You cannot call any STS API\
        \ <i>except</i> <code>AssumeRole</code> or <code>GetCallerIdentity</code>.</p>\
        \ </li> </ul> <note> <p>We recommend that you do not call <code>GetSessionToken</code>\
        \ with Amazon Web Services account root user credentials. Instead, follow\
        \ our <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users\"\
        >best practices</a> by creating one or more IAM users, giving them the necessary\
        \ permissions, and using IAM users for everyday interaction with Amazon Web\
        \ Services. </p> </note> <p>The credentials that are returned by <code>GetSessionToken</code>\
        \ are based on permissions associated with the user whose credentials were\
        \ used to call the operation. If <code>GetSessionToken</code> is called using\
        \ Amazon Web Services account root user credentials, the temporary credentials\
        \ have root user permissions. Similarly, if <code>GetSessionToken</code> is\
        \ called using the credentials of an IAM user, the temporary credentials have\
        \ the same permissions as the IAM user. </p> <p>For more information about\
        \ using <code>GetSessionToken</code> to create temporary credentials, go to\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken\"\
        >Temporary Credentials for Users in Untrusted Environments</a> in the <i>IAM\
        \ User Guide</i>. </p>"
      operationId: GET_GetSessionToken
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The duration, in seconds, that the credentials should remain\
          \ valid. Acceptable durations for IAM user sessions range from 900 seconds\
          \ (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours)\
          \ as the default. Sessions for Amazon Web Services account owners are restricted\
          \ to a maximum of 3,600 seconds (one hour). If the duration is longer than\
          \ one hour, the session for Amazon Web Services account owners defaults\
          \ to one hour."
        explode: true
        in: query
        name: DurationSeconds
        required: false
        schema:
          maximum: 129600
          minimum: 900
          type: integer
        style: form
      - description: "<p>The identification number of the MFA device that is associated\
          \ with the IAM user who is making the <code>GetSessionToken</code> call.\
          \ Specify this value if the IAM user has a policy that requires MFA authentication.\
          \ The value is either the serial number for a hardware device (such as <code>GAHT12345678</code>)\
          \ or an Amazon Resource Name (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>).\
          \ You can find the device for an IAM user by going to the Amazon Web Services\
          \ Management Console and viewing the user's security credentials. </p> <p>The\
          \ regex used to validate this parameter is a string of characters consisting\
          \ of upper- and lower-case alphanumeric characters with no spaces. You can\
          \ also include underscores or any of the following characters: =,.@:/-</p>"
        explode: true
        in: query
        name: SerialNumber
        required: false
        schema:
          maxLength: 256
          minLength: 9
          pattern: "[\\w+=/:,.@-]*"
          type: string
        style: form
      - description: "<p>The value provided by the MFA device, if MFA is required.\
          \ If any policy requires the IAM user to submit an MFA code, specify this\
          \ value. If MFA authentication is required, the user must provide a code\
          \ when requesting a set of temporary security credentials. A user who fails\
          \ to provide the code receives an \"access denied\" response when requesting\
          \ resources that require MFA authentication.</p> <p>The format for this\
          \ parameter, as described by its regex pattern, is a sequence of six numeric\
          \ digits.</p>"
        explode: true
        in: query
        name: TokenCode
        required: false
        schema:
          maxLength: 6
          minLength: 6
          pattern: "[\\d]*"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetSessionToken
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSessionTokenResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
      x-aws-operation-name: GetSessionToken
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a set of temporary credentials for an Amazon Web Services\
        \ account or IAM user. The credentials consist of an access key ID, a secret\
        \ access key, and a security token. Typically, you use <code>GetSessionToken</code>\
        \ if you want to use MFA to protect programmatic calls to specific Amazon\
        \ Web Services API operations like Amazon EC2 <code>StopInstances</code>.\
        \ MFA-enabled IAM users would need to call <code>GetSessionToken</code> and\
        \ submit an MFA code that is associated with their MFA device. Using the temporary\
        \ security credentials that are returned from the call, IAM users can then\
        \ make programmatic calls to API operations that require MFA authentication.\
        \ If you do not supply a correct MFA code, then the API returns an access\
        \ denied error. For a comparison of <code>GetSessionToken</code> with the\
        \ other API operations that produce temporary credentials, see <a href=\"\
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\"\
        >Requesting Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\"\
        >Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User\
        \ Guide</i>.</p> <note> <p>No permissions are required for users to perform\
        \ this operation. The purpose of the <code>sts:GetSessionToken</code> operation\
        \ is to authenticate the user using MFA. You cannot use policies to control\
        \ authentication operations. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_getsessiontoken.html\"\
        >Permissions for GetSessionToken</a> in the <i>IAM User Guide</i>.</p> </note>\
        \ <p> <b>Session Duration</b> </p> <p>The <code>GetSessionToken</code> operation\
        \ must be called by using the long-term Amazon Web Services security credentials\
        \ of the Amazon Web Services account root user or an IAM user. Credentials\
        \ that are created by IAM users are valid for the duration that you specify.\
        \ This duration can range from 900 seconds (15 minutes) up to a maximum of\
        \ 129,600 seconds (36 hours), with a default of 43,200 seconds (12 hours).\
        \ Credentials based on account credentials can range from 900 seconds (15\
        \ minutes) up to 3,600 seconds (1 hour), with a default of 1 hour. </p> <p>\
        \ <b>Permissions</b> </p> <p>The temporary security credentials created by\
        \ <code>GetSessionToken</code> can be used to make API calls to any Amazon\
        \ Web Services service with the following exceptions:</p> <ul> <li> <p>You\
        \ cannot call any IAM API operations unless MFA authentication information\
        \ is included in the request.</p> </li> <li> <p>You cannot call any STS API\
        \ <i>except</i> <code>AssumeRole</code> or <code>GetCallerIdentity</code>.</p>\
        \ </li> </ul> <note> <p>We recommend that you do not call <code>GetSessionToken</code>\
        \ with Amazon Web Services account root user credentials. Instead, follow\
        \ our <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users\"\
        >best practices</a> by creating one or more IAM users, giving them the necessary\
        \ permissions, and using IAM users for everyday interaction with Amazon Web\
        \ Services. </p> </note> <p>The credentials that are returned by <code>GetSessionToken</code>\
        \ are based on permissions associated with the user whose credentials were\
        \ used to call the operation. If <code>GetSessionToken</code> is called using\
        \ Amazon Web Services account root user credentials, the temporary credentials\
        \ have root user permissions. Similarly, if <code>GetSessionToken</code> is\
        \ called using the credentials of an IAM user, the temporary credentials have\
        \ the same permissions as the IAM user. </p> <p>For more information about\
        \ using <code>GetSessionToken</code> to create temporary credentials, go to\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken\"\
        >Temporary Credentials for Users in Untrusted Environments</a> in the <i>IAM\
        \ User Guide</i>. </p>"
      operationId: POST_GetSessionToken
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetSessionToken
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2011-06-15
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSessionTokenRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSessionTokenResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RegionDisabledException'
          description: RegionDisabledException
      x-aws-operation-name: GetSessionToken
      x-content-type: text/xml
      x-accepts:
      - text/xml
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssumeRoleResponse:
      description: "Contains the response to a successful <a>AssumeRole</a> request,\
        \ including temporary Amazon Web Services credentials that can be used to\
        \ make Amazon Web Services requests. "
      example:
        AssumedRoleUser:
          Arn: arn:aws:sts::123456789012:assumed-role/demo/Bob
          AssumedRoleId: ARO123EXAMPLE123:Bob
        Credentials:
          AccessKeyId: AKIAIOSFODNN7EXAMPLE
          Expiration: 2011-07-15T23:28:33.359Z
          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
          SessionToken: AQoDYXdzEPT//////////wEXAMPLEtc764bNrC9SAPBSM22wDOk4x4HIZ8j4FZTwdQWLWsKWHGBuFqwAeMicRXmxfpSPfIeoIYRqTflfKD8YUuwthAx7mSEI/qkPpKPi/kMcGdQrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz+scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==
        PackedPolicySize: 8
      properties:
        Credentials:
          $ref: '#/components/schemas/AssumeRoleResponse_Credentials'
        AssumedRoleUser:
          $ref: '#/components/schemas/AssumeRoleResponse_AssumedRoleUser'
        PackedPolicySize:
          allOf:
          - $ref: '#/components/schemas/nonNegativeIntegerType'
          - description: "A percentage value that indicates the packed size of the\
              \ session policies and session tags combined passed in the request.\
              \ The request fails if the packed size is greater than 100 percent,\
              \ which means the policies and tags exceeded the allowed space."
        SourceIdentity:
          allOf:
          - $ref: '#/components/schemas/sourceIdentityType'
          - description: "<p>The source identity specified by the principal that is\
              \ calling the <code>AssumeRole</code> operation.</p> <p>You can require\
              \ users to specify a source identity when they assume a role. You do\
              \ this by using the <code>sts:SourceIdentity</code> condition key in\
              \ a role trust policy. You can use source identity information in CloudTrail\
              \ logs to determine who took actions with a role. You can use the <code>aws:SourceIdentity</code>\
              \ condition key to further control access to Amazon Web Services resources\
              \ based on the value of source identity. For more information about\
              \ using source identity, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\"\
              >Monitor and control actions taken with assumed roles</a> in the <i>IAM\
              \ User Guide</i>.</p> <p>The regex used to validate this parameter is\
              \ a string of characters consisting of upper- and lower-case alphanumeric\
              \ characters with no spaces. You can also include underscores or any\
              \ of the following characters: =,.@-</p>"
      type: object
    PolicyDescriptorType:
      description: A reference to the IAM managed policy that is passed as a session
        policy for a role session or a federated user session.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: "The Amazon Resource Name (ARN) of the IAM managed policy\
              \ to use as a session policy for the role. For more information about\
              \ ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
              \ in the <i>Amazon Web Services General Reference</i>."
      type: object
    Tag:
      description: "You can pass custom key-value pair attributes when you assume\
        \ a role or federate a user. These are called session tags. You can then use\
        \ the session tags to control access to resources. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
        >Tagging Amazon Web Services STS Sessions</a> in the <i>IAM User Guide</i>."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/tagKeyType'
          - description: "<p>The key for a session tag.</p> <p>You can pass up to\
              \ 50 session tags. The plain text session tag keys canâ€™t exceed 128\
              \ characters. For these and additional limits, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
              >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p>"
        Value:
          allOf:
          - $ref: '#/components/schemas/tagValueType'
          - description: "<p>The value for a session tag.</p> <p>You can pass up to\
              \ 50 session tags. The plain text session tag values canâ€™t exceed 256\
              \ characters. For these and additional limits, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
              >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p>"
      required:
      - Key
      - Value
      type: object
    tagKeyType:
      maxLength: 128
      minLength: 1
      pattern: "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+"
      type: string
    MalformedPolicyDocumentException: {}
    PackedPolicyTooLargeException: {}
    RegionDisabledException: {}
    ExpiredTokenException: {}
    AssumeRoleWithSAMLResponse:
      description: "Contains the response to a successful <a>AssumeRoleWithSAML</a>\
        \ request, including temporary Amazon Web Services credentials that can be\
        \ used to make Amazon Web Services requests. "
      example:
        AssumedRoleUser:
          Arn: arn:aws:sts::123456789012:assumed-role/TestSaml
          AssumedRoleId: ARO456EXAMPLE789:TestSaml
        Audience: https://signin.aws.amazon.com/saml
        Credentials:
          AccessKeyId: ASIAV3ZUEFP6EXAMPLE
          Expiration: 2019-11-01T20:26:47Z
          SecretAccessKey: 8P+SQvWIuLnKhh8d++jpw0nNmQRBZvNEXAMPLEKEY
          SessionToken: IQoJb3JpZ2luX2VjEOz////////////////////wEXAMPLEtMSJHMEUCIDoKK3JH9uGQE1z0sINr5M4jk+Na8KHDcCYRVjJCZEvOAiEA3OvJGtw1EcViOleS2vhs8VdCKFJQWPQrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz+scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==
        Issuer: https://integ.example.com/idp/shibboleth
        NameQualifier: SbdGOnUkh1i4+EXAMPLExL/jEvs=
        PackedPolicySize: 6
        Subject: SamlExample
        SubjectType: transient
      properties:
        Credentials:
          $ref: '#/components/schemas/AssumeRoleResponse_Credentials'
        AssumedRoleUser:
          $ref: '#/components/schemas/AssumeRoleWithSAMLResponse_AssumedRoleUser'
        PackedPolicySize:
          allOf:
          - $ref: '#/components/schemas/nonNegativeIntegerType'
          - description: "A percentage value that indicates the packed size of the\
              \ session policies and session tags combined passed in the request.\
              \ The request fails if the packed size is greater than 100 percent,\
              \ which means the policies and tags exceeded the allowed space."
        Subject:
          allOf:
          - $ref: '#/components/schemas/Subject'
          - description: The value of the <code>NameID</code> element in the <code>Subject</code>
              element of the SAML assertion.
        SubjectType:
          allOf:
          - $ref: '#/components/schemas/SubjectType'
          - description: "<p> The format of the name ID, as defined by the <code>Format</code>\
              \ attribute in the <code>NameID</code> element of the SAML assertion.\
              \ Typical examples of the format are <code>transient</code> or <code>persistent</code>.\
              \ </p> <p> If the format includes the prefix <code>urn:oasis:names:tc:SAML:2.0:nameid-format</code>,\
              \ that prefix is removed. For example, <code>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</code>\
              \ is returned as <code>transient</code>. If the format includes any\
              \ other prefix, the format is returned with no modifications.</p>"
        Issuer:
          allOf:
          - $ref: '#/components/schemas/Issuer'
          - description: The value of the <code>Issuer</code> element of the SAML
              assertion.
        Audience:
          allOf:
          - $ref: '#/components/schemas/Audience'
          - description: ' The value of the <code>Recipient</code> attribute of the
              <code>SubjectConfirmationData</code> element of the SAML assertion. '
        NameQualifier:
          allOf:
          - $ref: '#/components/schemas/NameQualifier'
          - description: <p>A hash value based on the concatenation of the following:</p>
              <ul> <li> <p>The <code>Issuer</code> response value.</p> </li> <li>
              <p>The Amazon Web Services account ID.</p> </li> <li> <p>The friendly
              name (the last part of the ARN) of the SAML provider in IAM.</p> </li>
              </ul> <p>The combination of <code>NameQualifier</code> and <code>Subject</code>
              can be used to uniquely identify a federated user.</p> <p>The following
              pseudocode shows how the hash value is calculated:</p> <p> <code>BASE64
              ( SHA1 ( "https://example.com/saml" + "123456789012" + "/MySAMLIdP"
              ) )</code> </p>
        SourceIdentity:
          allOf:
          - $ref: '#/components/schemas/sourceIdentityType'
          - description: "<p>The value in the <code>SourceIdentity</code> attribute\
              \ in the SAML assertion. </p> <p>You can require users to set a source\
              \ identity value when they assume a role. You do this by using the <code>sts:SourceIdentity</code>\
              \ condition key in a role trust policy. That way, actions that are taken\
              \ with the role are associated with that user. After the source identity\
              \ is set, the value cannot be changed. It is present in the request\
              \ for all actions that are taken by the role and persists across <a\
              \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts#iam-term-role-chaining\"\
              >chained role</a> sessions. You can configure your SAML identity provider\
              \ to use an attribute associated with your users, like user name or\
              \ email, as the source identity when calling <code>AssumeRoleWithSAML</code>.\
              \ You do this by adding an attribute to the SAML assertion. For more\
              \ information about using source identity, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\"\
              >Monitor and control actions taken with assumed roles</a> in the <i>IAM\
              \ User Guide</i>.</p> <p>The regex used to validate this parameter is\
              \ a string of characters consisting of upper- and lower-case alphanumeric\
              \ characters with no spaces. You can also include underscores or any\
              \ of the following characters: =,.@-</p>"
      type: object
    IDPRejectedClaimException: {}
    InvalidIdentityTokenException: {}
    AssumeRoleWithWebIdentityResponse:
      description: "Contains the response to a successful <a>AssumeRoleWithWebIdentity</a>\
        \ request, including temporary Amazon Web Services credentials that can be\
        \ used to make Amazon Web Services requests. "
      example:
        AssumedRoleUser:
          Arn: arn:aws:sts::123456789012:assumed-role/FederatedWebIdentityRole/app1
          AssumedRoleId: AROACLKWSDQRAOEXAMPLE:app1
        Audience: client.5498841531868486423.1548@apps.example.com
        Credentials:
          AccessKeyId: AKIAIOSFODNN7EXAMPLE
          Expiration: 2014-10-24T23:00:23Z
          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
          SessionToken: AQoDYXdzEE0a8ANXXXXXXXXNO1ewxE5TijQyp+IEXAMPLE
        PackedPolicySize: 123
        Provider: www.amazon.com
        SubjectFromWebIdentityToken: amzn1.account.AF6RHO7KZU5XRVQJGXK6HEXAMPLE
      properties:
        Credentials:
          $ref: '#/components/schemas/AssumeRoleWithWebIdentityResponse_Credentials'
        SubjectFromWebIdentityToken:
          allOf:
          - $ref: '#/components/schemas/webIdentitySubjectType'
          - description: "The unique user identifier that is returned by the identity\
              \ provider. This identifier is associated with the <code>WebIdentityToken</code>\
              \ that was submitted with the <code>AssumeRoleWithWebIdentity</code>\
              \ call. The identifier is typically unique to the user and the application\
              \ that acquired the <code>WebIdentityToken</code> (pairwise identifier).\
              \ For OpenID Connect ID tokens, this field contains the value returned\
              \ by the identity provider as the token's <code>sub</code> (Subject)\
              \ claim. "
        AssumedRoleUser:
          $ref: '#/components/schemas/AssumeRoleResponse_AssumedRoleUser'
        PackedPolicySize:
          allOf:
          - $ref: '#/components/schemas/nonNegativeIntegerType'
          - description: "A percentage value that indicates the packed size of the\
              \ session policies and session tags combined passed in the request.\
              \ The request fails if the packed size is greater than 100 percent,\
              \ which means the policies and tags exceeded the allowed space."
        Provider:
          allOf:
          - $ref: '#/components/schemas/Issuer'
          - description: " The issuing authority of the web identity token presented.\
              \ For OpenID Connect ID tokens, this contains the value of the <code>iss</code>\
              \ field. For OAuth 2.0 access tokens, this contains the value of the\
              \ <code>ProviderId</code> parameter that was passed in the <code>AssumeRoleWithWebIdentity</code>\
              \ request."
        Audience:
          allOf:
          - $ref: '#/components/schemas/Audience'
          - description: The intended audience (also known as client ID) of the web
              identity token. This is traditionally the client identifier issued to
              the application that requested the web identity token.
        SourceIdentity:
          allOf:
          - $ref: '#/components/schemas/sourceIdentityType'
          - description: "<p>The value of the source identity that is returned in\
              \ the JSON web token (JWT) from the identity provider.</p> <p>You can\
              \ require users to set a source identity value when they assume a role.\
              \ You do this by using the <code>sts:SourceIdentity</code> condition\
              \ key in a role trust policy. That way, actions that are taken with\
              \ the role are associated with that user. After the source identity\
              \ is set, the value cannot be changed. It is present in the request\
              \ for all actions that are taken by the role and persists across <a\
              \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts#iam-term-role-chaining\"\
              >chained role</a> sessions. You can configure your identity provider\
              \ to use an attribute associated with your users, like user name or\
              \ email, as the source identity when calling <code>AssumeRoleWithWebIdentity</code>.\
              \ You do this by adding a claim to the JSON web token. To learn more\
              \ about OIDC tokens and claims, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-with-identity-providers.html\"\
              >Using Tokens with User Pools</a> in the <i>Amazon Cognito Developer\
              \ Guide</i>. For more information about using source identity, see <a\
              \ href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\"\
              >Monitor and control actions taken with assumed roles</a> in the <i>IAM\
              \ User Guide</i>.</p> <p>The regex used to validate this parameter is\
              \ a string of characters consisting of upper- and lower-case alphanumeric\
              \ characters with no spaces. You can also include underscores or any\
              \ of the following characters: =,.@-</p>"
      type: object
    IDPCommunicationErrorException: {}
    DecodeAuthorizationMessageResponse:
      description: A document that contains additional information about the authorization
        status of a request from an encoded message that is returned in response to
        an Amazon Web Services request.
      example:
        DecodedMessage: "{\"allowed\": \"false\",\"explicitDeny\": \"false\",\"matchedStatements\"\
          : \"\",\"failures\": \"\",\"context\": {\"principal\": {\"id\": \"AIDACKCEVSQ6C2EXAMPLE\"\
          ,\"name\": \"Bob\",\"arn\": \"arn:aws:iam::123456789012:user/Bob\"},\"action\"\
          : \"ec2:StopInstances\",\"resource\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-dd01c9bd\"\
          ,\"conditions\": [{\"item\": {\"key\": \"ec2:Tenancy\",\"values\": [\"default\"\
          ]},{\"item\": {\"key\": \"ec2:ResourceTag/elasticbeanstalk:environment-name\"\
          ,\"values\": [\"Default-Environment\"]}},(Additional items ...)]}}"
      properties:
        DecodedMessage:
          allOf:
          - $ref: '#/components/schemas/decodedMessageType'
          - description: The API returns a response with the decoded message.
      type: object
    InvalidAuthorizationMessageException: {}
    GetAccessKeyInfoResponse:
      properties:
        Account:
          allOf:
          - $ref: '#/components/schemas/accountType'
          - description: The number used to identify the Amazon Web Services account.
      type: object
    GetCallerIdentityResponse:
      description: "Contains the response to a successful <a>GetCallerIdentity</a>\
        \ request, including information about the entity making the request."
      example:
        Account: "123456789012"
        Arn: arn:aws:sts::123456789012:federated-user/my-federated-user-name
        UserId: 123456789012:my-federated-user-name
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/userIdType'
          - description: The unique identifier of the calling entity. The exact value
              depends on the type of entity that is making the call. The values returned
              are those listed in the <b>aws:userid</b> column in the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html#principaltable">Principal
              table</a> found on the <b>Policy Variables</b> reference page in the
              <i>IAM User Guide</i>.
        Account:
          allOf:
          - $ref: '#/components/schemas/accountType'
          - description: The Amazon Web Services account ID number of the account
              that owns or contains the calling entity.
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Web Services ARN associated with the calling entity.
      type: object
    GetFederationTokenResponse:
      description: "Contains the response to a successful <a>GetFederationToken</a>\
        \ request, including temporary Amazon Web Services credentials that can be\
        \ used to make Amazon Web Services requests. "
      example:
        Credentials:
          AccessKeyId: AKIAIOSFODNN7EXAMPLE
          Expiration: 2011-07-15T23:28:33.359Z
          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
          SessionToken: AQoDYXdzEPT//////////wEXAMPLEtc764bNrC9SAPBSM22wDOk4x4HIZ8j4FZTwdQWLWsKWHGBuFqwAeMicRXmxfpSPfIeoIYRqTflfKD8YUuwthAx7mSEI/qkPpKPi/kMcGdQrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz+scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==
        FederatedUser:
          Arn: arn:aws:sts::123456789012:federated-user/Bob
          FederatedUserId: 123456789012:Bob
        PackedPolicySize: 8
      properties:
        Credentials:
          $ref: '#/components/schemas/AssumeRoleResponse_Credentials'
        FederatedUser:
          $ref: '#/components/schemas/GetFederationTokenResponse_FederatedUser'
        PackedPolicySize:
          allOf:
          - $ref: '#/components/schemas/nonNegativeIntegerType'
          - description: "A percentage value that indicates the packed size of the\
              \ session policies and session tags combined passed in the request.\
              \ The request fails if the packed size is greater than 100 percent,\
              \ which means the policies and tags exceeded the allowed space."
      type: object
    GetSessionTokenResponse:
      description: "Contains the response to a successful <a>GetSessionToken</a> request,\
        \ including temporary Amazon Web Services credentials that can be used to\
        \ make Amazon Web Services requests. "
      example:
        Credentials:
          AccessKeyId: AKIAIOSFODNN7EXAMPLE
          Expiration: 2011-07-11T19:55:29.611Z
          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
          SessionToken: AQoEXAMPLEH4aoAH0gNCAPyJxz4BlCFFxWNE1OPTgk5TthT+FvwqnKwRcOIfrRh3c/LTo6UDdyJwOOvEVPvLXCrrrUtdnniCEXAMPLE/IvU1dYUg2RVAJBanLiHb4IgRmpRV3zrkuWJOgQs8IZZaIv2BXIa2R4OlgkBN9bkUDNCJiBeb/AXlzBBko7b15fjrBs2+cTQtpZ3CYWFXG8C5zqx37wnOE49mRl/+OtkIKGO7fAE
      properties:
        Credentials:
          $ref: '#/components/schemas/AssumeRoleResponse_Credentials'
      type: object
    arnType:
      maxLength: 2048
      minLength: 20
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]+"
      type: string
    roleSessionNameType:
      maxLength: 64
      minLength: 2
      pattern: "[\\w+=,.@-]*"
      type: string
    policyDescriptorListType:
      items:
        $ref: '#/components/schemas/PolicyDescriptorType'
      type: array
    sessionPolicyDocumentType:
      maxLength: 2048
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
      type: string
    roleDurationSecondsType:
      maximum: 43200
      minimum: 900
      type: integer
    tagListType:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      type: array
    tagKeyListType:
      items:
        $ref: '#/components/schemas/tagKeyType'
      maxItems: 50
      type: array
    externalIdType:
      maxLength: 1224
      minLength: 2
      pattern: "[\\w+=,.@:\\/-]*"
      type: string
    serialNumberType:
      maxLength: 256
      minLength: 9
      pattern: "[\\w+=/:,.@-]*"
      type: string
    tokenCodeType:
      maxLength: 6
      minLength: 6
      pattern: "[\\d]*"
      type: string
    sourceIdentityType:
      maxLength: 64
      minLength: 2
      pattern: "[\\w+=,.@-]*"
      type: string
    AssumeRoleRequest:
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the role to assume.
        RoleSessionName:
          allOf:
          - $ref: '#/components/schemas/roleSessionNameType'
          - description: "<p>An identifier for the assumed role session.</p> <p>Use\
              \ the role session name to uniquely identify a session when the same\
              \ role is assumed by different principals or for different reasons.\
              \ In cross-account scenarios, the role session name is visible to, and\
              \ can be logged by the account that owns the role. The role session\
              \ name is also used in the ARN of the assumed role principal. This means\
              \ that subsequent cross-account API requests that use the temporary\
              \ security credentials will expose the role session name to the external\
              \ account in their CloudTrail logs.</p> <p>The regex used to validate\
              \ this parameter is a string of characters consisting of upper- and\
              \ lower-case alphanumeric characters with no spaces. You can also include\
              \ underscores or any of the following characters: =,.@-</p>"
        PolicyArns:
          allOf:
          - $ref: '#/components/schemas/policyDescriptorListType'
          - description: "<p>The Amazon Resource Names (ARNs) of the IAM managed policies\
              \ that you want to use as managed session policies. The policies must\
              \ exist in the same account as the role.</p> <p>This parameter is optional.\
              \ You can provide up to 10 managed policy ARNs. However, the plaintext\
              \ that you use for both inline and managed session policies can't exceed\
              \ 2,048 characters. For more information about ARNs, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
              \ in the Amazon Web Services General Reference.</p> <note> <p>An Amazon\
              \ Web Services conversion compresses the passed inline session policy,\
              \ managed policy ARNs, and session tags into a packed binary format\
              \ that has a separate limit. Your request can fail for this limit even\
              \ if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
              \ response element indicates by percentage how close the policies and\
              \ tags for your request are to the upper size limit.</p> </note> <p>Passing\
              \ policies to this operation returns new temporary credentials. The\
              \ resulting session's permissions are the intersection of the role's\
              \ identity-based policy and the session policies. You can use the role's\
              \ temporary credentials in subsequent Amazon Web Services API calls\
              \ to access resources in the account that owns the role. You cannot\
              \ use session policies to grant more permissions than those allowed\
              \ by the identity-based policy of the role that is being assumed. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >Session Policies</a> in the <i>IAM User Guide</i>.</p>"
        Policy:
          allOf:
          - $ref: '#/components/schemas/sessionPolicyDocumentType'
          - description: "<p>An IAM policy in JSON format that you want to use as\
              \ an inline session policy.</p> <p>This parameter is optional. Passing\
              \ policies to this operation returns new temporary credentials. The\
              \ resulting session's permissions are the intersection of the role's\
              \ identity-based policy and the session policies. You can use the role's\
              \ temporary credentials in subsequent Amazon Web Services API calls\
              \ to access resources in the account that owns the role. You cannot\
              \ use session policies to grant more permissions than those allowed\
              \ by the identity-based policy of the role that is being assumed. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plaintext\
              \ that you use for both inline and managed session policies can't exceed\
              \ 2,048 characters. The JSON policy characters can be any ASCII character\
              \ from the space character to the end of the valid character list (\\\
              u0020 through \\u00FF). It can also include the tab (\\u0009), linefeed\
              \ (\\u000A), and carriage return (\\u000D) characters.</p> <note> <p>An\
              \ Amazon Web Services conversion compresses the passed inline session\
              \ policy, managed policy ARNs, and session tags into a packed binary\
              \ format that has a separate limit. Your request can fail for this limit\
              \ even if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
              \ response element indicates by percentage how close the policies and\
              \ tags for your request are to the upper size limit.</p> </note>"
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/roleDurationSecondsType'
          - description: "<p>The duration, in seconds, of the role session. The value\
              \ specified can range from 900 seconds (15 minutes) up to the maximum\
              \ session duration set for the role. The maximum session duration setting\
              \ can have a value from 1 hour to 12 hours. If you specify a value higher\
              \ than this setting or the administrator setting (whichever is lower),\
              \ the operation fails. For example, if you specify a session duration\
              \ of 12 hours, but your administrator set the maximum session duration\
              \ to 6 hours, your operation fails. </p> <p>Role chaining limits your\
              \ Amazon Web Services CLI or Amazon Web Services API role session to\
              \ a maximum of one hour. When you use the <code>AssumeRole</code> API\
              \ operation to assume a role, you can specify the duration of your role\
              \ session with the <code>DurationSeconds</code> parameter. You can specify\
              \ a parameter value of up to 43200 seconds (12 hours), depending on\
              \ the maximum session duration setting for your role. However, if you\
              \ assume a role using role chaining and provide a <code>DurationSeconds</code>\
              \ parameter value greater than one hour, the operation fails. To learn\
              \ how to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
              >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM\
              \ User Guide</i>.</p> <p>By default, the value is set to <code>3600</code>\
              \ seconds. </p> <note> <p>The <code>DurationSeconds</code> parameter\
              \ is separate from the duration of a console session that you might\
              \ request using the returned credentials. The request to the federation\
              \ endpoint for a console sign-in token takes a <code>SessionDuration</code>\
              \ parameter that specifies the maximum length of the console session.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\"\
              >Creating a URL that Enables Federated Users to Access the Amazon Web\
              \ Services Management Console</a> in the <i>IAM User Guide</i>.</p>\
              \ </note>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: "<p>A list of session tags that you want to pass. Each session\
              \ tag consists of a key name and an associated value. For more information\
              \ about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
              >Tagging Amazon Web Services STS Sessions</a> in the <i>IAM User Guide</i>.</p>\
              \ <p>This parameter is optional. You can pass up to 50 session tags.\
              \ The plaintext session tag keys canâ€™t exceed 128 characters, and the\
              \ values canâ€™t exceed 256 characters. For these and additional limits,\
              \ see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
              >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p>\
              \ <note> <p>An Amazon Web Services conversion compresses the passed\
              \ inline session policy, managed policy ARNs, and session tags into\
              \ a packed binary format that has a separate limit. Your request can\
              \ fail for this limit even if your plaintext meets the other requirements.\
              \ The <code>PackedPolicySize</code> response element indicates by percentage\
              \ how close the policies and tags for your request are to the upper\
              \ size limit.</p> </note> <p>You can pass a session tag with the same\
              \ key as a tag that is already attached to the role. When you do, session\
              \ tags override a role tag with the same key. </p> <p>Tag keyâ€“value\
              \ pairs are not case sensitive, but case is preserved. This means that\
              \ you cannot have separate <code>Department</code> and <code>department</code>\
              \ tag keys. Assume that the role has the <code>Department</code>=<code>Marketing</code>\
              \ tag and you pass the <code>department</code>=<code>engineering</code>\
              \ session tag. <code>Department</code> and <code>department</code> are\
              \ not saved as separate tags, and the session tag passed in the request\
              \ takes precedence over the role tag.</p> <p>Additionally, if you used\
              \ temporary credentials to perform this operation, the new session inherits\
              \ any transitive session tags from the calling session. If you pass\
              \ a session tag with the same key as an inherited tag, the operation\
              \ fails. To view the inherited tags for a session, see the CloudTrail\
              \ logs. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_ctlogs\"\
              >Viewing Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>.</p>"
        TransitiveTagKeys:
          allOf:
          - $ref: '#/components/schemas/tagKeyListType'
          - description: "<p>A list of keys for session tags that you want to set\
              \ as transitive. If you set a tag key as transitive, the corresponding\
              \ key and value passes to subsequent sessions in a role chain. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\"\
              >Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>.</p>\
              \ <p>This parameter is optional. When you set session tags as transitive,\
              \ the session policy and session tags packed binary limit is not affected.</p>\
              \ <p>If you choose not to specify a transitive tag key, then no tags\
              \ are passed from this session to any subsequent sessions.</p>"
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/externalIdType'
          - description: "<p>A unique identifier that might be required when you assume\
              \ a role in another account. If the administrator of the account to\
              \ which the role belongs provided you with an external ID, then provide\
              \ that value in the <code>ExternalId</code> parameter. This value can\
              \ be any string, such as a passphrase or account number. A cross-account\
              \ role is usually set up to trust everyone in an account. Therefore,\
              \ the administrator of the trusting account might send an external ID\
              \ to the administrator of the trusted account. That way, only someone\
              \ with the ID can assume the role, rather than everyone in the account.\
              \ For more information about the external ID, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html\"\
              >How to Use an External ID When Granting Access to Your Amazon Web Services\
              \ Resources to a Third Party</a> in the <i>IAM User Guide</i>.</p> <p>The\
              \ regex used to validate this parameter is a string of characters consisting\
              \ of upper- and lower-case alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@:/-</p>"
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: "<p>The identification number of the MFA device that is associated\
              \ with the user who is making the <code>AssumeRole</code> call. Specify\
              \ this value if the trust policy of the role being assumed includes\
              \ a condition that requires MFA authentication. The value is either\
              \ the serial number for a hardware device (such as <code>GAHT12345678</code>)\
              \ or an Amazon Resource Name (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>).</p>\
              \ <p>The regex used to validate this parameter is a string of characters\
              \ consisting of upper- and lower-case alphanumeric characters with no\
              \ spaces. You can also include underscores or any of the following characters:\
              \ =,.@-</p>"
        TokenCode:
          allOf:
          - $ref: '#/components/schemas/tokenCodeType'
          - description: "<p>The value provided by the MFA device, if the trust policy\
              \ of the role being assumed requires MFA. (In other words, if the policy\
              \ includes a condition that tests for MFA). If the role being assumed\
              \ requires MFA and if the <code>TokenCode</code> value is missing or\
              \ expired, the <code>AssumeRole</code> call returns an \"access denied\"\
              \ error.</p> <p>The format for this parameter, as described by its regex\
              \ pattern, is a sequence of six numeric digits.</p>"
        SourceIdentity:
          allOf:
          - $ref: '#/components/schemas/sourceIdentityType'
          - description: "<p>The source identity specified by the principal that is\
              \ calling the <code>AssumeRole</code> operation.</p> <p>You can require\
              \ users to specify a source identity when they assume a role. You do\
              \ this by using the <code>sts:SourceIdentity</code> condition key in\
              \ a role trust policy. You can use source identity information in CloudTrail\
              \ logs to determine who took actions with a role. You can use the <code>aws:SourceIdentity</code>\
              \ condition key to further control access to Amazon Web Services resources\
              \ based on the value of source identity. For more information about\
              \ using source identity, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\"\
              >Monitor and control actions taken with assumed roles</a> in the <i>IAM\
              \ User Guide</i>.</p> <p>The regex used to validate this parameter is\
              \ a string of characters consisting of upper- and lower-case alphanumeric\
              \ characters with no spaces. You can also include underscores or any\
              \ of the following characters: =,.@-. You cannot use a value that begins\
              \ with the text <code>aws:</code>. This prefix is reserved for Amazon\
              \ Web Services internal use.</p>"
      required:
      - RoleArn
      - RoleSessionName
      title: AssumeRoleRequest
      type: object
    Credentials:
      description: Amazon Web Services credentials for API authentication.
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/accessKeyIdType'
          - description: The access key ID that identifies the temporary security
              credentials.
        SecretAccessKey:
          allOf:
          - $ref: '#/components/schemas/accessKeySecretType'
          - description: The secret access key that can be used to sign requests.
        SessionToken:
          allOf:
          - $ref: '#/components/schemas/tokenType'
          - description: The token that users must pass to the service API to use
              the temporary credentials.
        Expiration:
          allOf:
          - $ref: '#/components/schemas/dateType'
          - description: The date on which the current credentials expire.
      required:
      - AccessKeyId
      - Expiration
      - SecretAccessKey
      - SessionToken
      type: object
    AssumedRoleUser:
      description: The identifiers for the temporary security credentials that the
        operation returns.
      properties:
        AssumedRoleId:
          allOf:
          - $ref: '#/components/schemas/assumedRoleIdType'
          - description: A unique identifier that contains the role ID and the role
              session name of the role that is being assumed. The role ID is generated
              by Amazon Web Services when the role is created.
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: "The ARN of the temporary security credentials that are returned\
              \ from the <a>AssumeRole</a> action. For more information about ARNs\
              \ and how to use them in policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html\"\
              >IAM Identifiers</a> in the <i>IAM User Guide</i>."
      required:
      - Arn
      - AssumedRoleId
      type: object
    nonNegativeIntegerType:
      minimum: 0
      type: integer
    SAMLAssertionType:
      maxLength: 100000
      minLength: 4
      type: string
    AssumeRoleWithSAMLRequest:
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the role that the caller
              is assuming.
        PrincipalArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the SAML provider in IAM
              that describes the IdP.
        SAMLAssertion:
          allOf:
          - $ref: '#/components/schemas/SAMLAssertionType'
          - description: "<p>The base64 encoded SAML authentication response provided\
              \ by the IdP.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html\"\
              >Configuring a Relying Party and Adding Claims</a> in the <i>IAM User\
              \ Guide</i>. </p>"
        PolicyArns:
          allOf:
          - $ref: '#/components/schemas/policyDescriptorListType'
          - description: "<p>The Amazon Resource Names (ARNs) of the IAM managed policies\
              \ that you want to use as managed session policies. The policies must\
              \ exist in the same account as the role.</p> <p>This parameter is optional.\
              \ You can provide up to 10 managed policy ARNs. However, the plaintext\
              \ that you use for both inline and managed session policies can't exceed\
              \ 2,048 characters. For more information about ARNs, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
              \ in the Amazon Web Services General Reference.</p> <note> <p>An Amazon\
              \ Web Services conversion compresses the passed inline session policy,\
              \ managed policy ARNs, and session tags into a packed binary format\
              \ that has a separate limit. Your request can fail for this limit even\
              \ if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
              \ response element indicates by percentage how close the policies and\
              \ tags for your request are to the upper size limit.</p> </note> <p>Passing\
              \ policies to this operation returns new temporary credentials. The\
              \ resulting session's permissions are the intersection of the role's\
              \ identity-based policy and the session policies. You can use the role's\
              \ temporary credentials in subsequent Amazon Web Services API calls\
              \ to access resources in the account that owns the role. You cannot\
              \ use session policies to grant more permissions than those allowed\
              \ by the identity-based policy of the role that is being assumed. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >Session Policies</a> in the <i>IAM User Guide</i>.</p>"
        Policy:
          allOf:
          - $ref: '#/components/schemas/sessionPolicyDocumentType'
          - description: "<p>An IAM policy in JSON format that you want to use as\
              \ an inline session policy.</p> <p>This parameter is optional. Passing\
              \ policies to this operation returns new temporary credentials. The\
              \ resulting session's permissions are the intersection of the role's\
              \ identity-based policy and the session policies. You can use the role's\
              \ temporary credentials in subsequent Amazon Web Services API calls\
              \ to access resources in the account that owns the role. You cannot\
              \ use session policies to grant more permissions than those allowed\
              \ by the identity-based policy of the role that is being assumed. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >Session Policies</a> in the <i>IAM User Guide</i>. </p> <p>The plaintext\
              \ that you use for both inline and managed session policies can't exceed\
              \ 2,048 characters. The JSON policy characters can be any ASCII character\
              \ from the space character to the end of the valid character list (\\\
              u0020 through \\u00FF). It can also include the tab (\\u0009), linefeed\
              \ (\\u000A), and carriage return (\\u000D) characters.</p> <note> <p>An\
              \ Amazon Web Services conversion compresses the passed inline session\
              \ policy, managed policy ARNs, and session tags into a packed binary\
              \ format that has a separate limit. Your request can fail for this limit\
              \ even if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
              \ response element indicates by percentage how close the policies and\
              \ tags for your request are to the upper size limit.</p> </note>"
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/roleDurationSecondsType'
          - description: "<p>The duration, in seconds, of the role session. Your role\
              \ session lasts for the duration that you specify for the <code>DurationSeconds</code>\
              \ parameter, or until the time specified in the SAML authentication\
              \ response's <code>SessionNotOnOrAfter</code> value, whichever is shorter.\
              \ You can provide a <code>DurationSeconds</code> value from 900 seconds\
              \ (15 minutes) up to the maximum session duration setting for the role.\
              \ This setting can have a value from 1 hour to 12 hours. If you specify\
              \ a value higher than this setting, the operation fails. For example,\
              \ if you specify a session duration of 12 hours, but your administrator\
              \ set the maximum session duration to 6 hours, your operation fails.\
              \ To learn how to view the maximum value for your role, see <a href=\"\
              https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
              >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM\
              \ User Guide</i>.</p> <p>By default, the value is set to <code>3600</code>\
              \ seconds. </p> <note> <p>The <code>DurationSeconds</code> parameter\
              \ is separate from the duration of a console session that you might\
              \ request using the returned credentials. The request to the federation\
              \ endpoint for a console sign-in token takes a <code>SessionDuration</code>\
              \ parameter that specifies the maximum length of the console session.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\"\
              >Creating a URL that Enables Federated Users to Access the Amazon Web\
              \ Services Management Console</a> in the <i>IAM User Guide</i>.</p>\
              \ </note>"
      required:
      - PrincipalArn
      - RoleArn
      - SAMLAssertion
      title: AssumeRoleWithSAMLRequest
      type: object
    Subject:
      type: string
    SubjectType:
      type: string
    Issuer:
      type: string
    Audience:
      type: string
    NameQualifier:
      type: string
    clientTokenType:
      maxLength: 20000
      minLength: 4
      type: string
    urlType:
      maxLength: 2048
      minLength: 4
      type: string
    AssumeRoleWithWebIdentityRequest:
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: The Amazon Resource Name (ARN) of the role that the caller
              is assuming.
        RoleSessionName:
          allOf:
          - $ref: '#/components/schemas/roleSessionNameType'
          - description: "<p>An identifier for the assumed role session. Typically,\
              \ you pass the name or identifier that is associated with the user who\
              \ is using your application. That way, the temporary security credentials\
              \ that your application will use are associated with that user. This\
              \ session name is included as part of the ARN and assumed role ID in\
              \ the <code>AssumedRoleUser</code> response element.</p> <p>The regex\
              \ used to validate this parameter is a string of characters consisting\
              \ of upper- and lower-case alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@-</p>"
        WebIdentityToken:
          allOf:
          - $ref: '#/components/schemas/clientTokenType'
          - description: 'The OAuth 2.0 access token or OpenID Connect ID token that
              is provided by the identity provider. Your application must get this
              token by authenticating the user who is using your application with
              a web identity provider before the application makes an <code>AssumeRoleWithWebIdentity</code>
              call. '
        ProviderId:
          allOf:
          - $ref: '#/components/schemas/urlType'
          - description: <p>The fully qualified host component of the domain name
              of the OAuth 2.0 identity provider. Do not specify this value for an
              OpenID Connect identity provider.</p> <p>Currently <code>www.amazon.com</code>
              and <code>graph.facebook.com</code> are the only supported identity
              providers for OAuth 2.0 access tokens. Do not include URL schemes and
              port numbers.</p> <p>Do not specify this value for OpenID Connect ID
              tokens.</p>
        PolicyArns:
          allOf:
          - $ref: '#/components/schemas/policyDescriptorListType'
          - description: "<p>The Amazon Resource Names (ARNs) of the IAM managed policies\
              \ that you want to use as managed session policies. The policies must\
              \ exist in the same account as the role.</p> <p>This parameter is optional.\
              \ You can provide up to 10 managed policy ARNs. However, the plaintext\
              \ that you use for both inline and managed session policies can't exceed\
              \ 2,048 characters. For more information about ARNs, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
              \ in the Amazon Web Services General Reference.</p> <note> <p>An Amazon\
              \ Web Services conversion compresses the passed inline session policy,\
              \ managed policy ARNs, and session tags into a packed binary format\
              \ that has a separate limit. Your request can fail for this limit even\
              \ if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
              \ response element indicates by percentage how close the policies and\
              \ tags for your request are to the upper size limit.</p> </note> <p>Passing\
              \ policies to this operation returns new temporary credentials. The\
              \ resulting session's permissions are the intersection of the role's\
              \ identity-based policy and the session policies. You can use the role's\
              \ temporary credentials in subsequent Amazon Web Services API calls\
              \ to access resources in the account that owns the role. You cannot\
              \ use session policies to grant more permissions than those allowed\
              \ by the identity-based policy of the role that is being assumed. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >Session Policies</a> in the <i>IAM User Guide</i>.</p>"
        Policy:
          allOf:
          - $ref: '#/components/schemas/sessionPolicyDocumentType'
          - description: "<p>An IAM policy in JSON format that you want to use as\
              \ an inline session policy.</p> <p>This parameter is optional. Passing\
              \ policies to this operation returns new temporary credentials. The\
              \ resulting session's permissions are the intersection of the role's\
              \ identity-based policy and the session policies. You can use the role's\
              \ temporary credentials in subsequent Amazon Web Services API calls\
              \ to access resources in the account that owns the role. You cannot\
              \ use session policies to grant more permissions than those allowed\
              \ by the identity-based policy of the role that is being assumed. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plaintext\
              \ that you use for both inline and managed session policies can't exceed\
              \ 2,048 characters. The JSON policy characters can be any ASCII character\
              \ from the space character to the end of the valid character list (\\\
              u0020 through \\u00FF). It can also include the tab (\\u0009), linefeed\
              \ (\\u000A), and carriage return (\\u000D) characters.</p> <note> <p>An\
              \ Amazon Web Services conversion compresses the passed inline session\
              \ policy, managed policy ARNs, and session tags into a packed binary\
              \ format that has a separate limit. Your request can fail for this limit\
              \ even if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\
              \ response element indicates by percentage how close the policies and\
              \ tags for your request are to the upper size limit.</p> </note>"
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/roleDurationSecondsType'
          - description: "<p>The duration, in seconds, of the role session. The value\
              \ can range from 900 seconds (15 minutes) up to the maximum session\
              \ duration setting for the role. This setting can have a value from\
              \ 1 hour to 12 hours. If you specify a value higher than this setting,\
              \ the operation fails. For example, if you specify a session duration\
              \ of 12 hours, but your administrator set the maximum session duration\
              \ to 6 hours, your operation fails. To learn how to view the maximum\
              \ value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\"\
              >View the Maximum Session Duration Setting for a Role</a> in the <i>IAM\
              \ User Guide</i>.</p> <p>By default, the value is set to <code>3600</code>\
              \ seconds. </p> <note> <p>The <code>DurationSeconds</code> parameter\
              \ is separate from the duration of a console session that you might\
              \ request using the returned credentials. The request to the federation\
              \ endpoint for a console sign-in token takes a <code>SessionDuration</code>\
              \ parameter that specifies the maximum length of the console session.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\"\
              >Creating a URL that Enables Federated Users to Access the Amazon Web\
              \ Services Management Console</a> in the <i>IAM User Guide</i>.</p>\
              \ </note>"
      required:
      - RoleArn
      - RoleSessionName
      - WebIdentityToken
      title: AssumeRoleWithWebIdentityRequest
      type: object
    webIdentitySubjectType:
      maxLength: 255
      minLength: 6
      type: string
    assumedRoleIdType:
      maxLength: 193
      minLength: 2
      pattern: "[\\w+=,.@:-]*"
      type: string
    accessKeyIdType:
      maxLength: 128
      minLength: 16
      pattern: "[\\w]*"
      type: string
    accessKeySecretType:
      type: string
    tokenType:
      type: string
    dateType:
      format: date-time
      type: string
    encodedMessageType:
      maxLength: 10240
      minLength: 1
      type: string
    DecodeAuthorizationMessageRequest:
      properties:
        EncodedMessage:
          allOf:
          - $ref: '#/components/schemas/encodedMessageType'
          - description: The encoded message that was returned with the response.
      required:
      - EncodedMessage
      title: DecodeAuthorizationMessageRequest
      type: object
    decodedMessageType:
      type: string
    federatedIdType:
      maxLength: 193
      minLength: 2
      pattern: "[\\w+=,.@\\:-]*"
      type: string
    FederatedUser:
      description: Identifiers for the federated user that is associated with the
        credentials.
      properties:
        FederatedUserId:
          allOf:
          - $ref: '#/components/schemas/federatedIdType'
          - description: "The string that identifies the federated user associated\
              \ with the credentials, similar to the unique ID of an IAM user."
        Arn:
          allOf:
          - $ref: '#/components/schemas/arnType'
          - description: "The ARN that specifies the federated user that is associated\
              \ with the credentials. For more information about ARNs and how to use\
              \ them in policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html\"\
              >IAM Identifiers</a> in the <i>IAM User Guide</i>. "
      required:
      - Arn
      - FederatedUserId
      type: object
    GetAccessKeyInfoRequest:
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/accessKeyIdType'
          - description: <p>The identifier of an access key.</p> <p>This parameter
              allows (through its regex pattern) a string of characters that can consist
              of any upper- or lowercase letter or digit.</p>
      required:
      - AccessKeyId
      title: GetAccessKeyInfoRequest
      type: object
    accountType:
      type: string
    GetCallerIdentityRequest:
      properties: {}
      title: GetCallerIdentityRequest
      type: object
    userIdType:
      type: string
    userNameType:
      maxLength: 32
      minLength: 2
      pattern: "[\\w+=,.@-]*"
      type: string
    durationSecondsType:
      maximum: 129600
      minimum: 900
      type: integer
    GetFederationTokenRequest:
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/userNameType'
          - description: "<p>The name of the federated user. The name is used as an\
              \ identifier for the temporary security credentials (such as <code>Bob</code>).\
              \ For example, you can reference the federated user name in a resource-based\
              \ policy, such as in an Amazon S3 bucket policy.</p> <p>The regex used\
              \ to validate this parameter is a string of characters consisting of\
              \ upper- and lower-case alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@-</p>"
        Policy:
          allOf:
          - $ref: '#/components/schemas/sessionPolicyDocumentType'
          - description: "<p>An IAM policy in JSON format that you want to use as\
              \ an inline session policy.</p> <p>You must pass an inline or managed\
              \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >session policy</a> to this operation. You can pass a single JSON policy\
              \ document to use as an inline session policy. You can also specify\
              \ up to 10 managed policy Amazon Resource Names (ARNs) to use as managed\
              \ session policies.</p> <p>This parameter is optional. However, if you\
              \ do not pass any session policies, then the resulting federated user\
              \ session has no permissions.</p> <p>When you pass session policies,\
              \ the session permissions are the intersection of the IAM user policies\
              \ and the session policies that you pass. This gives you a way to further\
              \ restrict the permissions for a federated user. You cannot use session\
              \ policies to grant more permissions than those that are defined in\
              \ the permissions policy of the IAM user. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>The resulting\
              \ credentials can be used to access a resource that has a resource-based\
              \ policy. If that policy specifically references the federated user\
              \ session in the <code>Principal</code> element of the policy, the session\
              \ has the permissions allowed by the policy. These permissions are granted\
              \ in addition to the permissions that are granted by the session policies.</p>\
              \ <p>The plaintext that you use for both inline and managed session\
              \ policies can't exceed 2,048 characters. The JSON policy characters\
              \ can be any ASCII character from the space character to the end of\
              \ the valid character list (\\u0020 through \\u00FF). It can also include\
              \ the tab (\\u0009), linefeed (\\u000A), and carriage return (\\u000D)\
              \ characters.</p> <note> <p>An Amazon Web Services conversion compresses\
              \ the passed inline session policy, managed policy ARNs, and session\
              \ tags into a packed binary format that has a separate limit. Your request\
              \ can fail for this limit even if your plaintext meets the other requirements.\
              \ The <code>PackedPolicySize</code> response element indicates by percentage\
              \ how close the policies and tags for your request are to the upper\
              \ size limit.</p> </note>"
        PolicyArns:
          allOf:
          - $ref: '#/components/schemas/policyDescriptorListType'
          - description: "<p>The Amazon Resource Names (ARNs) of the IAM managed policies\
              \ that you want to use as a managed session policy. The policies must\
              \ exist in the same account as the IAM user that is requesting federated\
              \ access.</p> <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >session policy</a> to this operation. You can pass a single JSON policy\
              \ document to use as an inline session policy. You can also specify\
              \ up to 10 managed policy Amazon Resource Names (ARNs) to use as managed\
              \ session policies. The plaintext that you use for both inline and managed\
              \ session policies can't exceed 2,048 characters. You can provide up\
              \ to 10 managed policy ARNs. For more information about ARNs, see <a\
              \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
              \ in the Amazon Web Services General Reference.</p> <p>This parameter\
              \ is optional. However, if you do not pass any session policies, then\
              \ the resulting federated user session has no permissions.</p> <p>When\
              \ you pass session policies, the session permissions are the intersection\
              \ of the IAM user policies and the session policies that you pass. This\
              \ gives you a way to further restrict the permissions for a federated\
              \ user. You cannot use session policies to grant more permissions than\
              \ those that are defined in the permissions policy of the IAM user.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\"\
              >Session Policies</a> in the <i>IAM User Guide</i>.</p> <p>The resulting\
              \ credentials can be used to access a resource that has a resource-based\
              \ policy. If that policy specifically references the federated user\
              \ session in the <code>Principal</code> element of the policy, the session\
              \ has the permissions allowed by the policy. These permissions are granted\
              \ in addition to the permissions that are granted by the session policies.</p>\
              \ <note> <p>An Amazon Web Services conversion compresses the passed\
              \ inline session policy, managed policy ARNs, and session tags into\
              \ a packed binary format that has a separate limit. Your request can\
              \ fail for this limit even if your plaintext meets the other requirements.\
              \ The <code>PackedPolicySize</code> response element indicates by percentage\
              \ how close the policies and tags for your request are to the upper\
              \ size limit.</p> </note>"
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/durationSecondsType'
          - description: "The duration, in seconds, that the session should last.\
              \ Acceptable durations for federation sessions range from 900 seconds\
              \ (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12\
              \ hours) as the default. Sessions obtained using Amazon Web Services\
              \ account root user credentials are restricted to a maximum of 3,600\
              \ seconds (one hour). If the specified duration is longer than one hour,\
              \ the session obtained by using root user credentials defaults to one\
              \ hour."
        Tags:
          allOf:
          - $ref: '#/components/schemas/tagListType'
          - description: "<p>A list of session tags. Each session tag consists of\
              \ a key name and an associated value. For more information about session\
              \ tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\"\
              >Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.</p> <p>This\
              \ parameter is optional. You can pass up to 50 session tags. The plaintext\
              \ session tag keys canâ€™t exceed 128 characters and the values canâ€™t\
              \ exceed 256 characters. For these and additional limits, see <a href=\"\
              https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\"\
              >IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.</p>\
              \ <note> <p>An Amazon Web Services conversion compresses the passed\
              \ inline session policy, managed policy ARNs, and session tags into\
              \ a packed binary format that has a separate limit. Your request can\
              \ fail for this limit even if your plaintext meets the other requirements.\
              \ The <code>PackedPolicySize</code> response element indicates by percentage\
              \ how close the policies and tags for your request are to the upper\
              \ size limit.</p> </note> <p>You can pass a session tag with the same\
              \ key as a tag that is already attached to the user you are federating.\
              \ When you do, session tags override a user tag with the same key. </p>\
              \ <p>Tag keyâ€“value pairs are not case sensitive, but case is preserved.\
              \ This means that you cannot have separate <code>Department</code> and\
              \ <code>department</code> tag keys. Assume that the role has the <code>Department</code>=<code>Marketing</code>\
              \ tag and you pass the <code>department</code>=<code>engineering</code>\
              \ session tag. <code>Department</code> and <code>department</code> are\
              \ not saved as separate tags, and the session tag passed in the request\
              \ takes precedence over the role tag.</p>"
      required:
      - Name
      title: GetFederationTokenRequest
      type: object
    GetSessionTokenRequest:
      properties:
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/durationSecondsType'
          - description: "The duration, in seconds, that the credentials should remain\
              \ valid. Acceptable durations for IAM user sessions range from 900 seconds\
              \ (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12\
              \ hours) as the default. Sessions for Amazon Web Services account owners\
              \ are restricted to a maximum of 3,600 seconds (one hour). If the duration\
              \ is longer than one hour, the session for Amazon Web Services account\
              \ owners defaults to one hour."
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/serialNumberType'
          - description: "<p>The identification number of the MFA device that is associated\
              \ with the IAM user who is making the <code>GetSessionToken</code> call.\
              \ Specify this value if the IAM user has a policy that requires MFA\
              \ authentication. The value is either the serial number for a hardware\
              \ device (such as <code>GAHT12345678</code>) or an Amazon Resource Name\
              \ (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>).\
              \ You can find the device for an IAM user by going to the Amazon Web\
              \ Services Management Console and viewing the user's security credentials.\
              \ </p> <p>The regex used to validate this parameter is a string of characters\
              \ consisting of upper- and lower-case alphanumeric characters with no\
              \ spaces. You can also include underscores or any of the following characters:\
              \ =,.@:/-</p>"
        TokenCode:
          allOf:
          - $ref: '#/components/schemas/tokenCodeType'
          - description: "<p>The value provided by the MFA device, if MFA is required.\
              \ If any policy requires the IAM user to submit an MFA code, specify\
              \ this value. If MFA authentication is required, the user must provide\
              \ a code when requesting a set of temporary security credentials. A\
              \ user who fails to provide the code receives an \"access denied\" response\
              \ when requesting resources that require MFA authentication.</p> <p>The\
              \ format for this parameter, as described by its regex pattern, is a\
              \ sequence of six numeric digits.</p>"
      title: GetSessionTokenRequest
      type: object
    tagValueType:
      maxLength: 256
      minLength: 0
      pattern: "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*"
      type: string
    AssumeRoleResponse_Credentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - description: "<p>The temporary security credentials, which include an access\
          \ key ID, a secret access key, and a security (or session) token.</p> <note>\
          \ <p>The size of the security token that STS API operations return is not\
          \ fixed. We strongly recommend that you make no assumptions about the maximum\
          \ size.</p> </note>"
    AssumeRoleResponse_AssumedRoleUser:
      allOf:
      - $ref: '#/components/schemas/AssumedRoleUser'
      - description: "The Amazon Resource Name (ARN) and the assumed role ID, which\
          \ are identifiers that you can use to refer to the resulting temporary security\
          \ credentials. For example, you can reference these credentials as a principal\
          \ in a resource-based policy by using the ARN or assumed role ID. The ARN\
          \ and ID include the <code>RoleSessionName</code> that you specified when\
          \ you called <code>AssumeRole</code>. "
    AssumeRoleWithSAMLResponse_AssumedRoleUser:
      allOf:
      - $ref: '#/components/schemas/AssumedRoleUser'
      - description: The identifiers for the temporary security credentials that the
          operation returns.
    AssumeRoleWithWebIdentityResponse_Credentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - description: "<p>The temporary security credentials, which include an access\
          \ key ID, a secret access key, and a security token.</p> <note> <p>The size\
          \ of the security token that STS API operations return is not fixed. We\
          \ strongly recommend that you make no assumptions about the maximum size.</p>\
          \ </note>"
    GetFederationTokenResponse_FederatedUser:
      allOf:
      - $ref: '#/components/schemas/FederatedUser'
      - description: "Identifiers for the federated user associated with the credentials\
          \ (such as <code>arn:aws:sts::123456789012:federated-user/Bob</code> or\
          \ <code>123456789012:Bob</code>). You can use the federated user's ARN in\
          \ your resource-based policies, such as an Amazon S3 bucket policy. "
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

