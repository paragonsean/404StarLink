# coding: utf-8

"""
    Soccer v3 Stats

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.box_score import BoxScore

class TestBoxScore(unittest.TestCase):
    """BoxScore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BoxScore:
        """Test BoxScore
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BoxScore`
        """
        model = BoxScore()
        if include_optional:
            return BoxScore(
                additional_assistant_referee1 = openapi_client.models.referee.Referee(
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    referee_id = 56, 
                    short_name = '', ),
                additional_assistant_referee2 = openapi_client.models.referee.Referee(
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    referee_id = 56, 
                    short_name = '', ),
                assistant_referee1 = openapi_client.models.referee.Referee(
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    referee_id = 56, 
                    short_name = '', ),
                assistant_referee2 = openapi_client.models.referee.Referee(
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    referee_id = 56, 
                    short_name = '', ),
                away_team_coach = openapi_client.models.coach.Coach(
                    coach_id = 56, 
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    short_name = '', ),
                bookings = [
                    openapi_client.models.booking.Booking(
                        booking_id = 56, 
                        game_id = 56, 
                        game_minute = 56, 
                        game_minute_extra = 56, 
                        name = '', 
                        player_id = 56, 
                        team_id = 56, 
                        type = '', )
                    ],
                fourth_referee = openapi_client.models.referee.Referee(
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    referee_id = 56, 
                    short_name = '', ),
                game = openapi_client.models.game.Game(
                    attendance = 56, 
                    away_team_country_code = '', 
                    away_team_formation = '', 
                    away_team_id = 56, 
                    away_team_key = '', 
                    away_team_money_line = 56, 
                    away_team_name = '', 
                    away_team_point_spread_payout = 56, 
                    away_team_score = 56, 
                    away_team_score_extra_time = 56, 
                    away_team_score_penalty = 56, 
                    away_team_score_period1 = 56, 
                    away_team_score_period2 = 56, 
                    clock = 56, 
                    clock_display = '', 
                    clock_extra = 56, 
                    date_time = '', 
                    day = '', 
                    draw_money_line = 56, 
                    game_id = 56, 
                    global_away_team_id = 56, 
                    global_game_id = 56, 
                    global_home_team_id = 56, 
                    group = '', 
                    home_team_country_code = '', 
                    home_team_formation = '', 
                    home_team_id = 56, 
                    home_team_key = '', 
                    home_team_money_line = 56, 
                    home_team_name = '', 
                    home_team_point_spread_payout = 56, 
                    home_team_score = 56, 
                    home_team_score_extra_time = 56, 
                    home_team_score_penalty = 56, 
                    home_team_score_period1 = 56, 
                    home_team_score_period2 = 56, 
                    is_closed = True, 
                    over_payout = 56, 
                    over_under = 1.337, 
                    period = '', 
                    playoff_aggregate_score = openapi_client.models.playoff_aggregate_score.PlayoffAggregateScore(
                        created = '', 
                        team_a_aggregate_score = 56, 
                        team_a_id = 56, 
                        team_b_aggregate_score = 56, 
                        team_b_id = 56, 
                        updated = '', 
                        winning_team_id = 56, ), 
                    point_spread = 1.337, 
                    round_id = 56, 
                    season = 56, 
                    season_type = 56, 
                    status = '', 
                    under_payout = 56, 
                    updated = '', 
                    updated_utc = '', 
                    venue_id = 56, 
                    venue_type = '', 
                    week = 56, 
                    winner = '', ),
                goals = [
                    openapi_client.models.goal.Goal(
                        assisted_by_player_id1 = 56, 
                        assisted_by_player_id2 = 56, 
                        assisted_by_player_name1 = '', 
                        assisted_by_player_name2 = '', 
                        game_id = 56, 
                        game_minute = 56, 
                        game_minute_extra = 56, 
                        goal_id = 56, 
                        name = '', 
                        player_id = 56, 
                        team_id = 56, 
                        type = '', )
                    ],
                home_team_coach = openapi_client.models.coach.Coach(
                    coach_id = 56, 
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    short_name = '', ),
                lineups = [
                    openapi_client.models.lineup.Lineup(
                        game_id = 56, 
                        game_minute = 56, 
                        game_minute_extra = 56, 
                        lineup_id = 56, 
                        name = '', 
                        pitch_position_horizontal = 56, 
                        pitch_position_vertical = 56, 
                        player_id = 56, 
                        position = '', 
                        replaced_player_id = 56, 
                        replaced_player_name = '', 
                        team_id = 56, 
                        type = '', )
                    ],
                main_referee = openapi_client.models.referee.Referee(
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    referee_id = 56, 
                    short_name = '', ),
                penalty_shootouts = [
                    openapi_client.models.penalty_shootout.PenaltyShootout(
                        game_id = 56, 
                        name = '', 
                        order = 56, 
                        penalty_shootout_id = 56, 
                        player_id = 56, 
                        position = '', 
                        team_id = 56, 
                        type = '', )
                    ],
                player_games = [
                    openapi_client.models.player_game.PlayerGame(
                        assists = 1.337, 
                        blocked_shots = 1.337, 
                        captain = True, 
                        corners_won = 1.337, 
                        crosses = 1.337, 
                        date_time = '', 
                        day = '', 
                        defender_clean_sheets = 1.337, 
                        draft_kings_position = '', 
                        draft_kings_salary = 56, 
                        fan_duel_position = '', 
                        fan_duel_salary = 56, 
                        fantasy_points = 1.337, 
                        fantasy_points_draft_kings = 1.337, 
                        fantasy_points_fan_duel = 1.337, 
                        fantasy_points_mondogoal = 1.337, 
                        fantasy_points_yahoo = 1.337, 
                        fouled = 1.337, 
                        fouls = 1.337, 
                        game_id = 56, 
                        games = 56, 
                        global_game_id = 56, 
                        global_opponent_id = 56, 
                        global_team_id = 56, 
                        goalkeeper_clean_sheets = 1.337, 
                        goalkeeper_goals_against = 1.337, 
                        goalkeeper_saves = 1.337, 
                        goalkeeper_single_goal_against = 1.337, 
                        goalkeeper_wins = 1.337, 
                        goals = 1.337, 
                        home_or_away = '', 
                        injury_body_part = '', 
                        injury_notes = '', 
                        injury_start_date = '', 
                        injury_status = '', 
                        interceptions = 1.337, 
                        is_game_over = True, 
                        jersey = 56, 
                        last_man_tackle = 1.337, 
                        minutes = 1.337, 
                        mondogoal_position = '', 
                        mondogoal_salary = 56, 
                        name = '', 
                        offsides = 1.337, 
                        opponent = '', 
                        opponent_id = 56, 
                        opponent_score = 1.337, 
                        own_goals = 1.337, 
                        passes = 1.337, 
                        passes_completed = 1.337, 
                        penalties_conceded = 1.337, 
                        penalties_won = 1.337, 
                        penalty_kick_goals = 1.337, 
                        penalty_kick_misses = 1.337, 
                        penalty_kick_saves = 1.337, 
                        player_id = 56, 
                        position = '', 
                        position_category = '', 
                        red_cards = 1.337, 
                        round_id = 56, 
                        score = 1.337, 
                        season = 56, 
                        season_type = 56, 
                        short_name = '', 
                        shots = 1.337, 
                        shots_on_goal = 1.337, 
                        started = 56, 
                        stat_id = 56, 
                        suspension = True, 
                        suspension_reason = '', 
                        tackles = 1.337, 
                        tackles_won = 1.337, 
                        team = '', 
                        team_id = 56, 
                        touches = 1.337, 
                        updated = '', 
                        updated_utc = '', 
                        yahoo_position = '', 
                        yahoo_salary = 56, 
                        yellow_cards = 1.337, 
                        yellow_red_cards = 1.337, )
                    ],
                team_games = [
                    openapi_client.models.team_game.TeamGame(
                        assists = 1.337, 
                        blocked_shots = 1.337, 
                        corners_won = 1.337, 
                        crosses = 1.337, 
                        date_time = '', 
                        day = '', 
                        defender_clean_sheets = 1.337, 
                        fantasy_points = 1.337, 
                        fantasy_points_draft_kings = 1.337, 
                        fantasy_points_fan_duel = 1.337, 
                        fantasy_points_mondogoal = 1.337, 
                        fantasy_points_yahoo = 1.337, 
                        fouled = 1.337, 
                        fouls = 1.337, 
                        game_id = 56, 
                        games = 56, 
                        global_game_id = 56, 
                        global_opponent_id = 56, 
                        global_team_id = 56, 
                        goalkeeper_clean_sheets = 1.337, 
                        goalkeeper_goals_against = 1.337, 
                        goalkeeper_saves = 1.337, 
                        goalkeeper_single_goal_against = 1.337, 
                        goalkeeper_wins = 1.337, 
                        goals = 1.337, 
                        home_or_away = '', 
                        interceptions = 1.337, 
                        is_game_over = True, 
                        last_man_tackle = 1.337, 
                        minutes = 1.337, 
                        name = '', 
                        offsides = 1.337, 
                        opponent = '', 
                        opponent_id = 56, 
                        opponent_score = 1.337, 
                        own_goals = 1.337, 
                        passes = 1.337, 
                        passes_completed = 1.337, 
                        penalties_conceded = 1.337, 
                        penalties_won = 1.337, 
                        penalty_kick_goals = 1.337, 
                        penalty_kick_misses = 1.337, 
                        penalty_kick_saves = 1.337, 
                        possession = 1.337, 
                        red_cards = 1.337, 
                        round_id = 56, 
                        score = 1.337, 
                        season = 56, 
                        season_type = 56, 
                        shots = 1.337, 
                        shots_on_goal = 1.337, 
                        stat_id = 56, 
                        tackles = 1.337, 
                        tackles_won = 1.337, 
                        team = '', 
                        team_id = 56, 
                        touches = 1.337, 
                        updated = '', 
                        updated_utc = '', 
                        yellow_cards = 1.337, 
                        yellow_red_cards = 1.337, )
                    ],
                video_assistant_referee = openapi_client.models.referee.Referee(
                    first_name = '', 
                    last_name = '', 
                    nationality = '', 
                    referee_id = 56, 
                    short_name = '', )
            )
        else:
            return BoxScore(
        )
        """

    def testBoxScore(self):
        """Test BoxScore"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
