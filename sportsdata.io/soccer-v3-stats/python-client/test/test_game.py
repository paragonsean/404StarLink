# coding: utf-8

"""
    Soccer v3 Stats

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game import Game

class TestGame(unittest.TestCase):
    """Game unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Game:
        """Test Game
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Game`
        """
        model = Game()
        if include_optional:
            return Game(
                attendance = 56,
                away_team_country_code = '',
                away_team_formation = '',
                away_team_id = 56,
                away_team_key = '',
                away_team_money_line = 56,
                away_team_name = '',
                away_team_point_spread_payout = 56,
                away_team_score = 56,
                away_team_score_extra_time = 56,
                away_team_score_penalty = 56,
                away_team_score_period1 = 56,
                away_team_score_period2 = 56,
                clock = 56,
                clock_display = '',
                clock_extra = 56,
                date_time = '',
                day = '',
                draw_money_line = 56,
                game_id = 56,
                global_away_team_id = 56,
                global_game_id = 56,
                global_home_team_id = 56,
                group = '',
                home_team_country_code = '',
                home_team_formation = '',
                home_team_id = 56,
                home_team_key = '',
                home_team_money_line = 56,
                home_team_name = '',
                home_team_point_spread_payout = 56,
                home_team_score = 56,
                home_team_score_extra_time = 56,
                home_team_score_penalty = 56,
                home_team_score_period1 = 56,
                home_team_score_period2 = 56,
                is_closed = True,
                over_payout = 56,
                over_under = 1.337,
                period = '',
                playoff_aggregate_score = openapi_client.models.playoff_aggregate_score.PlayoffAggregateScore(
                    created = '', 
                    team_a_aggregate_score = 56, 
                    team_a_id = 56, 
                    team_b_aggregate_score = 56, 
                    team_b_id = 56, 
                    updated = '', 
                    winning_team_id = 56, ),
                point_spread = 1.337,
                round_id = 56,
                season = 56,
                season_type = 56,
                status = '',
                under_payout = 56,
                updated = '',
                updated_utc = '',
                venue_id = 56,
                venue_type = '',
                week = 56,
                winner = ''
            )
        else:
            return Game(
        )
        """

    def testGame(self):
        """Test Game"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
