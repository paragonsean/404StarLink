/*
 * AWS Database Migration Service
 * <fullname>Database Migration Service</fullname> <p>Database Migration Service (DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is Database Migration Service?</a> in the <i>Database Migration Service User Guide.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateEndpointMessageGcpMySQLSettings;
import org.openapitools.client.model.DmsSslModeValue;
import org.openapitools.client.model.DocDbSettings;
import org.openapitools.client.model.EndpointDmsTransferSettings;
import org.openapitools.client.model.EndpointDynamoDbSettings;
import org.openapitools.client.model.EndpointElasticsearchSettings;
import org.openapitools.client.model.EndpointIBMDb2Settings;
import org.openapitools.client.model.EndpointKafkaSettings;
import org.openapitools.client.model.EndpointKinesisSettings;
import org.openapitools.client.model.EndpointMicrosoftSQLServerSettings;
import org.openapitools.client.model.EndpointMongoDbSettings;
import org.openapitools.client.model.EndpointMySQLSettings;
import org.openapitools.client.model.EndpointNeptuneSettings;
import org.openapitools.client.model.EndpointOracleSettings;
import org.openapitools.client.model.EndpointPostgreSQLSettings;
import org.openapitools.client.model.EndpointRedisSettings;
import org.openapitools.client.model.EndpointRedshiftSettings;
import org.openapitools.client.model.EndpointS3Settings;
import org.openapitools.client.model.EndpointSybaseSettings;
import org.openapitools.client.model.ReplicationEndpointTypeValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DeleteEndpointResponseEndpoint
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:13:28.765689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteEndpointResponseEndpoint {
  public static final String SERIALIZED_NAME_ENDPOINT_IDENTIFIER = "EndpointIdentifier";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_IDENTIFIER)
  private String endpointIdentifier;

  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "EndpointType";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private ReplicationEndpointTypeValue endpointType;

  public static final String SERIALIZED_NAME_ENGINE_NAME = "EngineName";
  @SerializedName(SERIALIZED_NAME_ENGINE_NAME)
  private String engineName;

  public static final String SERIALIZED_NAME_ENGINE_DISPLAY_NAME = "EngineDisplayName";
  @SerializedName(SERIALIZED_NAME_ENGINE_DISPLAY_NAME)
  private String engineDisplayName;

  public static final String SERIALIZED_NAME_USERNAME = "Username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_SERVER_NAME = "ServerName";
  @SerializedName(SERIALIZED_NAME_SERVER_NAME)
  private String serverName;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_DATABASE_NAME = "DatabaseName";
  @SerializedName(SERIALIZED_NAME_DATABASE_NAME)
  private String databaseName;

  public static final String SERIALIZED_NAME_EXTRA_CONNECTION_ATTRIBUTES = "ExtraConnectionAttributes";
  @SerializedName(SERIALIZED_NAME_EXTRA_CONNECTION_ATTRIBUTES)
  private String extraConnectionAttributes;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_ENDPOINT_ARN = "EndpointArn";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_ARN)
  private String endpointArn;

  public static final String SERIALIZED_NAME_CERTIFICATE_ARN = "CertificateArn";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ARN)
  private String certificateArn;

  public static final String SERIALIZED_NAME_SSL_MODE = "SslMode";
  @SerializedName(SERIALIZED_NAME_SSL_MODE)
  private DmsSslModeValue sslMode;

  public static final String SERIALIZED_NAME_SERVICE_ACCESS_ROLE_ARN = "ServiceAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCESS_ROLE_ARN)
  private String serviceAccessRoleArn;

  public static final String SERIALIZED_NAME_EXTERNAL_TABLE_DEFINITION = "ExternalTableDefinition";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_TABLE_DEFINITION)
  private String externalTableDefinition;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "ExternalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_DYNAMO_DB_SETTINGS = "DynamoDbSettings";
  @SerializedName(SERIALIZED_NAME_DYNAMO_DB_SETTINGS)
  private EndpointDynamoDbSettings dynamoDbSettings;

  public static final String SERIALIZED_NAME_S3_SETTINGS = "S3Settings";
  @SerializedName(SERIALIZED_NAME_S3_SETTINGS)
  private EndpointS3Settings s3Settings;

  public static final String SERIALIZED_NAME_DMS_TRANSFER_SETTINGS = "DmsTransferSettings";
  @SerializedName(SERIALIZED_NAME_DMS_TRANSFER_SETTINGS)
  private EndpointDmsTransferSettings dmsTransferSettings;

  public static final String SERIALIZED_NAME_MONGO_DB_SETTINGS = "MongoDbSettings";
  @SerializedName(SERIALIZED_NAME_MONGO_DB_SETTINGS)
  private EndpointMongoDbSettings mongoDbSettings;

  public static final String SERIALIZED_NAME_KINESIS_SETTINGS = "KinesisSettings";
  @SerializedName(SERIALIZED_NAME_KINESIS_SETTINGS)
  private EndpointKinesisSettings kinesisSettings;

  public static final String SERIALIZED_NAME_KAFKA_SETTINGS = "KafkaSettings";
  @SerializedName(SERIALIZED_NAME_KAFKA_SETTINGS)
  private EndpointKafkaSettings kafkaSettings;

  public static final String SERIALIZED_NAME_ELASTICSEARCH_SETTINGS = "ElasticsearchSettings";
  @SerializedName(SERIALIZED_NAME_ELASTICSEARCH_SETTINGS)
  private EndpointElasticsearchSettings elasticsearchSettings;

  public static final String SERIALIZED_NAME_NEPTUNE_SETTINGS = "NeptuneSettings";
  @SerializedName(SERIALIZED_NAME_NEPTUNE_SETTINGS)
  private EndpointNeptuneSettings neptuneSettings;

  public static final String SERIALIZED_NAME_REDSHIFT_SETTINGS = "RedshiftSettings";
  @SerializedName(SERIALIZED_NAME_REDSHIFT_SETTINGS)
  private EndpointRedshiftSettings redshiftSettings;

  public static final String SERIALIZED_NAME_POSTGRE_S_Q_L_SETTINGS = "PostgreSQLSettings";
  @SerializedName(SERIALIZED_NAME_POSTGRE_S_Q_L_SETTINGS)
  private EndpointPostgreSQLSettings postgreSQLSettings;

  public static final String SERIALIZED_NAME_MY_S_Q_L_SETTINGS = "MySQLSettings";
  @SerializedName(SERIALIZED_NAME_MY_S_Q_L_SETTINGS)
  private EndpointMySQLSettings mySQLSettings;

  public static final String SERIALIZED_NAME_ORACLE_SETTINGS = "OracleSettings";
  @SerializedName(SERIALIZED_NAME_ORACLE_SETTINGS)
  private EndpointOracleSettings oracleSettings;

  public static final String SERIALIZED_NAME_SYBASE_SETTINGS = "SybaseSettings";
  @SerializedName(SERIALIZED_NAME_SYBASE_SETTINGS)
  private EndpointSybaseSettings sybaseSettings;

  public static final String SERIALIZED_NAME_MICROSOFT_S_Q_L_SERVER_SETTINGS = "MicrosoftSQLServerSettings";
  @SerializedName(SERIALIZED_NAME_MICROSOFT_S_Q_L_SERVER_SETTINGS)
  private EndpointMicrosoftSQLServerSettings microsoftSQLServerSettings;

  public static final String SERIALIZED_NAME_IB_M_DB2_SETTINGS = "IBMDb2Settings";
  @SerializedName(SERIALIZED_NAME_IB_M_DB2_SETTINGS)
  private EndpointIBMDb2Settings ibMDb2Settings;

  public static final String SERIALIZED_NAME_DOC_DB_SETTINGS = "DocDbSettings";
  @SerializedName(SERIALIZED_NAME_DOC_DB_SETTINGS)
  private DocDbSettings docDbSettings;

  public static final String SERIALIZED_NAME_REDIS_SETTINGS = "RedisSettings";
  @SerializedName(SERIALIZED_NAME_REDIS_SETTINGS)
  private EndpointRedisSettings redisSettings;

  public static final String SERIALIZED_NAME_GCP_MY_S_Q_L_SETTINGS = "GcpMySQLSettings";
  @SerializedName(SERIALIZED_NAME_GCP_MY_S_Q_L_SETTINGS)
  private CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings;

  public DeleteEndpointResponseEndpoint() {
  }

  public DeleteEndpointResponseEndpoint endpointIdentifier(String endpointIdentifier) {
    this.endpointIdentifier = endpointIdentifier;
    return this;
  }

  /**
   * Get endpointIdentifier
   * @return endpointIdentifier
   */
  @javax.annotation.Nullable
  public String getEndpointIdentifier() {
    return endpointIdentifier;
  }

  public void setEndpointIdentifier(String endpointIdentifier) {
    this.endpointIdentifier = endpointIdentifier;
  }


  public DeleteEndpointResponseEndpoint endpointType(ReplicationEndpointTypeValue endpointType) {
    this.endpointType = endpointType;
    return this;
  }

  /**
   * Get endpointType
   * @return endpointType
   */
  @javax.annotation.Nullable
  public ReplicationEndpointTypeValue getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(ReplicationEndpointTypeValue endpointType) {
    this.endpointType = endpointType;
  }


  public DeleteEndpointResponseEndpoint engineName(String engineName) {
    this.engineName = engineName;
    return this;
  }

  /**
   * Get engineName
   * @return engineName
   */
  @javax.annotation.Nullable
  public String getEngineName() {
    return engineName;
  }

  public void setEngineName(String engineName) {
    this.engineName = engineName;
  }


  public DeleteEndpointResponseEndpoint engineDisplayName(String engineDisplayName) {
    this.engineDisplayName = engineDisplayName;
    return this;
  }

  /**
   * Get engineDisplayName
   * @return engineDisplayName
   */
  @javax.annotation.Nullable
  public String getEngineDisplayName() {
    return engineDisplayName;
  }

  public void setEngineDisplayName(String engineDisplayName) {
    this.engineDisplayName = engineDisplayName;
  }


  public DeleteEndpointResponseEndpoint username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  public DeleteEndpointResponseEndpoint serverName(String serverName) {
    this.serverName = serverName;
    return this;
  }

  /**
   * Get serverName
   * @return serverName
   */
  @javax.annotation.Nullable
  public String getServerName() {
    return serverName;
  }

  public void setServerName(String serverName) {
    this.serverName = serverName;
  }


  public DeleteEndpointResponseEndpoint port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public DeleteEndpointResponseEndpoint databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

  /**
   * Get databaseName
   * @return databaseName
   */
  @javax.annotation.Nullable
  public String getDatabaseName() {
    return databaseName;
  }

  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }


  public DeleteEndpointResponseEndpoint extraConnectionAttributes(String extraConnectionAttributes) {
    this.extraConnectionAttributes = extraConnectionAttributes;
    return this;
  }

  /**
   * Get extraConnectionAttributes
   * @return extraConnectionAttributes
   */
  @javax.annotation.Nullable
  public String getExtraConnectionAttributes() {
    return extraConnectionAttributes;
  }

  public void setExtraConnectionAttributes(String extraConnectionAttributes) {
    this.extraConnectionAttributes = extraConnectionAttributes;
  }


  public DeleteEndpointResponseEndpoint status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public DeleteEndpointResponseEndpoint kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public DeleteEndpointResponseEndpoint endpointArn(String endpointArn) {
    this.endpointArn = endpointArn;
    return this;
  }

  /**
   * Get endpointArn
   * @return endpointArn
   */
  @javax.annotation.Nullable
  public String getEndpointArn() {
    return endpointArn;
  }

  public void setEndpointArn(String endpointArn) {
    this.endpointArn = endpointArn;
  }


  public DeleteEndpointResponseEndpoint certificateArn(String certificateArn) {
    this.certificateArn = certificateArn;
    return this;
  }

  /**
   * Get certificateArn
   * @return certificateArn
   */
  @javax.annotation.Nullable
  public String getCertificateArn() {
    return certificateArn;
  }

  public void setCertificateArn(String certificateArn) {
    this.certificateArn = certificateArn;
  }


  public DeleteEndpointResponseEndpoint sslMode(DmsSslModeValue sslMode) {
    this.sslMode = sslMode;
    return this;
  }

  /**
   * Get sslMode
   * @return sslMode
   */
  @javax.annotation.Nullable
  public DmsSslModeValue getSslMode() {
    return sslMode;
  }

  public void setSslMode(DmsSslModeValue sslMode) {
    this.sslMode = sslMode;
  }


  public DeleteEndpointResponseEndpoint serviceAccessRoleArn(String serviceAccessRoleArn) {
    this.serviceAccessRoleArn = serviceAccessRoleArn;
    return this;
  }

  /**
   * Get serviceAccessRoleArn
   * @return serviceAccessRoleArn
   */
  @javax.annotation.Nullable
  public String getServiceAccessRoleArn() {
    return serviceAccessRoleArn;
  }

  public void setServiceAccessRoleArn(String serviceAccessRoleArn) {
    this.serviceAccessRoleArn = serviceAccessRoleArn;
  }


  public DeleteEndpointResponseEndpoint externalTableDefinition(String externalTableDefinition) {
    this.externalTableDefinition = externalTableDefinition;
    return this;
  }

  /**
   * Get externalTableDefinition
   * @return externalTableDefinition
   */
  @javax.annotation.Nullable
  public String getExternalTableDefinition() {
    return externalTableDefinition;
  }

  public void setExternalTableDefinition(String externalTableDefinition) {
    this.externalTableDefinition = externalTableDefinition;
  }


  public DeleteEndpointResponseEndpoint externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public DeleteEndpointResponseEndpoint dynamoDbSettings(EndpointDynamoDbSettings dynamoDbSettings) {
    this.dynamoDbSettings = dynamoDbSettings;
    return this;
  }

  /**
   * Get dynamoDbSettings
   * @return dynamoDbSettings
   */
  @javax.annotation.Nullable
  public EndpointDynamoDbSettings getDynamoDbSettings() {
    return dynamoDbSettings;
  }

  public void setDynamoDbSettings(EndpointDynamoDbSettings dynamoDbSettings) {
    this.dynamoDbSettings = dynamoDbSettings;
  }


  public DeleteEndpointResponseEndpoint s3Settings(EndpointS3Settings s3Settings) {
    this.s3Settings = s3Settings;
    return this;
  }

  /**
   * Get s3Settings
   * @return s3Settings
   */
  @javax.annotation.Nullable
  public EndpointS3Settings getS3Settings() {
    return s3Settings;
  }

  public void setS3Settings(EndpointS3Settings s3Settings) {
    this.s3Settings = s3Settings;
  }


  public DeleteEndpointResponseEndpoint dmsTransferSettings(EndpointDmsTransferSettings dmsTransferSettings) {
    this.dmsTransferSettings = dmsTransferSettings;
    return this;
  }

  /**
   * Get dmsTransferSettings
   * @return dmsTransferSettings
   */
  @javax.annotation.Nullable
  public EndpointDmsTransferSettings getDmsTransferSettings() {
    return dmsTransferSettings;
  }

  public void setDmsTransferSettings(EndpointDmsTransferSettings dmsTransferSettings) {
    this.dmsTransferSettings = dmsTransferSettings;
  }


  public DeleteEndpointResponseEndpoint mongoDbSettings(EndpointMongoDbSettings mongoDbSettings) {
    this.mongoDbSettings = mongoDbSettings;
    return this;
  }

  /**
   * Get mongoDbSettings
   * @return mongoDbSettings
   */
  @javax.annotation.Nullable
  public EndpointMongoDbSettings getMongoDbSettings() {
    return mongoDbSettings;
  }

  public void setMongoDbSettings(EndpointMongoDbSettings mongoDbSettings) {
    this.mongoDbSettings = mongoDbSettings;
  }


  public DeleteEndpointResponseEndpoint kinesisSettings(EndpointKinesisSettings kinesisSettings) {
    this.kinesisSettings = kinesisSettings;
    return this;
  }

  /**
   * Get kinesisSettings
   * @return kinesisSettings
   */
  @javax.annotation.Nullable
  public EndpointKinesisSettings getKinesisSettings() {
    return kinesisSettings;
  }

  public void setKinesisSettings(EndpointKinesisSettings kinesisSettings) {
    this.kinesisSettings = kinesisSettings;
  }


  public DeleteEndpointResponseEndpoint kafkaSettings(EndpointKafkaSettings kafkaSettings) {
    this.kafkaSettings = kafkaSettings;
    return this;
  }

  /**
   * Get kafkaSettings
   * @return kafkaSettings
   */
  @javax.annotation.Nullable
  public EndpointKafkaSettings getKafkaSettings() {
    return kafkaSettings;
  }

  public void setKafkaSettings(EndpointKafkaSettings kafkaSettings) {
    this.kafkaSettings = kafkaSettings;
  }


  public DeleteEndpointResponseEndpoint elasticsearchSettings(EndpointElasticsearchSettings elasticsearchSettings) {
    this.elasticsearchSettings = elasticsearchSettings;
    return this;
  }

  /**
   * Get elasticsearchSettings
   * @return elasticsearchSettings
   */
  @javax.annotation.Nullable
  public EndpointElasticsearchSettings getElasticsearchSettings() {
    return elasticsearchSettings;
  }

  public void setElasticsearchSettings(EndpointElasticsearchSettings elasticsearchSettings) {
    this.elasticsearchSettings = elasticsearchSettings;
  }


  public DeleteEndpointResponseEndpoint neptuneSettings(EndpointNeptuneSettings neptuneSettings) {
    this.neptuneSettings = neptuneSettings;
    return this;
  }

  /**
   * Get neptuneSettings
   * @return neptuneSettings
   */
  @javax.annotation.Nullable
  public EndpointNeptuneSettings getNeptuneSettings() {
    return neptuneSettings;
  }

  public void setNeptuneSettings(EndpointNeptuneSettings neptuneSettings) {
    this.neptuneSettings = neptuneSettings;
  }


  public DeleteEndpointResponseEndpoint redshiftSettings(EndpointRedshiftSettings redshiftSettings) {
    this.redshiftSettings = redshiftSettings;
    return this;
  }

  /**
   * Get redshiftSettings
   * @return redshiftSettings
   */
  @javax.annotation.Nullable
  public EndpointRedshiftSettings getRedshiftSettings() {
    return redshiftSettings;
  }

  public void setRedshiftSettings(EndpointRedshiftSettings redshiftSettings) {
    this.redshiftSettings = redshiftSettings;
  }


  public DeleteEndpointResponseEndpoint postgreSQLSettings(EndpointPostgreSQLSettings postgreSQLSettings) {
    this.postgreSQLSettings = postgreSQLSettings;
    return this;
  }

  /**
   * Get postgreSQLSettings
   * @return postgreSQLSettings
   */
  @javax.annotation.Nullable
  public EndpointPostgreSQLSettings getPostgreSQLSettings() {
    return postgreSQLSettings;
  }

  public void setPostgreSQLSettings(EndpointPostgreSQLSettings postgreSQLSettings) {
    this.postgreSQLSettings = postgreSQLSettings;
  }


  public DeleteEndpointResponseEndpoint mySQLSettings(EndpointMySQLSettings mySQLSettings) {
    this.mySQLSettings = mySQLSettings;
    return this;
  }

  /**
   * Get mySQLSettings
   * @return mySQLSettings
   */
  @javax.annotation.Nullable
  public EndpointMySQLSettings getMySQLSettings() {
    return mySQLSettings;
  }

  public void setMySQLSettings(EndpointMySQLSettings mySQLSettings) {
    this.mySQLSettings = mySQLSettings;
  }


  public DeleteEndpointResponseEndpoint oracleSettings(EndpointOracleSettings oracleSettings) {
    this.oracleSettings = oracleSettings;
    return this;
  }

  /**
   * Get oracleSettings
   * @return oracleSettings
   */
  @javax.annotation.Nullable
  public EndpointOracleSettings getOracleSettings() {
    return oracleSettings;
  }

  public void setOracleSettings(EndpointOracleSettings oracleSettings) {
    this.oracleSettings = oracleSettings;
  }


  public DeleteEndpointResponseEndpoint sybaseSettings(EndpointSybaseSettings sybaseSettings) {
    this.sybaseSettings = sybaseSettings;
    return this;
  }

  /**
   * Get sybaseSettings
   * @return sybaseSettings
   */
  @javax.annotation.Nullable
  public EndpointSybaseSettings getSybaseSettings() {
    return sybaseSettings;
  }

  public void setSybaseSettings(EndpointSybaseSettings sybaseSettings) {
    this.sybaseSettings = sybaseSettings;
  }


  public DeleteEndpointResponseEndpoint microsoftSQLServerSettings(EndpointMicrosoftSQLServerSettings microsoftSQLServerSettings) {
    this.microsoftSQLServerSettings = microsoftSQLServerSettings;
    return this;
  }

  /**
   * Get microsoftSQLServerSettings
   * @return microsoftSQLServerSettings
   */
  @javax.annotation.Nullable
  public EndpointMicrosoftSQLServerSettings getMicrosoftSQLServerSettings() {
    return microsoftSQLServerSettings;
  }

  public void setMicrosoftSQLServerSettings(EndpointMicrosoftSQLServerSettings microsoftSQLServerSettings) {
    this.microsoftSQLServerSettings = microsoftSQLServerSettings;
  }


  public DeleteEndpointResponseEndpoint ibMDb2Settings(EndpointIBMDb2Settings ibMDb2Settings) {
    this.ibMDb2Settings = ibMDb2Settings;
    return this;
  }

  /**
   * Get ibMDb2Settings
   * @return ibMDb2Settings
   */
  @javax.annotation.Nullable
  public EndpointIBMDb2Settings getIbMDb2Settings() {
    return ibMDb2Settings;
  }

  public void setIbMDb2Settings(EndpointIBMDb2Settings ibMDb2Settings) {
    this.ibMDb2Settings = ibMDb2Settings;
  }


  public DeleteEndpointResponseEndpoint docDbSettings(DocDbSettings docDbSettings) {
    this.docDbSettings = docDbSettings;
    return this;
  }

  /**
   * Get docDbSettings
   * @return docDbSettings
   */
  @javax.annotation.Nullable
  public DocDbSettings getDocDbSettings() {
    return docDbSettings;
  }

  public void setDocDbSettings(DocDbSettings docDbSettings) {
    this.docDbSettings = docDbSettings;
  }


  public DeleteEndpointResponseEndpoint redisSettings(EndpointRedisSettings redisSettings) {
    this.redisSettings = redisSettings;
    return this;
  }

  /**
   * Get redisSettings
   * @return redisSettings
   */
  @javax.annotation.Nullable
  public EndpointRedisSettings getRedisSettings() {
    return redisSettings;
  }

  public void setRedisSettings(EndpointRedisSettings redisSettings) {
    this.redisSettings = redisSettings;
  }


  public DeleteEndpointResponseEndpoint gcpMySQLSettings(CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings) {
    this.gcpMySQLSettings = gcpMySQLSettings;
    return this;
  }

  /**
   * Get gcpMySQLSettings
   * @return gcpMySQLSettings
   */
  @javax.annotation.Nullable
  public CreateEndpointMessageGcpMySQLSettings getGcpMySQLSettings() {
    return gcpMySQLSettings;
  }

  public void setGcpMySQLSettings(CreateEndpointMessageGcpMySQLSettings gcpMySQLSettings) {
    this.gcpMySQLSettings = gcpMySQLSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteEndpointResponseEndpoint deleteEndpointResponseEndpoint = (DeleteEndpointResponseEndpoint) o;
    return Objects.equals(this.endpointIdentifier, deleteEndpointResponseEndpoint.endpointIdentifier) &&
        Objects.equals(this.endpointType, deleteEndpointResponseEndpoint.endpointType) &&
        Objects.equals(this.engineName, deleteEndpointResponseEndpoint.engineName) &&
        Objects.equals(this.engineDisplayName, deleteEndpointResponseEndpoint.engineDisplayName) &&
        Objects.equals(this.username, deleteEndpointResponseEndpoint.username) &&
        Objects.equals(this.serverName, deleteEndpointResponseEndpoint.serverName) &&
        Objects.equals(this.port, deleteEndpointResponseEndpoint.port) &&
        Objects.equals(this.databaseName, deleteEndpointResponseEndpoint.databaseName) &&
        Objects.equals(this.extraConnectionAttributes, deleteEndpointResponseEndpoint.extraConnectionAttributes) &&
        Objects.equals(this.status, deleteEndpointResponseEndpoint.status) &&
        Objects.equals(this.kmsKeyId, deleteEndpointResponseEndpoint.kmsKeyId) &&
        Objects.equals(this.endpointArn, deleteEndpointResponseEndpoint.endpointArn) &&
        Objects.equals(this.certificateArn, deleteEndpointResponseEndpoint.certificateArn) &&
        Objects.equals(this.sslMode, deleteEndpointResponseEndpoint.sslMode) &&
        Objects.equals(this.serviceAccessRoleArn, deleteEndpointResponseEndpoint.serviceAccessRoleArn) &&
        Objects.equals(this.externalTableDefinition, deleteEndpointResponseEndpoint.externalTableDefinition) &&
        Objects.equals(this.externalId, deleteEndpointResponseEndpoint.externalId) &&
        Objects.equals(this.dynamoDbSettings, deleteEndpointResponseEndpoint.dynamoDbSettings) &&
        Objects.equals(this.s3Settings, deleteEndpointResponseEndpoint.s3Settings) &&
        Objects.equals(this.dmsTransferSettings, deleteEndpointResponseEndpoint.dmsTransferSettings) &&
        Objects.equals(this.mongoDbSettings, deleteEndpointResponseEndpoint.mongoDbSettings) &&
        Objects.equals(this.kinesisSettings, deleteEndpointResponseEndpoint.kinesisSettings) &&
        Objects.equals(this.kafkaSettings, deleteEndpointResponseEndpoint.kafkaSettings) &&
        Objects.equals(this.elasticsearchSettings, deleteEndpointResponseEndpoint.elasticsearchSettings) &&
        Objects.equals(this.neptuneSettings, deleteEndpointResponseEndpoint.neptuneSettings) &&
        Objects.equals(this.redshiftSettings, deleteEndpointResponseEndpoint.redshiftSettings) &&
        Objects.equals(this.postgreSQLSettings, deleteEndpointResponseEndpoint.postgreSQLSettings) &&
        Objects.equals(this.mySQLSettings, deleteEndpointResponseEndpoint.mySQLSettings) &&
        Objects.equals(this.oracleSettings, deleteEndpointResponseEndpoint.oracleSettings) &&
        Objects.equals(this.sybaseSettings, deleteEndpointResponseEndpoint.sybaseSettings) &&
        Objects.equals(this.microsoftSQLServerSettings, deleteEndpointResponseEndpoint.microsoftSQLServerSettings) &&
        Objects.equals(this.ibMDb2Settings, deleteEndpointResponseEndpoint.ibMDb2Settings) &&
        Objects.equals(this.docDbSettings, deleteEndpointResponseEndpoint.docDbSettings) &&
        Objects.equals(this.redisSettings, deleteEndpointResponseEndpoint.redisSettings) &&
        Objects.equals(this.gcpMySQLSettings, deleteEndpointResponseEndpoint.gcpMySQLSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointIdentifier, endpointType, engineName, engineDisplayName, username, serverName, port, databaseName, extraConnectionAttributes, status, kmsKeyId, endpointArn, certificateArn, sslMode, serviceAccessRoleArn, externalTableDefinition, externalId, dynamoDbSettings, s3Settings, dmsTransferSettings, mongoDbSettings, kinesisSettings, kafkaSettings, elasticsearchSettings, neptuneSettings, redshiftSettings, postgreSQLSettings, mySQLSettings, oracleSettings, sybaseSettings, microsoftSQLServerSettings, ibMDb2Settings, docDbSettings, redisSettings, gcpMySQLSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteEndpointResponseEndpoint {\n");
    sb.append("    endpointIdentifier: ").append(toIndentedString(endpointIdentifier)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    engineName: ").append(toIndentedString(engineName)).append("\n");
    sb.append("    engineDisplayName: ").append(toIndentedString(engineDisplayName)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    extraConnectionAttributes: ").append(toIndentedString(extraConnectionAttributes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    endpointArn: ").append(toIndentedString(endpointArn)).append("\n");
    sb.append("    certificateArn: ").append(toIndentedString(certificateArn)).append("\n");
    sb.append("    sslMode: ").append(toIndentedString(sslMode)).append("\n");
    sb.append("    serviceAccessRoleArn: ").append(toIndentedString(serviceAccessRoleArn)).append("\n");
    sb.append("    externalTableDefinition: ").append(toIndentedString(externalTableDefinition)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    dynamoDbSettings: ").append(toIndentedString(dynamoDbSettings)).append("\n");
    sb.append("    s3Settings: ").append(toIndentedString(s3Settings)).append("\n");
    sb.append("    dmsTransferSettings: ").append(toIndentedString(dmsTransferSettings)).append("\n");
    sb.append("    mongoDbSettings: ").append(toIndentedString(mongoDbSettings)).append("\n");
    sb.append("    kinesisSettings: ").append(toIndentedString(kinesisSettings)).append("\n");
    sb.append("    kafkaSettings: ").append(toIndentedString(kafkaSettings)).append("\n");
    sb.append("    elasticsearchSettings: ").append(toIndentedString(elasticsearchSettings)).append("\n");
    sb.append("    neptuneSettings: ").append(toIndentedString(neptuneSettings)).append("\n");
    sb.append("    redshiftSettings: ").append(toIndentedString(redshiftSettings)).append("\n");
    sb.append("    postgreSQLSettings: ").append(toIndentedString(postgreSQLSettings)).append("\n");
    sb.append("    mySQLSettings: ").append(toIndentedString(mySQLSettings)).append("\n");
    sb.append("    oracleSettings: ").append(toIndentedString(oracleSettings)).append("\n");
    sb.append("    sybaseSettings: ").append(toIndentedString(sybaseSettings)).append("\n");
    sb.append("    microsoftSQLServerSettings: ").append(toIndentedString(microsoftSQLServerSettings)).append("\n");
    sb.append("    ibMDb2Settings: ").append(toIndentedString(ibMDb2Settings)).append("\n");
    sb.append("    docDbSettings: ").append(toIndentedString(docDbSettings)).append("\n");
    sb.append("    redisSettings: ").append(toIndentedString(redisSettings)).append("\n");
    sb.append("    gcpMySQLSettings: ").append(toIndentedString(gcpMySQLSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EndpointIdentifier");
    openapiFields.add("EndpointType");
    openapiFields.add("EngineName");
    openapiFields.add("EngineDisplayName");
    openapiFields.add("Username");
    openapiFields.add("ServerName");
    openapiFields.add("Port");
    openapiFields.add("DatabaseName");
    openapiFields.add("ExtraConnectionAttributes");
    openapiFields.add("Status");
    openapiFields.add("KmsKeyId");
    openapiFields.add("EndpointArn");
    openapiFields.add("CertificateArn");
    openapiFields.add("SslMode");
    openapiFields.add("ServiceAccessRoleArn");
    openapiFields.add("ExternalTableDefinition");
    openapiFields.add("ExternalId");
    openapiFields.add("DynamoDbSettings");
    openapiFields.add("S3Settings");
    openapiFields.add("DmsTransferSettings");
    openapiFields.add("MongoDbSettings");
    openapiFields.add("KinesisSettings");
    openapiFields.add("KafkaSettings");
    openapiFields.add("ElasticsearchSettings");
    openapiFields.add("NeptuneSettings");
    openapiFields.add("RedshiftSettings");
    openapiFields.add("PostgreSQLSettings");
    openapiFields.add("MySQLSettings");
    openapiFields.add("OracleSettings");
    openapiFields.add("SybaseSettings");
    openapiFields.add("MicrosoftSQLServerSettings");
    openapiFields.add("IBMDb2Settings");
    openapiFields.add("DocDbSettings");
    openapiFields.add("RedisSettings");
    openapiFields.add("GcpMySQLSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteEndpointResponseEndpoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteEndpointResponseEndpoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteEndpointResponseEndpoint is not found in the empty JSON string", DeleteEndpointResponseEndpoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteEndpointResponseEndpoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteEndpointResponseEndpoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EndpointIdentifier`
      if (jsonObj.get("EndpointIdentifier") != null && !jsonObj.get("EndpointIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndpointIdentifier"));
      }
      // validate the optional field `EndpointType`
      if (jsonObj.get("EndpointType") != null && !jsonObj.get("EndpointType").isJsonNull()) {
        ReplicationEndpointTypeValue.validateJsonElement(jsonObj.get("EndpointType"));
      }
      // validate the optional field `EngineName`
      if (jsonObj.get("EngineName") != null && !jsonObj.get("EngineName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineName"));
      }
      // validate the optional field `EngineDisplayName`
      if (jsonObj.get("EngineDisplayName") != null && !jsonObj.get("EngineDisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineDisplayName"));
      }
      // validate the optional field `Username`
      if (jsonObj.get("Username") != null && !jsonObj.get("Username").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Username"));
      }
      // validate the optional field `ServerName`
      if (jsonObj.get("ServerName") != null && !jsonObj.get("ServerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerName"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `DatabaseName`
      if (jsonObj.get("DatabaseName") != null && !jsonObj.get("DatabaseName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatabaseName"));
      }
      // validate the optional field `ExtraConnectionAttributes`
      if (jsonObj.get("ExtraConnectionAttributes") != null && !jsonObj.get("ExtraConnectionAttributes").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExtraConnectionAttributes"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `EndpointArn`
      if (jsonObj.get("EndpointArn") != null && !jsonObj.get("EndpointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndpointArn"));
      }
      // validate the optional field `CertificateArn`
      if (jsonObj.get("CertificateArn") != null && !jsonObj.get("CertificateArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CertificateArn"));
      }
      // validate the optional field `SslMode`
      if (jsonObj.get("SslMode") != null && !jsonObj.get("SslMode").isJsonNull()) {
        DmsSslModeValue.validateJsonElement(jsonObj.get("SslMode"));
      }
      // validate the optional field `ServiceAccessRoleArn`
      if (jsonObj.get("ServiceAccessRoleArn") != null && !jsonObj.get("ServiceAccessRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceAccessRoleArn"));
      }
      // validate the optional field `ExternalTableDefinition`
      if (jsonObj.get("ExternalTableDefinition") != null && !jsonObj.get("ExternalTableDefinition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExternalTableDefinition"));
      }
      // validate the optional field `ExternalId`
      if (jsonObj.get("ExternalId") != null && !jsonObj.get("ExternalId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExternalId"));
      }
      // validate the optional field `DynamoDbSettings`
      if (jsonObj.get("DynamoDbSettings") != null && !jsonObj.get("DynamoDbSettings").isJsonNull()) {
        EndpointDynamoDbSettings.validateJsonElement(jsonObj.get("DynamoDbSettings"));
      }
      // validate the optional field `S3Settings`
      if (jsonObj.get("S3Settings") != null && !jsonObj.get("S3Settings").isJsonNull()) {
        EndpointS3Settings.validateJsonElement(jsonObj.get("S3Settings"));
      }
      // validate the optional field `DmsTransferSettings`
      if (jsonObj.get("DmsTransferSettings") != null && !jsonObj.get("DmsTransferSettings").isJsonNull()) {
        EndpointDmsTransferSettings.validateJsonElement(jsonObj.get("DmsTransferSettings"));
      }
      // validate the optional field `MongoDbSettings`
      if (jsonObj.get("MongoDbSettings") != null && !jsonObj.get("MongoDbSettings").isJsonNull()) {
        EndpointMongoDbSettings.validateJsonElement(jsonObj.get("MongoDbSettings"));
      }
      // validate the optional field `KinesisSettings`
      if (jsonObj.get("KinesisSettings") != null && !jsonObj.get("KinesisSettings").isJsonNull()) {
        EndpointKinesisSettings.validateJsonElement(jsonObj.get("KinesisSettings"));
      }
      // validate the optional field `KafkaSettings`
      if (jsonObj.get("KafkaSettings") != null && !jsonObj.get("KafkaSettings").isJsonNull()) {
        EndpointKafkaSettings.validateJsonElement(jsonObj.get("KafkaSettings"));
      }
      // validate the optional field `ElasticsearchSettings`
      if (jsonObj.get("ElasticsearchSettings") != null && !jsonObj.get("ElasticsearchSettings").isJsonNull()) {
        EndpointElasticsearchSettings.validateJsonElement(jsonObj.get("ElasticsearchSettings"));
      }
      // validate the optional field `NeptuneSettings`
      if (jsonObj.get("NeptuneSettings") != null && !jsonObj.get("NeptuneSettings").isJsonNull()) {
        EndpointNeptuneSettings.validateJsonElement(jsonObj.get("NeptuneSettings"));
      }
      // validate the optional field `RedshiftSettings`
      if (jsonObj.get("RedshiftSettings") != null && !jsonObj.get("RedshiftSettings").isJsonNull()) {
        EndpointRedshiftSettings.validateJsonElement(jsonObj.get("RedshiftSettings"));
      }
      // validate the optional field `PostgreSQLSettings`
      if (jsonObj.get("PostgreSQLSettings") != null && !jsonObj.get("PostgreSQLSettings").isJsonNull()) {
        EndpointPostgreSQLSettings.validateJsonElement(jsonObj.get("PostgreSQLSettings"));
      }
      // validate the optional field `MySQLSettings`
      if (jsonObj.get("MySQLSettings") != null && !jsonObj.get("MySQLSettings").isJsonNull()) {
        EndpointMySQLSettings.validateJsonElement(jsonObj.get("MySQLSettings"));
      }
      // validate the optional field `OracleSettings`
      if (jsonObj.get("OracleSettings") != null && !jsonObj.get("OracleSettings").isJsonNull()) {
        EndpointOracleSettings.validateJsonElement(jsonObj.get("OracleSettings"));
      }
      // validate the optional field `SybaseSettings`
      if (jsonObj.get("SybaseSettings") != null && !jsonObj.get("SybaseSettings").isJsonNull()) {
        EndpointSybaseSettings.validateJsonElement(jsonObj.get("SybaseSettings"));
      }
      // validate the optional field `MicrosoftSQLServerSettings`
      if (jsonObj.get("MicrosoftSQLServerSettings") != null && !jsonObj.get("MicrosoftSQLServerSettings").isJsonNull()) {
        EndpointMicrosoftSQLServerSettings.validateJsonElement(jsonObj.get("MicrosoftSQLServerSettings"));
      }
      // validate the optional field `IBMDb2Settings`
      if (jsonObj.get("IBMDb2Settings") != null && !jsonObj.get("IBMDb2Settings").isJsonNull()) {
        EndpointIBMDb2Settings.validateJsonElement(jsonObj.get("IBMDb2Settings"));
      }
      // validate the optional field `DocDbSettings`
      if (jsonObj.get("DocDbSettings") != null && !jsonObj.get("DocDbSettings").isJsonNull()) {
        DocDbSettings.validateJsonElement(jsonObj.get("DocDbSettings"));
      }
      // validate the optional field `RedisSettings`
      if (jsonObj.get("RedisSettings") != null && !jsonObj.get("RedisSettings").isJsonNull()) {
        EndpointRedisSettings.validateJsonElement(jsonObj.get("RedisSettings"));
      }
      // validate the optional field `GcpMySQLSettings`
      if (jsonObj.get("GcpMySQLSettings") != null && !jsonObj.get("GcpMySQLSettings").isJsonNull()) {
        CreateEndpointMessageGcpMySQLSettings.validateJsonElement(jsonObj.get("GcpMySQLSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteEndpointResponseEndpoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteEndpointResponseEndpoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteEndpointResponseEndpoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteEndpointResponseEndpoint.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteEndpointResponseEndpoint>() {
           @Override
           public void write(JsonWriter out, DeleteEndpointResponseEndpoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteEndpointResponseEndpoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteEndpointResponseEndpoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteEndpointResponseEndpoint
   * @throws IOException if the JSON string is invalid with respect to DeleteEndpointResponseEndpoint
   */
  public static DeleteEndpointResponseEndpoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteEndpointResponseEndpoint.class);
  }

  /**
   * Convert an instance of DeleteEndpointResponseEndpoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

