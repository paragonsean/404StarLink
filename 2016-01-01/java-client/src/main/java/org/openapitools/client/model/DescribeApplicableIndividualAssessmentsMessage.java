/*
 * AWS Database Migration Service
 * <fullname>Database Migration Service</fullname> <p>Database Migration Service (DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is Database Migration Service?</a> in the <i>Database Migration Service User Guide.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.MigrationTypeValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p/&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:13:28.765689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeApplicableIndividualAssessmentsMessage {
  public static final String SERIALIZED_NAME_REPLICATION_TASK_ARN = "ReplicationTaskArn";
  @SerializedName(SERIALIZED_NAME_REPLICATION_TASK_ARN)
  private String replicationTaskArn;

  public static final String SERIALIZED_NAME_REPLICATION_INSTANCE_ARN = "ReplicationInstanceArn";
  @SerializedName(SERIALIZED_NAME_REPLICATION_INSTANCE_ARN)
  private String replicationInstanceArn;

  public static final String SERIALIZED_NAME_SOURCE_ENGINE_NAME = "SourceEngineName";
  @SerializedName(SERIALIZED_NAME_SOURCE_ENGINE_NAME)
  private String sourceEngineName;

  public static final String SERIALIZED_NAME_TARGET_ENGINE_NAME = "TargetEngineName";
  @SerializedName(SERIALIZED_NAME_TARGET_ENGINE_NAME)
  private String targetEngineName;

  public static final String SERIALIZED_NAME_MIGRATION_TYPE = "MigrationType";
  @SerializedName(SERIALIZED_NAME_MIGRATION_TYPE)
  private MigrationTypeValue migrationType;

  public static final String SERIALIZED_NAME_MAX_RECORDS = "MaxRecords";
  @SerializedName(SERIALIZED_NAME_MAX_RECORDS)
  private Integer maxRecords;

  public static final String SERIALIZED_NAME_MARKER = "Marker";
  @SerializedName(SERIALIZED_NAME_MARKER)
  private String marker;

  public DescribeApplicableIndividualAssessmentsMessage() {
  }

  public DescribeApplicableIndividualAssessmentsMessage replicationTaskArn(String replicationTaskArn) {
    this.replicationTaskArn = replicationTaskArn;
    return this;
  }

  /**
   * Get replicationTaskArn
   * @return replicationTaskArn
   */
  @javax.annotation.Nullable
  public String getReplicationTaskArn() {
    return replicationTaskArn;
  }

  public void setReplicationTaskArn(String replicationTaskArn) {
    this.replicationTaskArn = replicationTaskArn;
  }


  public DescribeApplicableIndividualAssessmentsMessage replicationInstanceArn(String replicationInstanceArn) {
    this.replicationInstanceArn = replicationInstanceArn;
    return this;
  }

  /**
   * Get replicationInstanceArn
   * @return replicationInstanceArn
   */
  @javax.annotation.Nullable
  public String getReplicationInstanceArn() {
    return replicationInstanceArn;
  }

  public void setReplicationInstanceArn(String replicationInstanceArn) {
    this.replicationInstanceArn = replicationInstanceArn;
  }


  public DescribeApplicableIndividualAssessmentsMessage sourceEngineName(String sourceEngineName) {
    this.sourceEngineName = sourceEngineName;
    return this;
  }

  /**
   * Get sourceEngineName
   * @return sourceEngineName
   */
  @javax.annotation.Nullable
  public String getSourceEngineName() {
    return sourceEngineName;
  }

  public void setSourceEngineName(String sourceEngineName) {
    this.sourceEngineName = sourceEngineName;
  }


  public DescribeApplicableIndividualAssessmentsMessage targetEngineName(String targetEngineName) {
    this.targetEngineName = targetEngineName;
    return this;
  }

  /**
   * Get targetEngineName
   * @return targetEngineName
   */
  @javax.annotation.Nullable
  public String getTargetEngineName() {
    return targetEngineName;
  }

  public void setTargetEngineName(String targetEngineName) {
    this.targetEngineName = targetEngineName;
  }


  public DescribeApplicableIndividualAssessmentsMessage migrationType(MigrationTypeValue migrationType) {
    this.migrationType = migrationType;
    return this;
  }

  /**
   * Get migrationType
   * @return migrationType
   */
  @javax.annotation.Nullable
  public MigrationTypeValue getMigrationType() {
    return migrationType;
  }

  public void setMigrationType(MigrationTypeValue migrationType) {
    this.migrationType = migrationType;
  }


  public DescribeApplicableIndividualAssessmentsMessage maxRecords(Integer maxRecords) {
    this.maxRecords = maxRecords;
    return this;
  }

  /**
   * Get maxRecords
   * @return maxRecords
   */
  @javax.annotation.Nullable
  public Integer getMaxRecords() {
    return maxRecords;
  }

  public void setMaxRecords(Integer maxRecords) {
    this.maxRecords = maxRecords;
  }


  public DescribeApplicableIndividualAssessmentsMessage marker(String marker) {
    this.marker = marker;
    return this;
  }

  /**
   * Get marker
   * @return marker
   */
  @javax.annotation.Nullable
  public String getMarker() {
    return marker;
  }

  public void setMarker(String marker) {
    this.marker = marker;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeApplicableIndividualAssessmentsMessage describeApplicableIndividualAssessmentsMessage = (DescribeApplicableIndividualAssessmentsMessage) o;
    return Objects.equals(this.replicationTaskArn, describeApplicableIndividualAssessmentsMessage.replicationTaskArn) &&
        Objects.equals(this.replicationInstanceArn, describeApplicableIndividualAssessmentsMessage.replicationInstanceArn) &&
        Objects.equals(this.sourceEngineName, describeApplicableIndividualAssessmentsMessage.sourceEngineName) &&
        Objects.equals(this.targetEngineName, describeApplicableIndividualAssessmentsMessage.targetEngineName) &&
        Objects.equals(this.migrationType, describeApplicableIndividualAssessmentsMessage.migrationType) &&
        Objects.equals(this.maxRecords, describeApplicableIndividualAssessmentsMessage.maxRecords) &&
        Objects.equals(this.marker, describeApplicableIndividualAssessmentsMessage.marker);
  }

  @Override
  public int hashCode() {
    return Objects.hash(replicationTaskArn, replicationInstanceArn, sourceEngineName, targetEngineName, migrationType, maxRecords, marker);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeApplicableIndividualAssessmentsMessage {\n");
    sb.append("    replicationTaskArn: ").append(toIndentedString(replicationTaskArn)).append("\n");
    sb.append("    replicationInstanceArn: ").append(toIndentedString(replicationInstanceArn)).append("\n");
    sb.append("    sourceEngineName: ").append(toIndentedString(sourceEngineName)).append("\n");
    sb.append("    targetEngineName: ").append(toIndentedString(targetEngineName)).append("\n");
    sb.append("    migrationType: ").append(toIndentedString(migrationType)).append("\n");
    sb.append("    maxRecords: ").append(toIndentedString(maxRecords)).append("\n");
    sb.append("    marker: ").append(toIndentedString(marker)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ReplicationTaskArn");
    openapiFields.add("ReplicationInstanceArn");
    openapiFields.add("SourceEngineName");
    openapiFields.add("TargetEngineName");
    openapiFields.add("MigrationType");
    openapiFields.add("MaxRecords");
    openapiFields.add("Marker");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeApplicableIndividualAssessmentsMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeApplicableIndividualAssessmentsMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeApplicableIndividualAssessmentsMessage is not found in the empty JSON string", DescribeApplicableIndividualAssessmentsMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeApplicableIndividualAssessmentsMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeApplicableIndividualAssessmentsMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ReplicationTaskArn`
      if (jsonObj.get("ReplicationTaskArn") != null && !jsonObj.get("ReplicationTaskArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReplicationTaskArn"));
      }
      // validate the optional field `ReplicationInstanceArn`
      if (jsonObj.get("ReplicationInstanceArn") != null && !jsonObj.get("ReplicationInstanceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReplicationInstanceArn"));
      }
      // validate the optional field `SourceEngineName`
      if (jsonObj.get("SourceEngineName") != null && !jsonObj.get("SourceEngineName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceEngineName"));
      }
      // validate the optional field `TargetEngineName`
      if (jsonObj.get("TargetEngineName") != null && !jsonObj.get("TargetEngineName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TargetEngineName"));
      }
      // validate the optional field `MigrationType`
      if (jsonObj.get("MigrationType") != null && !jsonObj.get("MigrationType").isJsonNull()) {
        MigrationTypeValue.validateJsonElement(jsonObj.get("MigrationType"));
      }
      // validate the optional field `MaxRecords`
      if (jsonObj.get("MaxRecords") != null && !jsonObj.get("MaxRecords").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxRecords"));
      }
      // validate the optional field `Marker`
      if (jsonObj.get("Marker") != null && !jsonObj.get("Marker").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Marker"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeApplicableIndividualAssessmentsMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeApplicableIndividualAssessmentsMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeApplicableIndividualAssessmentsMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeApplicableIndividualAssessmentsMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeApplicableIndividualAssessmentsMessage>() {
           @Override
           public void write(JsonWriter out, DescribeApplicableIndividualAssessmentsMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeApplicableIndividualAssessmentsMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeApplicableIndividualAssessmentsMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeApplicableIndividualAssessmentsMessage
   * @throws IOException if the JSON string is invalid with respect to DescribeApplicableIndividualAssessmentsMessage
   */
  public static DescribeApplicableIndividualAssessmentsMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeApplicableIndividualAssessmentsMessage.class);
  }

  /**
   * Convert an instance of DescribeApplicableIndividualAssessmentsMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

