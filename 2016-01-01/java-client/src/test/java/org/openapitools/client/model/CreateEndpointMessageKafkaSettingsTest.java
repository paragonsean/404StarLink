/*
 * AWS Database Migration Service
 * <fullname>Database Migration Service</fullname> <p>Database Migration Service (DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about DMS, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/Welcome.html\">What Is Database Migration Service?</a> in the <i>Database Migration Service User Guide.</i> </p>
 *
 * The version of the OpenAPI document: 2016-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.KafkaSaslMechanism;
import org.openapitools.client.model.KafkaSecurityProtocol;
import org.openapitools.client.model.MessageFormatValue;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateEndpointMessageKafkaSettings
 */
public class CreateEndpointMessageKafkaSettingsTest {
    private final CreateEndpointMessageKafkaSettings model = new CreateEndpointMessageKafkaSettings();

    /**
     * Model tests for CreateEndpointMessageKafkaSettings
     */
    @Test
    public void testCreateEndpointMessageKafkaSettings() {
        // TODO: test CreateEndpointMessageKafkaSettings
    }

    /**
     * Test the property 'broker'
     */
    @Test
    public void brokerTest() {
        // TODO: test broker
    }

    /**
     * Test the property 'topic'
     */
    @Test
    public void topicTest() {
        // TODO: test topic
    }

    /**
     * Test the property 'messageFormat'
     */
    @Test
    public void messageFormatTest() {
        // TODO: test messageFormat
    }

    /**
     * Test the property 'includeTransactionDetails'
     */
    @Test
    public void includeTransactionDetailsTest() {
        // TODO: test includeTransactionDetails
    }

    /**
     * Test the property 'includePartitionValue'
     */
    @Test
    public void includePartitionValueTest() {
        // TODO: test includePartitionValue
    }

    /**
     * Test the property 'partitionIncludeSchemaTable'
     */
    @Test
    public void partitionIncludeSchemaTableTest() {
        // TODO: test partitionIncludeSchemaTable
    }

    /**
     * Test the property 'includeTableAlterOperations'
     */
    @Test
    public void includeTableAlterOperationsTest() {
        // TODO: test includeTableAlterOperations
    }

    /**
     * Test the property 'includeControlDetails'
     */
    @Test
    public void includeControlDetailsTest() {
        // TODO: test includeControlDetails
    }

    /**
     * Test the property 'messageMaxBytes'
     */
    @Test
    public void messageMaxBytesTest() {
        // TODO: test messageMaxBytes
    }

    /**
     * Test the property 'includeNullAndEmpty'
     */
    @Test
    public void includeNullAndEmptyTest() {
        // TODO: test includeNullAndEmpty
    }

    /**
     * Test the property 'securityProtocol'
     */
    @Test
    public void securityProtocolTest() {
        // TODO: test securityProtocol
    }

    /**
     * Test the property 'sslClientCertificateArn'
     */
    @Test
    public void sslClientCertificateArnTest() {
        // TODO: test sslClientCertificateArn
    }

    /**
     * Test the property 'sslClientKeyArn'
     */
    @Test
    public void sslClientKeyArnTest() {
        // TODO: test sslClientKeyArn
    }

    /**
     * Test the property 'sslClientKeyPassword'
     */
    @Test
    public void sslClientKeyPasswordTest() {
        // TODO: test sslClientKeyPassword
    }

    /**
     * Test the property 'sslCaCertificateArn'
     */
    @Test
    public void sslCaCertificateArnTest() {
        // TODO: test sslCaCertificateArn
    }

    /**
     * Test the property 'saslUsername'
     */
    @Test
    public void saslUsernameTest() {
        // TODO: test saslUsername
    }

    /**
     * Test the property 'saslPassword'
     */
    @Test
    public void saslPasswordTest() {
        // TODO: test saslPassword
    }

    /**
     * Test the property 'noHexPrefix'
     */
    @Test
    public void noHexPrefixTest() {
        // TODO: test noHexPrefix
    }

    /**
     * Test the property 'saslMechanism'
     */
    @Test
    public void saslMechanismTest() {
        // TODO: test saslMechanism
    }

}
