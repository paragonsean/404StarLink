# coding: utf-8

"""
    Cloud Build API

    Creates and manages builds on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.git_lab_events_config import GitLabEventsConfig

class TestGitLabEventsConfig(unittest.TestCase):
    """GitLabEventsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GitLabEventsConfig:
        """Test GitLabEventsConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GitLabEventsConfig`
        """
        model = GitLabEventsConfig()
        if include_optional:
            return GitLabEventsConfig(
                gitlab_config = openapi_client.models.git_lab_config.GitLabConfig(
                    connected_repositories = [
                        openapi_client.models.git_lab_repository_id.GitLabRepositoryId(
                            id = '', 
                            webhook_id = 56, )
                        ], 
                    create_time = '', 
                    enterprise_config = openapi_client.models.git_lab_enterprise_config.GitLabEnterpriseConfig(
                        host_uri = '', 
                        service_directory_config = openapi_client.models.service_directory_config.ServiceDirectoryConfig(
                            service = '', ), 
                        ssl_ca = '', ), 
                    name = '', 
                    secrets = openapi_client.models.git_lab_secrets.GitLabSecrets(
                        api_access_token_version = '', 
                        api_key_version = '', 
                        read_access_token_version = '', 
                        webhook_secret_version = '', ), 
                    username = '', 
                    webhook_key = '', ),
                gitlab_config_resource = '',
                project_namespace = '',
                pull_request = openapi_client.models.pull_request_filter.PullRequestFilter(
                    branch = '', 
                    comment_control = 'COMMENTS_DISABLED', 
                    invert_regex = True, ),
                push = openapi_client.models.push_filter.PushFilter(
                    branch = '', 
                    invert_regex = True, 
                    tag = '', )
            )
        else:
            return GitLabEventsConfig(
        )
        """

    def testGitLabEventsConfig(self):
        """Test GitLabEventsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
