# coding: utf-8

"""
    Cloud Build API

    Creates and manages builds on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_bitbucket_server_repositories_response import ListBitbucketServerRepositoriesResponse

class TestListBitbucketServerRepositoriesResponse(unittest.TestCase):
    """ListBitbucketServerRepositoriesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBitbucketServerRepositoriesResponse:
        """Test ListBitbucketServerRepositoriesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBitbucketServerRepositoriesResponse`
        """
        model = ListBitbucketServerRepositoriesResponse()
        if include_optional:
            return ListBitbucketServerRepositoriesResponse(
                bitbucket_server_repositories = [
                    openapi_client.models.bitbucket_server_repository.BitbucketServerRepository(
                        browse_uri = '', 
                        description = '', 
                        display_name = '', 
                        name = '', 
                        repo_id = openapi_client.models.bitbucket_server_repository_id.BitbucketServerRepositoryId(
                            project_key = '', 
                            repo_slug = '', 
                            webhook_id = 56, ), )
                    ],
                next_page_token = ''
            )
        else:
            return ListBitbucketServerRepositoriesResponse(
        )
        """

    def testListBitbucketServerRepositoriesResponse(self):
        """Test ListBitbucketServerRepositoriesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
