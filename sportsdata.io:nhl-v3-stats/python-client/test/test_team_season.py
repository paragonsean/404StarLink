# coding: utf-8

"""
    NHL v3 Stats

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.team_season import TeamSeason

class TestTeamSeason(unittest.TestCase):
    """TeamSeason unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TeamSeason:
        """Test TeamSeason
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TeamSeason`
        """
        model = TeamSeason()
        if include_optional:
            return TeamSeason(
                assists = 1.337,
                bench_penalty_minutes = 1.337,
                blocks = 1.337,
                empty_net_goals = 1.337,
                faceoffs_lost = 1.337,
                faceoffs_won = 1.337,
                fantasy_points = 1.337,
                fantasy_points_draft_kings = 1.337,
                fantasy_points_fan_duel = 1.337,
                fantasy_points_fantasy_draft = 1.337,
                fantasy_points_yahoo = 1.337,
                games = 56,
                giveaways = 1.337,
                global_team_id = 56,
                goals = 1.337,
                goaltending_goals_against = 1.337,
                goaltending_losses = 1.337,
                goaltending_minutes = 56,
                goaltending_overtime_losses = 1.337,
                goaltending_saves = 1.337,
                goaltending_seconds = 56,
                goaltending_shots_against = 1.337,
                goaltending_shutouts = 1.337,
                goaltending_wins = 1.337,
                hat_tricks = 1.337,
                hits = 1.337,
                losses = 56,
                minutes = 56,
                name = '',
                opponent_position = '',
                opponent_stat = openapi_client.models.opponent_season.OpponentSeason(
                    assists = 1.337, 
                    bench_penalty_minutes = 1.337, 
                    blocks = 1.337, 
                    empty_net_goals = 1.337, 
                    faceoffs_lost = 1.337, 
                    faceoffs_won = 1.337, 
                    fantasy_points = 1.337, 
                    fantasy_points_draft_kings = 1.337, 
                    fantasy_points_fan_duel = 1.337, 
                    fantasy_points_fantasy_draft = 1.337, 
                    fantasy_points_yahoo = 1.337, 
                    games = 56, 
                    giveaways = 1.337, 
                    global_team_id = 56, 
                    goals = 1.337, 
                    goaltending_goals_against = 1.337, 
                    goaltending_losses = 1.337, 
                    goaltending_minutes = 56, 
                    goaltending_overtime_losses = 1.337, 
                    goaltending_saves = 1.337, 
                    goaltending_seconds = 56, 
                    goaltending_shots_against = 1.337, 
                    goaltending_shutouts = 1.337, 
                    goaltending_wins = 1.337, 
                    hat_tricks = 1.337, 
                    hits = 1.337, 
                    losses = 56, 
                    minutes = 56, 
                    name = '', 
                    opponent_position = '', 
                    overtime_losses = 56, 
                    penalty_minutes = 1.337, 
                    plus_minus = 1.337, 
                    power_play_assists = 1.337, 
                    power_play_goals = 1.337, 
                    season = 56, 
                    season_type = 56, 
                    seconds = 56, 
                    shifts = 1.337, 
                    shootout_goals = 1.337, 
                    short_handed_assists = 1.337, 
                    short_handed_goals = 1.337, 
                    shots_on_goal = 1.337, 
                    started = 56, 
                    stat_id = 56, 
                    takeaways = 1.337, 
                    team = '', 
                    team_id = 56, 
                    updated = '', 
                    wins = 56, ),
                overtime_losses = 56,
                penalty_minutes = 1.337,
                plus_minus = 1.337,
                power_play_assists = 1.337,
                power_play_goals = 1.337,
                season = 56,
                season_type = 56,
                seconds = 56,
                shifts = 1.337,
                shootout_goals = 1.337,
                short_handed_assists = 1.337,
                short_handed_goals = 1.337,
                shots_on_goal = 1.337,
                started = 56,
                stat_id = 56,
                takeaways = 1.337,
                team = '',
                team_id = 56,
                updated = '',
                wins = 56
            )
        else:
            return TeamSeason(
        )
        """

    def testTeamSeason(self):
        """Test TeamSeason"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
