# coding: utf-8

"""
    NHL v3 Stats

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.box_score import BoxScore

class TestBoxScore(unittest.TestCase):
    """BoxScore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BoxScore:
        """Test BoxScore
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BoxScore`
        """
        model = BoxScore()
        if include_optional:
            return BoxScore(
                game = openapi_client.models.game.Game(
                    attendance = 56, 
                    away_rotation_number = 56, 
                    away_team = '', 
                    away_team_id = 56, 
                    away_team_money_line = 56, 
                    away_team_score = 56, 
                    channel = '', 
                    date_time = '', 
                    date_time_utc = '', 
                    day = '', 
                    game_end_date_time = '', 
                    game_id = 56, 
                    global_away_team_id = 56, 
                    global_game_id = 56, 
                    global_home_team_id = 56, 
                    home_rotation_number = 56, 
                    home_team = '', 
                    home_team_id = 56, 
                    home_team_money_line = 56, 
                    home_team_score = 56, 
                    is_closed = True, 
                    last_play = '', 
                    neutral_venue = True, 
                    over_payout = 56, 
                    over_under = 1.337, 
                    period = '', 
                    periods = [
                        openapi_client.models.period.Period(
                            away_score = 56, 
                            game_id = 56, 
                            home_score = 56, 
                            name = '', 
                            penalties = [
                                openapi_client.models.penalty.Penalty(
                                    bench_penalty_served_by_player_id = 56, 
                                    description = '', 
                                    drawn_by_player_id = 56, 
                                    drawn_by_team_id = 56, 
                                    is_bench_penalty = True, 
                                    penalized_player_id = 56, 
                                    penalized_team_id = 56, 
                                    penalty_id = 56, 
                                    penalty_minutes = 56, 
                                    period_id = 56, 
                                    sequence = 56, 
                                    time_remaining_minutes = 56, 
                                    time_remaining_seconds = 56, )
                                ], 
                            period_id = 56, 
                            scoring_plays = [
                                openapi_client.models.scoring_play.ScoringPlay(
                                    allowed_by_team_id = 56, 
                                    assisted_by_player_id1 = 56, 
                                    assisted_by_player_id2 = 56, 
                                    away_team_score = 56, 
                                    empty_net = True, 
                                    home_team_score = 56, 
                                    period_id = 56, 
                                    power_play = True, 
                                    scored_by_player_id = 56, 
                                    scored_by_team_id = 56, 
                                    scoring_play_id = 56, 
                                    sequence = 56, 
                                    short_handed = True, 
                                    time_remaining_minutes = 56, 
                                    time_remaining_seconds = 56, )
                                ], )
                        ], 
                    point_spread = 1.337, 
                    point_spread_away_team_money_line = 56, 
                    point_spread_home_team_money_line = 56, 
                    season = 56, 
                    season_type = 56, 
                    series_info = openapi_client.models.series.Series(
                        away_team_wins = 56, 
                        game_number = 56, 
                        home_team_wins = 56, 
                        max_length = 56, ), 
                    stadium_id = 56, 
                    status = '', 
                    time_remaining_minutes = 56, 
                    time_remaining_seconds = 56, 
                    under_payout = 56, 
                    updated = '', ),
                periods = [
                    openapi_client.models.period.Period(
                        away_score = 56, 
                        game_id = 56, 
                        home_score = 56, 
                        name = '', 
                        penalties = [
                            openapi_client.models.penalty.Penalty(
                                bench_penalty_served_by_player_id = 56, 
                                description = '', 
                                drawn_by_player_id = 56, 
                                drawn_by_team_id = 56, 
                                is_bench_penalty = True, 
                                penalized_player_id = 56, 
                                penalized_team_id = 56, 
                                penalty_id = 56, 
                                penalty_minutes = 56, 
                                period_id = 56, 
                                sequence = 56, 
                                time_remaining_minutes = 56, 
                                time_remaining_seconds = 56, )
                            ], 
                        period_id = 56, 
                        scoring_plays = [
                            openapi_client.models.scoring_play.ScoringPlay(
                                allowed_by_team_id = 56, 
                                assisted_by_player_id1 = 56, 
                                assisted_by_player_id2 = 56, 
                                away_team_score = 56, 
                                empty_net = True, 
                                home_team_score = 56, 
                                period_id = 56, 
                                power_play = True, 
                                scored_by_player_id = 56, 
                                scored_by_team_id = 56, 
                                scoring_play_id = 56, 
                                sequence = 56, 
                                short_handed = True, 
                                time_remaining_minutes = 56, 
                                time_remaining_seconds = 56, )
                            ], )
                    ],
                player_games = [
                    openapi_client.models.player_game.PlayerGame(
                        assists = 1.337, 
                        bench_penalty_minutes = 1.337, 
                        blocks = 1.337, 
                        date_time = '', 
                        day = '', 
                        draft_kings_position = '', 
                        draft_kings_salary = 56, 
                        empty_net_goals = 1.337, 
                        faceoffs_lost = 1.337, 
                        faceoffs_won = 1.337, 
                        fan_duel_position = '', 
                        fan_duel_salary = 56, 
                        fantasy_data_salary = 56, 
                        fantasy_draft_position = '', 
                        fantasy_draft_salary = 56, 
                        fantasy_points = 1.337, 
                        fantasy_points_draft_kings = 1.337, 
                        fantasy_points_fan_duel = 1.337, 
                        fantasy_points_fantasy_draft = 1.337, 
                        fantasy_points_yahoo = 1.337, 
                        game_id = 56, 
                        games = 56, 
                        giveaways = 1.337, 
                        global_game_id = 56, 
                        global_opponent_id = 56, 
                        global_team_id = 56, 
                        goals = 1.337, 
                        goaltending_goals_against = 1.337, 
                        goaltending_losses = 1.337, 
                        goaltending_minutes = 56, 
                        goaltending_overtime_losses = 1.337, 
                        goaltending_saves = 1.337, 
                        goaltending_seconds = 56, 
                        goaltending_shots_against = 1.337, 
                        goaltending_shutouts = 1.337, 
                        goaltending_wins = 1.337, 
                        hat_tricks = 1.337, 
                        hits = 1.337, 
                        home_or_away = '', 
                        injury_body_part = '', 
                        injury_notes = '', 
                        injury_start_date = '', 
                        injury_status = '', 
                        is_game_over = True, 
                        minutes = 56, 
                        name = '', 
                        opponent = '', 
                        opponent_id = 56, 
                        opponent_position_rank = 56, 
                        opponent_rank = 56, 
                        penalty_minutes = 1.337, 
                        player_id = 56, 
                        plus_minus = 1.337, 
                        position = '', 
                        power_play_assists = 1.337, 
                        power_play_goals = 1.337, 
                        season = 56, 
                        season_type = 56, 
                        seconds = 56, 
                        shifts = 1.337, 
                        shootout_goals = 1.337, 
                        short_handed_assists = 1.337, 
                        short_handed_goals = 1.337, 
                        shots_on_goal = 1.337, 
                        started = 56, 
                        stat_id = 56, 
                        takeaways = 1.337, 
                        team = '', 
                        team_id = 56, 
                        updated = '', 
                        yahoo_position = '', 
                        yahoo_salary = 56, )
                    ],
                shootout_plays = [
                    openapi_client.models.play.Play(
                        away_team_score = 56, 
                        category = '', 
                        clock_minutes = 56, 
                        clock_seconds = 56, 
                        created = '', 
                        description = '', 
                        first_assisted_by_player_id = 56, 
                        home_team_score = 56, 
                        opponent = '', 
                        opponent_id = 56, 
                        opposing_player_id = 56, 
                        period_id = 56, 
                        period_name = '', 
                        play_id = 56, 
                        player_id = 56, 
                        power_play_team = '', 
                        power_play_team_id = 56, 
                        second_assisted_by_player_id = 56, 
                        sequence = 56, 
                        team = '', 
                        team_id = 56, 
                        type = '', 
                        updated = '', )
                    ],
                team_games = [
                    openapi_client.models.team_game.TeamGame(
                        assists = 1.337, 
                        bench_penalty_minutes = 1.337, 
                        blocks = 1.337, 
                        date_time = '', 
                        day = '', 
                        empty_net_goals = 1.337, 
                        faceoffs_lost = 1.337, 
                        faceoffs_won = 1.337, 
                        fantasy_points = 1.337, 
                        fantasy_points_draft_kings = 1.337, 
                        fantasy_points_fan_duel = 1.337, 
                        fantasy_points_fantasy_draft = 1.337, 
                        fantasy_points_yahoo = 1.337, 
                        game_id = 56, 
                        games = 56, 
                        giveaways = 1.337, 
                        global_game_id = 56, 
                        global_opponent_id = 56, 
                        global_team_id = 56, 
                        goals = 1.337, 
                        goaltending_goals_against = 1.337, 
                        goaltending_losses = 1.337, 
                        goaltending_minutes = 56, 
                        goaltending_overtime_losses = 1.337, 
                        goaltending_saves = 1.337, 
                        goaltending_seconds = 56, 
                        goaltending_shots_against = 1.337, 
                        goaltending_shutouts = 1.337, 
                        goaltending_wins = 1.337, 
                        hat_tricks = 1.337, 
                        hits = 1.337, 
                        home_or_away = '', 
                        is_game_over = True, 
                        losses = 56, 
                        minutes = 56, 
                        name = '', 
                        opponent = '', 
                        opponent_id = 56, 
                        overtime_losses = 56, 
                        penalty_minutes = 1.337, 
                        plus_minus = 1.337, 
                        power_play_assists = 1.337, 
                        power_play_goals = 1.337, 
                        season = 56, 
                        season_type = 56, 
                        seconds = 56, 
                        shifts = 1.337, 
                        shootout_goals = 1.337, 
                        short_handed_assists = 1.337, 
                        short_handed_goals = 1.337, 
                        shots_on_goal = 1.337, 
                        started = 56, 
                        stat_id = 56, 
                        takeaways = 1.337, 
                        team = '', 
                        team_id = 56, 
                        updated = '', 
                        wins = 56, )
                    ]
            )
        else:
            return BoxScore(
        )
        """

    def testBoxScore(self):
        """Test BoxScore"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
