# coding: utf-8

"""
    NHL v3 Stats

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.player_game import PlayerGame

class TestPlayerGame(unittest.TestCase):
    """PlayerGame unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlayerGame:
        """Test PlayerGame
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlayerGame`
        """
        model = PlayerGame()
        if include_optional:
            return PlayerGame(
                assists = 1.337,
                bench_penalty_minutes = 1.337,
                blocks = 1.337,
                date_time = '',
                day = '',
                draft_kings_position = '',
                draft_kings_salary = 56,
                empty_net_goals = 1.337,
                faceoffs_lost = 1.337,
                faceoffs_won = 1.337,
                fan_duel_position = '',
                fan_duel_salary = 56,
                fantasy_data_salary = 56,
                fantasy_draft_position = '',
                fantasy_draft_salary = 56,
                fantasy_points = 1.337,
                fantasy_points_draft_kings = 1.337,
                fantasy_points_fan_duel = 1.337,
                fantasy_points_fantasy_draft = 1.337,
                fantasy_points_yahoo = 1.337,
                game_id = 56,
                games = 56,
                giveaways = 1.337,
                global_game_id = 56,
                global_opponent_id = 56,
                global_team_id = 56,
                goals = 1.337,
                goaltending_goals_against = 1.337,
                goaltending_losses = 1.337,
                goaltending_minutes = 56,
                goaltending_overtime_losses = 1.337,
                goaltending_saves = 1.337,
                goaltending_seconds = 56,
                goaltending_shots_against = 1.337,
                goaltending_shutouts = 1.337,
                goaltending_wins = 1.337,
                hat_tricks = 1.337,
                hits = 1.337,
                home_or_away = '',
                injury_body_part = '',
                injury_notes = '',
                injury_start_date = '',
                injury_status = '',
                is_game_over = True,
                minutes = 56,
                name = '',
                opponent = '',
                opponent_id = 56,
                opponent_position_rank = 56,
                opponent_rank = 56,
                penalty_minutes = 1.337,
                player_id = 56,
                plus_minus = 1.337,
                position = '',
                power_play_assists = 1.337,
                power_play_goals = 1.337,
                season = 56,
                season_type = 56,
                seconds = 56,
                shifts = 1.337,
                shootout_goals = 1.337,
                short_handed_assists = 1.337,
                short_handed_goals = 1.337,
                shots_on_goal = 1.337,
                started = 56,
                stat_id = 56,
                takeaways = 1.337,
                team = '',
                team_id = 56,
                updated = '',
                yahoo_position = '',
                yahoo_salary = 56
            )
        else:
            return PlayerGame(
        )
        """

    def testPlayerGame(self):
        """Test PlayerGame"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
