/*
 * Google Vault API
 * Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AccountInfo;
import org.openapitools.client.model.DriveOptions;
import org.openapitools.client.model.HangoutsChatInfo;
import org.openapitools.client.model.HangoutsChatOptions;
import org.openapitools.client.model.MailOptions;
import org.openapitools.client.model.OrgUnitInfo;
import org.openapitools.client.model.SharedDriveInfo;
import org.openapitools.client.model.SitesUrlInfo;
import org.openapitools.client.model.TeamDriveInfo;
import org.openapitools.client.model.VoiceOptions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Query
 */
public class QueryTest {
    private final Query model = new Query();

    /**
     * Model tests for Query
     */
    @Test
    public void testQuery() {
        // TODO: test Query
    }

    /**
     * Test the property 'accountInfo'
     */
    @Test
    public void accountInfoTest() {
        // TODO: test accountInfo
    }

    /**
     * Test the property 'corpus'
     */
    @Test
    public void corpusTest() {
        // TODO: test corpus
    }

    /**
     * Test the property 'dataScope'
     */
    @Test
    public void dataScopeTest() {
        // TODO: test dataScope
    }

    /**
     * Test the property 'driveOptions'
     */
    @Test
    public void driveOptionsTest() {
        // TODO: test driveOptions
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'hangoutsChatInfo'
     */
    @Test
    public void hangoutsChatInfoTest() {
        // TODO: test hangoutsChatInfo
    }

    /**
     * Test the property 'hangoutsChatOptions'
     */
    @Test
    public void hangoutsChatOptionsTest() {
        // TODO: test hangoutsChatOptions
    }

    /**
     * Test the property 'mailOptions'
     */
    @Test
    public void mailOptionsTest() {
        // TODO: test mailOptions
    }

    /**
     * Test the property 'method'
     */
    @Test
    public void methodTest() {
        // TODO: test method
    }

    /**
     * Test the property 'orgUnitInfo'
     */
    @Test
    public void orgUnitInfoTest() {
        // TODO: test orgUnitInfo
    }

    /**
     * Test the property 'searchMethod'
     */
    @Test
    public void searchMethodTest() {
        // TODO: test searchMethod
    }

    /**
     * Test the property 'sharedDriveInfo'
     */
    @Test
    public void sharedDriveInfoTest() {
        // TODO: test sharedDriveInfo
    }

    /**
     * Test the property 'sitesUrlInfo'
     */
    @Test
    public void sitesUrlInfoTest() {
        // TODO: test sitesUrlInfo
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'teamDriveInfo'
     */
    @Test
    public void teamDriveInfoTest() {
        // TODO: test teamDriveInfo
    }

    /**
     * Test the property 'terms'
     */
    @Test
    public void termsTest() {
        // TODO: test terms
    }

    /**
     * Test the property 'timeZone'
     */
    @Test
    public void timeZoneTest() {
        // TODO: test timeZone
    }

    /**
     * Test the property 'voiceOptions'
     */
    @Test
    public void voiceOptionsTest() {
        // TODO: test voiceOptions
    }

}
