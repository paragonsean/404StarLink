/*
 * Cloud Translation API
 * Integrates text translation into your website or application.
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.BatchDocumentInputConfig;
import org.openapitools.client.model.BatchDocumentOutputConfig;
import org.openapitools.client.model.TranslateTextGlossaryConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The BatchTranslateDocument request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:18:25.577525-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BatchTranslateDocumentRequest {
  public static final String SERIALIZED_NAME_CUSTOMIZED_ATTRIBUTION = "customizedAttribution";
  @SerializedName(SERIALIZED_NAME_CUSTOMIZED_ATTRIBUTION)
  private String customizedAttribution;

  public static final String SERIALIZED_NAME_ENABLE_SHADOW_REMOVAL_NATIVE_PDF = "enableShadowRemovalNativePdf";
  @SerializedName(SERIALIZED_NAME_ENABLE_SHADOW_REMOVAL_NATIVE_PDF)
  private Boolean enableShadowRemovalNativePdf;

  public static final String SERIALIZED_NAME_FORMAT_CONVERSIONS = "formatConversions";
  @SerializedName(SERIALIZED_NAME_FORMAT_CONVERSIONS)
  private Map<String, String> formatConversions = new HashMap<>();

  public static final String SERIALIZED_NAME_GLOSSARIES = "glossaries";
  @SerializedName(SERIALIZED_NAME_GLOSSARIES)
  private Map<String, TranslateTextGlossaryConfig> glossaries = new HashMap<>();

  public static final String SERIALIZED_NAME_INPUT_CONFIGS = "inputConfigs";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIGS)
  private List<BatchDocumentInputConfig> inputConfigs = new ArrayList<>();

  public static final String SERIALIZED_NAME_MODELS = "models";
  @SerializedName(SERIALIZED_NAME_MODELS)
  private Map<String, String> models = new HashMap<>();

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "outputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private BatchDocumentOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_SOURCE_LANGUAGE_CODE = "sourceLanguageCode";
  @SerializedName(SERIALIZED_NAME_SOURCE_LANGUAGE_CODE)
  private String sourceLanguageCode;

  public static final String SERIALIZED_NAME_TARGET_LANGUAGE_CODES = "targetLanguageCodes";
  @SerializedName(SERIALIZED_NAME_TARGET_LANGUAGE_CODES)
  private List<String> targetLanguageCodes = new ArrayList<>();

  public BatchTranslateDocumentRequest() {
  }

  public BatchTranslateDocumentRequest customizedAttribution(String customizedAttribution) {
    this.customizedAttribution = customizedAttribution;
    return this;
  }

  /**
   * Optional. This flag is to support user customized attribution. If not provided, the default is &#x60;Machine Translated by Google&#x60;. Customized attribution should follow rules in https://cloud.google.com/translate/attribution#attribution_and_logos
   * @return customizedAttribution
   */
  @javax.annotation.Nullable
  public String getCustomizedAttribution() {
    return customizedAttribution;
  }

  public void setCustomizedAttribution(String customizedAttribution) {
    this.customizedAttribution = customizedAttribution;
  }


  public BatchTranslateDocumentRequest enableShadowRemovalNativePdf(Boolean enableShadowRemovalNativePdf) {
    this.enableShadowRemovalNativePdf = enableShadowRemovalNativePdf;
    return this;
  }

  /**
   * Optional. If true, use the text removal server to remove the shadow text on background image for native pdf translation. Shadow removal feature can only be enabled when is_translate_native_pdf_only: false &amp;&amp; pdf_native_only: false
   * @return enableShadowRemovalNativePdf
   */
  @javax.annotation.Nullable
  public Boolean getEnableShadowRemovalNativePdf() {
    return enableShadowRemovalNativePdf;
  }

  public void setEnableShadowRemovalNativePdf(Boolean enableShadowRemovalNativePdf) {
    this.enableShadowRemovalNativePdf = enableShadowRemovalNativePdf;
  }


  public BatchTranslateDocumentRequest formatConversions(Map<String, String> formatConversions) {
    this.formatConversions = formatConversions;
    return this;
  }

  public BatchTranslateDocumentRequest putFormatConversionsItem(String key, String formatConversionsItem) {
    if (this.formatConversions == null) {
      this.formatConversions = new HashMap<>();
    }
    this.formatConversions.put(key, formatConversionsItem);
    return this;
  }

  /**
   * Optional.
   * @return formatConversions
   */
  @javax.annotation.Nullable
  public Map<String, String> getFormatConversions() {
    return formatConversions;
  }

  public void setFormatConversions(Map<String, String> formatConversions) {
    this.formatConversions = formatConversions;
  }


  public BatchTranslateDocumentRequest glossaries(Map<String, TranslateTextGlossaryConfig> glossaries) {
    this.glossaries = glossaries;
    return this;
  }

  public BatchTranslateDocumentRequest putGlossariesItem(String key, TranslateTextGlossaryConfig glossariesItem) {
    if (this.glossaries == null) {
      this.glossaries = new HashMap<>();
    }
    this.glossaries.put(key, glossariesItem);
    return this;
  }

  /**
   * Optional. Glossaries to be applied. It&#39;s keyed by target language code.
   * @return glossaries
   */
  @javax.annotation.Nullable
  public Map<String, TranslateTextGlossaryConfig> getGlossaries() {
    return glossaries;
  }

  public void setGlossaries(Map<String, TranslateTextGlossaryConfig> glossaries) {
    this.glossaries = glossaries;
  }


  public BatchTranslateDocumentRequest inputConfigs(List<BatchDocumentInputConfig> inputConfigs) {
    this.inputConfigs = inputConfigs;
    return this;
  }

  public BatchTranslateDocumentRequest addInputConfigsItem(BatchDocumentInputConfig inputConfigsItem) {
    if (this.inputConfigs == null) {
      this.inputConfigs = new ArrayList<>();
    }
    this.inputConfigs.add(inputConfigsItem);
    return this;
  }

  /**
   * Required. Input configurations. The total number of files matched should be &lt;&#x3D; 100. The total content size to translate should be &lt;&#x3D; 100M Unicode codepoints. The files must use UTF-8 encoding.
   * @return inputConfigs
   */
  @javax.annotation.Nullable
  public List<BatchDocumentInputConfig> getInputConfigs() {
    return inputConfigs;
  }

  public void setInputConfigs(List<BatchDocumentInputConfig> inputConfigs) {
    this.inputConfigs = inputConfigs;
  }


  public BatchTranslateDocumentRequest models(Map<String, String> models) {
    this.models = models;
    return this;
  }

  public BatchTranslateDocumentRequest putModelsItem(String key, String modelsItem) {
    if (this.models == null) {
      this.models = new HashMap<>();
    }
    this.models.put(key, modelsItem);
    return this;
  }

  /**
   * Optional. The models to use for translation. Map&#39;s key is target language code. Map&#39;s value is the model name. Value can be a built-in general model, or an AutoML Translation model. The value format depends on model type: - AutoML Translation models: &#x60;projects/{project-number-or-id}/locations/{location-id}/models/{model-id}&#x60; - General (built-in) models: &#x60;projects/{project-number-or-id}/locations/{location-id}/models/general/nmt&#x60;, If the map is empty or a specific model is not requested for a language pair, then default google model (nmt) is used.
   * @return models
   */
  @javax.annotation.Nullable
  public Map<String, String> getModels() {
    return models;
  }

  public void setModels(Map<String, String> models) {
    this.models = models;
  }


  public BatchTranslateDocumentRequest outputConfig(BatchDocumentOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nullable
  public BatchDocumentOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(BatchDocumentOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public BatchTranslateDocumentRequest sourceLanguageCode(String sourceLanguageCode) {
    this.sourceLanguageCode = sourceLanguageCode;
    return this;
  }

  /**
   * Required. The BCP-47 language code of the input document if known, for example, \&quot;en-US\&quot; or \&quot;sr-Latn\&quot;. Supported language codes are listed in [Language Support](https://cloud.google.com/translate/docs/languages).
   * @return sourceLanguageCode
   */
  @javax.annotation.Nullable
  public String getSourceLanguageCode() {
    return sourceLanguageCode;
  }

  public void setSourceLanguageCode(String sourceLanguageCode) {
    this.sourceLanguageCode = sourceLanguageCode;
  }


  public BatchTranslateDocumentRequest targetLanguageCodes(List<String> targetLanguageCodes) {
    this.targetLanguageCodes = targetLanguageCodes;
    return this;
  }

  public BatchTranslateDocumentRequest addTargetLanguageCodesItem(String targetLanguageCodesItem) {
    if (this.targetLanguageCodes == null) {
      this.targetLanguageCodes = new ArrayList<>();
    }
    this.targetLanguageCodes.add(targetLanguageCodesItem);
    return this;
  }

  /**
   * Required. The BCP-47 language code to use for translation of the input document. Specify up to 10 language codes here.
   * @return targetLanguageCodes
   */
  @javax.annotation.Nullable
  public List<String> getTargetLanguageCodes() {
    return targetLanguageCodes;
  }

  public void setTargetLanguageCodes(List<String> targetLanguageCodes) {
    this.targetLanguageCodes = targetLanguageCodes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchTranslateDocumentRequest batchTranslateDocumentRequest = (BatchTranslateDocumentRequest) o;
    return Objects.equals(this.customizedAttribution, batchTranslateDocumentRequest.customizedAttribution) &&
        Objects.equals(this.enableShadowRemovalNativePdf, batchTranslateDocumentRequest.enableShadowRemovalNativePdf) &&
        Objects.equals(this.formatConversions, batchTranslateDocumentRequest.formatConversions) &&
        Objects.equals(this.glossaries, batchTranslateDocumentRequest.glossaries) &&
        Objects.equals(this.inputConfigs, batchTranslateDocumentRequest.inputConfigs) &&
        Objects.equals(this.models, batchTranslateDocumentRequest.models) &&
        Objects.equals(this.outputConfig, batchTranslateDocumentRequest.outputConfig) &&
        Objects.equals(this.sourceLanguageCode, batchTranslateDocumentRequest.sourceLanguageCode) &&
        Objects.equals(this.targetLanguageCodes, batchTranslateDocumentRequest.targetLanguageCodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customizedAttribution, enableShadowRemovalNativePdf, formatConversions, glossaries, inputConfigs, models, outputConfig, sourceLanguageCode, targetLanguageCodes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchTranslateDocumentRequest {\n");
    sb.append("    customizedAttribution: ").append(toIndentedString(customizedAttribution)).append("\n");
    sb.append("    enableShadowRemovalNativePdf: ").append(toIndentedString(enableShadowRemovalNativePdf)).append("\n");
    sb.append("    formatConversions: ").append(toIndentedString(formatConversions)).append("\n");
    sb.append("    glossaries: ").append(toIndentedString(glossaries)).append("\n");
    sb.append("    inputConfigs: ").append(toIndentedString(inputConfigs)).append("\n");
    sb.append("    models: ").append(toIndentedString(models)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    sourceLanguageCode: ").append(toIndentedString(sourceLanguageCode)).append("\n");
    sb.append("    targetLanguageCodes: ").append(toIndentedString(targetLanguageCodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customizedAttribution");
    openapiFields.add("enableShadowRemovalNativePdf");
    openapiFields.add("formatConversions");
    openapiFields.add("glossaries");
    openapiFields.add("inputConfigs");
    openapiFields.add("models");
    openapiFields.add("outputConfig");
    openapiFields.add("sourceLanguageCode");
    openapiFields.add("targetLanguageCodes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BatchTranslateDocumentRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BatchTranslateDocumentRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BatchTranslateDocumentRequest is not found in the empty JSON string", BatchTranslateDocumentRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BatchTranslateDocumentRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BatchTranslateDocumentRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customizedAttribution") != null && !jsonObj.get("customizedAttribution").isJsonNull()) && !jsonObj.get("customizedAttribution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customizedAttribution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customizedAttribution").toString()));
      }
      if (jsonObj.get("inputConfigs") != null && !jsonObj.get("inputConfigs").isJsonNull()) {
        JsonArray jsonArrayinputConfigs = jsonObj.getAsJsonArray("inputConfigs");
        if (jsonArrayinputConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inputConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inputConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("inputConfigs").toString()));
          }

          // validate the optional field `inputConfigs` (array)
          for (int i = 0; i < jsonArrayinputConfigs.size(); i++) {
            BatchDocumentInputConfig.validateJsonElement(jsonArrayinputConfigs.get(i));
          };
        }
      }
      // validate the optional field `outputConfig`
      if (jsonObj.get("outputConfig") != null && !jsonObj.get("outputConfig").isJsonNull()) {
        BatchDocumentOutputConfig.validateJsonElement(jsonObj.get("outputConfig"));
      }
      if ((jsonObj.get("sourceLanguageCode") != null && !jsonObj.get("sourceLanguageCode").isJsonNull()) && !jsonObj.get("sourceLanguageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceLanguageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceLanguageCode").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("targetLanguageCodes") != null && !jsonObj.get("targetLanguageCodes").isJsonNull() && !jsonObj.get("targetLanguageCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetLanguageCodes` to be an array in the JSON string but got `%s`", jsonObj.get("targetLanguageCodes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BatchTranslateDocumentRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BatchTranslateDocumentRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BatchTranslateDocumentRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BatchTranslateDocumentRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<BatchTranslateDocumentRequest>() {
           @Override
           public void write(JsonWriter out, BatchTranslateDocumentRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BatchTranslateDocumentRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BatchTranslateDocumentRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BatchTranslateDocumentRequest
   * @throws IOException if the JSON string is invalid with respect to BatchTranslateDocumentRequest
   */
  public static BatchTranslateDocumentRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BatchTranslateDocumentRequest.class);
  }

  /**
   * Convert an instance of BatchTranslateDocumentRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

