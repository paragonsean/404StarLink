/*
 * Cloud Translation API
 * Integrates text translation into your website or application.
 *
 * The version of the OpenAPI document: v3beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.DocumentInputConfig;
import org.openapitools.client.model.DocumentOutputConfig;
import org.openapitools.client.model.TranslateTextGlossaryConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A document translation request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:18:25.577525-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TranslateDocumentRequest {
  public static final String SERIALIZED_NAME_CUSTOMIZED_ATTRIBUTION = "customizedAttribution";
  @SerializedName(SERIALIZED_NAME_CUSTOMIZED_ATTRIBUTION)
  private String customizedAttribution;

  public static final String SERIALIZED_NAME_DOCUMENT_INPUT_CONFIG = "documentInputConfig";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_INPUT_CONFIG)
  private DocumentInputConfig documentInputConfig;

  public static final String SERIALIZED_NAME_DOCUMENT_OUTPUT_CONFIG = "documentOutputConfig";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_OUTPUT_CONFIG)
  private DocumentOutputConfig documentOutputConfig;

  public static final String SERIALIZED_NAME_ENABLE_ROTATION_CORRECTION = "enableRotationCorrection";
  @SerializedName(SERIALIZED_NAME_ENABLE_ROTATION_CORRECTION)
  private Boolean enableRotationCorrection;

  public static final String SERIALIZED_NAME_ENABLE_SHADOW_REMOVAL_NATIVE_PDF = "enableShadowRemovalNativePdf";
  @SerializedName(SERIALIZED_NAME_ENABLE_SHADOW_REMOVAL_NATIVE_PDF)
  private Boolean enableShadowRemovalNativePdf;

  public static final String SERIALIZED_NAME_GLOSSARY_CONFIG = "glossaryConfig";
  @SerializedName(SERIALIZED_NAME_GLOSSARY_CONFIG)
  private TranslateTextGlossaryConfig glossaryConfig;

  public static final String SERIALIZED_NAME_IS_TRANSLATE_NATIVE_PDF_ONLY = "isTranslateNativePdfOnly";
  @SerializedName(SERIALIZED_NAME_IS_TRANSLATE_NATIVE_PDF_ONLY)
  private Boolean isTranslateNativePdfOnly;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_SOURCE_LANGUAGE_CODE = "sourceLanguageCode";
  @SerializedName(SERIALIZED_NAME_SOURCE_LANGUAGE_CODE)
  private String sourceLanguageCode;

  public static final String SERIALIZED_NAME_TARGET_LANGUAGE_CODE = "targetLanguageCode";
  @SerializedName(SERIALIZED_NAME_TARGET_LANGUAGE_CODE)
  private String targetLanguageCode;

  public TranslateDocumentRequest() {
  }

  public TranslateDocumentRequest customizedAttribution(String customizedAttribution) {
    this.customizedAttribution = customizedAttribution;
    return this;
  }

  /**
   * Optional. This flag is to support user customized attribution. If not provided, the default is &#x60;Machine Translated by Google&#x60;. Customized attribution should follow rules in https://cloud.google.com/translate/attribution#attribution_and_logos
   * @return customizedAttribution
   */
  @javax.annotation.Nullable
  public String getCustomizedAttribution() {
    return customizedAttribution;
  }

  public void setCustomizedAttribution(String customizedAttribution) {
    this.customizedAttribution = customizedAttribution;
  }


  public TranslateDocumentRequest documentInputConfig(DocumentInputConfig documentInputConfig) {
    this.documentInputConfig = documentInputConfig;
    return this;
  }

  /**
   * Get documentInputConfig
   * @return documentInputConfig
   */
  @javax.annotation.Nullable
  public DocumentInputConfig getDocumentInputConfig() {
    return documentInputConfig;
  }

  public void setDocumentInputConfig(DocumentInputConfig documentInputConfig) {
    this.documentInputConfig = documentInputConfig;
  }


  public TranslateDocumentRequest documentOutputConfig(DocumentOutputConfig documentOutputConfig) {
    this.documentOutputConfig = documentOutputConfig;
    return this;
  }

  /**
   * Get documentOutputConfig
   * @return documentOutputConfig
   */
  @javax.annotation.Nullable
  public DocumentOutputConfig getDocumentOutputConfig() {
    return documentOutputConfig;
  }

  public void setDocumentOutputConfig(DocumentOutputConfig documentOutputConfig) {
    this.documentOutputConfig = documentOutputConfig;
  }


  public TranslateDocumentRequest enableRotationCorrection(Boolean enableRotationCorrection) {
    this.enableRotationCorrection = enableRotationCorrection;
    return this;
  }

  /**
   * Optional. If true, enable auto rotation correction in DVS.
   * @return enableRotationCorrection
   */
  @javax.annotation.Nullable
  public Boolean getEnableRotationCorrection() {
    return enableRotationCorrection;
  }

  public void setEnableRotationCorrection(Boolean enableRotationCorrection) {
    this.enableRotationCorrection = enableRotationCorrection;
  }


  public TranslateDocumentRequest enableShadowRemovalNativePdf(Boolean enableShadowRemovalNativePdf) {
    this.enableShadowRemovalNativePdf = enableShadowRemovalNativePdf;
    return this;
  }

  /**
   * Optional. If true, use the text removal server to remove the shadow text on background image for native pdf translation. Shadow removal feature can only be enabled when is_translate_native_pdf_only: false &amp;&amp; pdf_native_only: false
   * @return enableShadowRemovalNativePdf
   */
  @javax.annotation.Nullable
  public Boolean getEnableShadowRemovalNativePdf() {
    return enableShadowRemovalNativePdf;
  }

  public void setEnableShadowRemovalNativePdf(Boolean enableShadowRemovalNativePdf) {
    this.enableShadowRemovalNativePdf = enableShadowRemovalNativePdf;
  }


  public TranslateDocumentRequest glossaryConfig(TranslateTextGlossaryConfig glossaryConfig) {
    this.glossaryConfig = glossaryConfig;
    return this;
  }

  /**
   * Get glossaryConfig
   * @return glossaryConfig
   */
  @javax.annotation.Nullable
  public TranslateTextGlossaryConfig getGlossaryConfig() {
    return glossaryConfig;
  }

  public void setGlossaryConfig(TranslateTextGlossaryConfig glossaryConfig) {
    this.glossaryConfig = glossaryConfig;
  }


  public TranslateDocumentRequest isTranslateNativePdfOnly(Boolean isTranslateNativePdfOnly) {
    this.isTranslateNativePdfOnly = isTranslateNativePdfOnly;
    return this;
  }

  /**
   * Optional. is_translate_native_pdf_only field for external customers. If true, the page limit of online native pdf translation is 300 and only native pdf pages will be translated.
   * @return isTranslateNativePdfOnly
   */
  @javax.annotation.Nullable
  public Boolean getIsTranslateNativePdfOnly() {
    return isTranslateNativePdfOnly;
  }

  public void setIsTranslateNativePdfOnly(Boolean isTranslateNativePdfOnly) {
    this.isTranslateNativePdfOnly = isTranslateNativePdfOnly;
  }


  public TranslateDocumentRequest labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public TranslateDocumentRequest putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public TranslateDocumentRequest model(String model) {
    this.model = model;
    return this;
  }

  /**
   * Optional. The &#x60;model&#x60; type requested for this translation. The format depends on model type: - AutoML Translation models: &#x60;projects/{project-number-or-id}/locations/{location-id}/models/{model-id}&#x60; - General (built-in) models: &#x60;projects/{project-number-or-id}/locations/{location-id}/models/general/nmt&#x60;, If not provided, the default Google model (NMT) will be used for translation.
   * @return model
   */
  @javax.annotation.Nullable
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }


  public TranslateDocumentRequest sourceLanguageCode(String sourceLanguageCode) {
    this.sourceLanguageCode = sourceLanguageCode;
    return this;
  }

  /**
   * Optional. The BCP-47 language code of the input document if known, for example, \&quot;en-US\&quot; or \&quot;sr-Latn\&quot;. Supported language codes are listed in Language Support. If the source language isn&#39;t specified, the API attempts to identify the source language automatically and returns the source language within the response. Source language must be specified if the request contains a glossary or a custom model.
   * @return sourceLanguageCode
   */
  @javax.annotation.Nullable
  public String getSourceLanguageCode() {
    return sourceLanguageCode;
  }

  public void setSourceLanguageCode(String sourceLanguageCode) {
    this.sourceLanguageCode = sourceLanguageCode;
  }


  public TranslateDocumentRequest targetLanguageCode(String targetLanguageCode) {
    this.targetLanguageCode = targetLanguageCode;
    return this;
  }

  /**
   * Required. The BCP-47 language code to use for translation of the input document, set to one of the language codes listed in Language Support.
   * @return targetLanguageCode
   */
  @javax.annotation.Nullable
  public String getTargetLanguageCode() {
    return targetLanguageCode;
  }

  public void setTargetLanguageCode(String targetLanguageCode) {
    this.targetLanguageCode = targetLanguageCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TranslateDocumentRequest translateDocumentRequest = (TranslateDocumentRequest) o;
    return Objects.equals(this.customizedAttribution, translateDocumentRequest.customizedAttribution) &&
        Objects.equals(this.documentInputConfig, translateDocumentRequest.documentInputConfig) &&
        Objects.equals(this.documentOutputConfig, translateDocumentRequest.documentOutputConfig) &&
        Objects.equals(this.enableRotationCorrection, translateDocumentRequest.enableRotationCorrection) &&
        Objects.equals(this.enableShadowRemovalNativePdf, translateDocumentRequest.enableShadowRemovalNativePdf) &&
        Objects.equals(this.glossaryConfig, translateDocumentRequest.glossaryConfig) &&
        Objects.equals(this.isTranslateNativePdfOnly, translateDocumentRequest.isTranslateNativePdfOnly) &&
        Objects.equals(this.labels, translateDocumentRequest.labels) &&
        Objects.equals(this.model, translateDocumentRequest.model) &&
        Objects.equals(this.sourceLanguageCode, translateDocumentRequest.sourceLanguageCode) &&
        Objects.equals(this.targetLanguageCode, translateDocumentRequest.targetLanguageCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customizedAttribution, documentInputConfig, documentOutputConfig, enableRotationCorrection, enableShadowRemovalNativePdf, glossaryConfig, isTranslateNativePdfOnly, labels, model, sourceLanguageCode, targetLanguageCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TranslateDocumentRequest {\n");
    sb.append("    customizedAttribution: ").append(toIndentedString(customizedAttribution)).append("\n");
    sb.append("    documentInputConfig: ").append(toIndentedString(documentInputConfig)).append("\n");
    sb.append("    documentOutputConfig: ").append(toIndentedString(documentOutputConfig)).append("\n");
    sb.append("    enableRotationCorrection: ").append(toIndentedString(enableRotationCorrection)).append("\n");
    sb.append("    enableShadowRemovalNativePdf: ").append(toIndentedString(enableShadowRemovalNativePdf)).append("\n");
    sb.append("    glossaryConfig: ").append(toIndentedString(glossaryConfig)).append("\n");
    sb.append("    isTranslateNativePdfOnly: ").append(toIndentedString(isTranslateNativePdfOnly)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    sourceLanguageCode: ").append(toIndentedString(sourceLanguageCode)).append("\n");
    sb.append("    targetLanguageCode: ").append(toIndentedString(targetLanguageCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customizedAttribution");
    openapiFields.add("documentInputConfig");
    openapiFields.add("documentOutputConfig");
    openapiFields.add("enableRotationCorrection");
    openapiFields.add("enableShadowRemovalNativePdf");
    openapiFields.add("glossaryConfig");
    openapiFields.add("isTranslateNativePdfOnly");
    openapiFields.add("labels");
    openapiFields.add("model");
    openapiFields.add("sourceLanguageCode");
    openapiFields.add("targetLanguageCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TranslateDocumentRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TranslateDocumentRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TranslateDocumentRequest is not found in the empty JSON string", TranslateDocumentRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TranslateDocumentRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TranslateDocumentRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customizedAttribution") != null && !jsonObj.get("customizedAttribution").isJsonNull()) && !jsonObj.get("customizedAttribution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customizedAttribution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customizedAttribution").toString()));
      }
      // validate the optional field `documentInputConfig`
      if (jsonObj.get("documentInputConfig") != null && !jsonObj.get("documentInputConfig").isJsonNull()) {
        DocumentInputConfig.validateJsonElement(jsonObj.get("documentInputConfig"));
      }
      // validate the optional field `documentOutputConfig`
      if (jsonObj.get("documentOutputConfig") != null && !jsonObj.get("documentOutputConfig").isJsonNull()) {
        DocumentOutputConfig.validateJsonElement(jsonObj.get("documentOutputConfig"));
      }
      // validate the optional field `glossaryConfig`
      if (jsonObj.get("glossaryConfig") != null && !jsonObj.get("glossaryConfig").isJsonNull()) {
        TranslateTextGlossaryConfig.validateJsonElement(jsonObj.get("glossaryConfig"));
      }
      if ((jsonObj.get("model") != null && !jsonObj.get("model").isJsonNull()) && !jsonObj.get("model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model").toString()));
      }
      if ((jsonObj.get("sourceLanguageCode") != null && !jsonObj.get("sourceLanguageCode").isJsonNull()) && !jsonObj.get("sourceLanguageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceLanguageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceLanguageCode").toString()));
      }
      if ((jsonObj.get("targetLanguageCode") != null && !jsonObj.get("targetLanguageCode").isJsonNull()) && !jsonObj.get("targetLanguageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetLanguageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetLanguageCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TranslateDocumentRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TranslateDocumentRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TranslateDocumentRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TranslateDocumentRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TranslateDocumentRequest>() {
           @Override
           public void write(JsonWriter out, TranslateDocumentRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TranslateDocumentRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TranslateDocumentRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TranslateDocumentRequest
   * @throws IOException if the JSON string is invalid with respect to TranslateDocumentRequest
   */
  public static TranslateDocumentRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TranslateDocumentRequest.class);
  }

  /**
   * Convert an instance of TranslateDocumentRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

