# coding: utf-8

"""
    Cloud Build API

    Creates and manages builds on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bitbucket_server_trigger_config import BitbucketServerTriggerConfig

class TestBitbucketServerTriggerConfig(unittest.TestCase):
    """BitbucketServerTriggerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BitbucketServerTriggerConfig:
        """Test BitbucketServerTriggerConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BitbucketServerTriggerConfig`
        """
        model = BitbucketServerTriggerConfig()
        if include_optional:
            return BitbucketServerTriggerConfig(
                bitbucket_server_config = openapi_client.models.bitbucket_server_config.BitbucketServerConfig(
                    api_key = '', 
                    connected_repositories = [
                        openapi_client.models.bitbucket_server_repository_id.BitbucketServerRepositoryId(
                            project_key = '', 
                            repo_slug = '', 
                            webhook_id = 56, )
                        ], 
                    create_time = '', 
                    host_uri = '', 
                    name = '', 
                    peered_network = '', 
                    secrets = openapi_client.models.bitbucket_server_secrets.BitbucketServerSecrets(
                        admin_access_token_version_name = '', 
                        read_access_token_version_name = '', 
                        webhook_secret_version_name = '', ), 
                    ssl_ca = '', 
                    username = '', 
                    webhook_key = '', ),
                bitbucket_server_config_resource = '',
                project_key = '',
                pull_request = openapi_client.models.pull_request_filter.PullRequestFilter(
                    branch = '', 
                    comment_control = 'COMMENTS_DISABLED', 
                    invert_regex = True, ),
                push = openapi_client.models.push_filter.PushFilter(
                    branch = '', 
                    invert_regex = True, 
                    tag = '', ),
                repo_slug = ''
            )
        else:
            return BitbucketServerTriggerConfig(
        )
        """

    def testBitbucketServerTriggerConfig(self):
        """Test BitbucketServerTriggerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
