/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AZMode;
import org.openapitools.client.model.IpDiscovery;
import org.openapitools.client.model.NetworkType;
import org.openapitools.client.model.OutpostMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the input of a CreateCacheCluster operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:03:41.807787-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCacheClusterMessage {
  public static final String SERIALIZED_NAME_CACHE_CLUSTER_ID = "CacheClusterId";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_ID)
  private String cacheClusterId;

  public static final String SERIALIZED_NAME_REPLICATION_GROUP_ID = "ReplicationGroupId";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_ID)
  private String replicationGroupId;

  public static final String SERIALIZED_NAME_AZ_MODE = "AZMode";
  @SerializedName(SERIALIZED_NAME_AZ_MODE)
  private AZMode azMode;

  public static final String SERIALIZED_NAME_PREFERRED_AVAILABILITY_ZONE = "PreferredAvailabilityZone";
  @SerializedName(SERIALIZED_NAME_PREFERRED_AVAILABILITY_ZONE)
  private String preferredAvailabilityZone;

  public static final String SERIALIZED_NAME_PREFERRED_AVAILABILITY_ZONES = "PreferredAvailabilityZones";
  @SerializedName(SERIALIZED_NAME_PREFERRED_AVAILABILITY_ZONES)
  private List preferredAvailabilityZones;

  public static final String SERIALIZED_NAME_NUM_CACHE_NODES = "NumCacheNodes";
  @SerializedName(SERIALIZED_NAME_NUM_CACHE_NODES)
  private Integer numCacheNodes;

  public static final String SERIALIZED_NAME_CACHE_NODE_TYPE = "CacheNodeType";
  @SerializedName(SERIALIZED_NAME_CACHE_NODE_TYPE)
  private String cacheNodeType;

  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private String engine;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_CACHE_PARAMETER_GROUP_NAME = "CacheParameterGroupName";
  @SerializedName(SERIALIZED_NAME_CACHE_PARAMETER_GROUP_NAME)
  private String cacheParameterGroupName;

  public static final String SERIALIZED_NAME_CACHE_SUBNET_GROUP_NAME = "CacheSubnetGroupName";
  @SerializedName(SERIALIZED_NAME_CACHE_SUBNET_GROUP_NAME)
  private String cacheSubnetGroupName;

  public static final String SERIALIZED_NAME_CACHE_SECURITY_GROUP_NAMES = "CacheSecurityGroupNames";
  @SerializedName(SERIALIZED_NAME_CACHE_SECURITY_GROUP_NAMES)
  private List cacheSecurityGroupNames;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_SNAPSHOT_ARNS = "SnapshotArns";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_ARNS)
  private List snapshotArns;

  public static final String SERIALIZED_NAME_SNAPSHOT_NAME = "SnapshotName";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_NAME)
  private String snapshotName;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_NOTIFICATION_TOPIC_ARN = "NotificationTopicArn";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TOPIC_ARN)
  private String notificationTopicArn;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT = "SnapshotRetentionLimit";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT)
  private Integer snapshotRetentionLimit;

  public static final String SERIALIZED_NAME_SNAPSHOT_WINDOW = "SnapshotWindow";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_WINDOW)
  private String snapshotWindow;

  public static final String SERIALIZED_NAME_AUTH_TOKEN = "AuthToken";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN)
  private String authToken;

  public static final String SERIALIZED_NAME_OUTPOST_MODE = "OutpostMode";
  @SerializedName(SERIALIZED_NAME_OUTPOST_MODE)
  private OutpostMode outpostMode;

  public static final String SERIALIZED_NAME_PREFERRED_OUTPOST_ARN = "PreferredOutpostArn";
  @SerializedName(SERIALIZED_NAME_PREFERRED_OUTPOST_ARN)
  private String preferredOutpostArn;

  public static final String SERIALIZED_NAME_PREFERRED_OUTPOST_ARNS = "PreferredOutpostArns";
  @SerializedName(SERIALIZED_NAME_PREFERRED_OUTPOST_ARNS)
  private List preferredOutpostArns;

  public static final String SERIALIZED_NAME_LOG_DELIVERY_CONFIGURATIONS = "LogDeliveryConfigurations";
  @SerializedName(SERIALIZED_NAME_LOG_DELIVERY_CONFIGURATIONS)
  private List logDeliveryConfigurations;

  public static final String SERIALIZED_NAME_TRANSIT_ENCRYPTION_ENABLED = "TransitEncryptionEnabled";
  @SerializedName(SERIALIZED_NAME_TRANSIT_ENCRYPTION_ENABLED)
  private Boolean transitEncryptionEnabled;

  public static final String SERIALIZED_NAME_NETWORK_TYPE = "NetworkType";
  @SerializedName(SERIALIZED_NAME_NETWORK_TYPE)
  private NetworkType networkType;

  public static final String SERIALIZED_NAME_IP_DISCOVERY = "IpDiscovery";
  @SerializedName(SERIALIZED_NAME_IP_DISCOVERY)
  private IpDiscovery ipDiscovery;

  public CreateCacheClusterMessage() {
  }

  public CreateCacheClusterMessage cacheClusterId(String cacheClusterId) {
    this.cacheClusterId = cacheClusterId;
    return this;
  }

  /**
   * Get cacheClusterId
   * @return cacheClusterId
   */
  @javax.annotation.Nonnull
  public String getCacheClusterId() {
    return cacheClusterId;
  }

  public void setCacheClusterId(String cacheClusterId) {
    this.cacheClusterId = cacheClusterId;
  }


  public CreateCacheClusterMessage replicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
    return this;
  }

  /**
   * Get replicationGroupId
   * @return replicationGroupId
   */
  @javax.annotation.Nullable
  public String getReplicationGroupId() {
    return replicationGroupId;
  }

  public void setReplicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
  }


  public CreateCacheClusterMessage azMode(AZMode azMode) {
    this.azMode = azMode;
    return this;
  }

  /**
   * Get azMode
   * @return azMode
   */
  @javax.annotation.Nullable
  public AZMode getAzMode() {
    return azMode;
  }

  public void setAzMode(AZMode azMode) {
    this.azMode = azMode;
  }


  public CreateCacheClusterMessage preferredAvailabilityZone(String preferredAvailabilityZone) {
    this.preferredAvailabilityZone = preferredAvailabilityZone;
    return this;
  }

  /**
   * Get preferredAvailabilityZone
   * @return preferredAvailabilityZone
   */
  @javax.annotation.Nullable
  public String getPreferredAvailabilityZone() {
    return preferredAvailabilityZone;
  }

  public void setPreferredAvailabilityZone(String preferredAvailabilityZone) {
    this.preferredAvailabilityZone = preferredAvailabilityZone;
  }


  public CreateCacheClusterMessage preferredAvailabilityZones(List preferredAvailabilityZones) {
    this.preferredAvailabilityZones = preferredAvailabilityZones;
    return this;
  }

  /**
   * Get preferredAvailabilityZones
   * @return preferredAvailabilityZones
   */
  @javax.annotation.Nullable
  public List getPreferredAvailabilityZones() {
    return preferredAvailabilityZones;
  }

  public void setPreferredAvailabilityZones(List preferredAvailabilityZones) {
    this.preferredAvailabilityZones = preferredAvailabilityZones;
  }


  public CreateCacheClusterMessage numCacheNodes(Integer numCacheNodes) {
    this.numCacheNodes = numCacheNodes;
    return this;
  }

  /**
   * Get numCacheNodes
   * @return numCacheNodes
   */
  @javax.annotation.Nullable
  public Integer getNumCacheNodes() {
    return numCacheNodes;
  }

  public void setNumCacheNodes(Integer numCacheNodes) {
    this.numCacheNodes = numCacheNodes;
  }


  public CreateCacheClusterMessage cacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
    return this;
  }

  /**
   * Get cacheNodeType
   * @return cacheNodeType
   */
  @javax.annotation.Nullable
  public String getCacheNodeType() {
    return cacheNodeType;
  }

  public void setCacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
  }


  public CreateCacheClusterMessage engine(String engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }


  public CreateCacheClusterMessage engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public CreateCacheClusterMessage cacheParameterGroupName(String cacheParameterGroupName) {
    this.cacheParameterGroupName = cacheParameterGroupName;
    return this;
  }

  /**
   * Get cacheParameterGroupName
   * @return cacheParameterGroupName
   */
  @javax.annotation.Nullable
  public String getCacheParameterGroupName() {
    return cacheParameterGroupName;
  }

  public void setCacheParameterGroupName(String cacheParameterGroupName) {
    this.cacheParameterGroupName = cacheParameterGroupName;
  }


  public CreateCacheClusterMessage cacheSubnetGroupName(String cacheSubnetGroupName) {
    this.cacheSubnetGroupName = cacheSubnetGroupName;
    return this;
  }

  /**
   * Get cacheSubnetGroupName
   * @return cacheSubnetGroupName
   */
  @javax.annotation.Nullable
  public String getCacheSubnetGroupName() {
    return cacheSubnetGroupName;
  }

  public void setCacheSubnetGroupName(String cacheSubnetGroupName) {
    this.cacheSubnetGroupName = cacheSubnetGroupName;
  }


  public CreateCacheClusterMessage cacheSecurityGroupNames(List cacheSecurityGroupNames) {
    this.cacheSecurityGroupNames = cacheSecurityGroupNames;
    return this;
  }

  /**
   * Get cacheSecurityGroupNames
   * @return cacheSecurityGroupNames
   */
  @javax.annotation.Nullable
  public List getCacheSecurityGroupNames() {
    return cacheSecurityGroupNames;
  }

  public void setCacheSecurityGroupNames(List cacheSecurityGroupNames) {
    this.cacheSecurityGroupNames = cacheSecurityGroupNames;
  }


  public CreateCacheClusterMessage securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public CreateCacheClusterMessage tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateCacheClusterMessage snapshotArns(List snapshotArns) {
    this.snapshotArns = snapshotArns;
    return this;
  }

  /**
   * Get snapshotArns
   * @return snapshotArns
   */
  @javax.annotation.Nullable
  public List getSnapshotArns() {
    return snapshotArns;
  }

  public void setSnapshotArns(List snapshotArns) {
    this.snapshotArns = snapshotArns;
  }


  public CreateCacheClusterMessage snapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
    return this;
  }

  /**
   * Get snapshotName
   * @return snapshotName
   */
  @javax.annotation.Nullable
  public String getSnapshotName() {
    return snapshotName;
  }

  public void setSnapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
  }


  public CreateCacheClusterMessage preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public CreateCacheClusterMessage port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public CreateCacheClusterMessage notificationTopicArn(String notificationTopicArn) {
    this.notificationTopicArn = notificationTopicArn;
    return this;
  }

  /**
   * Get notificationTopicArn
   * @return notificationTopicArn
   */
  @javax.annotation.Nullable
  public String getNotificationTopicArn() {
    return notificationTopicArn;
  }

  public void setNotificationTopicArn(String notificationTopicArn) {
    this.notificationTopicArn = notificationTopicArn;
  }


  public CreateCacheClusterMessage autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public CreateCacheClusterMessage snapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
    return this;
  }

  /**
   * Get snapshotRetentionLimit
   * @return snapshotRetentionLimit
   */
  @javax.annotation.Nullable
  public Integer getSnapshotRetentionLimit() {
    return snapshotRetentionLimit;
  }

  public void setSnapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
  }


  public CreateCacheClusterMessage snapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
    return this;
  }

  /**
   * Get snapshotWindow
   * @return snapshotWindow
   */
  @javax.annotation.Nullable
  public String getSnapshotWindow() {
    return snapshotWindow;
  }

  public void setSnapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
  }


  public CreateCacheClusterMessage authToken(String authToken) {
    this.authToken = authToken;
    return this;
  }

  /**
   * Get authToken
   * @return authToken
   */
  @javax.annotation.Nullable
  public String getAuthToken() {
    return authToken;
  }

  public void setAuthToken(String authToken) {
    this.authToken = authToken;
  }


  public CreateCacheClusterMessage outpostMode(OutpostMode outpostMode) {
    this.outpostMode = outpostMode;
    return this;
  }

  /**
   * Get outpostMode
   * @return outpostMode
   */
  @javax.annotation.Nullable
  public OutpostMode getOutpostMode() {
    return outpostMode;
  }

  public void setOutpostMode(OutpostMode outpostMode) {
    this.outpostMode = outpostMode;
  }


  public CreateCacheClusterMessage preferredOutpostArn(String preferredOutpostArn) {
    this.preferredOutpostArn = preferredOutpostArn;
    return this;
  }

  /**
   * Get preferredOutpostArn
   * @return preferredOutpostArn
   */
  @javax.annotation.Nullable
  public String getPreferredOutpostArn() {
    return preferredOutpostArn;
  }

  public void setPreferredOutpostArn(String preferredOutpostArn) {
    this.preferredOutpostArn = preferredOutpostArn;
  }


  public CreateCacheClusterMessage preferredOutpostArns(List preferredOutpostArns) {
    this.preferredOutpostArns = preferredOutpostArns;
    return this;
  }

  /**
   * Get preferredOutpostArns
   * @return preferredOutpostArns
   */
  @javax.annotation.Nullable
  public List getPreferredOutpostArns() {
    return preferredOutpostArns;
  }

  public void setPreferredOutpostArns(List preferredOutpostArns) {
    this.preferredOutpostArns = preferredOutpostArns;
  }


  public CreateCacheClusterMessage logDeliveryConfigurations(List logDeliveryConfigurations) {
    this.logDeliveryConfigurations = logDeliveryConfigurations;
    return this;
  }

  /**
   * Get logDeliveryConfigurations
   * @return logDeliveryConfigurations
   */
  @javax.annotation.Nullable
  public List getLogDeliveryConfigurations() {
    return logDeliveryConfigurations;
  }

  public void setLogDeliveryConfigurations(List logDeliveryConfigurations) {
    this.logDeliveryConfigurations = logDeliveryConfigurations;
  }


  public CreateCacheClusterMessage transitEncryptionEnabled(Boolean transitEncryptionEnabled) {
    this.transitEncryptionEnabled = transitEncryptionEnabled;
    return this;
  }

  /**
   * Get transitEncryptionEnabled
   * @return transitEncryptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTransitEncryptionEnabled() {
    return transitEncryptionEnabled;
  }

  public void setTransitEncryptionEnabled(Boolean transitEncryptionEnabled) {
    this.transitEncryptionEnabled = transitEncryptionEnabled;
  }


  public CreateCacheClusterMessage networkType(NetworkType networkType) {
    this.networkType = networkType;
    return this;
  }

  /**
   * Get networkType
   * @return networkType
   */
  @javax.annotation.Nullable
  public NetworkType getNetworkType() {
    return networkType;
  }

  public void setNetworkType(NetworkType networkType) {
    this.networkType = networkType;
  }


  public CreateCacheClusterMessage ipDiscovery(IpDiscovery ipDiscovery) {
    this.ipDiscovery = ipDiscovery;
    return this;
  }

  /**
   * Get ipDiscovery
   * @return ipDiscovery
   */
  @javax.annotation.Nullable
  public IpDiscovery getIpDiscovery() {
    return ipDiscovery;
  }

  public void setIpDiscovery(IpDiscovery ipDiscovery) {
    this.ipDiscovery = ipDiscovery;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCacheClusterMessage createCacheClusterMessage = (CreateCacheClusterMessage) o;
    return Objects.equals(this.cacheClusterId, createCacheClusterMessage.cacheClusterId) &&
        Objects.equals(this.replicationGroupId, createCacheClusterMessage.replicationGroupId) &&
        Objects.equals(this.azMode, createCacheClusterMessage.azMode) &&
        Objects.equals(this.preferredAvailabilityZone, createCacheClusterMessage.preferredAvailabilityZone) &&
        Objects.equals(this.preferredAvailabilityZones, createCacheClusterMessage.preferredAvailabilityZones) &&
        Objects.equals(this.numCacheNodes, createCacheClusterMessage.numCacheNodes) &&
        Objects.equals(this.cacheNodeType, createCacheClusterMessage.cacheNodeType) &&
        Objects.equals(this.engine, createCacheClusterMessage.engine) &&
        Objects.equals(this.engineVersion, createCacheClusterMessage.engineVersion) &&
        Objects.equals(this.cacheParameterGroupName, createCacheClusterMessage.cacheParameterGroupName) &&
        Objects.equals(this.cacheSubnetGroupName, createCacheClusterMessage.cacheSubnetGroupName) &&
        Objects.equals(this.cacheSecurityGroupNames, createCacheClusterMessage.cacheSecurityGroupNames) &&
        Objects.equals(this.securityGroupIds, createCacheClusterMessage.securityGroupIds) &&
        Objects.equals(this.tags, createCacheClusterMessage.tags) &&
        Objects.equals(this.snapshotArns, createCacheClusterMessage.snapshotArns) &&
        Objects.equals(this.snapshotName, createCacheClusterMessage.snapshotName) &&
        Objects.equals(this.preferredMaintenanceWindow, createCacheClusterMessage.preferredMaintenanceWindow) &&
        Objects.equals(this.port, createCacheClusterMessage.port) &&
        Objects.equals(this.notificationTopicArn, createCacheClusterMessage.notificationTopicArn) &&
        Objects.equals(this.autoMinorVersionUpgrade, createCacheClusterMessage.autoMinorVersionUpgrade) &&
        Objects.equals(this.snapshotRetentionLimit, createCacheClusterMessage.snapshotRetentionLimit) &&
        Objects.equals(this.snapshotWindow, createCacheClusterMessage.snapshotWindow) &&
        Objects.equals(this.authToken, createCacheClusterMessage.authToken) &&
        Objects.equals(this.outpostMode, createCacheClusterMessage.outpostMode) &&
        Objects.equals(this.preferredOutpostArn, createCacheClusterMessage.preferredOutpostArn) &&
        Objects.equals(this.preferredOutpostArns, createCacheClusterMessage.preferredOutpostArns) &&
        Objects.equals(this.logDeliveryConfigurations, createCacheClusterMessage.logDeliveryConfigurations) &&
        Objects.equals(this.transitEncryptionEnabled, createCacheClusterMessage.transitEncryptionEnabled) &&
        Objects.equals(this.networkType, createCacheClusterMessage.networkType) &&
        Objects.equals(this.ipDiscovery, createCacheClusterMessage.ipDiscovery);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacheClusterId, replicationGroupId, azMode, preferredAvailabilityZone, preferredAvailabilityZones, numCacheNodes, cacheNodeType, engine, engineVersion, cacheParameterGroupName, cacheSubnetGroupName, cacheSecurityGroupNames, securityGroupIds, tags, snapshotArns, snapshotName, preferredMaintenanceWindow, port, notificationTopicArn, autoMinorVersionUpgrade, snapshotRetentionLimit, snapshotWindow, authToken, outpostMode, preferredOutpostArn, preferredOutpostArns, logDeliveryConfigurations, transitEncryptionEnabled, networkType, ipDiscovery);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCacheClusterMessage {\n");
    sb.append("    cacheClusterId: ").append(toIndentedString(cacheClusterId)).append("\n");
    sb.append("    replicationGroupId: ").append(toIndentedString(replicationGroupId)).append("\n");
    sb.append("    azMode: ").append(toIndentedString(azMode)).append("\n");
    sb.append("    preferredAvailabilityZone: ").append(toIndentedString(preferredAvailabilityZone)).append("\n");
    sb.append("    preferredAvailabilityZones: ").append(toIndentedString(preferredAvailabilityZones)).append("\n");
    sb.append("    numCacheNodes: ").append(toIndentedString(numCacheNodes)).append("\n");
    sb.append("    cacheNodeType: ").append(toIndentedString(cacheNodeType)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    cacheParameterGroupName: ").append(toIndentedString(cacheParameterGroupName)).append("\n");
    sb.append("    cacheSubnetGroupName: ").append(toIndentedString(cacheSubnetGroupName)).append("\n");
    sb.append("    cacheSecurityGroupNames: ").append(toIndentedString(cacheSecurityGroupNames)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    snapshotArns: ").append(toIndentedString(snapshotArns)).append("\n");
    sb.append("    snapshotName: ").append(toIndentedString(snapshotName)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    notificationTopicArn: ").append(toIndentedString(notificationTopicArn)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    snapshotRetentionLimit: ").append(toIndentedString(snapshotRetentionLimit)).append("\n");
    sb.append("    snapshotWindow: ").append(toIndentedString(snapshotWindow)).append("\n");
    sb.append("    authToken: ").append(toIndentedString(authToken)).append("\n");
    sb.append("    outpostMode: ").append(toIndentedString(outpostMode)).append("\n");
    sb.append("    preferredOutpostArn: ").append(toIndentedString(preferredOutpostArn)).append("\n");
    sb.append("    preferredOutpostArns: ").append(toIndentedString(preferredOutpostArns)).append("\n");
    sb.append("    logDeliveryConfigurations: ").append(toIndentedString(logDeliveryConfigurations)).append("\n");
    sb.append("    transitEncryptionEnabled: ").append(toIndentedString(transitEncryptionEnabled)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    ipDiscovery: ").append(toIndentedString(ipDiscovery)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CacheClusterId");
    openapiFields.add("ReplicationGroupId");
    openapiFields.add("AZMode");
    openapiFields.add("PreferredAvailabilityZone");
    openapiFields.add("PreferredAvailabilityZones");
    openapiFields.add("NumCacheNodes");
    openapiFields.add("CacheNodeType");
    openapiFields.add("Engine");
    openapiFields.add("EngineVersion");
    openapiFields.add("CacheParameterGroupName");
    openapiFields.add("CacheSubnetGroupName");
    openapiFields.add("CacheSecurityGroupNames");
    openapiFields.add("SecurityGroupIds");
    openapiFields.add("Tags");
    openapiFields.add("SnapshotArns");
    openapiFields.add("SnapshotName");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("Port");
    openapiFields.add("NotificationTopicArn");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("SnapshotRetentionLimit");
    openapiFields.add("SnapshotWindow");
    openapiFields.add("AuthToken");
    openapiFields.add("OutpostMode");
    openapiFields.add("PreferredOutpostArn");
    openapiFields.add("PreferredOutpostArns");
    openapiFields.add("LogDeliveryConfigurations");
    openapiFields.add("TransitEncryptionEnabled");
    openapiFields.add("NetworkType");
    openapiFields.add("IpDiscovery");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CacheClusterId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCacheClusterMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCacheClusterMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCacheClusterMessage is not found in the empty JSON string", CreateCacheClusterMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCacheClusterMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCacheClusterMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateCacheClusterMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `CacheClusterId`
      String.validateJsonElement(jsonObj.get("CacheClusterId"));
      // validate the optional field `ReplicationGroupId`
      if (jsonObj.get("ReplicationGroupId") != null && !jsonObj.get("ReplicationGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReplicationGroupId"));
      }
      // validate the optional field `AZMode`
      if (jsonObj.get("AZMode") != null && !jsonObj.get("AZMode").isJsonNull()) {
        AZMode.validateJsonElement(jsonObj.get("AZMode"));
      }
      // validate the optional field `PreferredAvailabilityZone`
      if (jsonObj.get("PreferredAvailabilityZone") != null && !jsonObj.get("PreferredAvailabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredAvailabilityZone"));
      }
      // validate the optional field `PreferredAvailabilityZones`
      if (jsonObj.get("PreferredAvailabilityZones") != null && !jsonObj.get("PreferredAvailabilityZones").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PreferredAvailabilityZones"));
      }
      // validate the optional field `NumCacheNodes`
      if (jsonObj.get("NumCacheNodes") != null && !jsonObj.get("NumCacheNodes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumCacheNodes"));
      }
      // validate the optional field `CacheNodeType`
      if (jsonObj.get("CacheNodeType") != null && !jsonObj.get("CacheNodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheNodeType"));
      }
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Engine"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `CacheParameterGroupName`
      if (jsonObj.get("CacheParameterGroupName") != null && !jsonObj.get("CacheParameterGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheParameterGroupName"));
      }
      // validate the optional field `CacheSubnetGroupName`
      if (jsonObj.get("CacheSubnetGroupName") != null && !jsonObj.get("CacheSubnetGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheSubnetGroupName"));
      }
      // validate the optional field `CacheSecurityGroupNames`
      if (jsonObj.get("CacheSecurityGroupNames") != null && !jsonObj.get("CacheSecurityGroupNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CacheSecurityGroupNames"));
      }
      // validate the optional field `SecurityGroupIds`
      if (jsonObj.get("SecurityGroupIds") != null && !jsonObj.get("SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroupIds"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `SnapshotArns`
      if (jsonObj.get("SnapshotArns") != null && !jsonObj.get("SnapshotArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SnapshotArns"));
      }
      // validate the optional field `SnapshotName`
      if (jsonObj.get("SnapshotName") != null && !jsonObj.get("SnapshotName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotName"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `NotificationTopicArn`
      if (jsonObj.get("NotificationTopicArn") != null && !jsonObj.get("NotificationTopicArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotificationTopicArn"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `SnapshotRetentionLimit`
      if (jsonObj.get("SnapshotRetentionLimit") != null && !jsonObj.get("SnapshotRetentionLimit").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SnapshotRetentionLimit"));
      }
      // validate the optional field `SnapshotWindow`
      if (jsonObj.get("SnapshotWindow") != null && !jsonObj.get("SnapshotWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotWindow"));
      }
      // validate the optional field `AuthToken`
      if (jsonObj.get("AuthToken") != null && !jsonObj.get("AuthToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AuthToken"));
      }
      // validate the optional field `OutpostMode`
      if (jsonObj.get("OutpostMode") != null && !jsonObj.get("OutpostMode").isJsonNull()) {
        OutpostMode.validateJsonElement(jsonObj.get("OutpostMode"));
      }
      // validate the optional field `PreferredOutpostArn`
      if (jsonObj.get("PreferredOutpostArn") != null && !jsonObj.get("PreferredOutpostArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredOutpostArn"));
      }
      // validate the optional field `PreferredOutpostArns`
      if (jsonObj.get("PreferredOutpostArns") != null && !jsonObj.get("PreferredOutpostArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PreferredOutpostArns"));
      }
      // validate the optional field `LogDeliveryConfigurations`
      if (jsonObj.get("LogDeliveryConfigurations") != null && !jsonObj.get("LogDeliveryConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LogDeliveryConfigurations"));
      }
      // validate the optional field `TransitEncryptionEnabled`
      if (jsonObj.get("TransitEncryptionEnabled") != null && !jsonObj.get("TransitEncryptionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("TransitEncryptionEnabled"));
      }
      // validate the optional field `NetworkType`
      if (jsonObj.get("NetworkType") != null && !jsonObj.get("NetworkType").isJsonNull()) {
        NetworkType.validateJsonElement(jsonObj.get("NetworkType"));
      }
      // validate the optional field `IpDiscovery`
      if (jsonObj.get("IpDiscovery") != null && !jsonObj.get("IpDiscovery").isJsonNull()) {
        IpDiscovery.validateJsonElement(jsonObj.get("IpDiscovery"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCacheClusterMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCacheClusterMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCacheClusterMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCacheClusterMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCacheClusterMessage>() {
           @Override
           public void write(JsonWriter out, CreateCacheClusterMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCacheClusterMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCacheClusterMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCacheClusterMessage
   * @throws IOException if the JSON string is invalid with respect to CreateCacheClusterMessage
   */
  public static CreateCacheClusterMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCacheClusterMessage.class);
  }

  /**
   * Convert an instance of CreateCacheClusterMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

