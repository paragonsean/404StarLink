/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the input of a &lt;code&gt;DeleteReplicationGroup&lt;/code&gt; operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:56:05.565321-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteReplicationGroupMessage {
  public static final String SERIALIZED_NAME_REPLICATION_GROUP_ID = "ReplicationGroupId";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_ID)
  private String replicationGroupId;

  public static final String SERIALIZED_NAME_RETAIN_PRIMARY_CLUSTER = "RetainPrimaryCluster";
  @SerializedName(SERIALIZED_NAME_RETAIN_PRIMARY_CLUSTER)
  private Boolean retainPrimaryCluster;

  public static final String SERIALIZED_NAME_FINAL_SNAPSHOT_IDENTIFIER = "FinalSnapshotIdentifier";
  @SerializedName(SERIALIZED_NAME_FINAL_SNAPSHOT_IDENTIFIER)
  private String finalSnapshotIdentifier;

  public DeleteReplicationGroupMessage() {
  }

  public DeleteReplicationGroupMessage replicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
    return this;
  }

  /**
   * Get replicationGroupId
   * @return replicationGroupId
   */
  @javax.annotation.Nonnull
  public String getReplicationGroupId() {
    return replicationGroupId;
  }

  public void setReplicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
  }


  public DeleteReplicationGroupMessage retainPrimaryCluster(Boolean retainPrimaryCluster) {
    this.retainPrimaryCluster = retainPrimaryCluster;
    return this;
  }

  /**
   * Get retainPrimaryCluster
   * @return retainPrimaryCluster
   */
  @javax.annotation.Nullable
  public Boolean getRetainPrimaryCluster() {
    return retainPrimaryCluster;
  }

  public void setRetainPrimaryCluster(Boolean retainPrimaryCluster) {
    this.retainPrimaryCluster = retainPrimaryCluster;
  }


  public DeleteReplicationGroupMessage finalSnapshotIdentifier(String finalSnapshotIdentifier) {
    this.finalSnapshotIdentifier = finalSnapshotIdentifier;
    return this;
  }

  /**
   * Get finalSnapshotIdentifier
   * @return finalSnapshotIdentifier
   */
  @javax.annotation.Nullable
  public String getFinalSnapshotIdentifier() {
    return finalSnapshotIdentifier;
  }

  public void setFinalSnapshotIdentifier(String finalSnapshotIdentifier) {
    this.finalSnapshotIdentifier = finalSnapshotIdentifier;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteReplicationGroupMessage deleteReplicationGroupMessage = (DeleteReplicationGroupMessage) o;
    return Objects.equals(this.replicationGroupId, deleteReplicationGroupMessage.replicationGroupId) &&
        Objects.equals(this.retainPrimaryCluster, deleteReplicationGroupMessage.retainPrimaryCluster) &&
        Objects.equals(this.finalSnapshotIdentifier, deleteReplicationGroupMessage.finalSnapshotIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(replicationGroupId, retainPrimaryCluster, finalSnapshotIdentifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteReplicationGroupMessage {\n");
    sb.append("    replicationGroupId: ").append(toIndentedString(replicationGroupId)).append("\n");
    sb.append("    retainPrimaryCluster: ").append(toIndentedString(retainPrimaryCluster)).append("\n");
    sb.append("    finalSnapshotIdentifier: ").append(toIndentedString(finalSnapshotIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ReplicationGroupId");
    openapiFields.add("RetainPrimaryCluster");
    openapiFields.add("FinalSnapshotIdentifier");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ReplicationGroupId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteReplicationGroupMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteReplicationGroupMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteReplicationGroupMessage is not found in the empty JSON string", DeleteReplicationGroupMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteReplicationGroupMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteReplicationGroupMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DeleteReplicationGroupMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ReplicationGroupId`
      String.validateJsonElement(jsonObj.get("ReplicationGroupId"));
      // validate the optional field `RetainPrimaryCluster`
      if (jsonObj.get("RetainPrimaryCluster") != null && !jsonObj.get("RetainPrimaryCluster").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("RetainPrimaryCluster"));
      }
      // validate the optional field `FinalSnapshotIdentifier`
      if (jsonObj.get("FinalSnapshotIdentifier") != null && !jsonObj.get("FinalSnapshotIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FinalSnapshotIdentifier"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteReplicationGroupMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteReplicationGroupMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteReplicationGroupMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteReplicationGroupMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteReplicationGroupMessage>() {
           @Override
           public void write(JsonWriter out, DeleteReplicationGroupMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteReplicationGroupMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteReplicationGroupMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteReplicationGroupMessage
   * @throws IOException if the JSON string is invalid with respect to DeleteReplicationGroupMessage
   */
  public static DeleteReplicationGroupMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteReplicationGroupMessage.class);
  }

  /**
   * Convert an instance of DeleteReplicationGroupMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

