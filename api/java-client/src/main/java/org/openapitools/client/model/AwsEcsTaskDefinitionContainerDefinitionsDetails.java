/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AwsEcsTaskDefinitionContainerDefinitionsDetailsFirelensConfiguration;
import org.openapitools.client.model.AwsEcsTaskDefinitionContainerDefinitionsDetailsHealthCheck;
import org.openapitools.client.model.AwsEcsTaskDefinitionContainerDefinitionsDetailsLinuxParameters;
import org.openapitools.client.model.AwsEcsTaskDefinitionContainerDefinitionsDetailsLogConfiguration;
import org.openapitools.client.model.AwsEcsTaskDefinitionContainerDefinitionsDetailsRepositoryCredentials;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A container definition that describes a container in the task.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:04:47.881442-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsEcsTaskDefinitionContainerDefinitionsDetails {
  public static final String SERIALIZED_NAME_COMMAND = "Command";
  @SerializedName(SERIALIZED_NAME_COMMAND)
  private List command;

  public static final String SERIALIZED_NAME_CPU = "Cpu";
  @SerializedName(SERIALIZED_NAME_CPU)
  private Integer cpu;

  public static final String SERIALIZED_NAME_DEPENDS_ON = "DependsOn";
  @SerializedName(SERIALIZED_NAME_DEPENDS_ON)
  private List dependsOn;

  public static final String SERIALIZED_NAME_DISABLE_NETWORKING = "DisableNetworking";
  @SerializedName(SERIALIZED_NAME_DISABLE_NETWORKING)
  private Boolean disableNetworking;

  public static final String SERIALIZED_NAME_DNS_SEARCH_DOMAINS = "DnsSearchDomains";
  @SerializedName(SERIALIZED_NAME_DNS_SEARCH_DOMAINS)
  private List dnsSearchDomains;

  public static final String SERIALIZED_NAME_DNS_SERVERS = "DnsServers";
  @SerializedName(SERIALIZED_NAME_DNS_SERVERS)
  private List dnsServers;

  public static final String SERIALIZED_NAME_DOCKER_LABELS = "DockerLabels";
  @SerializedName(SERIALIZED_NAME_DOCKER_LABELS)
  private Map dockerLabels;

  public static final String SERIALIZED_NAME_DOCKER_SECURITY_OPTIONS = "DockerSecurityOptions";
  @SerializedName(SERIALIZED_NAME_DOCKER_SECURITY_OPTIONS)
  private List dockerSecurityOptions;

  public static final String SERIALIZED_NAME_ENTRY_POINT = "EntryPoint";
  @SerializedName(SERIALIZED_NAME_ENTRY_POINT)
  private List entryPoint;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "Environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private List environment;

  public static final String SERIALIZED_NAME_ENVIRONMENT_FILES = "EnvironmentFiles";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_FILES)
  private List environmentFiles;

  public static final String SERIALIZED_NAME_ESSENTIAL = "Essential";
  @SerializedName(SERIALIZED_NAME_ESSENTIAL)
  private Boolean essential;

  public static final String SERIALIZED_NAME_EXTRA_HOSTS = "ExtraHosts";
  @SerializedName(SERIALIZED_NAME_EXTRA_HOSTS)
  private List extraHosts;

  public static final String SERIALIZED_NAME_FIRELENS_CONFIGURATION = "FirelensConfiguration";
  @SerializedName(SERIALIZED_NAME_FIRELENS_CONFIGURATION)
  private AwsEcsTaskDefinitionContainerDefinitionsDetailsFirelensConfiguration firelensConfiguration;

  public static final String SERIALIZED_NAME_HEALTH_CHECK = "HealthCheck";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK)
  private AwsEcsTaskDefinitionContainerDefinitionsDetailsHealthCheck healthCheck;

  public static final String SERIALIZED_NAME_HOSTNAME = "Hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_IMAGE = "Image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_INTERACTIVE = "Interactive";
  @SerializedName(SERIALIZED_NAME_INTERACTIVE)
  private Boolean interactive;

  public static final String SERIALIZED_NAME_LINKS = "Links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List links;

  public static final String SERIALIZED_NAME_LINUX_PARAMETERS = "LinuxParameters";
  @SerializedName(SERIALIZED_NAME_LINUX_PARAMETERS)
  private AwsEcsTaskDefinitionContainerDefinitionsDetailsLinuxParameters linuxParameters;

  public static final String SERIALIZED_NAME_LOG_CONFIGURATION = "LogConfiguration";
  @SerializedName(SERIALIZED_NAME_LOG_CONFIGURATION)
  private AwsEcsTaskDefinitionContainerDefinitionsDetailsLogConfiguration logConfiguration;

  public static final String SERIALIZED_NAME_MEMORY = "Memory";
  @SerializedName(SERIALIZED_NAME_MEMORY)
  private Integer memory;

  public static final String SERIALIZED_NAME_MEMORY_RESERVATION = "MemoryReservation";
  @SerializedName(SERIALIZED_NAME_MEMORY_RESERVATION)
  private Integer memoryReservation;

  public static final String SERIALIZED_NAME_MOUNT_POINTS = "MountPoints";
  @SerializedName(SERIALIZED_NAME_MOUNT_POINTS)
  private List mountPoints;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PORT_MAPPINGS = "PortMappings";
  @SerializedName(SERIALIZED_NAME_PORT_MAPPINGS)
  private List portMappings;

  public static final String SERIALIZED_NAME_PRIVILEGED = "Privileged";
  @SerializedName(SERIALIZED_NAME_PRIVILEGED)
  private Boolean privileged;

  public static final String SERIALIZED_NAME_PSEUDO_TERMINAL = "PseudoTerminal";
  @SerializedName(SERIALIZED_NAME_PSEUDO_TERMINAL)
  private Boolean pseudoTerminal;

  public static final String SERIALIZED_NAME_READONLY_ROOT_FILESYSTEM = "ReadonlyRootFilesystem";
  @SerializedName(SERIALIZED_NAME_READONLY_ROOT_FILESYSTEM)
  private Boolean readonlyRootFilesystem;

  public static final String SERIALIZED_NAME_REPOSITORY_CREDENTIALS = "RepositoryCredentials";
  @SerializedName(SERIALIZED_NAME_REPOSITORY_CREDENTIALS)
  private AwsEcsTaskDefinitionContainerDefinitionsDetailsRepositoryCredentials repositoryCredentials;

  public static final String SERIALIZED_NAME_RESOURCE_REQUIREMENTS = "ResourceRequirements";
  @SerializedName(SERIALIZED_NAME_RESOURCE_REQUIREMENTS)
  private List resourceRequirements;

  public static final String SERIALIZED_NAME_SECRETS = "Secrets";
  @SerializedName(SERIALIZED_NAME_SECRETS)
  private List secrets;

  public static final String SERIALIZED_NAME_START_TIMEOUT = "StartTimeout";
  @SerializedName(SERIALIZED_NAME_START_TIMEOUT)
  private Integer startTimeout;

  public static final String SERIALIZED_NAME_STOP_TIMEOUT = "StopTimeout";
  @SerializedName(SERIALIZED_NAME_STOP_TIMEOUT)
  private Integer stopTimeout;

  public static final String SERIALIZED_NAME_SYSTEM_CONTROLS = "SystemControls";
  @SerializedName(SERIALIZED_NAME_SYSTEM_CONTROLS)
  private List systemControls;

  public static final String SERIALIZED_NAME_ULIMITS = "Ulimits";
  @SerializedName(SERIALIZED_NAME_ULIMITS)
  private List ulimits;

  public static final String SERIALIZED_NAME_USER = "User";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_VOLUMES_FROM = "VolumesFrom";
  @SerializedName(SERIALIZED_NAME_VOLUMES_FROM)
  private List volumesFrom;

  public static final String SERIALIZED_NAME_WORKING_DIRECTORY = "WorkingDirectory";
  @SerializedName(SERIALIZED_NAME_WORKING_DIRECTORY)
  private String workingDirectory;

  public AwsEcsTaskDefinitionContainerDefinitionsDetails() {
  }

  public AwsEcsTaskDefinitionContainerDefinitionsDetails command(List command) {
    this.command = command;
    return this;
  }

  /**
   * Get command
   * @return command
   */
  @javax.annotation.Nullable
  public List getCommand() {
    return command;
  }

  public void setCommand(List command) {
    this.command = command;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails cpu(Integer cpu) {
    this.cpu = cpu;
    return this;
  }

  /**
   * Get cpu
   * @return cpu
   */
  @javax.annotation.Nullable
  public Integer getCpu() {
    return cpu;
  }

  public void setCpu(Integer cpu) {
    this.cpu = cpu;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails dependsOn(List dependsOn) {
    this.dependsOn = dependsOn;
    return this;
  }

  /**
   * Get dependsOn
   * @return dependsOn
   */
  @javax.annotation.Nullable
  public List getDependsOn() {
    return dependsOn;
  }

  public void setDependsOn(List dependsOn) {
    this.dependsOn = dependsOn;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails disableNetworking(Boolean disableNetworking) {
    this.disableNetworking = disableNetworking;
    return this;
  }

  /**
   * Get disableNetworking
   * @return disableNetworking
   */
  @javax.annotation.Nullable
  public Boolean getDisableNetworking() {
    return disableNetworking;
  }

  public void setDisableNetworking(Boolean disableNetworking) {
    this.disableNetworking = disableNetworking;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails dnsSearchDomains(List dnsSearchDomains) {
    this.dnsSearchDomains = dnsSearchDomains;
    return this;
  }

  /**
   * Get dnsSearchDomains
   * @return dnsSearchDomains
   */
  @javax.annotation.Nullable
  public List getDnsSearchDomains() {
    return dnsSearchDomains;
  }

  public void setDnsSearchDomains(List dnsSearchDomains) {
    this.dnsSearchDomains = dnsSearchDomains;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails dnsServers(List dnsServers) {
    this.dnsServers = dnsServers;
    return this;
  }

  /**
   * Get dnsServers
   * @return dnsServers
   */
  @javax.annotation.Nullable
  public List getDnsServers() {
    return dnsServers;
  }

  public void setDnsServers(List dnsServers) {
    this.dnsServers = dnsServers;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails dockerLabels(Map dockerLabels) {
    this.dockerLabels = dockerLabels;
    return this;
  }

  /**
   * Get dockerLabels
   * @return dockerLabels
   */
  @javax.annotation.Nullable
  public Map getDockerLabels() {
    return dockerLabels;
  }

  public void setDockerLabels(Map dockerLabels) {
    this.dockerLabels = dockerLabels;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails dockerSecurityOptions(List dockerSecurityOptions) {
    this.dockerSecurityOptions = dockerSecurityOptions;
    return this;
  }

  /**
   * Get dockerSecurityOptions
   * @return dockerSecurityOptions
   */
  @javax.annotation.Nullable
  public List getDockerSecurityOptions() {
    return dockerSecurityOptions;
  }

  public void setDockerSecurityOptions(List dockerSecurityOptions) {
    this.dockerSecurityOptions = dockerSecurityOptions;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails entryPoint(List entryPoint) {
    this.entryPoint = entryPoint;
    return this;
  }

  /**
   * Get entryPoint
   * @return entryPoint
   */
  @javax.annotation.Nullable
  public List getEntryPoint() {
    return entryPoint;
  }

  public void setEntryPoint(List entryPoint) {
    this.entryPoint = entryPoint;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails environment(List environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public List getEnvironment() {
    return environment;
  }

  public void setEnvironment(List environment) {
    this.environment = environment;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails environmentFiles(List environmentFiles) {
    this.environmentFiles = environmentFiles;
    return this;
  }

  /**
   * Get environmentFiles
   * @return environmentFiles
   */
  @javax.annotation.Nullable
  public List getEnvironmentFiles() {
    return environmentFiles;
  }

  public void setEnvironmentFiles(List environmentFiles) {
    this.environmentFiles = environmentFiles;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails essential(Boolean essential) {
    this.essential = essential;
    return this;
  }

  /**
   * Get essential
   * @return essential
   */
  @javax.annotation.Nullable
  public Boolean getEssential() {
    return essential;
  }

  public void setEssential(Boolean essential) {
    this.essential = essential;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails extraHosts(List extraHosts) {
    this.extraHosts = extraHosts;
    return this;
  }

  /**
   * Get extraHosts
   * @return extraHosts
   */
  @javax.annotation.Nullable
  public List getExtraHosts() {
    return extraHosts;
  }

  public void setExtraHosts(List extraHosts) {
    this.extraHosts = extraHosts;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails firelensConfiguration(AwsEcsTaskDefinitionContainerDefinitionsDetailsFirelensConfiguration firelensConfiguration) {
    this.firelensConfiguration = firelensConfiguration;
    return this;
  }

  /**
   * Get firelensConfiguration
   * @return firelensConfiguration
   */
  @javax.annotation.Nullable
  public AwsEcsTaskDefinitionContainerDefinitionsDetailsFirelensConfiguration getFirelensConfiguration() {
    return firelensConfiguration;
  }

  public void setFirelensConfiguration(AwsEcsTaskDefinitionContainerDefinitionsDetailsFirelensConfiguration firelensConfiguration) {
    this.firelensConfiguration = firelensConfiguration;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails healthCheck(AwsEcsTaskDefinitionContainerDefinitionsDetailsHealthCheck healthCheck) {
    this.healthCheck = healthCheck;
    return this;
  }

  /**
   * Get healthCheck
   * @return healthCheck
   */
  @javax.annotation.Nullable
  public AwsEcsTaskDefinitionContainerDefinitionsDetailsHealthCheck getHealthCheck() {
    return healthCheck;
  }

  public void setHealthCheck(AwsEcsTaskDefinitionContainerDefinitionsDetailsHealthCheck healthCheck) {
    this.healthCheck = healthCheck;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

  /**
   * Get hostname
   * @return hostname
   */
  @javax.annotation.Nullable
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails image(String image) {
    this.image = image;
    return this;
  }

  /**
   * Get image
   * @return image
   */
  @javax.annotation.Nullable
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails interactive(Boolean interactive) {
    this.interactive = interactive;
    return this;
  }

  /**
   * Get interactive
   * @return interactive
   */
  @javax.annotation.Nullable
  public Boolean getInteractive() {
    return interactive;
  }

  public void setInteractive(Boolean interactive) {
    this.interactive = interactive;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails links(List links) {
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  public List getLinks() {
    return links;
  }

  public void setLinks(List links) {
    this.links = links;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails linuxParameters(AwsEcsTaskDefinitionContainerDefinitionsDetailsLinuxParameters linuxParameters) {
    this.linuxParameters = linuxParameters;
    return this;
  }

  /**
   * Get linuxParameters
   * @return linuxParameters
   */
  @javax.annotation.Nullable
  public AwsEcsTaskDefinitionContainerDefinitionsDetailsLinuxParameters getLinuxParameters() {
    return linuxParameters;
  }

  public void setLinuxParameters(AwsEcsTaskDefinitionContainerDefinitionsDetailsLinuxParameters linuxParameters) {
    this.linuxParameters = linuxParameters;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails logConfiguration(AwsEcsTaskDefinitionContainerDefinitionsDetailsLogConfiguration logConfiguration) {
    this.logConfiguration = logConfiguration;
    return this;
  }

  /**
   * Get logConfiguration
   * @return logConfiguration
   */
  @javax.annotation.Nullable
  public AwsEcsTaskDefinitionContainerDefinitionsDetailsLogConfiguration getLogConfiguration() {
    return logConfiguration;
  }

  public void setLogConfiguration(AwsEcsTaskDefinitionContainerDefinitionsDetailsLogConfiguration logConfiguration) {
    this.logConfiguration = logConfiguration;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails memory(Integer memory) {
    this.memory = memory;
    return this;
  }

  /**
   * Get memory
   * @return memory
   */
  @javax.annotation.Nullable
  public Integer getMemory() {
    return memory;
  }

  public void setMemory(Integer memory) {
    this.memory = memory;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails memoryReservation(Integer memoryReservation) {
    this.memoryReservation = memoryReservation;
    return this;
  }

  /**
   * Get memoryReservation
   * @return memoryReservation
   */
  @javax.annotation.Nullable
  public Integer getMemoryReservation() {
    return memoryReservation;
  }

  public void setMemoryReservation(Integer memoryReservation) {
    this.memoryReservation = memoryReservation;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails mountPoints(List mountPoints) {
    this.mountPoints = mountPoints;
    return this;
  }

  /**
   * Get mountPoints
   * @return mountPoints
   */
  @javax.annotation.Nullable
  public List getMountPoints() {
    return mountPoints;
  }

  public void setMountPoints(List mountPoints) {
    this.mountPoints = mountPoints;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails portMappings(List portMappings) {
    this.portMappings = portMappings;
    return this;
  }

  /**
   * Get portMappings
   * @return portMappings
   */
  @javax.annotation.Nullable
  public List getPortMappings() {
    return portMappings;
  }

  public void setPortMappings(List portMappings) {
    this.portMappings = portMappings;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails privileged(Boolean privileged) {
    this.privileged = privileged;
    return this;
  }

  /**
   * Get privileged
   * @return privileged
   */
  @javax.annotation.Nullable
  public Boolean getPrivileged() {
    return privileged;
  }

  public void setPrivileged(Boolean privileged) {
    this.privileged = privileged;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails pseudoTerminal(Boolean pseudoTerminal) {
    this.pseudoTerminal = pseudoTerminal;
    return this;
  }

  /**
   * Get pseudoTerminal
   * @return pseudoTerminal
   */
  @javax.annotation.Nullable
  public Boolean getPseudoTerminal() {
    return pseudoTerminal;
  }

  public void setPseudoTerminal(Boolean pseudoTerminal) {
    this.pseudoTerminal = pseudoTerminal;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails readonlyRootFilesystem(Boolean readonlyRootFilesystem) {
    this.readonlyRootFilesystem = readonlyRootFilesystem;
    return this;
  }

  /**
   * Get readonlyRootFilesystem
   * @return readonlyRootFilesystem
   */
  @javax.annotation.Nullable
  public Boolean getReadonlyRootFilesystem() {
    return readonlyRootFilesystem;
  }

  public void setReadonlyRootFilesystem(Boolean readonlyRootFilesystem) {
    this.readonlyRootFilesystem = readonlyRootFilesystem;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails repositoryCredentials(AwsEcsTaskDefinitionContainerDefinitionsDetailsRepositoryCredentials repositoryCredentials) {
    this.repositoryCredentials = repositoryCredentials;
    return this;
  }

  /**
   * Get repositoryCredentials
   * @return repositoryCredentials
   */
  @javax.annotation.Nullable
  public AwsEcsTaskDefinitionContainerDefinitionsDetailsRepositoryCredentials getRepositoryCredentials() {
    return repositoryCredentials;
  }

  public void setRepositoryCredentials(AwsEcsTaskDefinitionContainerDefinitionsDetailsRepositoryCredentials repositoryCredentials) {
    this.repositoryCredentials = repositoryCredentials;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails resourceRequirements(List resourceRequirements) {
    this.resourceRequirements = resourceRequirements;
    return this;
  }

  /**
   * Get resourceRequirements
   * @return resourceRequirements
   */
  @javax.annotation.Nullable
  public List getResourceRequirements() {
    return resourceRequirements;
  }

  public void setResourceRequirements(List resourceRequirements) {
    this.resourceRequirements = resourceRequirements;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails secrets(List secrets) {
    this.secrets = secrets;
    return this;
  }

  /**
   * Get secrets
   * @return secrets
   */
  @javax.annotation.Nullable
  public List getSecrets() {
    return secrets;
  }

  public void setSecrets(List secrets) {
    this.secrets = secrets;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails startTimeout(Integer startTimeout) {
    this.startTimeout = startTimeout;
    return this;
  }

  /**
   * Get startTimeout
   * @return startTimeout
   */
  @javax.annotation.Nullable
  public Integer getStartTimeout() {
    return startTimeout;
  }

  public void setStartTimeout(Integer startTimeout) {
    this.startTimeout = startTimeout;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails stopTimeout(Integer stopTimeout) {
    this.stopTimeout = stopTimeout;
    return this;
  }

  /**
   * Get stopTimeout
   * @return stopTimeout
   */
  @javax.annotation.Nullable
  public Integer getStopTimeout() {
    return stopTimeout;
  }

  public void setStopTimeout(Integer stopTimeout) {
    this.stopTimeout = stopTimeout;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails systemControls(List systemControls) {
    this.systemControls = systemControls;
    return this;
  }

  /**
   * Get systemControls
   * @return systemControls
   */
  @javax.annotation.Nullable
  public List getSystemControls() {
    return systemControls;
  }

  public void setSystemControls(List systemControls) {
    this.systemControls = systemControls;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails ulimits(List ulimits) {
    this.ulimits = ulimits;
    return this;
  }

  /**
   * Get ulimits
   * @return ulimits
   */
  @javax.annotation.Nullable
  public List getUlimits() {
    return ulimits;
  }

  public void setUlimits(List ulimits) {
    this.ulimits = ulimits;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails user(String user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   */
  @javax.annotation.Nullable
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails volumesFrom(List volumesFrom) {
    this.volumesFrom = volumesFrom;
    return this;
  }

  /**
   * Get volumesFrom
   * @return volumesFrom
   */
  @javax.annotation.Nullable
  public List getVolumesFrom() {
    return volumesFrom;
  }

  public void setVolumesFrom(List volumesFrom) {
    this.volumesFrom = volumesFrom;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsDetails workingDirectory(String workingDirectory) {
    this.workingDirectory = workingDirectory;
    return this;
  }

  /**
   * Get workingDirectory
   * @return workingDirectory
   */
  @javax.annotation.Nullable
  public String getWorkingDirectory() {
    return workingDirectory;
  }

  public void setWorkingDirectory(String workingDirectory) {
    this.workingDirectory = workingDirectory;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsEcsTaskDefinitionContainerDefinitionsDetails awsEcsTaskDefinitionContainerDefinitionsDetails = (AwsEcsTaskDefinitionContainerDefinitionsDetails) o;
    return Objects.equals(this.command, awsEcsTaskDefinitionContainerDefinitionsDetails.command) &&
        Objects.equals(this.cpu, awsEcsTaskDefinitionContainerDefinitionsDetails.cpu) &&
        Objects.equals(this.dependsOn, awsEcsTaskDefinitionContainerDefinitionsDetails.dependsOn) &&
        Objects.equals(this.disableNetworking, awsEcsTaskDefinitionContainerDefinitionsDetails.disableNetworking) &&
        Objects.equals(this.dnsSearchDomains, awsEcsTaskDefinitionContainerDefinitionsDetails.dnsSearchDomains) &&
        Objects.equals(this.dnsServers, awsEcsTaskDefinitionContainerDefinitionsDetails.dnsServers) &&
        Objects.equals(this.dockerLabels, awsEcsTaskDefinitionContainerDefinitionsDetails.dockerLabels) &&
        Objects.equals(this.dockerSecurityOptions, awsEcsTaskDefinitionContainerDefinitionsDetails.dockerSecurityOptions) &&
        Objects.equals(this.entryPoint, awsEcsTaskDefinitionContainerDefinitionsDetails.entryPoint) &&
        Objects.equals(this.environment, awsEcsTaskDefinitionContainerDefinitionsDetails.environment) &&
        Objects.equals(this.environmentFiles, awsEcsTaskDefinitionContainerDefinitionsDetails.environmentFiles) &&
        Objects.equals(this.essential, awsEcsTaskDefinitionContainerDefinitionsDetails.essential) &&
        Objects.equals(this.extraHosts, awsEcsTaskDefinitionContainerDefinitionsDetails.extraHosts) &&
        Objects.equals(this.firelensConfiguration, awsEcsTaskDefinitionContainerDefinitionsDetails.firelensConfiguration) &&
        Objects.equals(this.healthCheck, awsEcsTaskDefinitionContainerDefinitionsDetails.healthCheck) &&
        Objects.equals(this.hostname, awsEcsTaskDefinitionContainerDefinitionsDetails.hostname) &&
        Objects.equals(this.image, awsEcsTaskDefinitionContainerDefinitionsDetails.image) &&
        Objects.equals(this.interactive, awsEcsTaskDefinitionContainerDefinitionsDetails.interactive) &&
        Objects.equals(this.links, awsEcsTaskDefinitionContainerDefinitionsDetails.links) &&
        Objects.equals(this.linuxParameters, awsEcsTaskDefinitionContainerDefinitionsDetails.linuxParameters) &&
        Objects.equals(this.logConfiguration, awsEcsTaskDefinitionContainerDefinitionsDetails.logConfiguration) &&
        Objects.equals(this.memory, awsEcsTaskDefinitionContainerDefinitionsDetails.memory) &&
        Objects.equals(this.memoryReservation, awsEcsTaskDefinitionContainerDefinitionsDetails.memoryReservation) &&
        Objects.equals(this.mountPoints, awsEcsTaskDefinitionContainerDefinitionsDetails.mountPoints) &&
        Objects.equals(this.name, awsEcsTaskDefinitionContainerDefinitionsDetails.name) &&
        Objects.equals(this.portMappings, awsEcsTaskDefinitionContainerDefinitionsDetails.portMappings) &&
        Objects.equals(this.privileged, awsEcsTaskDefinitionContainerDefinitionsDetails.privileged) &&
        Objects.equals(this.pseudoTerminal, awsEcsTaskDefinitionContainerDefinitionsDetails.pseudoTerminal) &&
        Objects.equals(this.readonlyRootFilesystem, awsEcsTaskDefinitionContainerDefinitionsDetails.readonlyRootFilesystem) &&
        Objects.equals(this.repositoryCredentials, awsEcsTaskDefinitionContainerDefinitionsDetails.repositoryCredentials) &&
        Objects.equals(this.resourceRequirements, awsEcsTaskDefinitionContainerDefinitionsDetails.resourceRequirements) &&
        Objects.equals(this.secrets, awsEcsTaskDefinitionContainerDefinitionsDetails.secrets) &&
        Objects.equals(this.startTimeout, awsEcsTaskDefinitionContainerDefinitionsDetails.startTimeout) &&
        Objects.equals(this.stopTimeout, awsEcsTaskDefinitionContainerDefinitionsDetails.stopTimeout) &&
        Objects.equals(this.systemControls, awsEcsTaskDefinitionContainerDefinitionsDetails.systemControls) &&
        Objects.equals(this.ulimits, awsEcsTaskDefinitionContainerDefinitionsDetails.ulimits) &&
        Objects.equals(this.user, awsEcsTaskDefinitionContainerDefinitionsDetails.user) &&
        Objects.equals(this.volumesFrom, awsEcsTaskDefinitionContainerDefinitionsDetails.volumesFrom) &&
        Objects.equals(this.workingDirectory, awsEcsTaskDefinitionContainerDefinitionsDetails.workingDirectory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(command, cpu, dependsOn, disableNetworking, dnsSearchDomains, dnsServers, dockerLabels, dockerSecurityOptions, entryPoint, environment, environmentFiles, essential, extraHosts, firelensConfiguration, healthCheck, hostname, image, interactive, links, linuxParameters, logConfiguration, memory, memoryReservation, mountPoints, name, portMappings, privileged, pseudoTerminal, readonlyRootFilesystem, repositoryCredentials, resourceRequirements, secrets, startTimeout, stopTimeout, systemControls, ulimits, user, volumesFrom, workingDirectory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsEcsTaskDefinitionContainerDefinitionsDetails {\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    dependsOn: ").append(toIndentedString(dependsOn)).append("\n");
    sb.append("    disableNetworking: ").append(toIndentedString(disableNetworking)).append("\n");
    sb.append("    dnsSearchDomains: ").append(toIndentedString(dnsSearchDomains)).append("\n");
    sb.append("    dnsServers: ").append(toIndentedString(dnsServers)).append("\n");
    sb.append("    dockerLabels: ").append(toIndentedString(dockerLabels)).append("\n");
    sb.append("    dockerSecurityOptions: ").append(toIndentedString(dockerSecurityOptions)).append("\n");
    sb.append("    entryPoint: ").append(toIndentedString(entryPoint)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    environmentFiles: ").append(toIndentedString(environmentFiles)).append("\n");
    sb.append("    essential: ").append(toIndentedString(essential)).append("\n");
    sb.append("    extraHosts: ").append(toIndentedString(extraHosts)).append("\n");
    sb.append("    firelensConfiguration: ").append(toIndentedString(firelensConfiguration)).append("\n");
    sb.append("    healthCheck: ").append(toIndentedString(healthCheck)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    interactive: ").append(toIndentedString(interactive)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    linuxParameters: ").append(toIndentedString(linuxParameters)).append("\n");
    sb.append("    logConfiguration: ").append(toIndentedString(logConfiguration)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    memoryReservation: ").append(toIndentedString(memoryReservation)).append("\n");
    sb.append("    mountPoints: ").append(toIndentedString(mountPoints)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    portMappings: ").append(toIndentedString(portMappings)).append("\n");
    sb.append("    privileged: ").append(toIndentedString(privileged)).append("\n");
    sb.append("    pseudoTerminal: ").append(toIndentedString(pseudoTerminal)).append("\n");
    sb.append("    readonlyRootFilesystem: ").append(toIndentedString(readonlyRootFilesystem)).append("\n");
    sb.append("    repositoryCredentials: ").append(toIndentedString(repositoryCredentials)).append("\n");
    sb.append("    resourceRequirements: ").append(toIndentedString(resourceRequirements)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("    startTimeout: ").append(toIndentedString(startTimeout)).append("\n");
    sb.append("    stopTimeout: ").append(toIndentedString(stopTimeout)).append("\n");
    sb.append("    systemControls: ").append(toIndentedString(systemControls)).append("\n");
    sb.append("    ulimits: ").append(toIndentedString(ulimits)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    volumesFrom: ").append(toIndentedString(volumesFrom)).append("\n");
    sb.append("    workingDirectory: ").append(toIndentedString(workingDirectory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Command");
    openapiFields.add("Cpu");
    openapiFields.add("DependsOn");
    openapiFields.add("DisableNetworking");
    openapiFields.add("DnsSearchDomains");
    openapiFields.add("DnsServers");
    openapiFields.add("DockerLabels");
    openapiFields.add("DockerSecurityOptions");
    openapiFields.add("EntryPoint");
    openapiFields.add("Environment");
    openapiFields.add("EnvironmentFiles");
    openapiFields.add("Essential");
    openapiFields.add("ExtraHosts");
    openapiFields.add("FirelensConfiguration");
    openapiFields.add("HealthCheck");
    openapiFields.add("Hostname");
    openapiFields.add("Image");
    openapiFields.add("Interactive");
    openapiFields.add("Links");
    openapiFields.add("LinuxParameters");
    openapiFields.add("LogConfiguration");
    openapiFields.add("Memory");
    openapiFields.add("MemoryReservation");
    openapiFields.add("MountPoints");
    openapiFields.add("Name");
    openapiFields.add("PortMappings");
    openapiFields.add("Privileged");
    openapiFields.add("PseudoTerminal");
    openapiFields.add("ReadonlyRootFilesystem");
    openapiFields.add("RepositoryCredentials");
    openapiFields.add("ResourceRequirements");
    openapiFields.add("Secrets");
    openapiFields.add("StartTimeout");
    openapiFields.add("StopTimeout");
    openapiFields.add("SystemControls");
    openapiFields.add("Ulimits");
    openapiFields.add("User");
    openapiFields.add("VolumesFrom");
    openapiFields.add("WorkingDirectory");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsEcsTaskDefinitionContainerDefinitionsDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsEcsTaskDefinitionContainerDefinitionsDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsEcsTaskDefinitionContainerDefinitionsDetails is not found in the empty JSON string", AwsEcsTaskDefinitionContainerDefinitionsDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsEcsTaskDefinitionContainerDefinitionsDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsEcsTaskDefinitionContainerDefinitionsDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Command`
      if (jsonObj.get("Command") != null && !jsonObj.get("Command").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Command"));
      }
      // validate the optional field `Cpu`
      if (jsonObj.get("Cpu") != null && !jsonObj.get("Cpu").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Cpu"));
      }
      // validate the optional field `DependsOn`
      if (jsonObj.get("DependsOn") != null && !jsonObj.get("DependsOn").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DependsOn"));
      }
      // validate the optional field `DisableNetworking`
      if (jsonObj.get("DisableNetworking") != null && !jsonObj.get("DisableNetworking").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DisableNetworking"));
      }
      // validate the optional field `DnsSearchDomains`
      if (jsonObj.get("DnsSearchDomains") != null && !jsonObj.get("DnsSearchDomains").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DnsSearchDomains"));
      }
      // validate the optional field `DnsServers`
      if (jsonObj.get("DnsServers") != null && !jsonObj.get("DnsServers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DnsServers"));
      }
      // validate the optional field `DockerLabels`
      if (jsonObj.get("DockerLabels") != null && !jsonObj.get("DockerLabels").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("DockerLabels"));
      }
      // validate the optional field `DockerSecurityOptions`
      if (jsonObj.get("DockerSecurityOptions") != null && !jsonObj.get("DockerSecurityOptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DockerSecurityOptions"));
      }
      // validate the optional field `EntryPoint`
      if (jsonObj.get("EntryPoint") != null && !jsonObj.get("EntryPoint").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EntryPoint"));
      }
      // validate the optional field `Environment`
      if (jsonObj.get("Environment") != null && !jsonObj.get("Environment").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Environment"));
      }
      // validate the optional field `EnvironmentFiles`
      if (jsonObj.get("EnvironmentFiles") != null && !jsonObj.get("EnvironmentFiles").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EnvironmentFiles"));
      }
      // validate the optional field `Essential`
      if (jsonObj.get("Essential") != null && !jsonObj.get("Essential").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Essential"));
      }
      // validate the optional field `ExtraHosts`
      if (jsonObj.get("ExtraHosts") != null && !jsonObj.get("ExtraHosts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ExtraHosts"));
      }
      // validate the optional field `FirelensConfiguration`
      if (jsonObj.get("FirelensConfiguration") != null && !jsonObj.get("FirelensConfiguration").isJsonNull()) {
        AwsEcsTaskDefinitionContainerDefinitionsDetailsFirelensConfiguration.validateJsonElement(jsonObj.get("FirelensConfiguration"));
      }
      // validate the optional field `HealthCheck`
      if (jsonObj.get("HealthCheck") != null && !jsonObj.get("HealthCheck").isJsonNull()) {
        AwsEcsTaskDefinitionContainerDefinitionsDetailsHealthCheck.validateJsonElement(jsonObj.get("HealthCheck"));
      }
      // validate the optional field `Hostname`
      if (jsonObj.get("Hostname") != null && !jsonObj.get("Hostname").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Hostname"));
      }
      // validate the optional field `Image`
      if (jsonObj.get("Image") != null && !jsonObj.get("Image").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Image"));
      }
      // validate the optional field `Interactive`
      if (jsonObj.get("Interactive") != null && !jsonObj.get("Interactive").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Interactive"));
      }
      // validate the optional field `Links`
      if (jsonObj.get("Links") != null && !jsonObj.get("Links").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Links"));
      }
      // validate the optional field `LinuxParameters`
      if (jsonObj.get("LinuxParameters") != null && !jsonObj.get("LinuxParameters").isJsonNull()) {
        AwsEcsTaskDefinitionContainerDefinitionsDetailsLinuxParameters.validateJsonElement(jsonObj.get("LinuxParameters"));
      }
      // validate the optional field `LogConfiguration`
      if (jsonObj.get("LogConfiguration") != null && !jsonObj.get("LogConfiguration").isJsonNull()) {
        AwsEcsTaskDefinitionContainerDefinitionsDetailsLogConfiguration.validateJsonElement(jsonObj.get("LogConfiguration"));
      }
      // validate the optional field `Memory`
      if (jsonObj.get("Memory") != null && !jsonObj.get("Memory").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Memory"));
      }
      // validate the optional field `MemoryReservation`
      if (jsonObj.get("MemoryReservation") != null && !jsonObj.get("MemoryReservation").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MemoryReservation"));
      }
      // validate the optional field `MountPoints`
      if (jsonObj.get("MountPoints") != null && !jsonObj.get("MountPoints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MountPoints"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `PortMappings`
      if (jsonObj.get("PortMappings") != null && !jsonObj.get("PortMappings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PortMappings"));
      }
      // validate the optional field `Privileged`
      if (jsonObj.get("Privileged") != null && !jsonObj.get("Privileged").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Privileged"));
      }
      // validate the optional field `PseudoTerminal`
      if (jsonObj.get("PseudoTerminal") != null && !jsonObj.get("PseudoTerminal").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("PseudoTerminal"));
      }
      // validate the optional field `ReadonlyRootFilesystem`
      if (jsonObj.get("ReadonlyRootFilesystem") != null && !jsonObj.get("ReadonlyRootFilesystem").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ReadonlyRootFilesystem"));
      }
      // validate the optional field `RepositoryCredentials`
      if (jsonObj.get("RepositoryCredentials") != null && !jsonObj.get("RepositoryCredentials").isJsonNull()) {
        AwsEcsTaskDefinitionContainerDefinitionsDetailsRepositoryCredentials.validateJsonElement(jsonObj.get("RepositoryCredentials"));
      }
      // validate the optional field `ResourceRequirements`
      if (jsonObj.get("ResourceRequirements") != null && !jsonObj.get("ResourceRequirements").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ResourceRequirements"));
      }
      // validate the optional field `Secrets`
      if (jsonObj.get("Secrets") != null && !jsonObj.get("Secrets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Secrets"));
      }
      // validate the optional field `StartTimeout`
      if (jsonObj.get("StartTimeout") != null && !jsonObj.get("StartTimeout").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("StartTimeout"));
      }
      // validate the optional field `StopTimeout`
      if (jsonObj.get("StopTimeout") != null && !jsonObj.get("StopTimeout").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("StopTimeout"));
      }
      // validate the optional field `SystemControls`
      if (jsonObj.get("SystemControls") != null && !jsonObj.get("SystemControls").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SystemControls"));
      }
      // validate the optional field `Ulimits`
      if (jsonObj.get("Ulimits") != null && !jsonObj.get("Ulimits").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Ulimits"));
      }
      // validate the optional field `User`
      if (jsonObj.get("User") != null && !jsonObj.get("User").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("User"));
      }
      // validate the optional field `VolumesFrom`
      if (jsonObj.get("VolumesFrom") != null && !jsonObj.get("VolumesFrom").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VolumesFrom"));
      }
      // validate the optional field `WorkingDirectory`
      if (jsonObj.get("WorkingDirectory") != null && !jsonObj.get("WorkingDirectory").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WorkingDirectory"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsEcsTaskDefinitionContainerDefinitionsDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsEcsTaskDefinitionContainerDefinitionsDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsEcsTaskDefinitionContainerDefinitionsDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsEcsTaskDefinitionContainerDefinitionsDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsEcsTaskDefinitionContainerDefinitionsDetails>() {
           @Override
           public void write(JsonWriter out, AwsEcsTaskDefinitionContainerDefinitionsDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsEcsTaskDefinitionContainerDefinitionsDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsEcsTaskDefinitionContainerDefinitionsDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsEcsTaskDefinitionContainerDefinitionsDetails
   * @throws IOException if the JSON string is invalid with respect to AwsEcsTaskDefinitionContainerDefinitionsDetails
   */
  public static AwsEcsTaskDefinitionContainerDefinitionsDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsEcsTaskDefinitionContainerDefinitionsDetails.class);
  }

  /**
   * Convert an instance of AwsEcsTaskDefinitionContainerDefinitionsDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

