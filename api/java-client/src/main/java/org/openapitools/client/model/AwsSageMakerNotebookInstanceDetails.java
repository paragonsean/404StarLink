/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AwsSageMakerNotebookInstanceDetailsInstanceMetadataServiceConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  Provides details about an Amazon SageMaker notebook instance. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:04:47.881442-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsSageMakerNotebookInstanceDetails {
  public static final String SERIALIZED_NAME_ACCELERATOR_TYPES = "AcceleratorTypes";
  @SerializedName(SERIALIZED_NAME_ACCELERATOR_TYPES)
  private List acceleratorTypes;

  public static final String SERIALIZED_NAME_ADDITIONAL_CODE_REPOSITORIES = "AdditionalCodeRepositories";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CODE_REPOSITORIES)
  private List additionalCodeRepositories;

  public static final String SERIALIZED_NAME_DEFAULT_CODE_REPOSITORY = "DefaultCodeRepository";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CODE_REPOSITORY)
  private String defaultCodeRepository;

  public static final String SERIALIZED_NAME_DIRECT_INTERNET_ACCESS = "DirectInternetAccess";
  @SerializedName(SERIALIZED_NAME_DIRECT_INTERNET_ACCESS)
  private String directInternetAccess;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_INSTANCE_METADATA_SERVICE_CONFIGURATION = "InstanceMetadataServiceConfiguration";
  @SerializedName(SERIALIZED_NAME_INSTANCE_METADATA_SERVICE_CONFIGURATION)
  private AwsSageMakerNotebookInstanceDetailsInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private String instanceType;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_NETWORK_INTERFACE_ID = "NetworkInterfaceId";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERFACE_ID)
  private String networkInterfaceId;

  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_ARN = "NotebookInstanceArn";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_ARN)
  private String notebookInstanceArn;

  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_LIFECYCLE_CONFIG_NAME = "NotebookInstanceLifecycleConfigName";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_LIFECYCLE_CONFIG_NAME)
  private String notebookInstanceLifecycleConfigName;

  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_NAME = "NotebookInstanceName";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_NAME)
  private String notebookInstanceName;

  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_STATUS = "NotebookInstanceStatus";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_STATUS)
  private String notebookInstanceStatus;

  public static final String SERIALIZED_NAME_PLATFORM_IDENTIFIER = "PlatformIdentifier";
  @SerializedName(SERIALIZED_NAME_PLATFORM_IDENTIFIER)
  private String platformIdentifier;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_ROOT_ACCESS = "RootAccess";
  @SerializedName(SERIALIZED_NAME_ROOT_ACCESS)
  private String rootAccess;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_SUBNET_ID = "SubnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;

  public static final String SERIALIZED_NAME_URL = "Url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_VOLUME_SIZE_IN_G_B = "VolumeSizeInGB";
  @SerializedName(SERIALIZED_NAME_VOLUME_SIZE_IN_G_B)
  private Integer volumeSizeInGB;

  public AwsSageMakerNotebookInstanceDetails() {
  }

  public AwsSageMakerNotebookInstanceDetails acceleratorTypes(List acceleratorTypes) {
    this.acceleratorTypes = acceleratorTypes;
    return this;
  }

  /**
   * Get acceleratorTypes
   * @return acceleratorTypes
   */
  @javax.annotation.Nullable
  public List getAcceleratorTypes() {
    return acceleratorTypes;
  }

  public void setAcceleratorTypes(List acceleratorTypes) {
    this.acceleratorTypes = acceleratorTypes;
  }


  public AwsSageMakerNotebookInstanceDetails additionalCodeRepositories(List additionalCodeRepositories) {
    this.additionalCodeRepositories = additionalCodeRepositories;
    return this;
  }

  /**
   * Get additionalCodeRepositories
   * @return additionalCodeRepositories
   */
  @javax.annotation.Nullable
  public List getAdditionalCodeRepositories() {
    return additionalCodeRepositories;
  }

  public void setAdditionalCodeRepositories(List additionalCodeRepositories) {
    this.additionalCodeRepositories = additionalCodeRepositories;
  }


  public AwsSageMakerNotebookInstanceDetails defaultCodeRepository(String defaultCodeRepository) {
    this.defaultCodeRepository = defaultCodeRepository;
    return this;
  }

  /**
   * Get defaultCodeRepository
   * @return defaultCodeRepository
   */
  @javax.annotation.Nullable
  public String getDefaultCodeRepository() {
    return defaultCodeRepository;
  }

  public void setDefaultCodeRepository(String defaultCodeRepository) {
    this.defaultCodeRepository = defaultCodeRepository;
  }


  public AwsSageMakerNotebookInstanceDetails directInternetAccess(String directInternetAccess) {
    this.directInternetAccess = directInternetAccess;
    return this;
  }

  /**
   * Get directInternetAccess
   * @return directInternetAccess
   */
  @javax.annotation.Nullable
  public String getDirectInternetAccess() {
    return directInternetAccess;
  }

  public void setDirectInternetAccess(String directInternetAccess) {
    this.directInternetAccess = directInternetAccess;
  }


  public AwsSageMakerNotebookInstanceDetails failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public AwsSageMakerNotebookInstanceDetails instanceMetadataServiceConfiguration(AwsSageMakerNotebookInstanceDetailsInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration) {
    this.instanceMetadataServiceConfiguration = instanceMetadataServiceConfiguration;
    return this;
  }

  /**
   * Get instanceMetadataServiceConfiguration
   * @return instanceMetadataServiceConfiguration
   */
  @javax.annotation.Nullable
  public AwsSageMakerNotebookInstanceDetailsInstanceMetadataServiceConfiguration getInstanceMetadataServiceConfiguration() {
    return instanceMetadataServiceConfiguration;
  }

  public void setInstanceMetadataServiceConfiguration(AwsSageMakerNotebookInstanceDetailsInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration) {
    this.instanceMetadataServiceConfiguration = instanceMetadataServiceConfiguration;
  }


  public AwsSageMakerNotebookInstanceDetails instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public AwsSageMakerNotebookInstanceDetails kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public AwsSageMakerNotebookInstanceDetails networkInterfaceId(String networkInterfaceId) {
    this.networkInterfaceId = networkInterfaceId;
    return this;
  }

  /**
   * Get networkInterfaceId
   * @return networkInterfaceId
   */
  @javax.annotation.Nullable
  public String getNetworkInterfaceId() {
    return networkInterfaceId;
  }

  public void setNetworkInterfaceId(String networkInterfaceId) {
    this.networkInterfaceId = networkInterfaceId;
  }


  public AwsSageMakerNotebookInstanceDetails notebookInstanceArn(String notebookInstanceArn) {
    this.notebookInstanceArn = notebookInstanceArn;
    return this;
  }

  /**
   * Get notebookInstanceArn
   * @return notebookInstanceArn
   */
  @javax.annotation.Nullable
  public String getNotebookInstanceArn() {
    return notebookInstanceArn;
  }

  public void setNotebookInstanceArn(String notebookInstanceArn) {
    this.notebookInstanceArn = notebookInstanceArn;
  }


  public AwsSageMakerNotebookInstanceDetails notebookInstanceLifecycleConfigName(String notebookInstanceLifecycleConfigName) {
    this.notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName;
    return this;
  }

  /**
   * Get notebookInstanceLifecycleConfigName
   * @return notebookInstanceLifecycleConfigName
   */
  @javax.annotation.Nullable
  public String getNotebookInstanceLifecycleConfigName() {
    return notebookInstanceLifecycleConfigName;
  }

  public void setNotebookInstanceLifecycleConfigName(String notebookInstanceLifecycleConfigName) {
    this.notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName;
  }


  public AwsSageMakerNotebookInstanceDetails notebookInstanceName(String notebookInstanceName) {
    this.notebookInstanceName = notebookInstanceName;
    return this;
  }

  /**
   * Get notebookInstanceName
   * @return notebookInstanceName
   */
  @javax.annotation.Nullable
  public String getNotebookInstanceName() {
    return notebookInstanceName;
  }

  public void setNotebookInstanceName(String notebookInstanceName) {
    this.notebookInstanceName = notebookInstanceName;
  }


  public AwsSageMakerNotebookInstanceDetails notebookInstanceStatus(String notebookInstanceStatus) {
    this.notebookInstanceStatus = notebookInstanceStatus;
    return this;
  }

  /**
   * Get notebookInstanceStatus
   * @return notebookInstanceStatus
   */
  @javax.annotation.Nullable
  public String getNotebookInstanceStatus() {
    return notebookInstanceStatus;
  }

  public void setNotebookInstanceStatus(String notebookInstanceStatus) {
    this.notebookInstanceStatus = notebookInstanceStatus;
  }


  public AwsSageMakerNotebookInstanceDetails platformIdentifier(String platformIdentifier) {
    this.platformIdentifier = platformIdentifier;
    return this;
  }

  /**
   * Get platformIdentifier
   * @return platformIdentifier
   */
  @javax.annotation.Nullable
  public String getPlatformIdentifier() {
    return platformIdentifier;
  }

  public void setPlatformIdentifier(String platformIdentifier) {
    this.platformIdentifier = platformIdentifier;
  }


  public AwsSageMakerNotebookInstanceDetails roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public AwsSageMakerNotebookInstanceDetails rootAccess(String rootAccess) {
    this.rootAccess = rootAccess;
    return this;
  }

  /**
   * Get rootAccess
   * @return rootAccess
   */
  @javax.annotation.Nullable
  public String getRootAccess() {
    return rootAccess;
  }

  public void setRootAccess(String rootAccess) {
    this.rootAccess = rootAccess;
  }


  public AwsSageMakerNotebookInstanceDetails securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public AwsSageMakerNotebookInstanceDetails subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

  /**
   * Get subnetId
   * @return subnetId
   */
  @javax.annotation.Nullable
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public AwsSageMakerNotebookInstanceDetails url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public AwsSageMakerNotebookInstanceDetails volumeSizeInGB(Integer volumeSizeInGB) {
    this.volumeSizeInGB = volumeSizeInGB;
    return this;
  }

  /**
   * Get volumeSizeInGB
   * @return volumeSizeInGB
   */
  @javax.annotation.Nullable
  public Integer getVolumeSizeInGB() {
    return volumeSizeInGB;
  }

  public void setVolumeSizeInGB(Integer volumeSizeInGB) {
    this.volumeSizeInGB = volumeSizeInGB;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsSageMakerNotebookInstanceDetails awsSageMakerNotebookInstanceDetails = (AwsSageMakerNotebookInstanceDetails) o;
    return Objects.equals(this.acceleratorTypes, awsSageMakerNotebookInstanceDetails.acceleratorTypes) &&
        Objects.equals(this.additionalCodeRepositories, awsSageMakerNotebookInstanceDetails.additionalCodeRepositories) &&
        Objects.equals(this.defaultCodeRepository, awsSageMakerNotebookInstanceDetails.defaultCodeRepository) &&
        Objects.equals(this.directInternetAccess, awsSageMakerNotebookInstanceDetails.directInternetAccess) &&
        Objects.equals(this.failureReason, awsSageMakerNotebookInstanceDetails.failureReason) &&
        Objects.equals(this.instanceMetadataServiceConfiguration, awsSageMakerNotebookInstanceDetails.instanceMetadataServiceConfiguration) &&
        Objects.equals(this.instanceType, awsSageMakerNotebookInstanceDetails.instanceType) &&
        Objects.equals(this.kmsKeyId, awsSageMakerNotebookInstanceDetails.kmsKeyId) &&
        Objects.equals(this.networkInterfaceId, awsSageMakerNotebookInstanceDetails.networkInterfaceId) &&
        Objects.equals(this.notebookInstanceArn, awsSageMakerNotebookInstanceDetails.notebookInstanceArn) &&
        Objects.equals(this.notebookInstanceLifecycleConfigName, awsSageMakerNotebookInstanceDetails.notebookInstanceLifecycleConfigName) &&
        Objects.equals(this.notebookInstanceName, awsSageMakerNotebookInstanceDetails.notebookInstanceName) &&
        Objects.equals(this.notebookInstanceStatus, awsSageMakerNotebookInstanceDetails.notebookInstanceStatus) &&
        Objects.equals(this.platformIdentifier, awsSageMakerNotebookInstanceDetails.platformIdentifier) &&
        Objects.equals(this.roleArn, awsSageMakerNotebookInstanceDetails.roleArn) &&
        Objects.equals(this.rootAccess, awsSageMakerNotebookInstanceDetails.rootAccess) &&
        Objects.equals(this.securityGroups, awsSageMakerNotebookInstanceDetails.securityGroups) &&
        Objects.equals(this.subnetId, awsSageMakerNotebookInstanceDetails.subnetId) &&
        Objects.equals(this.url, awsSageMakerNotebookInstanceDetails.url) &&
        Objects.equals(this.volumeSizeInGB, awsSageMakerNotebookInstanceDetails.volumeSizeInGB);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceleratorTypes, additionalCodeRepositories, defaultCodeRepository, directInternetAccess, failureReason, instanceMetadataServiceConfiguration, instanceType, kmsKeyId, networkInterfaceId, notebookInstanceArn, notebookInstanceLifecycleConfigName, notebookInstanceName, notebookInstanceStatus, platformIdentifier, roleArn, rootAccess, securityGroups, subnetId, url, volumeSizeInGB);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsSageMakerNotebookInstanceDetails {\n");
    sb.append("    acceleratorTypes: ").append(toIndentedString(acceleratorTypes)).append("\n");
    sb.append("    additionalCodeRepositories: ").append(toIndentedString(additionalCodeRepositories)).append("\n");
    sb.append("    defaultCodeRepository: ").append(toIndentedString(defaultCodeRepository)).append("\n");
    sb.append("    directInternetAccess: ").append(toIndentedString(directInternetAccess)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    instanceMetadataServiceConfiguration: ").append(toIndentedString(instanceMetadataServiceConfiguration)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    networkInterfaceId: ").append(toIndentedString(networkInterfaceId)).append("\n");
    sb.append("    notebookInstanceArn: ").append(toIndentedString(notebookInstanceArn)).append("\n");
    sb.append("    notebookInstanceLifecycleConfigName: ").append(toIndentedString(notebookInstanceLifecycleConfigName)).append("\n");
    sb.append("    notebookInstanceName: ").append(toIndentedString(notebookInstanceName)).append("\n");
    sb.append("    notebookInstanceStatus: ").append(toIndentedString(notebookInstanceStatus)).append("\n");
    sb.append("    platformIdentifier: ").append(toIndentedString(platformIdentifier)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    rootAccess: ").append(toIndentedString(rootAccess)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    volumeSizeInGB: ").append(toIndentedString(volumeSizeInGB)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AcceleratorTypes");
    openapiFields.add("AdditionalCodeRepositories");
    openapiFields.add("DefaultCodeRepository");
    openapiFields.add("DirectInternetAccess");
    openapiFields.add("FailureReason");
    openapiFields.add("InstanceMetadataServiceConfiguration");
    openapiFields.add("InstanceType");
    openapiFields.add("KmsKeyId");
    openapiFields.add("NetworkInterfaceId");
    openapiFields.add("NotebookInstanceArn");
    openapiFields.add("NotebookInstanceLifecycleConfigName");
    openapiFields.add("NotebookInstanceName");
    openapiFields.add("NotebookInstanceStatus");
    openapiFields.add("PlatformIdentifier");
    openapiFields.add("RoleArn");
    openapiFields.add("RootAccess");
    openapiFields.add("SecurityGroups");
    openapiFields.add("SubnetId");
    openapiFields.add("Url");
    openapiFields.add("VolumeSizeInGB");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsSageMakerNotebookInstanceDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsSageMakerNotebookInstanceDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsSageMakerNotebookInstanceDetails is not found in the empty JSON string", AwsSageMakerNotebookInstanceDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsSageMakerNotebookInstanceDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsSageMakerNotebookInstanceDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AcceleratorTypes`
      if (jsonObj.get("AcceleratorTypes") != null && !jsonObj.get("AcceleratorTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AcceleratorTypes"));
      }
      // validate the optional field `AdditionalCodeRepositories`
      if (jsonObj.get("AdditionalCodeRepositories") != null && !jsonObj.get("AdditionalCodeRepositories").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdditionalCodeRepositories"));
      }
      // validate the optional field `DefaultCodeRepository`
      if (jsonObj.get("DefaultCodeRepository") != null && !jsonObj.get("DefaultCodeRepository").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultCodeRepository"));
      }
      // validate the optional field `DirectInternetAccess`
      if (jsonObj.get("DirectInternetAccess") != null && !jsonObj.get("DirectInternetAccess").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DirectInternetAccess"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `InstanceMetadataServiceConfiguration`
      if (jsonObj.get("InstanceMetadataServiceConfiguration") != null && !jsonObj.get("InstanceMetadataServiceConfiguration").isJsonNull()) {
        AwsSageMakerNotebookInstanceDetailsInstanceMetadataServiceConfiguration.validateJsonElement(jsonObj.get("InstanceMetadataServiceConfiguration"));
      }
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `NetworkInterfaceId`
      if (jsonObj.get("NetworkInterfaceId") != null && !jsonObj.get("NetworkInterfaceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NetworkInterfaceId"));
      }
      // validate the optional field `NotebookInstanceArn`
      if (jsonObj.get("NotebookInstanceArn") != null && !jsonObj.get("NotebookInstanceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotebookInstanceArn"));
      }
      // validate the optional field `NotebookInstanceLifecycleConfigName`
      if (jsonObj.get("NotebookInstanceLifecycleConfigName") != null && !jsonObj.get("NotebookInstanceLifecycleConfigName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotebookInstanceLifecycleConfigName"));
      }
      // validate the optional field `NotebookInstanceName`
      if (jsonObj.get("NotebookInstanceName") != null && !jsonObj.get("NotebookInstanceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotebookInstanceName"));
      }
      // validate the optional field `NotebookInstanceStatus`
      if (jsonObj.get("NotebookInstanceStatus") != null && !jsonObj.get("NotebookInstanceStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotebookInstanceStatus"));
      }
      // validate the optional field `PlatformIdentifier`
      if (jsonObj.get("PlatformIdentifier") != null && !jsonObj.get("PlatformIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlatformIdentifier"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `RootAccess`
      if (jsonObj.get("RootAccess") != null && !jsonObj.get("RootAccess").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RootAccess"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `SubnetId`
      if (jsonObj.get("SubnetId") != null && !jsonObj.get("SubnetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubnetId"));
      }
      // validate the optional field `Url`
      if (jsonObj.get("Url") != null && !jsonObj.get("Url").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Url"));
      }
      // validate the optional field `VolumeSizeInGB`
      if (jsonObj.get("VolumeSizeInGB") != null && !jsonObj.get("VolumeSizeInGB").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("VolumeSizeInGB"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsSageMakerNotebookInstanceDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsSageMakerNotebookInstanceDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsSageMakerNotebookInstanceDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsSageMakerNotebookInstanceDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsSageMakerNotebookInstanceDetails>() {
           @Override
           public void write(JsonWriter out, AwsSageMakerNotebookInstanceDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsSageMakerNotebookInstanceDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsSageMakerNotebookInstanceDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsSageMakerNotebookInstanceDetails
   * @throws IOException if the JSON string is invalid with respect to AwsSageMakerNotebookInstanceDetails
   */
  public static AwsSageMakerNotebookInstanceDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsSageMakerNotebookInstanceDetails.class);
  }

  /**
   * Convert an instance of AwsSageMakerNotebookInstanceDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

