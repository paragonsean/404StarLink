/*
 * reCAPTCHA Enterprise API
 * Help protect your website from fraudulent activity, spam, and abuse without creating friction.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRecaptchaenterpriseV1AndroidKeySettings;
import org.openapitools.client.model.GoogleCloudRecaptchaenterpriseV1IOSKeySettings;
import org.openapitools.client.model.GoogleCloudRecaptchaenterpriseV1TestingOptions;
import org.openapitools.client.model.GoogleCloudRecaptchaenterpriseV1WafSettings;
import org.openapitools.client.model.GoogleCloudRecaptchaenterpriseV1WebKeySettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:04:31.169708-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecaptchaenterpriseV1Key {
  public static final String SERIALIZED_NAME_ANDROID_SETTINGS = "androidSettings";
  @SerializedName(SERIALIZED_NAME_ANDROID_SETTINGS)
  private GoogleCloudRecaptchaenterpriseV1AndroidKeySettings androidSettings;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_IOS_SETTINGS = "iosSettings";
  @SerializedName(SERIALIZED_NAME_IOS_SETTINGS)
  private GoogleCloudRecaptchaenterpriseV1IOSKeySettings iosSettings;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TESTING_OPTIONS = "testingOptions";
  @SerializedName(SERIALIZED_NAME_TESTING_OPTIONS)
  private GoogleCloudRecaptchaenterpriseV1TestingOptions testingOptions;

  public static final String SERIALIZED_NAME_WAF_SETTINGS = "wafSettings";
  @SerializedName(SERIALIZED_NAME_WAF_SETTINGS)
  private GoogleCloudRecaptchaenterpriseV1WafSettings wafSettings;

  public static final String SERIALIZED_NAME_WEB_SETTINGS = "webSettings";
  @SerializedName(SERIALIZED_NAME_WEB_SETTINGS)
  private GoogleCloudRecaptchaenterpriseV1WebKeySettings webSettings;

  public GoogleCloudRecaptchaenterpriseV1Key() {
  }

  public GoogleCloudRecaptchaenterpriseV1Key(
     String createTime
  ) {
    this();
    this.createTime = createTime;
  }

  public GoogleCloudRecaptchaenterpriseV1Key androidSettings(GoogleCloudRecaptchaenterpriseV1AndroidKeySettings androidSettings) {
    this.androidSettings = androidSettings;
    return this;
  }

  /**
   * Get androidSettings
   * @return androidSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudRecaptchaenterpriseV1AndroidKeySettings getAndroidSettings() {
    return androidSettings;
  }

  public void setAndroidSettings(GoogleCloudRecaptchaenterpriseV1AndroidKeySettings androidSettings) {
    this.androidSettings = androidSettings;
  }


  /**
   * Output only. The timestamp corresponding to the creation of this key.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudRecaptchaenterpriseV1Key displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Human-readable display name of this key. Modifiable by user.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudRecaptchaenterpriseV1Key iosSettings(GoogleCloudRecaptchaenterpriseV1IOSKeySettings iosSettings) {
    this.iosSettings = iosSettings;
    return this;
  }

  /**
   * Get iosSettings
   * @return iosSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudRecaptchaenterpriseV1IOSKeySettings getIosSettings() {
    return iosSettings;
  }

  public void setIosSettings(GoogleCloudRecaptchaenterpriseV1IOSKeySettings iosSettings) {
    this.iosSettings = iosSettings;
  }


  public GoogleCloudRecaptchaenterpriseV1Key labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudRecaptchaenterpriseV1Key putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * See Creating and managing labels.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudRecaptchaenterpriseV1Key name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name for the Key in the format \&quot;projects/{project}/keys/{key}\&quot;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudRecaptchaenterpriseV1Key testingOptions(GoogleCloudRecaptchaenterpriseV1TestingOptions testingOptions) {
    this.testingOptions = testingOptions;
    return this;
  }

  /**
   * Get testingOptions
   * @return testingOptions
   */
  @javax.annotation.Nullable
  public GoogleCloudRecaptchaenterpriseV1TestingOptions getTestingOptions() {
    return testingOptions;
  }

  public void setTestingOptions(GoogleCloudRecaptchaenterpriseV1TestingOptions testingOptions) {
    this.testingOptions = testingOptions;
  }


  public GoogleCloudRecaptchaenterpriseV1Key wafSettings(GoogleCloudRecaptchaenterpriseV1WafSettings wafSettings) {
    this.wafSettings = wafSettings;
    return this;
  }

  /**
   * Get wafSettings
   * @return wafSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudRecaptchaenterpriseV1WafSettings getWafSettings() {
    return wafSettings;
  }

  public void setWafSettings(GoogleCloudRecaptchaenterpriseV1WafSettings wafSettings) {
    this.wafSettings = wafSettings;
  }


  public GoogleCloudRecaptchaenterpriseV1Key webSettings(GoogleCloudRecaptchaenterpriseV1WebKeySettings webSettings) {
    this.webSettings = webSettings;
    return this;
  }

  /**
   * Get webSettings
   * @return webSettings
   */
  @javax.annotation.Nullable
  public GoogleCloudRecaptchaenterpriseV1WebKeySettings getWebSettings() {
    return webSettings;
  }

  public void setWebSettings(GoogleCloudRecaptchaenterpriseV1WebKeySettings webSettings) {
    this.webSettings = webSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecaptchaenterpriseV1Key googleCloudRecaptchaenterpriseV1Key = (GoogleCloudRecaptchaenterpriseV1Key) o;
    return Objects.equals(this.androidSettings, googleCloudRecaptchaenterpriseV1Key.androidSettings) &&
        Objects.equals(this.createTime, googleCloudRecaptchaenterpriseV1Key.createTime) &&
        Objects.equals(this.displayName, googleCloudRecaptchaenterpriseV1Key.displayName) &&
        Objects.equals(this.iosSettings, googleCloudRecaptchaenterpriseV1Key.iosSettings) &&
        Objects.equals(this.labels, googleCloudRecaptchaenterpriseV1Key.labels) &&
        Objects.equals(this.name, googleCloudRecaptchaenterpriseV1Key.name) &&
        Objects.equals(this.testingOptions, googleCloudRecaptchaenterpriseV1Key.testingOptions) &&
        Objects.equals(this.wafSettings, googleCloudRecaptchaenterpriseV1Key.wafSettings) &&
        Objects.equals(this.webSettings, googleCloudRecaptchaenterpriseV1Key.webSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(androidSettings, createTime, displayName, iosSettings, labels, name, testingOptions, wafSettings, webSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecaptchaenterpriseV1Key {\n");
    sb.append("    androidSettings: ").append(toIndentedString(androidSettings)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    iosSettings: ").append(toIndentedString(iosSettings)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    testingOptions: ").append(toIndentedString(testingOptions)).append("\n");
    sb.append("    wafSettings: ").append(toIndentedString(wafSettings)).append("\n");
    sb.append("    webSettings: ").append(toIndentedString(webSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("androidSettings");
    openapiFields.add("createTime");
    openapiFields.add("displayName");
    openapiFields.add("iosSettings");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("testingOptions");
    openapiFields.add("wafSettings");
    openapiFields.add("webSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecaptchaenterpriseV1Key
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecaptchaenterpriseV1Key.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecaptchaenterpriseV1Key is not found in the empty JSON string", GoogleCloudRecaptchaenterpriseV1Key.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecaptchaenterpriseV1Key.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecaptchaenterpriseV1Key` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `androidSettings`
      if (jsonObj.get("androidSettings") != null && !jsonObj.get("androidSettings").isJsonNull()) {
        GoogleCloudRecaptchaenterpriseV1AndroidKeySettings.validateJsonElement(jsonObj.get("androidSettings"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `iosSettings`
      if (jsonObj.get("iosSettings") != null && !jsonObj.get("iosSettings").isJsonNull()) {
        GoogleCloudRecaptchaenterpriseV1IOSKeySettings.validateJsonElement(jsonObj.get("iosSettings"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `testingOptions`
      if (jsonObj.get("testingOptions") != null && !jsonObj.get("testingOptions").isJsonNull()) {
        GoogleCloudRecaptchaenterpriseV1TestingOptions.validateJsonElement(jsonObj.get("testingOptions"));
      }
      // validate the optional field `wafSettings`
      if (jsonObj.get("wafSettings") != null && !jsonObj.get("wafSettings").isJsonNull()) {
        GoogleCloudRecaptchaenterpriseV1WafSettings.validateJsonElement(jsonObj.get("wafSettings"));
      }
      // validate the optional field `webSettings`
      if (jsonObj.get("webSettings") != null && !jsonObj.get("webSettings").isJsonNull()) {
        GoogleCloudRecaptchaenterpriseV1WebKeySettings.validateJsonElement(jsonObj.get("webSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecaptchaenterpriseV1Key.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecaptchaenterpriseV1Key' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecaptchaenterpriseV1Key> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecaptchaenterpriseV1Key.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecaptchaenterpriseV1Key>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecaptchaenterpriseV1Key value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecaptchaenterpriseV1Key read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecaptchaenterpriseV1Key given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecaptchaenterpriseV1Key
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecaptchaenterpriseV1Key
   */
  public static GoogleCloudRecaptchaenterpriseV1Key fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecaptchaenterpriseV1Key.class);
  }

  /**
   * Convert an instance of GoogleCloudRecaptchaenterpriseV1Key to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

