/*
 * Amazon ElastiCache
 * <fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>
 *
 * The version of the OpenAPI document: 2015-02-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CacheClusterCacheParameterGroup;
import org.openapitools.client.model.CacheClusterConfigurationEndpoint;
import org.openapitools.client.model.CacheClusterNotificationConfiguration;
import org.openapitools.client.model.IpDiscovery;
import org.openapitools.client.model.NetworkType;
import org.openapitools.client.model.PendingModifiedValues;
import org.openapitools.client.model.TransitEncryptionMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CacheClusterListInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:56:05.565321-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CacheClusterListInner {
  public static final String SERIALIZED_NAME_CACHE_CLUSTER_ID = "CacheClusterId";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_ID)
  private String cacheClusterId;

  public static final String SERIALIZED_NAME_CONFIGURATION_ENDPOINT = "ConfigurationEndpoint";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_ENDPOINT)
  private CacheClusterConfigurationEndpoint configurationEndpoint;

  public static final String SERIALIZED_NAME_CLIENT_DOWNLOAD_LANDING_PAGE = "ClientDownloadLandingPage";
  @SerializedName(SERIALIZED_NAME_CLIENT_DOWNLOAD_LANDING_PAGE)
  private String clientDownloadLandingPage;

  public static final String SERIALIZED_NAME_CACHE_NODE_TYPE = "CacheNodeType";
  @SerializedName(SERIALIZED_NAME_CACHE_NODE_TYPE)
  private String cacheNodeType;

  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private String engine;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_STATUS = "CacheClusterStatus";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_STATUS)
  private String cacheClusterStatus;

  public static final String SERIALIZED_NAME_NUM_CACHE_NODES = "NumCacheNodes";
  @SerializedName(SERIALIZED_NAME_NUM_CACHE_NODES)
  private Integer numCacheNodes;

  public static final String SERIALIZED_NAME_PREFERRED_AVAILABILITY_ZONE = "PreferredAvailabilityZone";
  @SerializedName(SERIALIZED_NAME_PREFERRED_AVAILABILITY_ZONE)
  private String preferredAvailabilityZone;

  public static final String SERIALIZED_NAME_PREFERRED_OUTPOST_ARN = "PreferredOutpostArn";
  @SerializedName(SERIALIZED_NAME_PREFERRED_OUTPOST_ARN)
  private String preferredOutpostArn;

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_CREATE_TIME = "CacheClusterCreateTime";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_CREATE_TIME)
  private OffsetDateTime cacheClusterCreateTime;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_PENDING_MODIFIED_VALUES = "PendingModifiedValues";
  @SerializedName(SERIALIZED_NAME_PENDING_MODIFIED_VALUES)
  private PendingModifiedValues pendingModifiedValues;

  public static final String SERIALIZED_NAME_NOTIFICATION_CONFIGURATION = "NotificationConfiguration";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_CONFIGURATION)
  private CacheClusterNotificationConfiguration notificationConfiguration;

  public static final String SERIALIZED_NAME_CACHE_SECURITY_GROUPS = "CacheSecurityGroups";
  @SerializedName(SERIALIZED_NAME_CACHE_SECURITY_GROUPS)
  private List cacheSecurityGroups;

  public static final String SERIALIZED_NAME_CACHE_PARAMETER_GROUP = "CacheParameterGroup";
  @SerializedName(SERIALIZED_NAME_CACHE_PARAMETER_GROUP)
  private CacheClusterCacheParameterGroup cacheParameterGroup;

  public static final String SERIALIZED_NAME_CACHE_SUBNET_GROUP_NAME = "CacheSubnetGroupName";
  @SerializedName(SERIALIZED_NAME_CACHE_SUBNET_GROUP_NAME)
  private String cacheSubnetGroupName;

  public static final String SERIALIZED_NAME_CACHE_NODES = "CacheNodes";
  @SerializedName(SERIALIZED_NAME_CACHE_NODES)
  private List cacheNodes;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_REPLICATION_GROUP_ID = "ReplicationGroupId";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_ID)
  private String replicationGroupId;

  public static final String SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT = "SnapshotRetentionLimit";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT)
  private Integer snapshotRetentionLimit;

  public static final String SERIALIZED_NAME_SNAPSHOT_WINDOW = "SnapshotWindow";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_WINDOW)
  private String snapshotWindow;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_ENABLED = "AuthTokenEnabled";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_ENABLED)
  private Boolean authTokenEnabled;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_LAST_MODIFIED_DATE = "AuthTokenLastModifiedDate";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_LAST_MODIFIED_DATE)
  private OffsetDateTime authTokenLastModifiedDate;

  public static final String SERIALIZED_NAME_TRANSIT_ENCRYPTION_ENABLED = "TransitEncryptionEnabled";
  @SerializedName(SERIALIZED_NAME_TRANSIT_ENCRYPTION_ENABLED)
  private Boolean transitEncryptionEnabled;

  public static final String SERIALIZED_NAME_AT_REST_ENCRYPTION_ENABLED = "AtRestEncryptionEnabled";
  @SerializedName(SERIALIZED_NAME_AT_REST_ENCRYPTION_ENABLED)
  private Boolean atRestEncryptionEnabled;

  public static final String SERIALIZED_NAME_A_R_N = "ARN";
  @SerializedName(SERIALIZED_NAME_A_R_N)
  private String ARN;

  public static final String SERIALIZED_NAME_REPLICATION_GROUP_LOG_DELIVERY_ENABLED = "ReplicationGroupLogDeliveryEnabled";
  @SerializedName(SERIALIZED_NAME_REPLICATION_GROUP_LOG_DELIVERY_ENABLED)
  private Boolean replicationGroupLogDeliveryEnabled;

  public static final String SERIALIZED_NAME_LOG_DELIVERY_CONFIGURATIONS = "LogDeliveryConfigurations";
  @SerializedName(SERIALIZED_NAME_LOG_DELIVERY_CONFIGURATIONS)
  private List logDeliveryConfigurations;

  public static final String SERIALIZED_NAME_NETWORK_TYPE = "NetworkType";
  @SerializedName(SERIALIZED_NAME_NETWORK_TYPE)
  private NetworkType networkType;

  public static final String SERIALIZED_NAME_IP_DISCOVERY = "IpDiscovery";
  @SerializedName(SERIALIZED_NAME_IP_DISCOVERY)
  private IpDiscovery ipDiscovery;

  public static final String SERIALIZED_NAME_TRANSIT_ENCRYPTION_MODE = "TransitEncryptionMode";
  @SerializedName(SERIALIZED_NAME_TRANSIT_ENCRYPTION_MODE)
  private TransitEncryptionMode transitEncryptionMode;

  public CacheClusterListInner() {
  }

  public CacheClusterListInner cacheClusterId(String cacheClusterId) {
    this.cacheClusterId = cacheClusterId;
    return this;
  }

  /**
   * Get cacheClusterId
   * @return cacheClusterId
   */
  @javax.annotation.Nullable
  public String getCacheClusterId() {
    return cacheClusterId;
  }

  public void setCacheClusterId(String cacheClusterId) {
    this.cacheClusterId = cacheClusterId;
  }


  public CacheClusterListInner configurationEndpoint(CacheClusterConfigurationEndpoint configurationEndpoint) {
    this.configurationEndpoint = configurationEndpoint;
    return this;
  }

  /**
   * Get configurationEndpoint
   * @return configurationEndpoint
   */
  @javax.annotation.Nullable
  public CacheClusterConfigurationEndpoint getConfigurationEndpoint() {
    return configurationEndpoint;
  }

  public void setConfigurationEndpoint(CacheClusterConfigurationEndpoint configurationEndpoint) {
    this.configurationEndpoint = configurationEndpoint;
  }


  public CacheClusterListInner clientDownloadLandingPage(String clientDownloadLandingPage) {
    this.clientDownloadLandingPage = clientDownloadLandingPage;
    return this;
  }

  /**
   * Get clientDownloadLandingPage
   * @return clientDownloadLandingPage
   */
  @javax.annotation.Nullable
  public String getClientDownloadLandingPage() {
    return clientDownloadLandingPage;
  }

  public void setClientDownloadLandingPage(String clientDownloadLandingPage) {
    this.clientDownloadLandingPage = clientDownloadLandingPage;
  }


  public CacheClusterListInner cacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
    return this;
  }

  /**
   * Get cacheNodeType
   * @return cacheNodeType
   */
  @javax.annotation.Nullable
  public String getCacheNodeType() {
    return cacheNodeType;
  }

  public void setCacheNodeType(String cacheNodeType) {
    this.cacheNodeType = cacheNodeType;
  }


  public CacheClusterListInner engine(String engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }


  public CacheClusterListInner engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public CacheClusterListInner cacheClusterStatus(String cacheClusterStatus) {
    this.cacheClusterStatus = cacheClusterStatus;
    return this;
  }

  /**
   * Get cacheClusterStatus
   * @return cacheClusterStatus
   */
  @javax.annotation.Nullable
  public String getCacheClusterStatus() {
    return cacheClusterStatus;
  }

  public void setCacheClusterStatus(String cacheClusterStatus) {
    this.cacheClusterStatus = cacheClusterStatus;
  }


  public CacheClusterListInner numCacheNodes(Integer numCacheNodes) {
    this.numCacheNodes = numCacheNodes;
    return this;
  }

  /**
   * Get numCacheNodes
   * @return numCacheNodes
   */
  @javax.annotation.Nullable
  public Integer getNumCacheNodes() {
    return numCacheNodes;
  }

  public void setNumCacheNodes(Integer numCacheNodes) {
    this.numCacheNodes = numCacheNodes;
  }


  public CacheClusterListInner preferredAvailabilityZone(String preferredAvailabilityZone) {
    this.preferredAvailabilityZone = preferredAvailabilityZone;
    return this;
  }

  /**
   * Get preferredAvailabilityZone
   * @return preferredAvailabilityZone
   */
  @javax.annotation.Nullable
  public String getPreferredAvailabilityZone() {
    return preferredAvailabilityZone;
  }

  public void setPreferredAvailabilityZone(String preferredAvailabilityZone) {
    this.preferredAvailabilityZone = preferredAvailabilityZone;
  }


  public CacheClusterListInner preferredOutpostArn(String preferredOutpostArn) {
    this.preferredOutpostArn = preferredOutpostArn;
    return this;
  }

  /**
   * Get preferredOutpostArn
   * @return preferredOutpostArn
   */
  @javax.annotation.Nullable
  public String getPreferredOutpostArn() {
    return preferredOutpostArn;
  }

  public void setPreferredOutpostArn(String preferredOutpostArn) {
    this.preferredOutpostArn = preferredOutpostArn;
  }


  public CacheClusterListInner cacheClusterCreateTime(OffsetDateTime cacheClusterCreateTime) {
    this.cacheClusterCreateTime = cacheClusterCreateTime;
    return this;
  }

  /**
   * Get cacheClusterCreateTime
   * @return cacheClusterCreateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCacheClusterCreateTime() {
    return cacheClusterCreateTime;
  }

  public void setCacheClusterCreateTime(OffsetDateTime cacheClusterCreateTime) {
    this.cacheClusterCreateTime = cacheClusterCreateTime;
  }


  public CacheClusterListInner preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public CacheClusterListInner pendingModifiedValues(PendingModifiedValues pendingModifiedValues) {
    this.pendingModifiedValues = pendingModifiedValues;
    return this;
  }

  /**
   * Get pendingModifiedValues
   * @return pendingModifiedValues
   */
  @javax.annotation.Nullable
  public PendingModifiedValues getPendingModifiedValues() {
    return pendingModifiedValues;
  }

  public void setPendingModifiedValues(PendingModifiedValues pendingModifiedValues) {
    this.pendingModifiedValues = pendingModifiedValues;
  }


  public CacheClusterListInner notificationConfiguration(CacheClusterNotificationConfiguration notificationConfiguration) {
    this.notificationConfiguration = notificationConfiguration;
    return this;
  }

  /**
   * Get notificationConfiguration
   * @return notificationConfiguration
   */
  @javax.annotation.Nullable
  public CacheClusterNotificationConfiguration getNotificationConfiguration() {
    return notificationConfiguration;
  }

  public void setNotificationConfiguration(CacheClusterNotificationConfiguration notificationConfiguration) {
    this.notificationConfiguration = notificationConfiguration;
  }


  public CacheClusterListInner cacheSecurityGroups(List cacheSecurityGroups) {
    this.cacheSecurityGroups = cacheSecurityGroups;
    return this;
  }

  /**
   * Get cacheSecurityGroups
   * @return cacheSecurityGroups
   */
  @javax.annotation.Nullable
  public List getCacheSecurityGroups() {
    return cacheSecurityGroups;
  }

  public void setCacheSecurityGroups(List cacheSecurityGroups) {
    this.cacheSecurityGroups = cacheSecurityGroups;
  }


  public CacheClusterListInner cacheParameterGroup(CacheClusterCacheParameterGroup cacheParameterGroup) {
    this.cacheParameterGroup = cacheParameterGroup;
    return this;
  }

  /**
   * Get cacheParameterGroup
   * @return cacheParameterGroup
   */
  @javax.annotation.Nullable
  public CacheClusterCacheParameterGroup getCacheParameterGroup() {
    return cacheParameterGroup;
  }

  public void setCacheParameterGroup(CacheClusterCacheParameterGroup cacheParameterGroup) {
    this.cacheParameterGroup = cacheParameterGroup;
  }


  public CacheClusterListInner cacheSubnetGroupName(String cacheSubnetGroupName) {
    this.cacheSubnetGroupName = cacheSubnetGroupName;
    return this;
  }

  /**
   * Get cacheSubnetGroupName
   * @return cacheSubnetGroupName
   */
  @javax.annotation.Nullable
  public String getCacheSubnetGroupName() {
    return cacheSubnetGroupName;
  }

  public void setCacheSubnetGroupName(String cacheSubnetGroupName) {
    this.cacheSubnetGroupName = cacheSubnetGroupName;
  }


  public CacheClusterListInner cacheNodes(List cacheNodes) {
    this.cacheNodes = cacheNodes;
    return this;
  }

  /**
   * Get cacheNodes
   * @return cacheNodes
   */
  @javax.annotation.Nullable
  public List getCacheNodes() {
    return cacheNodes;
  }

  public void setCacheNodes(List cacheNodes) {
    this.cacheNodes = cacheNodes;
  }


  public CacheClusterListInner autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public CacheClusterListInner securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public CacheClusterListInner replicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
    return this;
  }

  /**
   * Get replicationGroupId
   * @return replicationGroupId
   */
  @javax.annotation.Nullable
  public String getReplicationGroupId() {
    return replicationGroupId;
  }

  public void setReplicationGroupId(String replicationGroupId) {
    this.replicationGroupId = replicationGroupId;
  }


  public CacheClusterListInner snapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
    return this;
  }

  /**
   * Get snapshotRetentionLimit
   * @return snapshotRetentionLimit
   */
  @javax.annotation.Nullable
  public Integer getSnapshotRetentionLimit() {
    return snapshotRetentionLimit;
  }

  public void setSnapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
  }


  public CacheClusterListInner snapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
    return this;
  }

  /**
   * Get snapshotWindow
   * @return snapshotWindow
   */
  @javax.annotation.Nullable
  public String getSnapshotWindow() {
    return snapshotWindow;
  }

  public void setSnapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
  }


  public CacheClusterListInner authTokenEnabled(Boolean authTokenEnabled) {
    this.authTokenEnabled = authTokenEnabled;
    return this;
  }

  /**
   * Get authTokenEnabled
   * @return authTokenEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAuthTokenEnabled() {
    return authTokenEnabled;
  }

  public void setAuthTokenEnabled(Boolean authTokenEnabled) {
    this.authTokenEnabled = authTokenEnabled;
  }


  public CacheClusterListInner authTokenLastModifiedDate(OffsetDateTime authTokenLastModifiedDate) {
    this.authTokenLastModifiedDate = authTokenLastModifiedDate;
    return this;
  }

  /**
   * Get authTokenLastModifiedDate
   * @return authTokenLastModifiedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAuthTokenLastModifiedDate() {
    return authTokenLastModifiedDate;
  }

  public void setAuthTokenLastModifiedDate(OffsetDateTime authTokenLastModifiedDate) {
    this.authTokenLastModifiedDate = authTokenLastModifiedDate;
  }


  public CacheClusterListInner transitEncryptionEnabled(Boolean transitEncryptionEnabled) {
    this.transitEncryptionEnabled = transitEncryptionEnabled;
    return this;
  }

  /**
   * Get transitEncryptionEnabled
   * @return transitEncryptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTransitEncryptionEnabled() {
    return transitEncryptionEnabled;
  }

  public void setTransitEncryptionEnabled(Boolean transitEncryptionEnabled) {
    this.transitEncryptionEnabled = transitEncryptionEnabled;
  }


  public CacheClusterListInner atRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
    this.atRestEncryptionEnabled = atRestEncryptionEnabled;
    return this;
  }

  /**
   * Get atRestEncryptionEnabled
   * @return atRestEncryptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAtRestEncryptionEnabled() {
    return atRestEncryptionEnabled;
  }

  public void setAtRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
    this.atRestEncryptionEnabled = atRestEncryptionEnabled;
  }


  public CacheClusterListInner ARN(String ARN) {
    this.ARN = ARN;
    return this;
  }

  /**
   * Get ARN
   * @return ARN
   */
  @javax.annotation.Nullable
  public String getARN() {
    return ARN;
  }

  public void setARN(String ARN) {
    this.ARN = ARN;
  }


  public CacheClusterListInner replicationGroupLogDeliveryEnabled(Boolean replicationGroupLogDeliveryEnabled) {
    this.replicationGroupLogDeliveryEnabled = replicationGroupLogDeliveryEnabled;
    return this;
  }

  /**
   * Get replicationGroupLogDeliveryEnabled
   * @return replicationGroupLogDeliveryEnabled
   */
  @javax.annotation.Nullable
  public Boolean getReplicationGroupLogDeliveryEnabled() {
    return replicationGroupLogDeliveryEnabled;
  }

  public void setReplicationGroupLogDeliveryEnabled(Boolean replicationGroupLogDeliveryEnabled) {
    this.replicationGroupLogDeliveryEnabled = replicationGroupLogDeliveryEnabled;
  }


  public CacheClusterListInner logDeliveryConfigurations(List logDeliveryConfigurations) {
    this.logDeliveryConfigurations = logDeliveryConfigurations;
    return this;
  }

  /**
   * Get logDeliveryConfigurations
   * @return logDeliveryConfigurations
   */
  @javax.annotation.Nullable
  public List getLogDeliveryConfigurations() {
    return logDeliveryConfigurations;
  }

  public void setLogDeliveryConfigurations(List logDeliveryConfigurations) {
    this.logDeliveryConfigurations = logDeliveryConfigurations;
  }


  public CacheClusterListInner networkType(NetworkType networkType) {
    this.networkType = networkType;
    return this;
  }

  /**
   * Get networkType
   * @return networkType
   */
  @javax.annotation.Nullable
  public NetworkType getNetworkType() {
    return networkType;
  }

  public void setNetworkType(NetworkType networkType) {
    this.networkType = networkType;
  }


  public CacheClusterListInner ipDiscovery(IpDiscovery ipDiscovery) {
    this.ipDiscovery = ipDiscovery;
    return this;
  }

  /**
   * Get ipDiscovery
   * @return ipDiscovery
   */
  @javax.annotation.Nullable
  public IpDiscovery getIpDiscovery() {
    return ipDiscovery;
  }

  public void setIpDiscovery(IpDiscovery ipDiscovery) {
    this.ipDiscovery = ipDiscovery;
  }


  public CacheClusterListInner transitEncryptionMode(TransitEncryptionMode transitEncryptionMode) {
    this.transitEncryptionMode = transitEncryptionMode;
    return this;
  }

  /**
   * Get transitEncryptionMode
   * @return transitEncryptionMode
   */
  @javax.annotation.Nullable
  public TransitEncryptionMode getTransitEncryptionMode() {
    return transitEncryptionMode;
  }

  public void setTransitEncryptionMode(TransitEncryptionMode transitEncryptionMode) {
    this.transitEncryptionMode = transitEncryptionMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CacheClusterListInner cacheClusterListInner = (CacheClusterListInner) o;
    return Objects.equals(this.cacheClusterId, cacheClusterListInner.cacheClusterId) &&
        Objects.equals(this.configurationEndpoint, cacheClusterListInner.configurationEndpoint) &&
        Objects.equals(this.clientDownloadLandingPage, cacheClusterListInner.clientDownloadLandingPage) &&
        Objects.equals(this.cacheNodeType, cacheClusterListInner.cacheNodeType) &&
        Objects.equals(this.engine, cacheClusterListInner.engine) &&
        Objects.equals(this.engineVersion, cacheClusterListInner.engineVersion) &&
        Objects.equals(this.cacheClusterStatus, cacheClusterListInner.cacheClusterStatus) &&
        Objects.equals(this.numCacheNodes, cacheClusterListInner.numCacheNodes) &&
        Objects.equals(this.preferredAvailabilityZone, cacheClusterListInner.preferredAvailabilityZone) &&
        Objects.equals(this.preferredOutpostArn, cacheClusterListInner.preferredOutpostArn) &&
        Objects.equals(this.cacheClusterCreateTime, cacheClusterListInner.cacheClusterCreateTime) &&
        Objects.equals(this.preferredMaintenanceWindow, cacheClusterListInner.preferredMaintenanceWindow) &&
        Objects.equals(this.pendingModifiedValues, cacheClusterListInner.pendingModifiedValues) &&
        Objects.equals(this.notificationConfiguration, cacheClusterListInner.notificationConfiguration) &&
        Objects.equals(this.cacheSecurityGroups, cacheClusterListInner.cacheSecurityGroups) &&
        Objects.equals(this.cacheParameterGroup, cacheClusterListInner.cacheParameterGroup) &&
        Objects.equals(this.cacheSubnetGroupName, cacheClusterListInner.cacheSubnetGroupName) &&
        Objects.equals(this.cacheNodes, cacheClusterListInner.cacheNodes) &&
        Objects.equals(this.autoMinorVersionUpgrade, cacheClusterListInner.autoMinorVersionUpgrade) &&
        Objects.equals(this.securityGroups, cacheClusterListInner.securityGroups) &&
        Objects.equals(this.replicationGroupId, cacheClusterListInner.replicationGroupId) &&
        Objects.equals(this.snapshotRetentionLimit, cacheClusterListInner.snapshotRetentionLimit) &&
        Objects.equals(this.snapshotWindow, cacheClusterListInner.snapshotWindow) &&
        Objects.equals(this.authTokenEnabled, cacheClusterListInner.authTokenEnabled) &&
        Objects.equals(this.authTokenLastModifiedDate, cacheClusterListInner.authTokenLastModifiedDate) &&
        Objects.equals(this.transitEncryptionEnabled, cacheClusterListInner.transitEncryptionEnabled) &&
        Objects.equals(this.atRestEncryptionEnabled, cacheClusterListInner.atRestEncryptionEnabled) &&
        Objects.equals(this.ARN, cacheClusterListInner.ARN) &&
        Objects.equals(this.replicationGroupLogDeliveryEnabled, cacheClusterListInner.replicationGroupLogDeliveryEnabled) &&
        Objects.equals(this.logDeliveryConfigurations, cacheClusterListInner.logDeliveryConfigurations) &&
        Objects.equals(this.networkType, cacheClusterListInner.networkType) &&
        Objects.equals(this.ipDiscovery, cacheClusterListInner.ipDiscovery) &&
        Objects.equals(this.transitEncryptionMode, cacheClusterListInner.transitEncryptionMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacheClusterId, configurationEndpoint, clientDownloadLandingPage, cacheNodeType, engine, engineVersion, cacheClusterStatus, numCacheNodes, preferredAvailabilityZone, preferredOutpostArn, cacheClusterCreateTime, preferredMaintenanceWindow, pendingModifiedValues, notificationConfiguration, cacheSecurityGroups, cacheParameterGroup, cacheSubnetGroupName, cacheNodes, autoMinorVersionUpgrade, securityGroups, replicationGroupId, snapshotRetentionLimit, snapshotWindow, authTokenEnabled, authTokenLastModifiedDate, transitEncryptionEnabled, atRestEncryptionEnabled, ARN, replicationGroupLogDeliveryEnabled, logDeliveryConfigurations, networkType, ipDiscovery, transitEncryptionMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CacheClusterListInner {\n");
    sb.append("    cacheClusterId: ").append(toIndentedString(cacheClusterId)).append("\n");
    sb.append("    configurationEndpoint: ").append(toIndentedString(configurationEndpoint)).append("\n");
    sb.append("    clientDownloadLandingPage: ").append(toIndentedString(clientDownloadLandingPage)).append("\n");
    sb.append("    cacheNodeType: ").append(toIndentedString(cacheNodeType)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    cacheClusterStatus: ").append(toIndentedString(cacheClusterStatus)).append("\n");
    sb.append("    numCacheNodes: ").append(toIndentedString(numCacheNodes)).append("\n");
    sb.append("    preferredAvailabilityZone: ").append(toIndentedString(preferredAvailabilityZone)).append("\n");
    sb.append("    preferredOutpostArn: ").append(toIndentedString(preferredOutpostArn)).append("\n");
    sb.append("    cacheClusterCreateTime: ").append(toIndentedString(cacheClusterCreateTime)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    pendingModifiedValues: ").append(toIndentedString(pendingModifiedValues)).append("\n");
    sb.append("    notificationConfiguration: ").append(toIndentedString(notificationConfiguration)).append("\n");
    sb.append("    cacheSecurityGroups: ").append(toIndentedString(cacheSecurityGroups)).append("\n");
    sb.append("    cacheParameterGroup: ").append(toIndentedString(cacheParameterGroup)).append("\n");
    sb.append("    cacheSubnetGroupName: ").append(toIndentedString(cacheSubnetGroupName)).append("\n");
    sb.append("    cacheNodes: ").append(toIndentedString(cacheNodes)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    replicationGroupId: ").append(toIndentedString(replicationGroupId)).append("\n");
    sb.append("    snapshotRetentionLimit: ").append(toIndentedString(snapshotRetentionLimit)).append("\n");
    sb.append("    snapshotWindow: ").append(toIndentedString(snapshotWindow)).append("\n");
    sb.append("    authTokenEnabled: ").append(toIndentedString(authTokenEnabled)).append("\n");
    sb.append("    authTokenLastModifiedDate: ").append(toIndentedString(authTokenLastModifiedDate)).append("\n");
    sb.append("    transitEncryptionEnabled: ").append(toIndentedString(transitEncryptionEnabled)).append("\n");
    sb.append("    atRestEncryptionEnabled: ").append(toIndentedString(atRestEncryptionEnabled)).append("\n");
    sb.append("    ARN: ").append(toIndentedString(ARN)).append("\n");
    sb.append("    replicationGroupLogDeliveryEnabled: ").append(toIndentedString(replicationGroupLogDeliveryEnabled)).append("\n");
    sb.append("    logDeliveryConfigurations: ").append(toIndentedString(logDeliveryConfigurations)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    ipDiscovery: ").append(toIndentedString(ipDiscovery)).append("\n");
    sb.append("    transitEncryptionMode: ").append(toIndentedString(transitEncryptionMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CacheClusterId");
    openapiFields.add("ConfigurationEndpoint");
    openapiFields.add("ClientDownloadLandingPage");
    openapiFields.add("CacheNodeType");
    openapiFields.add("Engine");
    openapiFields.add("EngineVersion");
    openapiFields.add("CacheClusterStatus");
    openapiFields.add("NumCacheNodes");
    openapiFields.add("PreferredAvailabilityZone");
    openapiFields.add("PreferredOutpostArn");
    openapiFields.add("CacheClusterCreateTime");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("PendingModifiedValues");
    openapiFields.add("NotificationConfiguration");
    openapiFields.add("CacheSecurityGroups");
    openapiFields.add("CacheParameterGroup");
    openapiFields.add("CacheSubnetGroupName");
    openapiFields.add("CacheNodes");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("SecurityGroups");
    openapiFields.add("ReplicationGroupId");
    openapiFields.add("SnapshotRetentionLimit");
    openapiFields.add("SnapshotWindow");
    openapiFields.add("AuthTokenEnabled");
    openapiFields.add("AuthTokenLastModifiedDate");
    openapiFields.add("TransitEncryptionEnabled");
    openapiFields.add("AtRestEncryptionEnabled");
    openapiFields.add("ARN");
    openapiFields.add("ReplicationGroupLogDeliveryEnabled");
    openapiFields.add("LogDeliveryConfigurations");
    openapiFields.add("NetworkType");
    openapiFields.add("IpDiscovery");
    openapiFields.add("TransitEncryptionMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CacheClusterListInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CacheClusterListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CacheClusterListInner is not found in the empty JSON string", CacheClusterListInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CacheClusterListInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CacheClusterListInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CacheClusterId`
      if (jsonObj.get("CacheClusterId") != null && !jsonObj.get("CacheClusterId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheClusterId"));
      }
      // validate the optional field `ConfigurationEndpoint`
      if (jsonObj.get("ConfigurationEndpoint") != null && !jsonObj.get("ConfigurationEndpoint").isJsonNull()) {
        CacheClusterConfigurationEndpoint.validateJsonElement(jsonObj.get("ConfigurationEndpoint"));
      }
      // validate the optional field `ClientDownloadLandingPage`
      if (jsonObj.get("ClientDownloadLandingPage") != null && !jsonObj.get("ClientDownloadLandingPage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClientDownloadLandingPage"));
      }
      // validate the optional field `CacheNodeType`
      if (jsonObj.get("CacheNodeType") != null && !jsonObj.get("CacheNodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheNodeType"));
      }
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Engine"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `CacheClusterStatus`
      if (jsonObj.get("CacheClusterStatus") != null && !jsonObj.get("CacheClusterStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheClusterStatus"));
      }
      // validate the optional field `NumCacheNodes`
      if (jsonObj.get("NumCacheNodes") != null && !jsonObj.get("NumCacheNodes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumCacheNodes"));
      }
      // validate the optional field `PreferredAvailabilityZone`
      if (jsonObj.get("PreferredAvailabilityZone") != null && !jsonObj.get("PreferredAvailabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredAvailabilityZone"));
      }
      // validate the optional field `PreferredOutpostArn`
      if (jsonObj.get("PreferredOutpostArn") != null && !jsonObj.get("PreferredOutpostArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredOutpostArn"));
      }
      // validate the optional field `CacheClusterCreateTime`
      if (jsonObj.get("CacheClusterCreateTime") != null && !jsonObj.get("CacheClusterCreateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CacheClusterCreateTime"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `PendingModifiedValues`
      if (jsonObj.get("PendingModifiedValues") != null && !jsonObj.get("PendingModifiedValues").isJsonNull()) {
        PendingModifiedValues.validateJsonElement(jsonObj.get("PendingModifiedValues"));
      }
      // validate the optional field `NotificationConfiguration`
      if (jsonObj.get("NotificationConfiguration") != null && !jsonObj.get("NotificationConfiguration").isJsonNull()) {
        CacheClusterNotificationConfiguration.validateJsonElement(jsonObj.get("NotificationConfiguration"));
      }
      // validate the optional field `CacheSecurityGroups`
      if (jsonObj.get("CacheSecurityGroups") != null && !jsonObj.get("CacheSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CacheSecurityGroups"));
      }
      // validate the optional field `CacheParameterGroup`
      if (jsonObj.get("CacheParameterGroup") != null && !jsonObj.get("CacheParameterGroup").isJsonNull()) {
        CacheClusterCacheParameterGroup.validateJsonElement(jsonObj.get("CacheParameterGroup"));
      }
      // validate the optional field `CacheSubnetGroupName`
      if (jsonObj.get("CacheSubnetGroupName") != null && !jsonObj.get("CacheSubnetGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CacheSubnetGroupName"));
      }
      // validate the optional field `CacheNodes`
      if (jsonObj.get("CacheNodes") != null && !jsonObj.get("CacheNodes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CacheNodes"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `ReplicationGroupId`
      if (jsonObj.get("ReplicationGroupId") != null && !jsonObj.get("ReplicationGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReplicationGroupId"));
      }
      // validate the optional field `SnapshotRetentionLimit`
      if (jsonObj.get("SnapshotRetentionLimit") != null && !jsonObj.get("SnapshotRetentionLimit").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SnapshotRetentionLimit"));
      }
      // validate the optional field `SnapshotWindow`
      if (jsonObj.get("SnapshotWindow") != null && !jsonObj.get("SnapshotWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotWindow"));
      }
      // validate the optional field `AuthTokenEnabled`
      if (jsonObj.get("AuthTokenEnabled") != null && !jsonObj.get("AuthTokenEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AuthTokenEnabled"));
      }
      // validate the optional field `AuthTokenLastModifiedDate`
      if (jsonObj.get("AuthTokenLastModifiedDate") != null && !jsonObj.get("AuthTokenLastModifiedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("AuthTokenLastModifiedDate"));
      }
      // validate the optional field `TransitEncryptionEnabled`
      if (jsonObj.get("TransitEncryptionEnabled") != null && !jsonObj.get("TransitEncryptionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("TransitEncryptionEnabled"));
      }
      // validate the optional field `AtRestEncryptionEnabled`
      if (jsonObj.get("AtRestEncryptionEnabled") != null && !jsonObj.get("AtRestEncryptionEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AtRestEncryptionEnabled"));
      }
      // validate the optional field `ARN`
      if (jsonObj.get("ARN") != null && !jsonObj.get("ARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ARN"));
      }
      // validate the optional field `ReplicationGroupLogDeliveryEnabled`
      if (jsonObj.get("ReplicationGroupLogDeliveryEnabled") != null && !jsonObj.get("ReplicationGroupLogDeliveryEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ReplicationGroupLogDeliveryEnabled"));
      }
      // validate the optional field `LogDeliveryConfigurations`
      if (jsonObj.get("LogDeliveryConfigurations") != null && !jsonObj.get("LogDeliveryConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LogDeliveryConfigurations"));
      }
      // validate the optional field `NetworkType`
      if (jsonObj.get("NetworkType") != null && !jsonObj.get("NetworkType").isJsonNull()) {
        NetworkType.validateJsonElement(jsonObj.get("NetworkType"));
      }
      // validate the optional field `IpDiscovery`
      if (jsonObj.get("IpDiscovery") != null && !jsonObj.get("IpDiscovery").isJsonNull()) {
        IpDiscovery.validateJsonElement(jsonObj.get("IpDiscovery"));
      }
      // validate the optional field `TransitEncryptionMode`
      if (jsonObj.get("TransitEncryptionMode") != null && !jsonObj.get("TransitEncryptionMode").isJsonNull()) {
        TransitEncryptionMode.validateJsonElement(jsonObj.get("TransitEncryptionMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CacheClusterListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CacheClusterListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CacheClusterListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CacheClusterListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CacheClusterListInner>() {
           @Override
           public void write(JsonWriter out, CacheClusterListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CacheClusterListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CacheClusterListInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CacheClusterListInner
   * @throws IOException if the JSON string is invalid with respect to CacheClusterListInner
   */
  public static CacheClusterListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CacheClusterListInner.class);
  }

  /**
   * Convert an instance of CacheClusterListInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

