/*
 * Amazon Lightsail
 * <p>Amazon Lightsail is the easiest way to get started with Amazon Web Services (Amazon Web Services) for developers who need to build websites or web applications. It includes everything you need to launch your project quickly - instances (virtual private servers), container services, storage buckets, managed databases, SSD-based block storage, static IP addresses, load balancers, content delivery network (CDN) distributions, DNS management of registered domains, and resource snapshots (backups) - for a low, predictable monthly price.</p> <p>You can manage your Lightsail resources using the Lightsail console, Lightsail API, Command Line Interface (CLI), or SDKs. For more information about Lightsail concepts and tasks, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli\">Amazon Lightsail Developer Guide</a>.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the Lightsail service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Lightsail service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lightsail.html\">Amazon Lightsail Endpoints and Quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateRelationalDatabaseRequest
 */
public class UpdateRelationalDatabaseRequestTest {
    private final UpdateRelationalDatabaseRequest model = new UpdateRelationalDatabaseRequest();

    /**
     * Model tests for UpdateRelationalDatabaseRequest
     */
    @Test
    public void testUpdateRelationalDatabaseRequest() {
        // TODO: test UpdateRelationalDatabaseRequest
    }

    /**
     * Test the property 'relationalDatabaseName'
     */
    @Test
    public void relationalDatabaseNameTest() {
        // TODO: test relationalDatabaseName
    }

    /**
     * Test the property 'masterUserPassword'
     */
    @Test
    public void masterUserPasswordTest() {
        // TODO: test masterUserPassword
    }

    /**
     * Test the property 'rotateMasterUserPassword'
     */
    @Test
    public void rotateMasterUserPasswordTest() {
        // TODO: test rotateMasterUserPassword
    }

    /**
     * Test the property 'preferredBackupWindow'
     */
    @Test
    public void preferredBackupWindowTest() {
        // TODO: test preferredBackupWindow
    }

    /**
     * Test the property 'preferredMaintenanceWindow'
     */
    @Test
    public void preferredMaintenanceWindowTest() {
        // TODO: test preferredMaintenanceWindow
    }

    /**
     * Test the property 'enableBackupRetention'
     */
    @Test
    public void enableBackupRetentionTest() {
        // TODO: test enableBackupRetention
    }

    /**
     * Test the property 'disableBackupRetention'
     */
    @Test
    public void disableBackupRetentionTest() {
        // TODO: test disableBackupRetention
    }

    /**
     * Test the property 'publiclyAccessible'
     */
    @Test
    public void publiclyAccessibleTest() {
        // TODO: test publiclyAccessible
    }

    /**
     * Test the property 'applyImmediately'
     */
    @Test
    public void applyImmediatelyTest() {
        // TODO: test applyImmediately
    }

    /**
     * Test the property 'caCertificateIdentifier'
     */
    @Test
    public void caCertificateIdentifierTest() {
        // TODO: test caCertificateIdentifier
    }

}
