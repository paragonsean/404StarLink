# coding: utf-8

"""
    Discovery API

    The Ticketmaster Discovery API allows you to search for events, attractions, or venues.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.local_time import LocalTime

class TestLocalTime(unittest.TestCase):
    """LocalTime unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LocalTime:
        """Test LocalTime
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LocalTime`
        """
        model = LocalTime()
        if include_optional:
            return LocalTime(
                chronology = openapi_client.models.chronology.Chronology(
                    zone = openapi_client.models.date_time_zone.DateTimeZone(
                        fixed = True, 
                        id = '', ), ),
                field_types = [
                    openapi_client.models.date_time_field_type.DateTimeFieldType(
                        duration_type = openapi_client.models.duration_field_type.DurationFieldType(
                            name = '', ), 
                        name = '', 
                        range_duration_type = openapi_client.models.duration_field_type.DurationFieldType(
                            name = '', ), )
                    ],
                fields = [
                    openapi_client.models.date_time_field.DateTimeField(
                        duration_field = openapi_client.models.duration_field.DurationField(
                            name = '', 
                            precise = True, 
                            supported = True, 
                            type = openapi_client.models.duration_field_type.DurationFieldType(
                                name = '', ), 
                            unit_millis = 56, ), 
                        leap_duration_field = openapi_client.models.duration_field.DurationField(
                            name = '', 
                            precise = True, 
                            supported = True, 
                            unit_millis = 56, ), 
                        lenient = True, 
                        maximum_value = 56, 
                        minimum_value = 56, 
                        name = '', 
                        range_duration_field = , 
                        supported = True, 
                        type = openapi_client.models.date_time_field_type.DateTimeFieldType(
                            duration_type = openapi_client.models.duration_field_type.DurationFieldType(
                                name = '', ), 
                            name = '', 
                            range_duration_type = , ), )
                    ],
                hour_of_day = 56,
                millis_of_day = 56,
                millis_of_second = 56,
                minute_of_hour = 56,
                second_of_minute = 56,
                values = [
                    56
                    ]
            )
        else:
            return LocalTime(
        )
        """

    def testLocalTime(self):
        """Test LocalTime"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
