# coding: utf-8

"""
    Dataflow Kit Web Scraper

    Render Javascript driven pages, while we internally manage Headless Chrome and proxies for you.   - Build a custom web scraper with our Visual point-and-click toolkit. - Scrape the most popular Search engines result pages (SERP). - Convert web pages to PDF and capture screenshots. *** ### Authentication Dataflow Kit API require you to sign up for an API key in order to use the API.   The API key can be found in the [DFK Dashboard](https://account.dataflowkit.com) after _free registration_.  Pass a secret API Key to all API requests to the server as the `api_key` query parameter.  

    The version of the OpenAPI document: 1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.url2screenshotrequest import Url2screenshotrequest

class TestUrl2screenshotrequest(unittest.TestCase):
    """Url2screenshotrequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Url2screenshotrequest:
        """Test Url2screenshotrequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Url2screenshotrequest`
        """
        model = Url2screenshotrequest()
        if include_optional:
            return Url2screenshotrequest(
                actions = [
                    openapi_client.models.action.Action()
                    ],
                clip_selector = '#css-element',
                format = 'png',
                full_page = True,
                height = 56,
                ignore_http_status_err_codes = True,
                initial_cookies = [
                    openapi_client.models.initial_cookie.initialCookie(
                        domain = '.twitter.com', 
                        expiration_date = 1762900726.409761, 
                        host_only = False, 
                        http_only = False, 
                        id = 1, 
                        name = 'auth_token', 
                        path = '/', 
                        same_site = 'unspecified', 
                        secure = True, 
                        session = True, 
                        store_id = '1', 
                        value = '46fd9fed1ab8b0b0e231ac3f', )
                    ],
                offsetx = 56,
                offsety = 56,
                output = 'buffer',
                print_background = True,
                proxy = 'country-any',
                quality = 56,
                scale = 1.337,
                url = '',
                wait_delay = 1.337,
                width = 56
            )
        else:
            return Url2screenshotrequest(
                url = '',
        )
        """

    def testUrl2screenshotrequest(self):
        """Test Url2screenshotrequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
