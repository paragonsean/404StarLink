# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.feed import Feed

class TestFeed(unittest.TestCase):
    """Feed unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Feed:
        """Test Feed
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Feed`
        """
        model = Feed()
        if include_optional:
            return Feed(
                links = openapi_client.models.feed__links.feed__links(
                    current_user = openapi_client.models.link_with_type.Link With Type(
                        href = '', 
                        type = '', ), 
                    current_user_actor = openapi_client.models.link_with_type.Link With Type(
                        href = '', 
                        type = '', ), 
                    current_user_organization = , 
                    current_user_organizations = [
                        
                        ], 
                    current_user_public = , 
                    repository_discussions = , 
                    repository_discussions_category = , 
                    security_advisories = , 
                    timeline = , 
                    user = , ),
                current_user_actor_url = 'https://github.com/octocat.private.actor?token=abc123',
                current_user_organization_url = 'https://github.com/octocat-org',
                current_user_organization_urls = ["https://github.com/organizations/github/octocat.private.atom?token=abc123"],
                current_user_public_url = 'https://github.com/octocat',
                current_user_url = 'https://github.com/octocat.private?token=abc123',
                repository_discussions = openapi_client.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                repository_discussions_category = openapi_client.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                repository_discussions_category_url = 'https://github.com/{user}/{repo}/discussions/categories/{category}',
                repository_discussions_url = 'https://github.com/{user}/{repo}/discussions',
                security_advisories_url = 'https://github.com/security-advisories',
                timeline_url = 'https://github.com/timeline',
                user_url = 'https://github.com/{user}'
            )
        else:
            return Feed(
                links = openapi_client.models.feed__links.feed__links(
                    current_user = openapi_client.models.link_with_type.Link With Type(
                        href = '', 
                        type = '', ), 
                    current_user_actor = openapi_client.models.link_with_type.Link With Type(
                        href = '', 
                        type = '', ), 
                    current_user_organization = , 
                    current_user_organizations = [
                        
                        ], 
                    current_user_public = , 
                    repository_discussions = , 
                    repository_discussions_category = , 
                    security_advisories = , 
                    timeline = , 
                    user = , ),
                timeline_url = 'https://github.com/timeline',
                user_url = 'https://github.com/{user}',
        )
        """

    def testFeed(self):
        """Test Feed"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
