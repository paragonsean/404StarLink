# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pending_deployment import PendingDeployment

class TestPendingDeployment(unittest.TestCase):
    """PendingDeployment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PendingDeployment:
        """Test PendingDeployment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PendingDeployment`
        """
        model = PendingDeployment()
        if include_optional:
            return PendingDeployment(
                current_user_can_approve = True,
                environment = openapi_client.models.pending_deployment_environment.pending_deployment_environment(
                    html_url = 'https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging', 
                    id = 56780428, 
                    name = 'staging', 
                    node_id = 'MDExOkVudmlyb25tZW50NTY3ODA0Mjg=', 
                    url = 'https://api.github.com/repos/github/hello-world/environments/staging', ),
                reviewers = [
                    openapi_client.models.environment_protection_rules_inner_any_of_1_reviewers_inner.environment_protection_rules_inner_anyOf_1_reviewers_inner(
                        reviewer = null, 
                        type = 'User', )
                    ],
                wait_timer = 30,
                wait_timer_started_at = '2020-11-23T22:00:40Z'
            )
        else:
            return PendingDeployment(
                current_user_can_approve = True,
                environment = openapi_client.models.pending_deployment_environment.pending_deployment_environment(
                    html_url = 'https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging', 
                    id = 56780428, 
                    name = 'staging', 
                    node_id = 'MDExOkVudmlyb25tZW50NTY3ODA0Mjg=', 
                    url = 'https://api.github.com/repos/github/hello-world/environments/staging', ),
                reviewers = [
                    openapi_client.models.environment_protection_rules_inner_any_of_1_reviewers_inner.environment_protection_rules_inner_anyOf_1_reviewers_inner(
                        reviewer = null, 
                        type = 'User', )
                    ],
                wait_timer = 30,
                wait_timer_started_at = '2020-11-23T22:00:40Z',
        )
        """

    def testPendingDeployment(self):
        """Test PendingDeployment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
