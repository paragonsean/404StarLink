# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.repo_search_result_item import RepoSearchResultItem

class TestRepoSearchResultItem(unittest.TestCase):
    """RepoSearchResultItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepoSearchResultItem:
        """Test RepoSearchResultItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepoSearchResultItem`
        """
        model = RepoSearchResultItem()
        if include_optional:
            return RepoSearchResultItem(
                allow_auto_merge = True,
                allow_forking = True,
                allow_merge_commit = True,
                allow_rebase_merge = True,
                allow_squash_merge = True,
                archive_url = '',
                archived = True,
                assignees_url = '',
                blobs_url = '',
                branches_url = '',
                clone_url = '',
                collaborators_url = '',
                comments_url = '',
                commits_url = '',
                compare_url = '',
                contents_url = '',
                contributors_url = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                default_branch = '',
                delete_branch_on_merge = True,
                deployments_url = '',
                description = '',
                disabled = True,
                downloads_url = '',
                events_url = '',
                fork = True,
                forks = 56,
                forks_count = 56,
                forks_url = '',
                full_name = '',
                git_commits_url = '',
                git_refs_url = '',
                git_tags_url = '',
                git_url = '',
                has_downloads = True,
                has_issues = True,
                has_pages = True,
                has_projects = True,
                has_wiki = True,
                homepage = '',
                hooks_url = '',
                html_url = '',
                id = 56,
                is_template = True,
                issue_comment_url = '',
                issue_events_url = '',
                issues_url = '',
                keys_url = '',
                labels_url = '',
                language = '',
                languages_url = '',
                license = openapi_client.models.license_simple.License Simple(
                    html_url = '', 
                    key = 'mit', 
                    name = 'MIT License', 
                    node_id = 'MDc6TGljZW5zZW1pdA==', 
                    spdx_id = 'MIT', 
                    url = 'https://api.github.com/licenses/mit', ),
                master_branch = '',
                merges_url = '',
                milestones_url = '',
                mirror_url = '',
                name = '',
                node_id = '',
                notifications_url = '',
                open_issues = 56,
                open_issues_count = 56,
                owner = openapi_client.models.simple_user.Simple User(
                    avatar_url = 'https://github.com/images/error/octocat_happy.gif', 
                    email = '', 
                    events_url = 'https://api.github.com/users/octocat/events{/privacy}', 
                    followers_url = 'https://api.github.com/users/octocat/followers', 
                    following_url = 'https://api.github.com/users/octocat/following{/other_user}', 
                    gists_url = 'https://api.github.com/users/octocat/gists{/gist_id}', 
                    gravatar_id = '41d064eb2195891e12d0413f63227ea7', 
                    html_url = 'https://github.com/octocat', 
                    id = 1, 
                    login = 'octocat', 
                    name = '', 
                    node_id = 'MDQ6VXNlcjE=', 
                    organizations_url = 'https://api.github.com/users/octocat/orgs', 
                    received_events_url = 'https://api.github.com/users/octocat/received_events', 
                    repos_url = 'https://api.github.com/users/octocat/repos', 
                    site_admin = True, 
                    starred_at = '"2020-07-09T00:17:55Z"', 
                    starred_url = 'https://api.github.com/users/octocat/starred{/owner}{/repo}', 
                    subscriptions_url = 'https://api.github.com/users/octocat/subscriptions', 
                    type = 'User', 
                    url = 'https://api.github.com/users/octocat', ),
                permissions = openapi_client.models.collaborator_permissions.collaborator_permissions(
                    admin = True, 
                    maintain = True, 
                    pull = True, 
                    push = True, 
                    triage = True, ),
                private = True,
                pulls_url = '',
                pushed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                releases_url = '',
                score = 1.337,
                size = 56,
                ssh_url = '',
                stargazers_count = 56,
                stargazers_url = '',
                statuses_url = '',
                subscribers_url = '',
                subscription_url = '',
                svn_url = '',
                tags_url = '',
                teams_url = '',
                temp_clone_token = '',
                text_matches = [
                    openapi_client.models.search_result_text_matches_inner.search_result_text_matches_inner(
                        fragment = '', 
                        matches = [
                            openapi_client.models.search_result_text_matches_inner_matches_inner.search_result_text_matches_inner_matches_inner(
                                indices = [
                                    56
                                    ], 
                                text = '', )
                            ], 
                        object_type = '', 
                        object_url = '', 
                        property = '', )
                    ],
                topics = [
                    ''
                    ],
                trees_url = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                url = '',
                visibility = '',
                watchers = 56,
                watchers_count = 56
            )
        else:
            return RepoSearchResultItem(
                archive_url = '',
                archived = True,
                assignees_url = '',
                blobs_url = '',
                branches_url = '',
                clone_url = '',
                collaborators_url = '',
                comments_url = '',
                commits_url = '',
                compare_url = '',
                contents_url = '',
                contributors_url = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                default_branch = '',
                deployments_url = '',
                description = '',
                disabled = True,
                downloads_url = '',
                events_url = '',
                fork = True,
                forks = 56,
                forks_count = 56,
                forks_url = '',
                full_name = '',
                git_commits_url = '',
                git_refs_url = '',
                git_tags_url = '',
                git_url = '',
                has_downloads = True,
                has_issues = True,
                has_pages = True,
                has_projects = True,
                has_wiki = True,
                homepage = '',
                hooks_url = '',
                html_url = '',
                id = 56,
                issue_comment_url = '',
                issue_events_url = '',
                issues_url = '',
                keys_url = '',
                labels_url = '',
                language = '',
                languages_url = '',
                license = openapi_client.models.license_simple.License Simple(
                    html_url = '', 
                    key = 'mit', 
                    name = 'MIT License', 
                    node_id = 'MDc6TGljZW5zZW1pdA==', 
                    spdx_id = 'MIT', 
                    url = 'https://api.github.com/licenses/mit', ),
                merges_url = '',
                milestones_url = '',
                mirror_url = '',
                name = '',
                node_id = '',
                notifications_url = '',
                open_issues = 56,
                open_issues_count = 56,
                owner = openapi_client.models.simple_user.Simple User(
                    avatar_url = 'https://github.com/images/error/octocat_happy.gif', 
                    email = '', 
                    events_url = 'https://api.github.com/users/octocat/events{/privacy}', 
                    followers_url = 'https://api.github.com/users/octocat/followers', 
                    following_url = 'https://api.github.com/users/octocat/following{/other_user}', 
                    gists_url = 'https://api.github.com/users/octocat/gists{/gist_id}', 
                    gravatar_id = '41d064eb2195891e12d0413f63227ea7', 
                    html_url = 'https://github.com/octocat', 
                    id = 1, 
                    login = 'octocat', 
                    name = '', 
                    node_id = 'MDQ6VXNlcjE=', 
                    organizations_url = 'https://api.github.com/users/octocat/orgs', 
                    received_events_url = 'https://api.github.com/users/octocat/received_events', 
                    repos_url = 'https://api.github.com/users/octocat/repos', 
                    site_admin = True, 
                    starred_at = '"2020-07-09T00:17:55Z"', 
                    starred_url = 'https://api.github.com/users/octocat/starred{/owner}{/repo}', 
                    subscriptions_url = 'https://api.github.com/users/octocat/subscriptions', 
                    type = 'User', 
                    url = 'https://api.github.com/users/octocat', ),
                private = True,
                pulls_url = '',
                pushed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                releases_url = '',
                score = 1.337,
                size = 56,
                ssh_url = '',
                stargazers_count = 56,
                stargazers_url = '',
                statuses_url = '',
                subscribers_url = '',
                subscription_url = '',
                svn_url = '',
                tags_url = '',
                teams_url = '',
                trees_url = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                url = '',
                watchers = 56,
                watchers_count = 56,
        )
        """

    def testRepoSearchResultItem(self):
        """Test RepoSearchResultItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
