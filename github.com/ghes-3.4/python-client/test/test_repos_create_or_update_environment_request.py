# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.repos_create_or_update_environment_request import ReposCreateOrUpdateEnvironmentRequest

class TestReposCreateOrUpdateEnvironmentRequest(unittest.TestCase):
    """ReposCreateOrUpdateEnvironmentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReposCreateOrUpdateEnvironmentRequest:
        """Test ReposCreateOrUpdateEnvironmentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReposCreateOrUpdateEnvironmentRequest`
        """
        model = ReposCreateOrUpdateEnvironmentRequest()
        if include_optional:
            return ReposCreateOrUpdateEnvironmentRequest(
                deployment_branch_policy = openapi_client.models.deployment_branch_policy_settings.deployment-branch-policy-settings(
                    custom_branch_policies = True, 
                    protected_branches = True, ),
                reviewers = [
                    openapi_client.models.repos_create_or_update_environment_request_reviewers_inner.repos_create_or_update_environment_request_reviewers_inner(
                        id = 4532992, 
                        type = 'User', )
                    ],
                wait_timer = 30
            )
        else:
            return ReposCreateOrUpdateEnvironmentRequest(
        )
        """

    def testReposCreateOrUpdateEnvironmentRequest(self):
        """Test ReposCreateOrUpdateEnvironmentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
