# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.audit_log_event import AuditLogEvent

class TestAuditLogEvent(unittest.TestCase):
    """AuditLogEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuditLogEvent:
        """Test AuditLogEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuditLogEvent`
        """
        model = AuditLogEvent()
        if include_optional:
            return AuditLogEvent(
                timestamp = 56,
                document_id = '',
                action = '',
                active = True,
                active_was = True,
                actor = '',
                actor_id = 56,
                actor_location = openapi_client.models.audit_log_event_actor_location.audit_log_event_actor_location(
                    country_name = '', ),
                blocked_user = '',
                business = '',
                business_id = 56,
                config = [
                    None
                    ],
                config_was = [
                    None
                    ],
                content_type = '',
                created_at = 56,
                data = { },
                deploy_key_fingerprint = '',
                emoji = '',
                events = [
                    None
                    ],
                events_were = [
                    None
                    ],
                explanation = '',
                fingerprint = '',
                hook_id = 56,
                limited_availability = True,
                message = '',
                name = '',
                old_user = '',
                openssh_public_key = '',
                operation_type = '',
                org = '',
                org_id = 56,
                previous_visibility = '',
                read_only = True,
                repo = '',
                repository = '',
                repository_public = True,
                target_login = '',
                team = '',
                transport_protocol = 56,
                transport_protocol_name = '',
                user = '',
                user_id = 56,
                visibility = ''
            )
        else:
            return AuditLogEvent(
        )
        """

    def testAuditLogEvent(self):
        """Test AuditLogEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
