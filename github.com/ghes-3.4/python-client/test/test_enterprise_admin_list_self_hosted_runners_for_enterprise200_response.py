# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.enterprise_admin_list_self_hosted_runners_for_enterprise200_response import EnterpriseAdminListSelfHostedRunnersForEnterprise200Response

class TestEnterpriseAdminListSelfHostedRunnersForEnterprise200Response(unittest.TestCase):
    """EnterpriseAdminListSelfHostedRunnersForEnterprise200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnterpriseAdminListSelfHostedRunnersForEnterprise200Response:
        """Test EnterpriseAdminListSelfHostedRunnersForEnterprise200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnterpriseAdminListSelfHostedRunnersForEnterprise200Response`
        """
        model = EnterpriseAdminListSelfHostedRunnersForEnterprise200Response()
        if include_optional:
            return EnterpriseAdminListSelfHostedRunnersForEnterprise200Response(
                runners = [
                    openapi_client.models.self_hosted_runners.Self hosted runners(
                        busy = True, 
                        id = 5, 
                        labels = [
                            openapi_client.models.self_hosted_runner_label.Self hosted runner label(
                                id = 56, 
                                name = '', 
                                type = 'read-only', )
                            ], 
                        name = 'iMac', 
                        os = 'macos', 
                        status = 'online', )
                    ],
                total_count = 1.337
            )
        else:
            return EnterpriseAdminListSelfHostedRunnersForEnterprise200Response(
        )
        """

    def testEnterpriseAdminListSelfHostedRunnersForEnterprise200Response(self):
        """Test EnterpriseAdminListSelfHostedRunnersForEnterprise200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
