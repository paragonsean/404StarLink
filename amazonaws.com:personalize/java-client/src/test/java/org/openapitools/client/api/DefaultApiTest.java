/*
 * Amazon Personalize
 * Amazon Personalize is a machine learning service that makes it easy to add individualized recommendations to customers.
 *
 * The version of the OpenAPI document: 2018-05-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateBatchInferenceJobRequest;
import org.openapitools.client.model.CreateBatchInferenceJobResponse;
import org.openapitools.client.model.CreateBatchSegmentJobRequest;
import org.openapitools.client.model.CreateBatchSegmentJobResponse;
import org.openapitools.client.model.CreateCampaignRequest;
import org.openapitools.client.model.CreateCampaignResponse;
import org.openapitools.client.model.CreateDatasetExportJobRequest;
import org.openapitools.client.model.CreateDatasetExportJobResponse;
import org.openapitools.client.model.CreateDatasetGroupRequest;
import org.openapitools.client.model.CreateDatasetGroupResponse;
import org.openapitools.client.model.CreateDatasetImportJobRequest;
import org.openapitools.client.model.CreateDatasetImportJobResponse;
import org.openapitools.client.model.CreateDatasetRequest;
import org.openapitools.client.model.CreateDatasetResponse;
import org.openapitools.client.model.CreateEventTrackerRequest;
import org.openapitools.client.model.CreateEventTrackerResponse;
import org.openapitools.client.model.CreateFilterRequest;
import org.openapitools.client.model.CreateFilterResponse;
import org.openapitools.client.model.CreateMetricAttributionRequest;
import org.openapitools.client.model.CreateMetricAttributionResponse;
import org.openapitools.client.model.CreateRecommenderRequest;
import org.openapitools.client.model.CreateRecommenderResponse;
import org.openapitools.client.model.CreateSchemaRequest;
import org.openapitools.client.model.CreateSchemaResponse;
import org.openapitools.client.model.CreateSolutionRequest;
import org.openapitools.client.model.CreateSolutionResponse;
import org.openapitools.client.model.CreateSolutionVersionRequest;
import org.openapitools.client.model.CreateSolutionVersionResponse;
import org.openapitools.client.model.DeleteCampaignRequest;
import org.openapitools.client.model.DeleteDatasetGroupRequest;
import org.openapitools.client.model.DeleteDatasetRequest;
import org.openapitools.client.model.DeleteEventTrackerRequest;
import org.openapitools.client.model.DeleteFilterRequest;
import org.openapitools.client.model.DeleteMetricAttributionRequest;
import org.openapitools.client.model.DeleteRecommenderRequest;
import org.openapitools.client.model.DeleteSchemaRequest;
import org.openapitools.client.model.DeleteSolutionRequest;
import org.openapitools.client.model.DescribeAlgorithmRequest;
import org.openapitools.client.model.DescribeAlgorithmResponse;
import org.openapitools.client.model.DescribeBatchInferenceJobRequest;
import org.openapitools.client.model.DescribeBatchInferenceJobResponse;
import org.openapitools.client.model.DescribeBatchSegmentJobRequest;
import org.openapitools.client.model.DescribeBatchSegmentJobResponse;
import org.openapitools.client.model.DescribeCampaignRequest;
import org.openapitools.client.model.DescribeCampaignResponse;
import org.openapitools.client.model.DescribeDatasetExportJobRequest;
import org.openapitools.client.model.DescribeDatasetExportJobResponse;
import org.openapitools.client.model.DescribeDatasetGroupRequest;
import org.openapitools.client.model.DescribeDatasetGroupResponse;
import org.openapitools.client.model.DescribeDatasetImportJobRequest;
import org.openapitools.client.model.DescribeDatasetImportJobResponse;
import org.openapitools.client.model.DescribeDatasetRequest;
import org.openapitools.client.model.DescribeDatasetResponse;
import org.openapitools.client.model.DescribeEventTrackerRequest;
import org.openapitools.client.model.DescribeEventTrackerResponse;
import org.openapitools.client.model.DescribeFeatureTransformationRequest;
import org.openapitools.client.model.DescribeFeatureTransformationResponse;
import org.openapitools.client.model.DescribeFilterRequest;
import org.openapitools.client.model.DescribeFilterResponse;
import org.openapitools.client.model.DescribeMetricAttributionRequest;
import org.openapitools.client.model.DescribeMetricAttributionResponse;
import org.openapitools.client.model.DescribeRecipeRequest;
import org.openapitools.client.model.DescribeRecipeResponse;
import org.openapitools.client.model.DescribeRecommenderRequest;
import org.openapitools.client.model.DescribeRecommenderResponse;
import org.openapitools.client.model.DescribeSchemaRequest;
import org.openapitools.client.model.DescribeSchemaResponse;
import org.openapitools.client.model.DescribeSolutionRequest;
import org.openapitools.client.model.DescribeSolutionResponse;
import org.openapitools.client.model.DescribeSolutionVersionRequest;
import org.openapitools.client.model.DescribeSolutionVersionResponse;
import org.openapitools.client.model.GetSolutionMetricsRequest;
import org.openapitools.client.model.GetSolutionMetricsResponse;
import org.openapitools.client.model.ListBatchInferenceJobsRequest;
import org.openapitools.client.model.ListBatchInferenceJobsResponse;
import org.openapitools.client.model.ListBatchSegmentJobsRequest;
import org.openapitools.client.model.ListBatchSegmentJobsResponse;
import org.openapitools.client.model.ListCampaignsRequest;
import org.openapitools.client.model.ListCampaignsResponse;
import org.openapitools.client.model.ListDatasetExportJobsRequest;
import org.openapitools.client.model.ListDatasetExportJobsResponse;
import org.openapitools.client.model.ListDatasetGroupsRequest;
import org.openapitools.client.model.ListDatasetGroupsResponse;
import org.openapitools.client.model.ListDatasetImportJobsRequest;
import org.openapitools.client.model.ListDatasetImportJobsResponse;
import org.openapitools.client.model.ListDatasetsRequest;
import org.openapitools.client.model.ListDatasetsResponse;
import org.openapitools.client.model.ListEventTrackersRequest;
import org.openapitools.client.model.ListEventTrackersResponse;
import org.openapitools.client.model.ListFiltersRequest;
import org.openapitools.client.model.ListFiltersResponse;
import org.openapitools.client.model.ListMetricAttributionMetricsRequest;
import org.openapitools.client.model.ListMetricAttributionMetricsResponse;
import org.openapitools.client.model.ListMetricAttributionsRequest;
import org.openapitools.client.model.ListMetricAttributionsResponse;
import org.openapitools.client.model.ListRecipesRequest;
import org.openapitools.client.model.ListRecipesResponse;
import org.openapitools.client.model.ListRecommendersRequest;
import org.openapitools.client.model.ListRecommendersResponse;
import org.openapitools.client.model.ListSchemasRequest;
import org.openapitools.client.model.ListSchemasResponse;
import org.openapitools.client.model.ListSolutionVersionsRequest;
import org.openapitools.client.model.ListSolutionVersionsResponse;
import org.openapitools.client.model.ListSolutionsRequest;
import org.openapitools.client.model.ListSolutionsResponse;
import org.openapitools.client.model.ListTagsForResourceRequest;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.StartRecommenderRequest;
import org.openapitools.client.model.StartRecommenderResponse;
import org.openapitools.client.model.StopRecommenderRequest;
import org.openapitools.client.model.StopRecommenderResponse;
import org.openapitools.client.model.StopSolutionVersionCreationRequest;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UntagResourceRequest;
import org.openapitools.client.model.UpdateCampaignRequest;
import org.openapitools.client.model.UpdateCampaignResponse;
import org.openapitools.client.model.UpdateMetricAttributionRequest;
import org.openapitools.client.model.UpdateMetricAttributionResponse;
import org.openapitools.client.model.UpdateRecommenderRequest;
import org.openapitools.client.model.UpdateRecommenderResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates a batch inference job. The operation can handle up to 50 million records and the input file must be in JSON format. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/creating-batch-inference-job.html\&quot;&gt;Creating a batch inference job&lt;/a&gt;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBatchInferenceJobTest() throws ApiException {
        String xAmzTarget = null;
        CreateBatchInferenceJobRequest createBatchInferenceJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateBatchInferenceJobResponse response = api.createBatchInferenceJob(xAmzTarget, createBatchInferenceJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a batch segment job. The operation can handle up to 50 million records and the input file must be in JSON format. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/recommendations-batch.html\&quot;&gt;Getting batch recommendations and user segments&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBatchSegmentJobTest() throws ApiException {
        String xAmzTarget = null;
        CreateBatchSegmentJobRequest createBatchSegmentJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateBatchSegmentJobResponse response = api.createBatchSegmentJob(xAmzTarget, createBatchSegmentJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a campaign that deploys a solution version. When a client calls the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\&quot;&gt;GetRecommendations&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetPersonalizedRanking.html\&quot;&gt;GetPersonalizedRanking&lt;/a&gt; APIs, a campaign is specified in the request.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Minimum Provisioned TPS and Auto-Scaling&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A transaction is a single &lt;code&gt;GetRecommendations&lt;/code&gt; or &lt;code&gt;GetPersonalizedRanking&lt;/code&gt; call. Transactions per second (TPS) is the throughput and unit of billing for Amazon Personalize. The minimum provisioned TPS (&lt;code&gt;minProvisionedTPS&lt;/code&gt;) specifies the baseline throughput provisioned by Amazon Personalize, and thus, the minimum billing charge. &lt;/p&gt; &lt;p&gt; If your TPS increases beyond &lt;code&gt;minProvisionedTPS&lt;/code&gt;, Amazon Personalize auto-scales the provisioned capacity up and down, but never below &lt;code&gt;minProvisionedTPS&lt;/code&gt;. There&#39;s a short time delay while the capacity is increased that might cause loss of transactions.&lt;/p&gt; &lt;p&gt;The actual TPS used is calculated as the average requests/second within a 5-minute window. You pay for maximum of either the minimum provisioned TPS or the actual TPS. We recommend starting with a low &lt;code&gt;minProvisionedTPS&lt;/code&gt;, track your usage using Amazon CloudWatch metrics, and then increase the &lt;code&gt;minProvisionedTPS&lt;/code&gt; as necessary.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Status&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A campaign can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DELETE PENDING &amp;gt; DELETE IN_PROGRESS&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get the campaign status, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html\&quot;&gt;DescribeCampaign&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Wait until the &lt;code&gt;status&lt;/code&gt; of the campaign is &lt;code&gt;ACTIVE&lt;/code&gt; before asking the campaign for recommendations.&lt;/p&gt; &lt;/note&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListCampaigns.html\&quot;&gt;ListCampaigns&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html\&quot;&gt;DescribeCampaign&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_UpdateCampaign.html\&quot;&gt;UpdateCampaign&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteCampaign.html\&quot;&gt;DeleteCampaign&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCampaignTest() throws ApiException {
        String xAmzTarget = null;
        CreateCampaignRequest createCampaignRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateCampaignResponse response = api.createCampaign(xAmzTarget, createCampaignRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an empty dataset and adds it to the specified dataset group. Use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetImportJob.html\&quot;&gt;CreateDatasetImportJob&lt;/a&gt; to import your training data to a dataset.&lt;/p&gt; &lt;p&gt;There are three types of datasets:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Interactions&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Items&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Users&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each dataset type has an associated schema with required field types. Only the &lt;code&gt;Interactions&lt;/code&gt; dataset is required in order to train a model (also referred to as creating a solution).&lt;/p&gt; &lt;p&gt;A dataset can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DELETE PENDING &amp;gt; DELETE IN_PROGRESS&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get the status of the dataset, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDataset.html\&quot;&gt;DescribeDataset&lt;/a&gt;.&lt;/p&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html\&quot;&gt;CreateDatasetGroup&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListDatasets.html\&quot;&gt;ListDatasets&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDataset.html\&quot;&gt;DescribeDataset&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteDataset.html\&quot;&gt;DeleteDataset&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDatasetTest() throws ApiException {
        String xAmzTarget = null;
        CreateDatasetRequest createDatasetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDatasetResponse response = api.createDataset(xAmzTarget, createDatasetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt; Creates a job that exports data from your dataset to an Amazon S3 bucket. To allow Amazon Personalize to export the training data, you must specify an service-linked IAM role that gives Amazon Personalize &lt;code&gt;PutObject&lt;/code&gt; permissions for your Amazon S3 bucket. For information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/export-data.html\&quot;&gt;Exporting a dataset&lt;/a&gt; in the Amazon Personalize developer guide. &lt;/p&gt; &lt;p&gt; &lt;b&gt;Status&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A dataset export job can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; To get the status of the export job, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetExportJob.html\&quot;&gt;DescribeDatasetExportJob&lt;/a&gt;, and specify the Amazon Resource Name (ARN) of the dataset export job. The dataset export is complete when the status shows as ACTIVE. If the status shows as CREATE FAILED, the response includes a &lt;code&gt;failureReason&lt;/code&gt; key, which describes why the job failed. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDatasetExportJobTest() throws ApiException {
        String xAmzTarget = null;
        CreateDatasetExportJobRequest createDatasetExportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDatasetExportJobResponse response = api.createDatasetExportJob(xAmzTarget, createDatasetExportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an empty dataset group. A dataset group is a container for Amazon Personalize resources. A dataset group can contain at most three datasets, one for each type of dataset:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Interactions&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Items&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Users&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; A dataset group can be a Domain dataset group, where you specify a domain and use pre-configured resources like recommenders, or a Custom dataset group, where you use custom resources, such as a solution with a solution version, that you deploy with a campaign. If you start with a Domain dataset group, you can still add custom resources such as solutions and solution versions trained with recipes for custom use cases and deployed with campaigns. &lt;/p&gt; &lt;p&gt;A dataset group can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DELETE PENDING&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get the status of the dataset group, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetGroup.html\&quot;&gt;DescribeDatasetGroup&lt;/a&gt;. If the status shows as CREATE FAILED, the response includes a &lt;code&gt;failureReason&lt;/code&gt; key, which describes why the creation failed.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You must wait until the &lt;code&gt;status&lt;/code&gt; of the dataset group is &lt;code&gt;ACTIVE&lt;/code&gt; before adding a dataset to the group.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;You can specify an Key Management Service (KMS) key to encrypt the datasets in the group. If you specify a KMS key, you must also include an Identity and Access Management (IAM) role that has permission to access the key.&lt;/p&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;APIs that require a dataset group ARN in the request&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\&quot;&gt;CreateDataset&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html\&quot;&gt;CreateEventTracker&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\&quot;&gt;CreateSolution&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListDatasetGroups.html\&quot;&gt;ListDatasetGroups&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetGroup.html\&quot;&gt;DescribeDatasetGroup&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteDatasetGroup.html\&quot;&gt;DeleteDatasetGroup&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDatasetGroupTest() throws ApiException {
        String xAmzTarget = null;
        CreateDatasetGroupRequest createDatasetGroupRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDatasetGroupResponse response = api.createDatasetGroup(xAmzTarget, createDatasetGroupRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a job that imports training data from your data source (an Amazon S3 bucket) to an Amazon Personalize dataset. To allow Amazon Personalize to import the training data, you must specify an IAM service role that has permission to read from the data source, as Amazon Personalize makes a copy of your data and processes it internally. For information on granting access to your Amazon S3 bucket, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/granting-personalize-s3-access.html\&quot;&gt;Giving Amazon Personalize Access to Amazon S3 Resources&lt;/a&gt;. &lt;/p&gt; &lt;important&gt; &lt;p&gt;By default, a dataset import job replaces any existing data in the dataset that you imported in bulk. To add new records without replacing existing data, specify INCREMENTAL for the import mode in the CreateDatasetImportJob operation.&lt;/p&gt; &lt;/important&gt; &lt;p&gt; &lt;b&gt;Status&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A dataset import job can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get the status of the import job, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetImportJob.html\&quot;&gt;DescribeDatasetImportJob&lt;/a&gt;, providing the Amazon Resource Name (ARN) of the dataset import job. The dataset import is complete when the status shows as ACTIVE. If the status shows as CREATE FAILED, the response includes a &lt;code&gt;failureReason&lt;/code&gt; key, which describes why the job failed.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Importing takes time. You must wait until the status shows as ACTIVE before training a model using the dataset.&lt;/p&gt; &lt;/note&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListDatasetImportJobs.html\&quot;&gt;ListDatasetImportJobs&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetImportJob.html\&quot;&gt;DescribeDatasetImportJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDatasetImportJobTest() throws ApiException {
        String xAmzTarget = null;
        CreateDatasetImportJobRequest createDatasetImportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDatasetImportJobResponse response = api.createDatasetImportJob(xAmzTarget, createDatasetImportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an event tracker that you use when adding event data to a specified dataset group using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html\&quot;&gt;PutEvents&lt;/a&gt; API.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Only one event tracker can be associated with a dataset group. You will get an error if you call &lt;code&gt;CreateEventTracker&lt;/code&gt; using the same dataset group as an existing event tracker.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;When you create an event tracker, the response includes a tracking ID, which you pass as a parameter when you use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html\&quot;&gt;PutEvents&lt;/a&gt; operation. Amazon Personalize then appends the event data to the Interactions dataset of the dataset group you specify in your event tracker. &lt;/p&gt; &lt;p&gt;The event tracker can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DELETE PENDING &amp;gt; DELETE IN_PROGRESS&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get the status of the event tracker, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeEventTracker.html\&quot;&gt;DescribeEventTracker&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The event tracker must be in the ACTIVE state before using the tracking ID.&lt;/p&gt; &lt;/note&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListEventTrackers.html\&quot;&gt;ListEventTrackers&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeEventTracker.html\&quot;&gt;DescribeEventTracker&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteEventTracker.html\&quot;&gt;DeleteEventTracker&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEventTrackerTest() throws ApiException {
        String xAmzTarget = null;
        CreateEventTrackerRequest createEventTrackerRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateEventTrackerResponse response = api.createEventTracker(xAmzTarget, createEventTrackerRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a recommendation filter. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/filter.html\&quot;&gt;Filtering recommendations and user segments&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFilterTest() throws ApiException {
        String xAmzTarget = null;
        CreateFilterRequest createFilterRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateFilterResponse response = api.createFilter(xAmzTarget, createFilterRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a metric attribution. A metric attribution creates reports on the data that you import into Amazon Personalize. Depending on how you imported the data, you can view reports in Amazon CloudWatch or Amazon S3. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html\&quot;&gt;Measuring impact of recommendations&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMetricAttributionTest() throws ApiException {
        String xAmzTarget = null;
        CreateMetricAttributionRequest createMetricAttributionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateMetricAttributionResponse response = api.createMetricAttribution(xAmzTarget, createMetricAttributionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a recommender with the recipe (a Domain dataset group use case) you specify. You create recommenders for a Domain dataset group and specify the recommender&#39;s Amazon Resource Name (ARN) when you make a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\&quot;&gt;GetRecommendations&lt;/a&gt; request. &lt;/p&gt; &lt;p&gt; &lt;b&gt;Minimum recommendation requests per second&lt;/b&gt; &lt;/p&gt; &lt;p&gt;When you create a recommender, you can configure the recommender&#39;s minimum recommendation requests per second. The minimum recommendation requests per second (&lt;code&gt;minRecommendationRequestsPerSecond&lt;/code&gt;) specifies the baseline recommendation request throughput provisioned by Amazon Personalize. The default minRecommendationRequestsPerSecond is &lt;code&gt;1&lt;/code&gt;. A recommendation request is a single &lt;code&gt;GetRecommendations&lt;/code&gt; operation. Request throughput is measured in requests per second and Amazon Personalize uses your requests per second to derive your requests per hour and the price of your recommender usage. &lt;/p&gt; &lt;p&gt; If your requests per second increases beyond &lt;code&gt;minRecommendationRequestsPerSecond&lt;/code&gt;, Amazon Personalize auto-scales the provisioned capacity up and down, but never below &lt;code&gt;minRecommendationRequestsPerSecond&lt;/code&gt;. There&#39;s a short time delay while the capacity is increased that might cause loss of requests.&lt;/p&gt; &lt;p&gt; Your bill is the greater of either the minimum requests per hour (based on minRecommendationRequestsPerSecond) or the actual number of requests. The actual request throughput used is calculated as the average requests/second within a one-hour window. We recommend starting with the default &lt;code&gt;minRecommendationRequestsPerSecond&lt;/code&gt;, track your usage using Amazon CloudWatch metrics, and then increase the &lt;code&gt;minRecommendationRequestsPerSecond&lt;/code&gt; as necessary. &lt;/p&gt; &lt;p&gt; &lt;b&gt;Status&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A recommender can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;STOP PENDING &amp;gt; STOP IN_PROGRESS &amp;gt; INACTIVE &amp;gt; START PENDING &amp;gt; START IN_PROGRESS &amp;gt; ACTIVE&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DELETE PENDING &amp;gt; DELETE IN_PROGRESS&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get the recommender status, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeRecommender.html\&quot;&gt;DescribeRecommender&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Wait until the &lt;code&gt;status&lt;/code&gt; of the recommender is &lt;code&gt;ACTIVE&lt;/code&gt; before asking the recommender for recommendations.&lt;/p&gt; &lt;/note&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListRecommenders.html\&quot;&gt;ListRecommenders&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeRecommender.html\&quot;&gt;DescribeRecommender&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_UpdateRecommender.html\&quot;&gt;UpdateRecommender&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteRecommender.html\&quot;&gt;DeleteRecommender&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRecommenderTest() throws ApiException {
        String xAmzTarget = null;
        CreateRecommenderRequest createRecommenderRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateRecommenderResponse response = api.createRecommender(xAmzTarget, createRecommenderRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an Amazon Personalize schema from the specified schema string. The schema you create must be in Avro JSON format.&lt;/p&gt; &lt;p&gt;Amazon Personalize recognizes three schema variants. Each schema is associated with a dataset type and has a set of required field and keywords. If you are creating a schema for a dataset in a Domain dataset group, you provide the domain of the Domain dataset group. You specify a schema when you call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\&quot;&gt;CreateDataset&lt;/a&gt;.&lt;/p&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListSchemas.html\&quot;&gt;ListSchemas&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSchema.html\&quot;&gt;DescribeSchema&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteSchema.html\&quot;&gt;DeleteSchema&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSchemaTest() throws ApiException {
        String xAmzTarget = null;
        CreateSchemaRequest createSchemaRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateSchemaResponse response = api.createSchema(xAmzTarget, createSchemaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates the configuration for training a model. A trained model is known as a solution. After the configuration is created, you train the model (create a solution) by calling the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolutionVersion.html\&quot;&gt;CreateSolutionVersion&lt;/a&gt; operation. Every time you call &lt;code&gt;CreateSolutionVersion&lt;/code&gt;, a new version of the solution is created.&lt;/p&gt; &lt;p&gt;After creating a solution version, you check its accuracy by calling &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_GetSolutionMetrics.html\&quot;&gt;GetSolutionMetrics&lt;/a&gt;. When you are satisfied with the version, you deploy it using &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\&quot;&gt;CreateCampaign&lt;/a&gt;. The campaign provides recommendations to a client through the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\&quot;&gt;GetRecommendations&lt;/a&gt; API.&lt;/p&gt; &lt;p&gt;To train a model, Amazon Personalize requires training data and a recipe. The training data comes from the dataset group that you provide in the request. A recipe specifies the training algorithm and a feature transformation. You can specify one of the predefined recipes provided by Amazon Personalize. Alternatively, you can specify &lt;code&gt;performAutoML&lt;/code&gt; and Amazon Personalize will analyze your data and select the optimum USER_PERSONALIZATION recipe for you.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Amazon Personalize doesn&#39;t support configuring the &lt;code&gt;hpoObjective&lt;/code&gt; for solution hyperparameter optimization at this time.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; &lt;b&gt;Status&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A solution can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DELETE PENDING &amp;gt; DELETE IN_PROGRESS&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get the status of the solution, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\&quot;&gt;DescribeSolution&lt;/a&gt;. Wait until the status shows as ACTIVE before calling &lt;code&gt;CreateSolutionVersion&lt;/code&gt;.&lt;/p&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutions.html\&quot;&gt;ListSolutions&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolutionVersion.html\&quot;&gt;CreateSolutionVersion&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\&quot;&gt;DescribeSolution&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteSolution.html\&quot;&gt;DeleteSolution&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutionVersions.html\&quot;&gt;ListSolutionVersions&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolutionVersion.html\&quot;&gt;DescribeSolutionVersion&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSolutionTest() throws ApiException {
        String xAmzTarget = null;
        CreateSolutionRequest createSolutionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateSolutionResponse response = api.createSolution(xAmzTarget, createSolutionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Trains or retrains an active solution in a Custom dataset group. A solution is created using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\&quot;&gt;CreateSolution&lt;/a&gt; operation and must be in the ACTIVE state before calling &lt;code&gt;CreateSolutionVersion&lt;/code&gt;. A new version of the solution is created every time you call this operation.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Status&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A solution version can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CREATE IN_PROGRESS&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ACTIVE&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CREATE STOPPING&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CREATE STOPPED&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get the status of the version, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolutionVersion.html\&quot;&gt;DescribeSolutionVersion&lt;/a&gt;. Wait until the status shows as ACTIVE before calling &lt;code&gt;CreateCampaign&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If the status shows as CREATE FAILED, the response includes a &lt;code&gt;failureReason&lt;/code&gt; key, which describes why the job failed.&lt;/p&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Related APIs&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutionVersions.html\&quot;&gt;ListSolutionVersions&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolutionVersion.html\&quot;&gt;DescribeSolutionVersion&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutions.html\&quot;&gt;ListSolutions&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\&quot;&gt;CreateSolution&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\&quot;&gt;DescribeSolution&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteSolution.html\&quot;&gt;DeleteSolution&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSolutionVersionTest() throws ApiException {
        String xAmzTarget = null;
        CreateSolutionVersionRequest createSolutionVersionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateSolutionVersionResponse response = api.createSolutionVersion(xAmzTarget, createSolutionVersionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a campaign by deleting the solution deployment. The solution that the campaign is based on is not deleted and can be redeployed when needed. A deleted campaign can no longer be specified in a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\&quot;&gt;GetRecommendations&lt;/a&gt; request. For information on creating campaigns, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\&quot;&gt;CreateCampaign&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCampaignTest() throws ApiException {
        String xAmzTarget = null;
        DeleteCampaignRequest deleteCampaignRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteCampaign(xAmzTarget, deleteCampaignRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a dataset. You can&#39;t delete a dataset if an associated &lt;code&gt;DatasetImportJob&lt;/code&gt; or &lt;code&gt;SolutionVersion&lt;/code&gt; is in the CREATE PENDING or IN PROGRESS state. For more information on datasets, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\&quot;&gt;CreateDataset&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDatasetTest() throws ApiException {
        String xAmzTarget = null;
        DeleteDatasetRequest deleteDatasetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteDataset(xAmzTarget, deleteDatasetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a dataset group. Before you delete a dataset group, you must delete the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;All associated event trackers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;All associated solutions.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;All datasets in the dataset group.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDatasetGroupTest() throws ApiException {
        String xAmzTarget = null;
        DeleteDatasetGroupRequest deleteDatasetGroupRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteDatasetGroup(xAmzTarget, deleteDatasetGroupRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes the event tracker. Does not delete the event-interactions dataset from the associated dataset group. For more information on event trackers, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html\&quot;&gt;CreateEventTracker&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEventTrackerTest() throws ApiException {
        String xAmzTarget = null;
        DeleteEventTrackerRequest deleteEventTrackerRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteEventTracker(xAmzTarget, deleteEventTrackerRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a filter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFilterTest() throws ApiException {
        String xAmzTarget = null;
        DeleteFilterRequest deleteFilterRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteFilter(xAmzTarget, deleteFilterRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a metric attribution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMetricAttributionTest() throws ApiException {
        String xAmzTarget = null;
        DeleteMetricAttributionRequest deleteMetricAttributionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteMetricAttribution(xAmzTarget, deleteMetricAttributionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deactivates and removes a recommender. A deleted recommender can no longer be specified in a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\&quot;&gt;GetRecommendations&lt;/a&gt; request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRecommenderTest() throws ApiException {
        String xAmzTarget = null;
        DeleteRecommenderRequest deleteRecommenderRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteRecommender(xAmzTarget, deleteRecommenderRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a schema. Before deleting a schema, you must delete all datasets referencing the schema. For more information on schemas, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSchema.html\&quot;&gt;CreateSchema&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSchemaTest() throws ApiException {
        String xAmzTarget = null;
        DeleteSchemaRequest deleteSchemaRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteSchema(xAmzTarget, deleteSchemaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes all versions of a solution and the &lt;code&gt;Solution&lt;/code&gt; object itself. Before deleting a solution, you must delete all campaigns based on the solution. To determine what campaigns are using the solution, call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_ListCampaigns.html\&quot;&gt;ListCampaigns&lt;/a&gt; and supply the Amazon Resource Name (ARN) of the solution. You can&#39;t delete a solution if an associated &lt;code&gt;SolutionVersion&lt;/code&gt; is in the CREATE PENDING or IN PROGRESS state. For more information on solutions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\&quot;&gt;CreateSolution&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSolutionTest() throws ApiException {
        String xAmzTarget = null;
        DeleteSolutionRequest deleteSolutionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteSolution(xAmzTarget, deleteSolutionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the given algorithm.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAlgorithmTest() throws ApiException {
        String xAmzTarget = null;
        DescribeAlgorithmRequest describeAlgorithmRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAlgorithmResponse response = api.describeAlgorithm(xAmzTarget, describeAlgorithmRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the properties of a batch inference job including name, Amazon Resource Name (ARN), status, input and output configurations, and the ARN of the solution version used to generate the recommendations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBatchInferenceJobTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBatchInferenceJobRequest describeBatchInferenceJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeBatchInferenceJobResponse response = api.describeBatchInferenceJob(xAmzTarget, describeBatchInferenceJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the properties of a batch segment job including name, Amazon Resource Name (ARN), status, input and output configurations, and the ARN of the solution version used to generate segments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBatchSegmentJobTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBatchSegmentJobRequest describeBatchSegmentJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeBatchSegmentJobResponse response = api.describeBatchSegmentJob(xAmzTarget, describeBatchSegmentJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes the given campaign, including its status.&lt;/p&gt; &lt;p&gt;A campaign can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DELETE PENDING &amp;gt; DELETE IN_PROGRESS&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When the &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;CREATE FAILED&lt;/code&gt;, the response includes the &lt;code&gt;failureReason&lt;/code&gt; key, which describes why.&lt;/p&gt; &lt;p&gt;For more information on campaigns, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\&quot;&gt;CreateCampaign&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeCampaignTest() throws ApiException {
        String xAmzTarget = null;
        DescribeCampaignRequest describeCampaignRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeCampaignResponse response = api.describeCampaign(xAmzTarget, describeCampaignRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the given dataset. For more information on datasets, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\&quot;&gt;CreateDataset&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDatasetTest() throws ApiException {
        String xAmzTarget = null;
        DescribeDatasetRequest describeDatasetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDatasetResponse response = api.describeDataset(xAmzTarget, describeDatasetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the dataset export job created by &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetExportJob.html\&quot;&gt;CreateDatasetExportJob&lt;/a&gt;, including the export job status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDatasetExportJobTest() throws ApiException {
        String xAmzTarget = null;
        DescribeDatasetExportJobRequest describeDatasetExportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDatasetExportJobResponse response = api.describeDatasetExportJob(xAmzTarget, describeDatasetExportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the given dataset group. For more information on dataset groups, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html\&quot;&gt;CreateDatasetGroup&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDatasetGroupTest() throws ApiException {
        String xAmzTarget = null;
        DescribeDatasetGroupRequest describeDatasetGroupRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDatasetGroupResponse response = api.describeDatasetGroup(xAmzTarget, describeDatasetGroupRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the dataset import job created by &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetImportJob.html\&quot;&gt;CreateDatasetImportJob&lt;/a&gt;, including the import job status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDatasetImportJobTest() throws ApiException {
        String xAmzTarget = null;
        DescribeDatasetImportJobRequest describeDatasetImportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDatasetImportJobResponse response = api.describeDatasetImportJob(xAmzTarget, describeDatasetImportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes an event tracker. The response includes the &lt;code&gt;trackingId&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt; of the event tracker. For more information on event trackers, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html\&quot;&gt;CreateEventTracker&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeEventTrackerTest() throws ApiException {
        String xAmzTarget = null;
        DescribeEventTrackerRequest describeEventTrackerRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeEventTrackerResponse response = api.describeEventTracker(xAmzTarget, describeEventTrackerRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the given feature transformation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeFeatureTransformationTest() throws ApiException {
        String xAmzTarget = null;
        DescribeFeatureTransformationRequest describeFeatureTransformationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeFeatureTransformationResponse response = api.describeFeatureTransformation(xAmzTarget, describeFeatureTransformationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a filter&#39;s properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeFilterTest() throws ApiException {
        String xAmzTarget = null;
        DescribeFilterRequest describeFilterRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeFilterResponse response = api.describeFilter(xAmzTarget, describeFilterRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a metric attribution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeMetricAttributionTest() throws ApiException {
        String xAmzTarget = null;
        DescribeMetricAttributionRequest describeMetricAttributionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeMetricAttributionResponse response = api.describeMetricAttribution(xAmzTarget, describeMetricAttributionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes a recipe.&lt;/p&gt; &lt;p&gt;A recipe contains three items:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;An algorithm that trains a model.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Hyperparameters that govern the training.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Feature transformation information for modifying the input data before training.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Amazon Personalize provides a set of predefined recipes. You specify a recipe when you create a solution with the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\&quot;&gt;CreateSolution&lt;/a&gt; API. &lt;code&gt;CreateSolution&lt;/code&gt; trains a model by using the algorithm in the specified recipe and a training dataset. The solution, when deployed as a campaign, can provide recommendations using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\&quot;&gt;GetRecommendations&lt;/a&gt; API.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeRecipeTest() throws ApiException {
        String xAmzTarget = null;
        DescribeRecipeRequest describeRecipeRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeRecipeResponse response = api.describeRecipe(xAmzTarget, describeRecipeRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes the given recommender, including its status.&lt;/p&gt; &lt;p&gt;A recommender can be in one of the following states:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE PENDING &amp;gt; CREATE IN_PROGRESS &amp;gt; ACTIVE -or- CREATE FAILED&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;STOP PENDING &amp;gt; STOP IN_PROGRESS &amp;gt; INACTIVE &amp;gt; START PENDING &amp;gt; START IN_PROGRESS &amp;gt; ACTIVE&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;DELETE PENDING &amp;gt; DELETE IN_PROGRESS&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When the &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;CREATE FAILED&lt;/code&gt;, the response includes the &lt;code&gt;failureReason&lt;/code&gt; key, which describes why.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;modelMetrics&lt;/code&gt; key is null when the recommender is being created or deleted.&lt;/p&gt; &lt;p&gt;For more information on recommenders, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateRecommender.html\&quot;&gt;CreateRecommender&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeRecommenderTest() throws ApiException {
        String xAmzTarget = null;
        DescribeRecommenderRequest describeRecommenderRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeRecommenderResponse response = api.describeRecommender(xAmzTarget, describeRecommenderRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a schema. For more information on schemas, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSchema.html\&quot;&gt;CreateSchema&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSchemaTest() throws ApiException {
        String xAmzTarget = null;
        DescribeSchemaRequest describeSchemaRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeSchemaResponse response = api.describeSchema(xAmzTarget, describeSchemaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a solution. For more information on solutions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\&quot;&gt;CreateSolution&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSolutionTest() throws ApiException {
        String xAmzTarget = null;
        DescribeSolutionRequest describeSolutionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeSolutionResponse response = api.describeSolution(xAmzTarget, describeSolutionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a specific version of a solution. For more information on solutions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\&quot;&gt;CreateSolution&lt;/a&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSolutionVersionTest() throws ApiException {
        String xAmzTarget = null;
        DescribeSolutionVersionRequest describeSolutionVersionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeSolutionVersionResponse response = api.describeSolutionVersion(xAmzTarget, describeSolutionVersionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the metrics for the specified solution version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSolutionMetricsTest() throws ApiException {
        String xAmzTarget = null;
        GetSolutionMetricsRequest getSolutionMetricsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetSolutionMetricsResponse response = api.getSolutionMetrics(xAmzTarget, getSolutionMetricsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets a list of the batch inference jobs that have been performed off of a solution version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBatchInferenceJobsTest() throws ApiException {
        String xAmzTarget = null;
        ListBatchInferenceJobsRequest listBatchInferenceJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListBatchInferenceJobsResponse response = api.listBatchInferenceJobs(xAmzTarget, listBatchInferenceJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Gets a list of the batch segment jobs that have been performed off of a solution version that you specify.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBatchSegmentJobsTest() throws ApiException {
        String xAmzTarget = null;
        ListBatchSegmentJobsRequest listBatchSegmentJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListBatchSegmentJobsResponse response = api.listBatchSegmentJobs(xAmzTarget, listBatchSegmentJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of campaigns that use the given solution. When a solution is not specified, all the campaigns associated with the account are listed. The response provides the properties for each campaign, including the Amazon Resource Name (ARN). For more information on campaigns, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\&quot;&gt;CreateCampaign&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCampaignsTest() throws ApiException {
        String xAmzTarget = null;
        ListCampaignsRequest listCampaignsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListCampaignsResponse response = api.listCampaigns(xAmzTarget, listCampaignsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of dataset export jobs that use the given dataset. When a dataset is not specified, all the dataset export jobs associated with the account are listed. The response provides the properties for each dataset export job, including the Amazon Resource Name (ARN). For more information on dataset export jobs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetExportJob.html\&quot;&gt;CreateDatasetExportJob&lt;/a&gt;. For more information on datasets, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\&quot;&gt;CreateDataset&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDatasetExportJobsTest() throws ApiException {
        String xAmzTarget = null;
        ListDatasetExportJobsRequest listDatasetExportJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListDatasetExportJobsResponse response = api.listDatasetExportJobs(xAmzTarget, listDatasetExportJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of dataset groups. The response provides the properties for each dataset group, including the Amazon Resource Name (ARN). For more information on dataset groups, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html\&quot;&gt;CreateDatasetGroup&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDatasetGroupsTest() throws ApiException {
        String xAmzTarget = null;
        ListDatasetGroupsRequest listDatasetGroupsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListDatasetGroupsResponse response = api.listDatasetGroups(xAmzTarget, listDatasetGroupsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of dataset import jobs that use the given dataset. When a dataset is not specified, all the dataset import jobs associated with the account are listed. The response provides the properties for each dataset import job, including the Amazon Resource Name (ARN). For more information on dataset import jobs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetImportJob.html\&quot;&gt;CreateDatasetImportJob&lt;/a&gt;. For more information on datasets, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\&quot;&gt;CreateDataset&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDatasetImportJobsTest() throws ApiException {
        String xAmzTarget = null;
        ListDatasetImportJobsRequest listDatasetImportJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListDatasetImportJobsResponse response = api.listDatasetImportJobs(xAmzTarget, listDatasetImportJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns the list of datasets contained in the given dataset group. The response provides the properties for each dataset, including the Amazon Resource Name (ARN). For more information on datasets, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\&quot;&gt;CreateDataset&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDatasetsTest() throws ApiException {
        String xAmzTarget = null;
        ListDatasetsRequest listDatasetsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListDatasetsResponse response = api.listDatasets(xAmzTarget, listDatasetsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns the list of event trackers associated with the account. The response provides the properties for each event tracker, including the Amazon Resource Name (ARN) and tracking ID. For more information on event trackers, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html\&quot;&gt;CreateEventTracker&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEventTrackersTest() throws ApiException {
        String xAmzTarget = null;
        ListEventTrackersRequest listEventTrackersRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListEventTrackersResponse response = api.listEventTrackers(xAmzTarget, listEventTrackersRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists all filters that belong to a given dataset group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFiltersTest() throws ApiException {
        String xAmzTarget = null;
        ListFiltersRequest listFiltersRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListFiltersResponse response = api.listFilters(xAmzTarget, listFiltersRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the metrics for the metric attribution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMetricAttributionMetricsTest() throws ApiException {
        String xAmzTarget = null;
        ListMetricAttributionMetricsRequest listMetricAttributionMetricsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListMetricAttributionMetricsResponse response = api.listMetricAttributionMetrics(xAmzTarget, listMetricAttributionMetricsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists metric attributions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMetricAttributionsTest() throws ApiException {
        String xAmzTarget = null;
        ListMetricAttributionsRequest listMetricAttributionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListMetricAttributionsResponse response = api.listMetricAttributions(xAmzTarget, listMetricAttributionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of available recipes. The response provides the properties for each recipe, including the recipe&#39;s Amazon Resource Name (ARN).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRecipesTest() throws ApiException {
        String xAmzTarget = null;
        ListRecipesRequest listRecipesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListRecipesResponse response = api.listRecipes(xAmzTarget, listRecipesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of recommenders in a given Domain dataset group. When a Domain dataset group is not specified, all the recommenders associated with the account are listed. The response provides the properties for each recommender, including the Amazon Resource Name (ARN). For more information on recommenders, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateRecommender.html\&quot;&gt;CreateRecommender&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRecommendersTest() throws ApiException {
        String xAmzTarget = null;
        ListRecommendersRequest listRecommendersRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListRecommendersResponse response = api.listRecommenders(xAmzTarget, listRecommendersRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns the list of schemas associated with the account. The response provides the properties for each schema, including the Amazon Resource Name (ARN). For more information on schemas, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSchema.html\&quot;&gt;CreateSchema&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSchemasTest() throws ApiException {
        String xAmzTarget = null;
        ListSchemasRequest listSchemasRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSchemasResponse response = api.listSchemas(xAmzTarget, listSchemasRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of solution versions for the given solution. When a solution is not specified, all the solution versions associated with the account are listed. The response provides the properties for each solution version, including the Amazon Resource Name (ARN).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSolutionVersionsTest() throws ApiException {
        String xAmzTarget = null;
        ListSolutionVersionsRequest listSolutionVersionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSolutionVersionsResponse response = api.listSolutionVersions(xAmzTarget, listSolutionVersionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of solutions that use the given dataset group. When a dataset group is not specified, all the solutions associated with the account are listed. The response provides the properties for each solution, including the Amazon Resource Name (ARN). For more information on solutions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\&quot;&gt;CreateSolution&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSolutionsTest() throws ApiException {
        String xAmzTarget = null;
        ListSolutionsRequest listSolutionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSolutionsResponse response = api.listSolutions(xAmzTarget, listSolutionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Get a list of &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html\&quot;&gt;tags&lt;/a&gt; attached to a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String xAmzTarget = null;
        ListTagsForResourceRequest listTagsForResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(xAmzTarget, listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Starts a recommender that is INACTIVE. Starting a recommender does not create any new models, but resumes billing and automatic retraining for the recommender.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startRecommenderTest() throws ApiException {
        String xAmzTarget = null;
        StartRecommenderRequest startRecommenderRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartRecommenderResponse response = api.startRecommender(xAmzTarget, startRecommenderRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Stops a recommender that is ACTIVE. Stopping a recommender halts billing and automatic retraining for the recommender.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopRecommenderTest() throws ApiException {
        String xAmzTarget = null;
        StopRecommenderRequest stopRecommenderRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StopRecommenderResponse response = api.stopRecommender(xAmzTarget, stopRecommenderRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Stops creating a solution version that is in a state of CREATE_PENDING or CREATE IN_PROGRESS. &lt;/p&gt; &lt;p&gt;Depending on the current state of the solution version, the solution version state changes as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CREATE_PENDING &amp;gt; CREATE_STOPPED&lt;/p&gt; &lt;p&gt;or&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CREATE_IN_PROGRESS &amp;gt; CREATE_STOPPING &amp;gt; CREATE_STOPPED&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You are billed for all of the training completed up until you stop the solution version creation. You cannot resume creating a solution version once it has been stopped.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopSolutionVersionCreationTest() throws ApiException {
        String xAmzTarget = null;
        StopSolutionVersionCreationRequest stopSolutionVersionCreationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.stopSolutionVersionCreation(xAmzTarget, stopSolutionVersionCreationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Add a list of tags to a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String xAmzTarget = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(xAmzTarget, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Remove &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html\&quot;&gt;tags&lt;/a&gt; that are attached to a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String xAmzTarget = null;
        UntagResourceRequest untagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(xAmzTarget, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates a campaign by either deploying a new solution or changing the value of the campaign&#39;s &lt;code&gt;minProvisionedTPS&lt;/code&gt; parameter.&lt;/p&gt; &lt;p&gt;To update a campaign, the campaign status must be ACTIVE or CREATE FAILED. Check the campaign status using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html\&quot;&gt;DescribeCampaign&lt;/a&gt; operation.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You can still get recommendations from a campaign while an update is in progress. The campaign will use the previous solution version and campaign configuration to generate recommendations until the latest campaign update status is &lt;code&gt;Active&lt;/code&gt;. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;For more information on campaigns, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\&quot;&gt;CreateCampaign&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCampaignTest() throws ApiException {
        String xAmzTarget = null;
        UpdateCampaignRequest updateCampaignRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateCampaignResponse response = api.updateCampaign(xAmzTarget, updateCampaignRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a metric attribution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMetricAttributionTest() throws ApiException {
        String xAmzTarget = null;
        UpdateMetricAttributionRequest updateMetricAttributionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateMetricAttributionResponse response = api.updateMetricAttribution(xAmzTarget, updateMetricAttributionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates the recommender to modify the recommender configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRecommenderTest() throws ApiException {
        String xAmzTarget = null;
        UpdateRecommenderRequest updateRecommenderRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateRecommenderResponse response = api.updateRecommender(xAmzTarget, updateRecommenderRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
