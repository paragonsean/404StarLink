/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AwsEcsClusterDetailsConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides details about an Amazon ECS cluster.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:57:02.717661-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsEcsClusterDetails {
  public static final String SERIALIZED_NAME_CLUSTER_ARN = "ClusterArn";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ARN)
  private String clusterArn;

  public static final String SERIALIZED_NAME_ACTIVE_SERVICES_COUNT = "ActiveServicesCount";
  @SerializedName(SERIALIZED_NAME_ACTIVE_SERVICES_COUNT)
  private Integer activeServicesCount;

  public static final String SERIALIZED_NAME_CAPACITY_PROVIDERS = "CapacityProviders";
  @SerializedName(SERIALIZED_NAME_CAPACITY_PROVIDERS)
  private List capacityProviders;

  public static final String SERIALIZED_NAME_CLUSTER_SETTINGS = "ClusterSettings";
  @SerializedName(SERIALIZED_NAME_CLUSTER_SETTINGS)
  private List clusterSettings;

  public static final String SERIALIZED_NAME_CONFIGURATION = "Configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private AwsEcsClusterDetailsConfiguration _configuration;

  public static final String SERIALIZED_NAME_DEFAULT_CAPACITY_PROVIDER_STRATEGY = "DefaultCapacityProviderStrategy";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CAPACITY_PROVIDER_STRATEGY)
  private List defaultCapacityProviderStrategy;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "ClusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_REGISTERED_CONTAINER_INSTANCES_COUNT = "RegisteredContainerInstancesCount";
  @SerializedName(SERIALIZED_NAME_REGISTERED_CONTAINER_INSTANCES_COUNT)
  private Integer registeredContainerInstancesCount;

  public static final String SERIALIZED_NAME_RUNNING_TASKS_COUNT = "RunningTasksCount";
  @SerializedName(SERIALIZED_NAME_RUNNING_TASKS_COUNT)
  private Integer runningTasksCount;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public AwsEcsClusterDetails() {
  }

  public AwsEcsClusterDetails clusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
    return this;
  }

  /**
   * Get clusterArn
   * @return clusterArn
   */
  @javax.annotation.Nullable
  public String getClusterArn() {
    return clusterArn;
  }

  public void setClusterArn(String clusterArn) {
    this.clusterArn = clusterArn;
  }


  public AwsEcsClusterDetails activeServicesCount(Integer activeServicesCount) {
    this.activeServicesCount = activeServicesCount;
    return this;
  }

  /**
   * Get activeServicesCount
   * @return activeServicesCount
   */
  @javax.annotation.Nullable
  public Integer getActiveServicesCount() {
    return activeServicesCount;
  }

  public void setActiveServicesCount(Integer activeServicesCount) {
    this.activeServicesCount = activeServicesCount;
  }


  public AwsEcsClusterDetails capacityProviders(List capacityProviders) {
    this.capacityProviders = capacityProviders;
    return this;
  }

  /**
   * Get capacityProviders
   * @return capacityProviders
   */
  @javax.annotation.Nullable
  public List getCapacityProviders() {
    return capacityProviders;
  }

  public void setCapacityProviders(List capacityProviders) {
    this.capacityProviders = capacityProviders;
  }


  public AwsEcsClusterDetails clusterSettings(List clusterSettings) {
    this.clusterSettings = clusterSettings;
    return this;
  }

  /**
   * Get clusterSettings
   * @return clusterSettings
   */
  @javax.annotation.Nullable
  public List getClusterSettings() {
    return clusterSettings;
  }

  public void setClusterSettings(List clusterSettings) {
    this.clusterSettings = clusterSettings;
  }


  public AwsEcsClusterDetails _configuration(AwsEcsClusterDetailsConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Get _configuration
   * @return _configuration
   */
  @javax.annotation.Nullable
  public AwsEcsClusterDetailsConfiguration getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(AwsEcsClusterDetailsConfiguration _configuration) {
    this._configuration = _configuration;
  }


  public AwsEcsClusterDetails defaultCapacityProviderStrategy(List defaultCapacityProviderStrategy) {
    this.defaultCapacityProviderStrategy = defaultCapacityProviderStrategy;
    return this;
  }

  /**
   * Get defaultCapacityProviderStrategy
   * @return defaultCapacityProviderStrategy
   */
  @javax.annotation.Nullable
  public List getDefaultCapacityProviderStrategy() {
    return defaultCapacityProviderStrategy;
  }

  public void setDefaultCapacityProviderStrategy(List defaultCapacityProviderStrategy) {
    this.defaultCapacityProviderStrategy = defaultCapacityProviderStrategy;
  }


  public AwsEcsClusterDetails clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Get clusterName
   * @return clusterName
   */
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public AwsEcsClusterDetails registeredContainerInstancesCount(Integer registeredContainerInstancesCount) {
    this.registeredContainerInstancesCount = registeredContainerInstancesCount;
    return this;
  }

  /**
   * Get registeredContainerInstancesCount
   * @return registeredContainerInstancesCount
   */
  @javax.annotation.Nullable
  public Integer getRegisteredContainerInstancesCount() {
    return registeredContainerInstancesCount;
  }

  public void setRegisteredContainerInstancesCount(Integer registeredContainerInstancesCount) {
    this.registeredContainerInstancesCount = registeredContainerInstancesCount;
  }


  public AwsEcsClusterDetails runningTasksCount(Integer runningTasksCount) {
    this.runningTasksCount = runningTasksCount;
    return this;
  }

  /**
   * Get runningTasksCount
   * @return runningTasksCount
   */
  @javax.annotation.Nullable
  public Integer getRunningTasksCount() {
    return runningTasksCount;
  }

  public void setRunningTasksCount(Integer runningTasksCount) {
    this.runningTasksCount = runningTasksCount;
  }


  public AwsEcsClusterDetails status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsEcsClusterDetails awsEcsClusterDetails = (AwsEcsClusterDetails) o;
    return Objects.equals(this.clusterArn, awsEcsClusterDetails.clusterArn) &&
        Objects.equals(this.activeServicesCount, awsEcsClusterDetails.activeServicesCount) &&
        Objects.equals(this.capacityProviders, awsEcsClusterDetails.capacityProviders) &&
        Objects.equals(this.clusterSettings, awsEcsClusterDetails.clusterSettings) &&
        Objects.equals(this._configuration, awsEcsClusterDetails._configuration) &&
        Objects.equals(this.defaultCapacityProviderStrategy, awsEcsClusterDetails.defaultCapacityProviderStrategy) &&
        Objects.equals(this.clusterName, awsEcsClusterDetails.clusterName) &&
        Objects.equals(this.registeredContainerInstancesCount, awsEcsClusterDetails.registeredContainerInstancesCount) &&
        Objects.equals(this.runningTasksCount, awsEcsClusterDetails.runningTasksCount) &&
        Objects.equals(this.status, awsEcsClusterDetails.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterArn, activeServicesCount, capacityProviders, clusterSettings, _configuration, defaultCapacityProviderStrategy, clusterName, registeredContainerInstancesCount, runningTasksCount, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsEcsClusterDetails {\n");
    sb.append("    clusterArn: ").append(toIndentedString(clusterArn)).append("\n");
    sb.append("    activeServicesCount: ").append(toIndentedString(activeServicesCount)).append("\n");
    sb.append("    capacityProviders: ").append(toIndentedString(capacityProviders)).append("\n");
    sb.append("    clusterSettings: ").append(toIndentedString(clusterSettings)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    defaultCapacityProviderStrategy: ").append(toIndentedString(defaultCapacityProviderStrategy)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    registeredContainerInstancesCount: ").append(toIndentedString(registeredContainerInstancesCount)).append("\n");
    sb.append("    runningTasksCount: ").append(toIndentedString(runningTasksCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClusterArn");
    openapiFields.add("ActiveServicesCount");
    openapiFields.add("CapacityProviders");
    openapiFields.add("ClusterSettings");
    openapiFields.add("Configuration");
    openapiFields.add("DefaultCapacityProviderStrategy");
    openapiFields.add("ClusterName");
    openapiFields.add("RegisteredContainerInstancesCount");
    openapiFields.add("RunningTasksCount");
    openapiFields.add("Status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsEcsClusterDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsEcsClusterDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsEcsClusterDetails is not found in the empty JSON string", AwsEcsClusterDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsEcsClusterDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsEcsClusterDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ClusterArn`
      if (jsonObj.get("ClusterArn") != null && !jsonObj.get("ClusterArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterArn"));
      }
      // validate the optional field `ActiveServicesCount`
      if (jsonObj.get("ActiveServicesCount") != null && !jsonObj.get("ActiveServicesCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ActiveServicesCount"));
      }
      // validate the optional field `CapacityProviders`
      if (jsonObj.get("CapacityProviders") != null && !jsonObj.get("CapacityProviders").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CapacityProviders"));
      }
      // validate the optional field `ClusterSettings`
      if (jsonObj.get("ClusterSettings") != null && !jsonObj.get("ClusterSettings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ClusterSettings"));
      }
      // validate the optional field `Configuration`
      if (jsonObj.get("Configuration") != null && !jsonObj.get("Configuration").isJsonNull()) {
        AwsEcsClusterDetailsConfiguration.validateJsonElement(jsonObj.get("Configuration"));
      }
      // validate the optional field `DefaultCapacityProviderStrategy`
      if (jsonObj.get("DefaultCapacityProviderStrategy") != null && !jsonObj.get("DefaultCapacityProviderStrategy").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DefaultCapacityProviderStrategy"));
      }
      // validate the optional field `ClusterName`
      if (jsonObj.get("ClusterName") != null && !jsonObj.get("ClusterName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterName"));
      }
      // validate the optional field `RegisteredContainerInstancesCount`
      if (jsonObj.get("RegisteredContainerInstancesCount") != null && !jsonObj.get("RegisteredContainerInstancesCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RegisteredContainerInstancesCount"));
      }
      // validate the optional field `RunningTasksCount`
      if (jsonObj.get("RunningTasksCount") != null && !jsonObj.get("RunningTasksCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RunningTasksCount"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsEcsClusterDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsEcsClusterDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsEcsClusterDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsEcsClusterDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsEcsClusterDetails>() {
           @Override
           public void write(JsonWriter out, AwsEcsClusterDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsEcsClusterDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsEcsClusterDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsEcsClusterDetails
   * @throws IOException if the JSON string is invalid with respect to AwsEcsClusterDetails
   */
  public static AwsEcsClusterDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsEcsClusterDetails.class);
  }

  /**
   * Convert an instance of AwsEcsClusterDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

