/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AwsRedshiftClusterDetailsPendingModifiedValues
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:04:58.462265-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsRedshiftClusterDetailsPendingModifiedValues {
  public static final String SERIALIZED_NAME_AUTOMATED_SNAPSHOT_RETENTION_PERIOD = "AutomatedSnapshotRetentionPeriod";
  @SerializedName(SERIALIZED_NAME_AUTOMATED_SNAPSHOT_RETENTION_PERIOD)
  private Integer automatedSnapshotRetentionPeriod;

  public static final String SERIALIZED_NAME_CLUSTER_IDENTIFIER = "ClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_CLUSTER_IDENTIFIER)
  private String clusterIdentifier;

  public static final String SERIALIZED_NAME_CLUSTER_TYPE = "ClusterType";
  @SerializedName(SERIALIZED_NAME_CLUSTER_TYPE)
  private String clusterType;

  public static final String SERIALIZED_NAME_CLUSTER_VERSION = "ClusterVersion";
  @SerializedName(SERIALIZED_NAME_CLUSTER_VERSION)
  private String clusterVersion;

  public static final String SERIALIZED_NAME_ENCRYPTION_TYPE = "EncryptionType";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_TYPE)
  private String encryptionType;

  public static final String SERIALIZED_NAME_ENHANCED_VPC_ROUTING = "EnhancedVpcRouting";
  @SerializedName(SERIALIZED_NAME_ENHANCED_VPC_ROUTING)
  private Boolean enhancedVpcRouting;

  public static final String SERIALIZED_NAME_MAINTENANCE_TRACK_NAME = "MaintenanceTrackName";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_TRACK_NAME)
  private String maintenanceTrackName;

  public static final String SERIALIZED_NAME_MASTER_USER_PASSWORD = "MasterUserPassword";
  @SerializedName(SERIALIZED_NAME_MASTER_USER_PASSWORD)
  private String masterUserPassword;

  public static final String SERIALIZED_NAME_NODE_TYPE = "NodeType";
  @SerializedName(SERIALIZED_NAME_NODE_TYPE)
  private String nodeType;

  public static final String SERIALIZED_NAME_NUMBER_OF_NODES = "NumberOfNodes";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_NODES)
  private Integer numberOfNodes;

  public static final String SERIALIZED_NAME_PUBLICLY_ACCESSIBLE = "PubliclyAccessible";
  @SerializedName(SERIALIZED_NAME_PUBLICLY_ACCESSIBLE)
  private Boolean publiclyAccessible;

  public AwsRedshiftClusterDetailsPendingModifiedValues() {
  }

  public AwsRedshiftClusterDetailsPendingModifiedValues automatedSnapshotRetentionPeriod(Integer automatedSnapshotRetentionPeriod) {
    this.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
    return this;
  }

  /**
   * Get automatedSnapshotRetentionPeriod
   * @return automatedSnapshotRetentionPeriod
   */
  @javax.annotation.Nullable
  public Integer getAutomatedSnapshotRetentionPeriod() {
    return automatedSnapshotRetentionPeriod;
  }

  public void setAutomatedSnapshotRetentionPeriod(Integer automatedSnapshotRetentionPeriod) {
    this.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues clusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
    return this;
  }

  /**
   * Get clusterIdentifier
   * @return clusterIdentifier
   */
  @javax.annotation.Nullable
  public String getClusterIdentifier() {
    return clusterIdentifier;
  }

  public void setClusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues clusterType(String clusterType) {
    this.clusterType = clusterType;
    return this;
  }

  /**
   * Get clusterType
   * @return clusterType
   */
  @javax.annotation.Nullable
  public String getClusterType() {
    return clusterType;
  }

  public void setClusterType(String clusterType) {
    this.clusterType = clusterType;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues clusterVersion(String clusterVersion) {
    this.clusterVersion = clusterVersion;
    return this;
  }

  /**
   * Get clusterVersion
   * @return clusterVersion
   */
  @javax.annotation.Nullable
  public String getClusterVersion() {
    return clusterVersion;
  }

  public void setClusterVersion(String clusterVersion) {
    this.clusterVersion = clusterVersion;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues encryptionType(String encryptionType) {
    this.encryptionType = encryptionType;
    return this;
  }

  /**
   * Get encryptionType
   * @return encryptionType
   */
  @javax.annotation.Nullable
  public String getEncryptionType() {
    return encryptionType;
  }

  public void setEncryptionType(String encryptionType) {
    this.encryptionType = encryptionType;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues enhancedVpcRouting(Boolean enhancedVpcRouting) {
    this.enhancedVpcRouting = enhancedVpcRouting;
    return this;
  }

  /**
   * Get enhancedVpcRouting
   * @return enhancedVpcRouting
   */
  @javax.annotation.Nullable
  public Boolean getEnhancedVpcRouting() {
    return enhancedVpcRouting;
  }

  public void setEnhancedVpcRouting(Boolean enhancedVpcRouting) {
    this.enhancedVpcRouting = enhancedVpcRouting;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues maintenanceTrackName(String maintenanceTrackName) {
    this.maintenanceTrackName = maintenanceTrackName;
    return this;
  }

  /**
   * Get maintenanceTrackName
   * @return maintenanceTrackName
   */
  @javax.annotation.Nullable
  public String getMaintenanceTrackName() {
    return maintenanceTrackName;
  }

  public void setMaintenanceTrackName(String maintenanceTrackName) {
    this.maintenanceTrackName = maintenanceTrackName;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues masterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
    return this;
  }

  /**
   * Get masterUserPassword
   * @return masterUserPassword
   */
  @javax.annotation.Nullable
  public String getMasterUserPassword() {
    return masterUserPassword;
  }

  public void setMasterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

  /**
   * Get nodeType
   * @return nodeType
   */
  @javax.annotation.Nullable
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues numberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
    return this;
  }

  /**
   * Get numberOfNodes
   * @return numberOfNodes
   */
  @javax.annotation.Nullable
  public Integer getNumberOfNodes() {
    return numberOfNodes;
  }

  public void setNumberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
  }


  public AwsRedshiftClusterDetailsPendingModifiedValues publiclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
    return this;
  }

  /**
   * Get publiclyAccessible
   * @return publiclyAccessible
   */
  @javax.annotation.Nullable
  public Boolean getPubliclyAccessible() {
    return publiclyAccessible;
  }

  public void setPubliclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsRedshiftClusterDetailsPendingModifiedValues awsRedshiftClusterDetailsPendingModifiedValues = (AwsRedshiftClusterDetailsPendingModifiedValues) o;
    return Objects.equals(this.automatedSnapshotRetentionPeriod, awsRedshiftClusterDetailsPendingModifiedValues.automatedSnapshotRetentionPeriod) &&
        Objects.equals(this.clusterIdentifier, awsRedshiftClusterDetailsPendingModifiedValues.clusterIdentifier) &&
        Objects.equals(this.clusterType, awsRedshiftClusterDetailsPendingModifiedValues.clusterType) &&
        Objects.equals(this.clusterVersion, awsRedshiftClusterDetailsPendingModifiedValues.clusterVersion) &&
        Objects.equals(this.encryptionType, awsRedshiftClusterDetailsPendingModifiedValues.encryptionType) &&
        Objects.equals(this.enhancedVpcRouting, awsRedshiftClusterDetailsPendingModifiedValues.enhancedVpcRouting) &&
        Objects.equals(this.maintenanceTrackName, awsRedshiftClusterDetailsPendingModifiedValues.maintenanceTrackName) &&
        Objects.equals(this.masterUserPassword, awsRedshiftClusterDetailsPendingModifiedValues.masterUserPassword) &&
        Objects.equals(this.nodeType, awsRedshiftClusterDetailsPendingModifiedValues.nodeType) &&
        Objects.equals(this.numberOfNodes, awsRedshiftClusterDetailsPendingModifiedValues.numberOfNodes) &&
        Objects.equals(this.publiclyAccessible, awsRedshiftClusterDetailsPendingModifiedValues.publiclyAccessible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automatedSnapshotRetentionPeriod, clusterIdentifier, clusterType, clusterVersion, encryptionType, enhancedVpcRouting, maintenanceTrackName, masterUserPassword, nodeType, numberOfNodes, publiclyAccessible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsRedshiftClusterDetailsPendingModifiedValues {\n");
    sb.append("    automatedSnapshotRetentionPeriod: ").append(toIndentedString(automatedSnapshotRetentionPeriod)).append("\n");
    sb.append("    clusterIdentifier: ").append(toIndentedString(clusterIdentifier)).append("\n");
    sb.append("    clusterType: ").append(toIndentedString(clusterType)).append("\n");
    sb.append("    clusterVersion: ").append(toIndentedString(clusterVersion)).append("\n");
    sb.append("    encryptionType: ").append(toIndentedString(encryptionType)).append("\n");
    sb.append("    enhancedVpcRouting: ").append(toIndentedString(enhancedVpcRouting)).append("\n");
    sb.append("    maintenanceTrackName: ").append(toIndentedString(maintenanceTrackName)).append("\n");
    sb.append("    masterUserPassword: ").append(toIndentedString(masterUserPassword)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    numberOfNodes: ").append(toIndentedString(numberOfNodes)).append("\n");
    sb.append("    publiclyAccessible: ").append(toIndentedString(publiclyAccessible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutomatedSnapshotRetentionPeriod");
    openapiFields.add("ClusterIdentifier");
    openapiFields.add("ClusterType");
    openapiFields.add("ClusterVersion");
    openapiFields.add("EncryptionType");
    openapiFields.add("EnhancedVpcRouting");
    openapiFields.add("MaintenanceTrackName");
    openapiFields.add("MasterUserPassword");
    openapiFields.add("NodeType");
    openapiFields.add("NumberOfNodes");
    openapiFields.add("PubliclyAccessible");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsRedshiftClusterDetailsPendingModifiedValues
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsRedshiftClusterDetailsPendingModifiedValues.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsRedshiftClusterDetailsPendingModifiedValues is not found in the empty JSON string", AwsRedshiftClusterDetailsPendingModifiedValues.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsRedshiftClusterDetailsPendingModifiedValues.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsRedshiftClusterDetailsPendingModifiedValues` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AutomatedSnapshotRetentionPeriod`
      if (jsonObj.get("AutomatedSnapshotRetentionPeriod") != null && !jsonObj.get("AutomatedSnapshotRetentionPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AutomatedSnapshotRetentionPeriod"));
      }
      // validate the optional field `ClusterIdentifier`
      if (jsonObj.get("ClusterIdentifier") != null && !jsonObj.get("ClusterIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterIdentifier"));
      }
      // validate the optional field `ClusterType`
      if (jsonObj.get("ClusterType") != null && !jsonObj.get("ClusterType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterType"));
      }
      // validate the optional field `ClusterVersion`
      if (jsonObj.get("ClusterVersion") != null && !jsonObj.get("ClusterVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterVersion"));
      }
      // validate the optional field `EncryptionType`
      if (jsonObj.get("EncryptionType") != null && !jsonObj.get("EncryptionType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EncryptionType"));
      }
      // validate the optional field `EnhancedVpcRouting`
      if (jsonObj.get("EnhancedVpcRouting") != null && !jsonObj.get("EnhancedVpcRouting").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnhancedVpcRouting"));
      }
      // validate the optional field `MaintenanceTrackName`
      if (jsonObj.get("MaintenanceTrackName") != null && !jsonObj.get("MaintenanceTrackName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaintenanceTrackName"));
      }
      // validate the optional field `MasterUserPassword`
      if (jsonObj.get("MasterUserPassword") != null && !jsonObj.get("MasterUserPassword").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MasterUserPassword"));
      }
      // validate the optional field `NodeType`
      if (jsonObj.get("NodeType") != null && !jsonObj.get("NodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NodeType"));
      }
      // validate the optional field `NumberOfNodes`
      if (jsonObj.get("NumberOfNodes") != null && !jsonObj.get("NumberOfNodes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfNodes"));
      }
      // validate the optional field `PubliclyAccessible`
      if (jsonObj.get("PubliclyAccessible") != null && !jsonObj.get("PubliclyAccessible").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("PubliclyAccessible"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsRedshiftClusterDetailsPendingModifiedValues.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsRedshiftClusterDetailsPendingModifiedValues' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsRedshiftClusterDetailsPendingModifiedValues> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsRedshiftClusterDetailsPendingModifiedValues.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsRedshiftClusterDetailsPendingModifiedValues>() {
           @Override
           public void write(JsonWriter out, AwsRedshiftClusterDetailsPendingModifiedValues value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsRedshiftClusterDetailsPendingModifiedValues read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsRedshiftClusterDetailsPendingModifiedValues given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsRedshiftClusterDetailsPendingModifiedValues
   * @throws IOException if the JSON string is invalid with respect to AwsRedshiftClusterDetailsPendingModifiedValues
   */
  public static AwsRedshiftClusterDetailsPendingModifiedValues fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsRedshiftClusterDetailsPendingModifiedValues.class);
  }

  /**
   * Convert an instance of AwsRedshiftClusterDetailsPendingModifiedValues to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

