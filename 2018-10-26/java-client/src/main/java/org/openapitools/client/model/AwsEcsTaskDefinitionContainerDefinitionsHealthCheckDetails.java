/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The container health check command and associated configuration parameters for the container.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:04:58.462265-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails {
  public static final String SERIALIZED_NAME_COMMAND = "Command";
  @SerializedName(SERIALIZED_NAME_COMMAND)
  private List command;

  public static final String SERIALIZED_NAME_INTERVAL = "Interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  private Integer interval;

  public static final String SERIALIZED_NAME_RETRIES = "Retries";
  @SerializedName(SERIALIZED_NAME_RETRIES)
  private Integer retries;

  public static final String SERIALIZED_NAME_START_PERIOD = "StartPeriod";
  @SerializedName(SERIALIZED_NAME_START_PERIOD)
  private Integer startPeriod;

  public static final String SERIALIZED_NAME_TIMEOUT = "Timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private Integer timeout;

  public AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails() {
  }

  public AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails command(List command) {
    this.command = command;
    return this;
  }

  /**
   * Get command
   * @return command
   */
  @javax.annotation.Nullable
  public List getCommand() {
    return command;
  }

  public void setCommand(List command) {
    this.command = command;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails interval(Integer interval) {
    this.interval = interval;
    return this;
  }

  /**
   * Get interval
   * @return interval
   */
  @javax.annotation.Nullable
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(Integer interval) {
    this.interval = interval;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails retries(Integer retries) {
    this.retries = retries;
    return this;
  }

  /**
   * Get retries
   * @return retries
   */
  @javax.annotation.Nullable
  public Integer getRetries() {
    return retries;
  }

  public void setRetries(Integer retries) {
    this.retries = retries;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails startPeriod(Integer startPeriod) {
    this.startPeriod = startPeriod;
    return this;
  }

  /**
   * Get startPeriod
   * @return startPeriod
   */
  @javax.annotation.Nullable
  public Integer getStartPeriod() {
    return startPeriod;
  }

  public void setStartPeriod(Integer startPeriod) {
    this.startPeriod = startPeriod;
  }


  public AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

  /**
   * Get timeout
   * @return timeout
   */
  @javax.annotation.Nullable
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails awsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails = (AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails) o;
    return Objects.equals(this.command, awsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.command) &&
        Objects.equals(this.interval, awsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.interval) &&
        Objects.equals(this.retries, awsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.retries) &&
        Objects.equals(this.startPeriod, awsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.startPeriod) &&
        Objects.equals(this.timeout, awsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.timeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(command, interval, retries, startPeriod, timeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails {\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
    sb.append("    startPeriod: ").append(toIndentedString(startPeriod)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Command");
    openapiFields.add("Interval");
    openapiFields.add("Retries");
    openapiFields.add("StartPeriod");
    openapiFields.add("Timeout");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails is not found in the empty JSON string", AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Command`
      if (jsonObj.get("Command") != null && !jsonObj.get("Command").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Command"));
      }
      // validate the optional field `Interval`
      if (jsonObj.get("Interval") != null && !jsonObj.get("Interval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Interval"));
      }
      // validate the optional field `Retries`
      if (jsonObj.get("Retries") != null && !jsonObj.get("Retries").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Retries"));
      }
      // validate the optional field `StartPeriod`
      if (jsonObj.get("StartPeriod") != null && !jsonObj.get("StartPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("StartPeriod"));
      }
      // validate the optional field `Timeout`
      if (jsonObj.get("Timeout") != null && !jsonObj.get("Timeout").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Timeout"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails>() {
           @Override
           public void write(JsonWriter out, AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails
   * @throws IOException if the JSON string is invalid with respect to AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails
   */
  public static AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails.class);
  }

  /**
   * Convert an instance of AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

