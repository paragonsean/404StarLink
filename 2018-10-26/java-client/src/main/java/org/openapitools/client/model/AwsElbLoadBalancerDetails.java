/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AwsElbLoadBalancerDetailsHealthCheck;
import org.openapitools.client.model.AwsElbLoadBalancerDetailsLoadBalancerAttributes;
import org.openapitools.client.model.AwsElbLoadBalancerDetailsPolicies;
import org.openapitools.client.model.AwsElbLoadBalancerDetailsSourceSecurityGroup;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains details about a Classic Load Balancer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:04:58.462265-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsElbLoadBalancerDetails {
  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "AvailabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List availabilityZones;

  public static final String SERIALIZED_NAME_BACKEND_SERVER_DESCRIPTIONS = "BackendServerDescriptions";
  @SerializedName(SERIALIZED_NAME_BACKEND_SERVER_DESCRIPTIONS)
  private List backendServerDescriptions;

  public static final String SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_NAME = "CanonicalHostedZoneName";
  @SerializedName(SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_NAME)
  private String canonicalHostedZoneName;

  public static final String SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_NAME_I_D = "CanonicalHostedZoneNameID";
  @SerializedName(SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_NAME_I_D)
  private String canonicalHostedZoneNameID;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private String createdTime;

  public static final String SERIALIZED_NAME_DNS_NAME = "DnsName";
  @SerializedName(SERIALIZED_NAME_DNS_NAME)
  private String dnsName;

  public static final String SERIALIZED_NAME_HEALTH_CHECK = "HealthCheck";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK)
  private AwsElbLoadBalancerDetailsHealthCheck healthCheck;

  public static final String SERIALIZED_NAME_INSTANCES = "Instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List instances;

  public static final String SERIALIZED_NAME_LISTENER_DESCRIPTIONS = "ListenerDescriptions";
  @SerializedName(SERIALIZED_NAME_LISTENER_DESCRIPTIONS)
  private List listenerDescriptions;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_ATTRIBUTES = "LoadBalancerAttributes";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_ATTRIBUTES)
  private AwsElbLoadBalancerDetailsLoadBalancerAttributes loadBalancerAttributes;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_NAME = "LoadBalancerName";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_NAME)
  private String loadBalancerName;

  public static final String SERIALIZED_NAME_POLICIES = "Policies";
  @SerializedName(SERIALIZED_NAME_POLICIES)
  private AwsElbLoadBalancerDetailsPolicies policies;

  public static final String SERIALIZED_NAME_SCHEME = "Scheme";
  @SerializedName(SERIALIZED_NAME_SCHEME)
  private String scheme;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_SOURCE_SECURITY_GROUP = "SourceSecurityGroup";
  @SerializedName(SERIALIZED_NAME_SOURCE_SECURITY_GROUP)
  private AwsElbLoadBalancerDetailsSourceSecurityGroup sourceSecurityGroup;

  public static final String SERIALIZED_NAME_SUBNETS = "Subnets";
  @SerializedName(SERIALIZED_NAME_SUBNETS)
  private List subnets;

  public static final String SERIALIZED_NAME_VPC_ID = "VpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public AwsElbLoadBalancerDetails() {
  }

  public AwsElbLoadBalancerDetails availabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  /**
   * Get availabilityZones
   * @return availabilityZones
   */
  @javax.annotation.Nullable
  public List getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public AwsElbLoadBalancerDetails backendServerDescriptions(List backendServerDescriptions) {
    this.backendServerDescriptions = backendServerDescriptions;
    return this;
  }

  /**
   * Get backendServerDescriptions
   * @return backendServerDescriptions
   */
  @javax.annotation.Nullable
  public List getBackendServerDescriptions() {
    return backendServerDescriptions;
  }

  public void setBackendServerDescriptions(List backendServerDescriptions) {
    this.backendServerDescriptions = backendServerDescriptions;
  }


  public AwsElbLoadBalancerDetails canonicalHostedZoneName(String canonicalHostedZoneName) {
    this.canonicalHostedZoneName = canonicalHostedZoneName;
    return this;
  }

  /**
   * Get canonicalHostedZoneName
   * @return canonicalHostedZoneName
   */
  @javax.annotation.Nullable
  public String getCanonicalHostedZoneName() {
    return canonicalHostedZoneName;
  }

  public void setCanonicalHostedZoneName(String canonicalHostedZoneName) {
    this.canonicalHostedZoneName = canonicalHostedZoneName;
  }


  public AwsElbLoadBalancerDetails canonicalHostedZoneNameID(String canonicalHostedZoneNameID) {
    this.canonicalHostedZoneNameID = canonicalHostedZoneNameID;
    return this;
  }

  /**
   * Get canonicalHostedZoneNameID
   * @return canonicalHostedZoneNameID
   */
  @javax.annotation.Nullable
  public String getCanonicalHostedZoneNameID() {
    return canonicalHostedZoneNameID;
  }

  public void setCanonicalHostedZoneNameID(String canonicalHostedZoneNameID) {
    this.canonicalHostedZoneNameID = canonicalHostedZoneNameID;
  }


  public AwsElbLoadBalancerDetails createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }


  public AwsElbLoadBalancerDetails dnsName(String dnsName) {
    this.dnsName = dnsName;
    return this;
  }

  /**
   * Get dnsName
   * @return dnsName
   */
  @javax.annotation.Nullable
  public String getDnsName() {
    return dnsName;
  }

  public void setDnsName(String dnsName) {
    this.dnsName = dnsName;
  }


  public AwsElbLoadBalancerDetails healthCheck(AwsElbLoadBalancerDetailsHealthCheck healthCheck) {
    this.healthCheck = healthCheck;
    return this;
  }

  /**
   * Get healthCheck
   * @return healthCheck
   */
  @javax.annotation.Nullable
  public AwsElbLoadBalancerDetailsHealthCheck getHealthCheck() {
    return healthCheck;
  }

  public void setHealthCheck(AwsElbLoadBalancerDetailsHealthCheck healthCheck) {
    this.healthCheck = healthCheck;
  }


  public AwsElbLoadBalancerDetails instances(List instances) {
    this.instances = instances;
    return this;
  }

  /**
   * Get instances
   * @return instances
   */
  @javax.annotation.Nullable
  public List getInstances() {
    return instances;
  }

  public void setInstances(List instances) {
    this.instances = instances;
  }


  public AwsElbLoadBalancerDetails listenerDescriptions(List listenerDescriptions) {
    this.listenerDescriptions = listenerDescriptions;
    return this;
  }

  /**
   * Get listenerDescriptions
   * @return listenerDescriptions
   */
  @javax.annotation.Nullable
  public List getListenerDescriptions() {
    return listenerDescriptions;
  }

  public void setListenerDescriptions(List listenerDescriptions) {
    this.listenerDescriptions = listenerDescriptions;
  }


  public AwsElbLoadBalancerDetails loadBalancerAttributes(AwsElbLoadBalancerDetailsLoadBalancerAttributes loadBalancerAttributes) {
    this.loadBalancerAttributes = loadBalancerAttributes;
    return this;
  }

  /**
   * Get loadBalancerAttributes
   * @return loadBalancerAttributes
   */
  @javax.annotation.Nullable
  public AwsElbLoadBalancerDetailsLoadBalancerAttributes getLoadBalancerAttributes() {
    return loadBalancerAttributes;
  }

  public void setLoadBalancerAttributes(AwsElbLoadBalancerDetailsLoadBalancerAttributes loadBalancerAttributes) {
    this.loadBalancerAttributes = loadBalancerAttributes;
  }


  public AwsElbLoadBalancerDetails loadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
    return this;
  }

  /**
   * Get loadBalancerName
   * @return loadBalancerName
   */
  @javax.annotation.Nullable
  public String getLoadBalancerName() {
    return loadBalancerName;
  }

  public void setLoadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
  }


  public AwsElbLoadBalancerDetails policies(AwsElbLoadBalancerDetailsPolicies policies) {
    this.policies = policies;
    return this;
  }

  /**
   * Get policies
   * @return policies
   */
  @javax.annotation.Nullable
  public AwsElbLoadBalancerDetailsPolicies getPolicies() {
    return policies;
  }

  public void setPolicies(AwsElbLoadBalancerDetailsPolicies policies) {
    this.policies = policies;
  }


  public AwsElbLoadBalancerDetails scheme(String scheme) {
    this.scheme = scheme;
    return this;
  }

  /**
   * Get scheme
   * @return scheme
   */
  @javax.annotation.Nullable
  public String getScheme() {
    return scheme;
  }

  public void setScheme(String scheme) {
    this.scheme = scheme;
  }


  public AwsElbLoadBalancerDetails securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public AwsElbLoadBalancerDetails sourceSecurityGroup(AwsElbLoadBalancerDetailsSourceSecurityGroup sourceSecurityGroup) {
    this.sourceSecurityGroup = sourceSecurityGroup;
    return this;
  }

  /**
   * Get sourceSecurityGroup
   * @return sourceSecurityGroup
   */
  @javax.annotation.Nullable
  public AwsElbLoadBalancerDetailsSourceSecurityGroup getSourceSecurityGroup() {
    return sourceSecurityGroup;
  }

  public void setSourceSecurityGroup(AwsElbLoadBalancerDetailsSourceSecurityGroup sourceSecurityGroup) {
    this.sourceSecurityGroup = sourceSecurityGroup;
  }


  public AwsElbLoadBalancerDetails subnets(List subnets) {
    this.subnets = subnets;
    return this;
  }

  /**
   * Get subnets
   * @return subnets
   */
  @javax.annotation.Nullable
  public List getSubnets() {
    return subnets;
  }

  public void setSubnets(List subnets) {
    this.subnets = subnets;
  }


  public AwsElbLoadBalancerDetails vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsElbLoadBalancerDetails awsElbLoadBalancerDetails = (AwsElbLoadBalancerDetails) o;
    return Objects.equals(this.availabilityZones, awsElbLoadBalancerDetails.availabilityZones) &&
        Objects.equals(this.backendServerDescriptions, awsElbLoadBalancerDetails.backendServerDescriptions) &&
        Objects.equals(this.canonicalHostedZoneName, awsElbLoadBalancerDetails.canonicalHostedZoneName) &&
        Objects.equals(this.canonicalHostedZoneNameID, awsElbLoadBalancerDetails.canonicalHostedZoneNameID) &&
        Objects.equals(this.createdTime, awsElbLoadBalancerDetails.createdTime) &&
        Objects.equals(this.dnsName, awsElbLoadBalancerDetails.dnsName) &&
        Objects.equals(this.healthCheck, awsElbLoadBalancerDetails.healthCheck) &&
        Objects.equals(this.instances, awsElbLoadBalancerDetails.instances) &&
        Objects.equals(this.listenerDescriptions, awsElbLoadBalancerDetails.listenerDescriptions) &&
        Objects.equals(this.loadBalancerAttributes, awsElbLoadBalancerDetails.loadBalancerAttributes) &&
        Objects.equals(this.loadBalancerName, awsElbLoadBalancerDetails.loadBalancerName) &&
        Objects.equals(this.policies, awsElbLoadBalancerDetails.policies) &&
        Objects.equals(this.scheme, awsElbLoadBalancerDetails.scheme) &&
        Objects.equals(this.securityGroups, awsElbLoadBalancerDetails.securityGroups) &&
        Objects.equals(this.sourceSecurityGroup, awsElbLoadBalancerDetails.sourceSecurityGroup) &&
        Objects.equals(this.subnets, awsElbLoadBalancerDetails.subnets) &&
        Objects.equals(this.vpcId, awsElbLoadBalancerDetails.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZones, backendServerDescriptions, canonicalHostedZoneName, canonicalHostedZoneNameID, createdTime, dnsName, healthCheck, instances, listenerDescriptions, loadBalancerAttributes, loadBalancerName, policies, scheme, securityGroups, sourceSecurityGroup, subnets, vpcId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsElbLoadBalancerDetails {\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    backendServerDescriptions: ").append(toIndentedString(backendServerDescriptions)).append("\n");
    sb.append("    canonicalHostedZoneName: ").append(toIndentedString(canonicalHostedZoneName)).append("\n");
    sb.append("    canonicalHostedZoneNameID: ").append(toIndentedString(canonicalHostedZoneNameID)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    dnsName: ").append(toIndentedString(dnsName)).append("\n");
    sb.append("    healthCheck: ").append(toIndentedString(healthCheck)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    listenerDescriptions: ").append(toIndentedString(listenerDescriptions)).append("\n");
    sb.append("    loadBalancerAttributes: ").append(toIndentedString(loadBalancerAttributes)).append("\n");
    sb.append("    loadBalancerName: ").append(toIndentedString(loadBalancerName)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    sourceSecurityGroup: ").append(toIndentedString(sourceSecurityGroup)).append("\n");
    sb.append("    subnets: ").append(toIndentedString(subnets)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AvailabilityZones");
    openapiFields.add("BackendServerDescriptions");
    openapiFields.add("CanonicalHostedZoneName");
    openapiFields.add("CanonicalHostedZoneNameID");
    openapiFields.add("CreatedTime");
    openapiFields.add("DnsName");
    openapiFields.add("HealthCheck");
    openapiFields.add("Instances");
    openapiFields.add("ListenerDescriptions");
    openapiFields.add("LoadBalancerAttributes");
    openapiFields.add("LoadBalancerName");
    openapiFields.add("Policies");
    openapiFields.add("Scheme");
    openapiFields.add("SecurityGroups");
    openapiFields.add("SourceSecurityGroup");
    openapiFields.add("Subnets");
    openapiFields.add("VpcId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsElbLoadBalancerDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsElbLoadBalancerDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsElbLoadBalancerDetails is not found in the empty JSON string", AwsElbLoadBalancerDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsElbLoadBalancerDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsElbLoadBalancerDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AvailabilityZones`
      if (jsonObj.get("AvailabilityZones") != null && !jsonObj.get("AvailabilityZones").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AvailabilityZones"));
      }
      // validate the optional field `BackendServerDescriptions`
      if (jsonObj.get("BackendServerDescriptions") != null && !jsonObj.get("BackendServerDescriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BackendServerDescriptions"));
      }
      // validate the optional field `CanonicalHostedZoneName`
      if (jsonObj.get("CanonicalHostedZoneName") != null && !jsonObj.get("CanonicalHostedZoneName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CanonicalHostedZoneName"));
      }
      // validate the optional field `CanonicalHostedZoneNameID`
      if (jsonObj.get("CanonicalHostedZoneNameID") != null && !jsonObj.get("CanonicalHostedZoneNameID").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CanonicalHostedZoneNameID"));
      }
      // validate the optional field `CreatedTime`
      if (jsonObj.get("CreatedTime") != null && !jsonObj.get("CreatedTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedTime"));
      }
      // validate the optional field `DnsName`
      if (jsonObj.get("DnsName") != null && !jsonObj.get("DnsName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DnsName"));
      }
      // validate the optional field `HealthCheck`
      if (jsonObj.get("HealthCheck") != null && !jsonObj.get("HealthCheck").isJsonNull()) {
        AwsElbLoadBalancerDetailsHealthCheck.validateJsonElement(jsonObj.get("HealthCheck"));
      }
      // validate the optional field `Instances`
      if (jsonObj.get("Instances") != null && !jsonObj.get("Instances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Instances"));
      }
      // validate the optional field `ListenerDescriptions`
      if (jsonObj.get("ListenerDescriptions") != null && !jsonObj.get("ListenerDescriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ListenerDescriptions"));
      }
      // validate the optional field `LoadBalancerAttributes`
      if (jsonObj.get("LoadBalancerAttributes") != null && !jsonObj.get("LoadBalancerAttributes").isJsonNull()) {
        AwsElbLoadBalancerDetailsLoadBalancerAttributes.validateJsonElement(jsonObj.get("LoadBalancerAttributes"));
      }
      // validate the optional field `LoadBalancerName`
      if (jsonObj.get("LoadBalancerName") != null && !jsonObj.get("LoadBalancerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LoadBalancerName"));
      }
      // validate the optional field `Policies`
      if (jsonObj.get("Policies") != null && !jsonObj.get("Policies").isJsonNull()) {
        AwsElbLoadBalancerDetailsPolicies.validateJsonElement(jsonObj.get("Policies"));
      }
      // validate the optional field `Scheme`
      if (jsonObj.get("Scheme") != null && !jsonObj.get("Scheme").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Scheme"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `SourceSecurityGroup`
      if (jsonObj.get("SourceSecurityGroup") != null && !jsonObj.get("SourceSecurityGroup").isJsonNull()) {
        AwsElbLoadBalancerDetailsSourceSecurityGroup.validateJsonElement(jsonObj.get("SourceSecurityGroup"));
      }
      // validate the optional field `Subnets`
      if (jsonObj.get("Subnets") != null && !jsonObj.get("Subnets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Subnets"));
      }
      // validate the optional field `VpcId`
      if (jsonObj.get("VpcId") != null && !jsonObj.get("VpcId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsElbLoadBalancerDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsElbLoadBalancerDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsElbLoadBalancerDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsElbLoadBalancerDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsElbLoadBalancerDetails>() {
           @Override
           public void write(JsonWriter out, AwsElbLoadBalancerDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsElbLoadBalancerDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsElbLoadBalancerDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsElbLoadBalancerDetails
   * @throws IOException if the JSON string is invalid with respect to AwsElbLoadBalancerDetails
   */
  public static AwsElbLoadBalancerDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsElbLoadBalancerDetails.class);
  }

  /**
   * Convert an instance of AwsElbLoadBalancerDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

