/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceDetailsAwsRdsEventSubscription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:57:02.717661-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceDetailsAwsRdsEventSubscription {
  public static final String SERIALIZED_NAME_CUST_SUBSCRIPTION_ID = "CustSubscriptionId";
  @SerializedName(SERIALIZED_NAME_CUST_SUBSCRIPTION_ID)
  private String custSubscriptionId;

  public static final String SERIALIZED_NAME_CUSTOMER_AWS_ID = "CustomerAwsId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_AWS_ID)
  private String customerAwsId;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_EVENT_CATEGORIES_LIST = "EventCategoriesList";
  @SerializedName(SERIALIZED_NAME_EVENT_CATEGORIES_LIST)
  private List eventCategoriesList;

  public static final String SERIALIZED_NAME_EVENT_SUBSCRIPTION_ARN = "EventSubscriptionArn";
  @SerializedName(SERIALIZED_NAME_EVENT_SUBSCRIPTION_ARN)
  private String eventSubscriptionArn;

  public static final String SERIALIZED_NAME_SNS_TOPIC_ARN = "SnsTopicArn";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC_ARN)
  private String snsTopicArn;

  public static final String SERIALIZED_NAME_SOURCE_IDS_LIST = "SourceIdsList";
  @SerializedName(SERIALIZED_NAME_SOURCE_IDS_LIST)
  private List sourceIdsList;

  public static final String SERIALIZED_NAME_SOURCE_TYPE = "SourceType";
  @SerializedName(SERIALIZED_NAME_SOURCE_TYPE)
  private String sourceType;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_CREATION_TIME = "SubscriptionCreationTime";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_CREATION_TIME)
  private String subscriptionCreationTime;

  public ResourceDetailsAwsRdsEventSubscription() {
  }

  public ResourceDetailsAwsRdsEventSubscription custSubscriptionId(String custSubscriptionId) {
    this.custSubscriptionId = custSubscriptionId;
    return this;
  }

  /**
   * Get custSubscriptionId
   * @return custSubscriptionId
   */
  @javax.annotation.Nullable
  public String getCustSubscriptionId() {
    return custSubscriptionId;
  }

  public void setCustSubscriptionId(String custSubscriptionId) {
    this.custSubscriptionId = custSubscriptionId;
  }


  public ResourceDetailsAwsRdsEventSubscription customerAwsId(String customerAwsId) {
    this.customerAwsId = customerAwsId;
    return this;
  }

  /**
   * Get customerAwsId
   * @return customerAwsId
   */
  @javax.annotation.Nullable
  public String getCustomerAwsId() {
    return customerAwsId;
  }

  public void setCustomerAwsId(String customerAwsId) {
    this.customerAwsId = customerAwsId;
  }


  public ResourceDetailsAwsRdsEventSubscription enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ResourceDetailsAwsRdsEventSubscription eventCategoriesList(List eventCategoriesList) {
    this.eventCategoriesList = eventCategoriesList;
    return this;
  }

  /**
   * Get eventCategoriesList
   * @return eventCategoriesList
   */
  @javax.annotation.Nullable
  public List getEventCategoriesList() {
    return eventCategoriesList;
  }

  public void setEventCategoriesList(List eventCategoriesList) {
    this.eventCategoriesList = eventCategoriesList;
  }


  public ResourceDetailsAwsRdsEventSubscription eventSubscriptionArn(String eventSubscriptionArn) {
    this.eventSubscriptionArn = eventSubscriptionArn;
    return this;
  }

  /**
   * Get eventSubscriptionArn
   * @return eventSubscriptionArn
   */
  @javax.annotation.Nullable
  public String getEventSubscriptionArn() {
    return eventSubscriptionArn;
  }

  public void setEventSubscriptionArn(String eventSubscriptionArn) {
    this.eventSubscriptionArn = eventSubscriptionArn;
  }


  public ResourceDetailsAwsRdsEventSubscription snsTopicArn(String snsTopicArn) {
    this.snsTopicArn = snsTopicArn;
    return this;
  }

  /**
   * Get snsTopicArn
   * @return snsTopicArn
   */
  @javax.annotation.Nullable
  public String getSnsTopicArn() {
    return snsTopicArn;
  }

  public void setSnsTopicArn(String snsTopicArn) {
    this.snsTopicArn = snsTopicArn;
  }


  public ResourceDetailsAwsRdsEventSubscription sourceIdsList(List sourceIdsList) {
    this.sourceIdsList = sourceIdsList;
    return this;
  }

  /**
   * Get sourceIdsList
   * @return sourceIdsList
   */
  @javax.annotation.Nullable
  public List getSourceIdsList() {
    return sourceIdsList;
  }

  public void setSourceIdsList(List sourceIdsList) {
    this.sourceIdsList = sourceIdsList;
  }


  public ResourceDetailsAwsRdsEventSubscription sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Get sourceType
   * @return sourceType
   */
  @javax.annotation.Nullable
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }


  public ResourceDetailsAwsRdsEventSubscription status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ResourceDetailsAwsRdsEventSubscription subscriptionCreationTime(String subscriptionCreationTime) {
    this.subscriptionCreationTime = subscriptionCreationTime;
    return this;
  }

  /**
   * Get subscriptionCreationTime
   * @return subscriptionCreationTime
   */
  @javax.annotation.Nullable
  public String getSubscriptionCreationTime() {
    return subscriptionCreationTime;
  }

  public void setSubscriptionCreationTime(String subscriptionCreationTime) {
    this.subscriptionCreationTime = subscriptionCreationTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceDetailsAwsRdsEventSubscription resourceDetailsAwsRdsEventSubscription = (ResourceDetailsAwsRdsEventSubscription) o;
    return Objects.equals(this.custSubscriptionId, resourceDetailsAwsRdsEventSubscription.custSubscriptionId) &&
        Objects.equals(this.customerAwsId, resourceDetailsAwsRdsEventSubscription.customerAwsId) &&
        Objects.equals(this.enabled, resourceDetailsAwsRdsEventSubscription.enabled) &&
        Objects.equals(this.eventCategoriesList, resourceDetailsAwsRdsEventSubscription.eventCategoriesList) &&
        Objects.equals(this.eventSubscriptionArn, resourceDetailsAwsRdsEventSubscription.eventSubscriptionArn) &&
        Objects.equals(this.snsTopicArn, resourceDetailsAwsRdsEventSubscription.snsTopicArn) &&
        Objects.equals(this.sourceIdsList, resourceDetailsAwsRdsEventSubscription.sourceIdsList) &&
        Objects.equals(this.sourceType, resourceDetailsAwsRdsEventSubscription.sourceType) &&
        Objects.equals(this.status, resourceDetailsAwsRdsEventSubscription.status) &&
        Objects.equals(this.subscriptionCreationTime, resourceDetailsAwsRdsEventSubscription.subscriptionCreationTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(custSubscriptionId, customerAwsId, enabled, eventCategoriesList, eventSubscriptionArn, snsTopicArn, sourceIdsList, sourceType, status, subscriptionCreationTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceDetailsAwsRdsEventSubscription {\n");
    sb.append("    custSubscriptionId: ").append(toIndentedString(custSubscriptionId)).append("\n");
    sb.append("    customerAwsId: ").append(toIndentedString(customerAwsId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    eventCategoriesList: ").append(toIndentedString(eventCategoriesList)).append("\n");
    sb.append("    eventSubscriptionArn: ").append(toIndentedString(eventSubscriptionArn)).append("\n");
    sb.append("    snsTopicArn: ").append(toIndentedString(snsTopicArn)).append("\n");
    sb.append("    sourceIdsList: ").append(toIndentedString(sourceIdsList)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subscriptionCreationTime: ").append(toIndentedString(subscriptionCreationTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CustSubscriptionId");
    openapiFields.add("CustomerAwsId");
    openapiFields.add("Enabled");
    openapiFields.add("EventCategoriesList");
    openapiFields.add("EventSubscriptionArn");
    openapiFields.add("SnsTopicArn");
    openapiFields.add("SourceIdsList");
    openapiFields.add("SourceType");
    openapiFields.add("Status");
    openapiFields.add("SubscriptionCreationTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceDetailsAwsRdsEventSubscription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceDetailsAwsRdsEventSubscription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceDetailsAwsRdsEventSubscription is not found in the empty JSON string", ResourceDetailsAwsRdsEventSubscription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceDetailsAwsRdsEventSubscription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceDetailsAwsRdsEventSubscription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CustSubscriptionId`
      if (jsonObj.get("CustSubscriptionId") != null && !jsonObj.get("CustSubscriptionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustSubscriptionId"));
      }
      // validate the optional field `CustomerAwsId`
      if (jsonObj.get("CustomerAwsId") != null && !jsonObj.get("CustomerAwsId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomerAwsId"));
      }
      // validate the optional field `Enabled`
      if (jsonObj.get("Enabled") != null && !jsonObj.get("Enabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Enabled"));
      }
      // validate the optional field `EventCategoriesList`
      if (jsonObj.get("EventCategoriesList") != null && !jsonObj.get("EventCategoriesList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EventCategoriesList"));
      }
      // validate the optional field `EventSubscriptionArn`
      if (jsonObj.get("EventSubscriptionArn") != null && !jsonObj.get("EventSubscriptionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EventSubscriptionArn"));
      }
      // validate the optional field `SnsTopicArn`
      if (jsonObj.get("SnsTopicArn") != null && !jsonObj.get("SnsTopicArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnsTopicArn"));
      }
      // validate the optional field `SourceIdsList`
      if (jsonObj.get("SourceIdsList") != null && !jsonObj.get("SourceIdsList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SourceIdsList"));
      }
      // validate the optional field `SourceType`
      if (jsonObj.get("SourceType") != null && !jsonObj.get("SourceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceType"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `SubscriptionCreationTime`
      if (jsonObj.get("SubscriptionCreationTime") != null && !jsonObj.get("SubscriptionCreationTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubscriptionCreationTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceDetailsAwsRdsEventSubscription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceDetailsAwsRdsEventSubscription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceDetailsAwsRdsEventSubscription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceDetailsAwsRdsEventSubscription.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceDetailsAwsRdsEventSubscription>() {
           @Override
           public void write(JsonWriter out, ResourceDetailsAwsRdsEventSubscription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceDetailsAwsRdsEventSubscription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceDetailsAwsRdsEventSubscription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceDetailsAwsRdsEventSubscription
   * @throws IOException if the JSON string is invalid with respect to ResourceDetailsAwsRdsEventSubscription
   */
  public static ResourceDetailsAwsRdsEventSubscription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceDetailsAwsRdsEventSubscription.class);
  }

  /**
   * Convert an instance of ResourceDetailsAwsRdsEventSubscription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

