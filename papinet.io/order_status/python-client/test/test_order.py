# coding: utf-8

"""
    papiNet API

    papinet API is a global initiative for the Forst and Paper supply chain.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order import Order

class TestOrder(unittest.TestCase):
    """Order unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Order:
        """Test Order
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Order`
        """
        model = Order()
        if include_optional:
            return Order(
                id = '',
                number_of_line_items = 0,
                order_number = '',
                order_status = 'Active',
                links = openapi_client.models.pagination_links.PaginationLinks(
                    first = openapi_client.models.pagination_links_first.PaginationLinks_first(
                        href = '', ), 
                    last = openapi_client.models.pagination_links_first.PaginationLinks_first(
                        href = '', ), 
                    next = , 
                    prev = , ),
                order_line_items = [
                    openapi_client.models.order_line_item.OrderLineItem(
                        changeable = True, 
                        id = '', 
                        order_line_item_number = 0, 
                        order_line_item_status = 'Cancelled', 
                        quantities = [
                            openapi_client.models.order_line_item_quantities_inner.OrderLineItem_quantities_inner(
                                quantity_context = 'Confirmed', 
                                quantity_type = 'Area', 
                                quantity_uom = 'Bale', 
                                quantity_value = 1.337, )
                            ], )
                    ]
            )
        else:
            return Order(
                id = '',
                number_of_line_items = 0,
                order_number = '',
                order_status = 'Active',
        )
        """

    def testOrder(self):
        """Test Order"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
