/*
 * Amazon Personalize
 * Amazon Personalize is a machine learning service that makes it easy to add individualized recommendations to customers.
 *
 * The version of the OpenAPI document: 2018-05-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateCampaignRequestCampaignConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateCampaignRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:54:49.326201-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateCampaignRequest {
  public static final String SERIALIZED_NAME_CAMPAIGN_ARN = "campaignArn";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ARN)
  private String campaignArn;

  public static final String SERIALIZED_NAME_SOLUTION_VERSION_ARN = "solutionVersionArn";
  @SerializedName(SERIALIZED_NAME_SOLUTION_VERSION_ARN)
  private String solutionVersionArn;

  public static final String SERIALIZED_NAME_MIN_PROVISIONED_T_P_S = "minProvisionedTPS";
  @SerializedName(SERIALIZED_NAME_MIN_PROVISIONED_T_P_S)
  private Integer minProvisionedTPS;

  public static final String SERIALIZED_NAME_CAMPAIGN_CONFIG = "campaignConfig";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_CONFIG)
  private CreateCampaignRequestCampaignConfig campaignConfig;

  public UpdateCampaignRequest() {
  }

  public UpdateCampaignRequest campaignArn(String campaignArn) {
    this.campaignArn = campaignArn;
    return this;
  }

  /**
   * Get campaignArn
   * @return campaignArn
   */
  @javax.annotation.Nonnull
  public String getCampaignArn() {
    return campaignArn;
  }

  public void setCampaignArn(String campaignArn) {
    this.campaignArn = campaignArn;
  }


  public UpdateCampaignRequest solutionVersionArn(String solutionVersionArn) {
    this.solutionVersionArn = solutionVersionArn;
    return this;
  }

  /**
   * Get solutionVersionArn
   * @return solutionVersionArn
   */
  @javax.annotation.Nullable
  public String getSolutionVersionArn() {
    return solutionVersionArn;
  }

  public void setSolutionVersionArn(String solutionVersionArn) {
    this.solutionVersionArn = solutionVersionArn;
  }


  public UpdateCampaignRequest minProvisionedTPS(Integer minProvisionedTPS) {
    this.minProvisionedTPS = minProvisionedTPS;
    return this;
  }

  /**
   * Get minProvisionedTPS
   * @return minProvisionedTPS
   */
  @javax.annotation.Nullable
  public Integer getMinProvisionedTPS() {
    return minProvisionedTPS;
  }

  public void setMinProvisionedTPS(Integer minProvisionedTPS) {
    this.minProvisionedTPS = minProvisionedTPS;
  }


  public UpdateCampaignRequest campaignConfig(CreateCampaignRequestCampaignConfig campaignConfig) {
    this.campaignConfig = campaignConfig;
    return this;
  }

  /**
   * Get campaignConfig
   * @return campaignConfig
   */
  @javax.annotation.Nullable
  public CreateCampaignRequestCampaignConfig getCampaignConfig() {
    return campaignConfig;
  }

  public void setCampaignConfig(CreateCampaignRequestCampaignConfig campaignConfig) {
    this.campaignConfig = campaignConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateCampaignRequest updateCampaignRequest = (UpdateCampaignRequest) o;
    return Objects.equals(this.campaignArn, updateCampaignRequest.campaignArn) &&
        Objects.equals(this.solutionVersionArn, updateCampaignRequest.solutionVersionArn) &&
        Objects.equals(this.minProvisionedTPS, updateCampaignRequest.minProvisionedTPS) &&
        Objects.equals(this.campaignConfig, updateCampaignRequest.campaignConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignArn, solutionVersionArn, minProvisionedTPS, campaignConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateCampaignRequest {\n");
    sb.append("    campaignArn: ").append(toIndentedString(campaignArn)).append("\n");
    sb.append("    solutionVersionArn: ").append(toIndentedString(solutionVersionArn)).append("\n");
    sb.append("    minProvisionedTPS: ").append(toIndentedString(minProvisionedTPS)).append("\n");
    sb.append("    campaignConfig: ").append(toIndentedString(campaignConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("campaignArn");
    openapiFields.add("solutionVersionArn");
    openapiFields.add("minProvisionedTPS");
    openapiFields.add("campaignConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("campaignArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateCampaignRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateCampaignRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateCampaignRequest is not found in the empty JSON string", UpdateCampaignRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateCampaignRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateCampaignRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateCampaignRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `campaignArn`
      String.validateJsonElement(jsonObj.get("campaignArn"));
      // validate the optional field `solutionVersionArn`
      if (jsonObj.get("solutionVersionArn") != null && !jsonObj.get("solutionVersionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("solutionVersionArn"));
      }
      // validate the optional field `minProvisionedTPS`
      if (jsonObj.get("minProvisionedTPS") != null && !jsonObj.get("minProvisionedTPS").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("minProvisionedTPS"));
      }
      // validate the optional field `campaignConfig`
      if (jsonObj.get("campaignConfig") != null && !jsonObj.get("campaignConfig").isJsonNull()) {
        CreateCampaignRequestCampaignConfig.validateJsonElement(jsonObj.get("campaignConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateCampaignRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateCampaignRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateCampaignRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateCampaignRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateCampaignRequest>() {
           @Override
           public void write(JsonWriter out, UpdateCampaignRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateCampaignRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateCampaignRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateCampaignRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateCampaignRequest
   */
  public static UpdateCampaignRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateCampaignRequest.class);
  }

  /**
   * Convert an instance of UpdateCampaignRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

