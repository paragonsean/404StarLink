openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Amazon Personalize is a machine learning service that makes it easy
    to add individualized recommendations to customers.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Personalize
  version: 2018-05-22
  x-release: v4
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: personalize
  x-aws-signingName: personalize
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/personalize-2018-05-22.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/personalize/
servers:
- description: The Amazon Personalize multi-region endpoint
  url: "http://personalize.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Personalize multi-region endpoint
  url: "https://personalize.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Personalize endpoint for China (Beijing) and China (Ningxia)
  url: "http://personalize.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Personalize endpoint for China (Beijing) and China (Ningxia)
  url: "https://personalize.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AmazonPersonalize.CreateBatchInferenceJob:
    post:
      description: "Creates a batch inference job. The operation can handle up to\
        \ 50 million records and the input file must be in JSON format. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/creating-batch-inference-job.html\"\
        >Creating a batch inference job</a>. "
      operationId: CreateBatchInferenceJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateBatchInferenceJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchInferenceJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBatchInferenceJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateBatchSegmentJob:
    post:
      description: "Creates a batch segment job. The operation can handle up to 50\
        \ million records and the input file must be in JSON format. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/recommendations-batch.html\"\
        >Getting batch recommendations and user segments</a>."
      operationId: CreateBatchSegmentJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateBatchSegmentJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchSegmentJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBatchSegmentJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateCampaign:
    post:
      description: "<p>Creates a campaign that deploys a solution version. When a\
        \ client calls the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\"\
        >GetRecommendations</a> and <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetPersonalizedRanking.html\"\
        >GetPersonalizedRanking</a> APIs, a campaign is specified in the request.</p>\
        \ <p> <b>Minimum Provisioned TPS and Auto-Scaling</b> </p> <p>A transaction\
        \ is a single <code>GetRecommendations</code> or <code>GetPersonalizedRanking</code>\
        \ call. Transactions per second (TPS) is the throughput and unit of billing\
        \ for Amazon Personalize. The minimum provisioned TPS (<code>minProvisionedTPS</code>)\
        \ specifies the baseline throughput provisioned by Amazon Personalize, and\
        \ thus, the minimum billing charge. </p> <p> If your TPS increases beyond\
        \ <code>minProvisionedTPS</code>, Amazon Personalize auto-scales the provisioned\
        \ capacity up and down, but never below <code>minProvisionedTPS</code>. There's\
        \ a short time delay while the capacity is increased that might cause loss\
        \ of transactions.</p> <p>The actual TPS used is calculated as the average\
        \ requests/second within a 5-minute window. You pay for maximum of either\
        \ the minimum provisioned TPS or the actual TPS. We recommend starting with\
        \ a low <code>minProvisionedTPS</code>, track your usage using Amazon CloudWatch\
        \ metrics, and then increase the <code>minProvisionedTPS</code> as necessary.</p>\
        \ <p> <b>Status</b> </p> <p>A campaign can be in one of the following states:</p>\
        \ <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE\
        \ FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li>\
        \ </ul> <p>To get the campaign status, call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html\"\
        >DescribeCampaign</a>.</p> <note> <p>Wait until the <code>status</code> of\
        \ the campaign is <code>ACTIVE</code> before asking the campaign for recommendations.</p>\
        \ </note> <p class=\"title\"> <b>Related APIs</b> </p> <ul> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/personalize/latest/dg/API_ListCampaigns.html\"\
        >ListCampaigns</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html\"\
        >DescribeCampaign</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_UpdateCampaign.html\"\
        >UpdateCampaign</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteCampaign.html\"\
        >DeleteCampaign</a> </p> </li> </ul>"
      operationId: CreateCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateCampaign
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateDataset:
    post:
      description: "<p>Creates an empty dataset and adds it to the specified dataset\
        \ group. Use <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetImportJob.html\"\
        >CreateDatasetImportJob</a> to import your training data to a dataset.</p>\
        \ <p>There are three types of datasets:</p> <ul> <li> <p>Interactions</p>\
        \ </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul> <p>Each dataset\
        \ type has an associated schema with required field types. Only the <code>Interactions</code>\
        \ dataset is required in order to train a model (also referred to as creating\
        \ a solution).</p> <p>A dataset can be in one of the following states:</p>\
        \ <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE\
        \ FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li>\
        \ </ul> <p>To get the status of the dataset, call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDataset.html\"\
        >DescribeDataset</a>.</p> <p class=\"title\"> <b>Related APIs</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html\"\
        >CreateDatasetGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListDatasets.html\"\
        >ListDatasets</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDataset.html\"\
        >DescribeDataset</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteDataset.html\"\
        >DeleteDataset</a> </p> </li> </ul>"
      operationId: CreateDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateDatasetExportJob:
    post:
      description: "<p> Creates a job that exports data from your dataset to an Amazon\
        \ S3 bucket. To allow Amazon Personalize to export the training data, you\
        \ must specify an service-linked IAM role that gives Amazon Personalize <code>PutObject</code>\
        \ permissions for your Amazon S3 bucket. For information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/export-data.html\"\
        >Exporting a dataset</a> in the Amazon Personalize developer guide. </p> <p>\
        \ <b>Status</b> </p> <p>A dataset export job can be in one of the following\
        \ states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE\
        \ -or- CREATE FAILED</p> </li> </ul> <p> To get the status of the export job,\
        \ call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetExportJob.html\"\
        >DescribeDatasetExportJob</a>, and specify the Amazon Resource Name (ARN)\
        \ of the dataset export job. The dataset export is complete when the status\
        \ shows as ACTIVE. If the status shows as CREATE FAILED, the response includes\
        \ a <code>failureReason</code> key, which describes why the job failed. </p>"
      operationId: CreateDatasetExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateDatasetExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateDatasetGroup:
    post:
      description: "<p>Creates an empty dataset group. A dataset group is a container\
        \ for Amazon Personalize resources. A dataset group can contain at most three\
        \ datasets, one for each type of dataset:</p> <ul> <li> <p>Interactions</p>\
        \ </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul> <p> A dataset\
        \ group can be a Domain dataset group, where you specify a domain and use\
        \ pre-configured resources like recommenders, or a Custom dataset group, where\
        \ you use custom resources, such as a solution with a solution version, that\
        \ you deploy with a campaign. If you start with a Domain dataset group, you\
        \ can still add custom resources such as solutions and solution versions trained\
        \ with recipes for custom use cases and deployed with campaigns. </p> <p>A\
        \ dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE\
        \ PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>\
        \ <li> <p>DELETE PENDING</p> </li> </ul> <p>To get the status of the dataset\
        \ group, call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetGroup.html\"\
        >DescribeDatasetGroup</a>. If the status shows as CREATE FAILED, the response\
        \ includes a <code>failureReason</code> key, which describes why the creation\
        \ failed.</p> <note> <p>You must wait until the <code>status</code> of the\
        \ dataset group is <code>ACTIVE</code> before adding a dataset to the group.</p>\
        \ </note> <p>You can specify an Key Management Service (KMS) key to encrypt\
        \ the datasets in the group. If you specify a KMS key, you must also include\
        \ an Identity and Access Management (IAM) role that has permission to access\
        \ the key.</p> <p class=\"title\"> <b>APIs that require a dataset group ARN\
        \ in the request</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html\"\
        >CreateEventTracker</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a> </p> </li> </ul> <p class=\"title\"> <b>Related APIs</b>\
        \ </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListDatasetGroups.html\"\
        >ListDatasetGroups</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetGroup.html\"\
        >DescribeDatasetGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteDatasetGroup.html\"\
        >DeleteDatasetGroup</a> </p> </li> </ul>"
      operationId: CreateDatasetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateDatasetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateDatasetImportJob:
    post:
      description: "<p>Creates a job that imports training data from your data source\
        \ (an Amazon S3 bucket) to an Amazon Personalize dataset. To allow Amazon\
        \ Personalize to import the training data, you must specify an IAM service\
        \ role that has permission to read from the data source, as Amazon Personalize\
        \ makes a copy of your data and processes it internally. For information on\
        \ granting access to your Amazon S3 bucket, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/granting-personalize-s3-access.html\"\
        >Giving Amazon Personalize Access to Amazon S3 Resources</a>. </p> <important>\
        \ <p>By default, a dataset import job replaces any existing data in the dataset\
        \ that you imported in bulk. To add new records without replacing existing\
        \ data, specify INCREMENTAL for the import mode in the CreateDatasetImportJob\
        \ operation.</p> </important> <p> <b>Status</b> </p> <p>A dataset import job\
        \ can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt;\
        \ CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul> <p>To\
        \ get the status of the import job, call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetImportJob.html\"\
        >DescribeDatasetImportJob</a>, providing the Amazon Resource Name (ARN) of\
        \ the dataset import job. The dataset import is complete when the status shows\
        \ as ACTIVE. If the status shows as CREATE FAILED, the response includes a\
        \ <code>failureReason</code> key, which describes why the job failed.</p>\
        \ <note> <p>Importing takes time. You must wait until the status shows as\
        \ ACTIVE before training a model using the dataset.</p> </note> <p class=\"\
        title\"> <b>Related APIs</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListDatasetImportJobs.html\"\
        >ListDatasetImportJobs</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetImportJob.html\"\
        >DescribeDatasetImportJob</a> </p> </li> </ul>"
      operationId: CreateDatasetImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateDatasetImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetImportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateEventTracker:
    post:
      description: "<p>Creates an event tracker that you use when adding event data\
        \ to a specified dataset group using the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html\"\
        >PutEvents</a> API.</p> <note> <p>Only one event tracker can be associated\
        \ with a dataset group. You will get an error if you call <code>CreateEventTracker</code>\
        \ using the same dataset group as an existing event tracker.</p> </note> <p>When\
        \ you create an event tracker, the response includes a tracking ID, which\
        \ you pass as a parameter when you use the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html\"\
        >PutEvents</a> operation. Amazon Personalize then appends the event data to\
        \ the Interactions dataset of the dataset group you specify in your event\
        \ tracker. </p> <p>The event tracker can be in one of the following states:</p>\
        \ <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE\
        \ FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li>\
        \ </ul> <p>To get the status of the event tracker, call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeEventTracker.html\"\
        >DescribeEventTracker</a>.</p> <note> <p>The event tracker must be in the\
        \ ACTIVE state before using the tracking ID.</p> </note> <p class=\"title\"\
        > <b>Related APIs</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListEventTrackers.html\"\
        >ListEventTrackers</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeEventTracker.html\"\
        >DescribeEventTracker</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteEventTracker.html\"\
        >DeleteEventTracker</a> </p> </li> </ul>"
      operationId: CreateEventTracker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateEventTracker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventTrackerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventTrackerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateFilter:
    post:
      description: "Creates a recommendation filter. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\">Filtering\
        \ recommendations and user segments</a>."
      operationId: CreateFilter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateFilter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateMetricAttribution:
    post:
      description: "Creates a metric attribution. A metric attribution creates reports\
        \ on the data that you import into Amazon Personalize. Depending on how you\
        \ imported the data, you can view reports in Amazon CloudWatch or Amazon S3.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html\"\
        >Measuring impact of recommendations</a>."
      operationId: CreateMetricAttribution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateMetricAttribution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMetricAttributionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMetricAttributionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateRecommender:
    post:
      description: "<p>Creates a recommender with the recipe (a Domain dataset group\
        \ use case) you specify. You create recommenders for a Domain dataset group\
        \ and specify the recommender's Amazon Resource Name (ARN) when you make a\
        \ <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\"\
        >GetRecommendations</a> request. </p> <p> <b>Minimum recommendation requests\
        \ per second</b> </p> <p>When you create a recommender, you can configure\
        \ the recommender's minimum recommendation requests per second. The minimum\
        \ recommendation requests per second (<code>minRecommendationRequestsPerSecond</code>)\
        \ specifies the baseline recommendation request throughput provisioned by\
        \ Amazon Personalize. The default minRecommendationRequestsPerSecond is <code>1</code>.\
        \ A recommendation request is a single <code>GetRecommendations</code> operation.\
        \ Request throughput is measured in requests per second and Amazon Personalize\
        \ uses your requests per second to derive your requests per hour and the price\
        \ of your recommender usage. </p> <p> If your requests per second increases\
        \ beyond <code>minRecommendationRequestsPerSecond</code>, Amazon Personalize\
        \ auto-scales the provisioned capacity up and down, but never below <code>minRecommendationRequestsPerSecond</code>.\
        \ There's a short time delay while the capacity is increased that might cause\
        \ loss of requests.</p> <p> Your bill is the greater of either the minimum\
        \ requests per hour (based on minRecommendationRequestsPerSecond) or the actual\
        \ number of requests. The actual request throughput used is calculated as\
        \ the average requests/second within a one-hour window. We recommend starting\
        \ with the default <code>minRecommendationRequestsPerSecond</code>, track\
        \ your usage using Amazon CloudWatch metrics, and then increase the <code>minRecommendationRequestsPerSecond</code>\
        \ as necessary. </p> <p> <b>Status</b> </p> <p>A recommender can be in one\
        \ of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS\
        \ &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>STOP PENDING &gt; STOP\
        \ IN_PROGRESS &gt; INACTIVE &gt; START PENDING &gt; START IN_PROGRESS &gt;\
        \ ACTIVE</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li>\
        \ </ul> <p>To get the recommender status, call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeRecommender.html\"\
        >DescribeRecommender</a>.</p> <note> <p>Wait until the <code>status</code>\
        \ of the recommender is <code>ACTIVE</code> before asking the recommender\
        \ for recommendations.</p> </note> <p class=\"title\"> <b>Related APIs</b>\
        \ </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListRecommenders.html\"\
        >ListRecommenders</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeRecommender.html\"\
        >DescribeRecommender</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_UpdateRecommender.html\"\
        >UpdateRecommender</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteRecommender.html\"\
        >DeleteRecommender</a> </p> </li> </ul>"
      operationId: CreateRecommender
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateRecommender
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecommenderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecommenderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateSchema:
    post:
      description: "<p>Creates an Amazon Personalize schema from the specified schema\
        \ string. The schema you create must be in Avro JSON format.</p> <p>Amazon\
        \ Personalize recognizes three schema variants. Each schema is associated\
        \ with a dataset type and has a set of required field and keywords. If you\
        \ are creating a schema for a dataset in a Domain dataset group, you provide\
        \ the domain of the Domain dataset group. You specify a schema when you call\
        \ <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a>.</p> <p class=\"title\"> <b>Related APIs</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListSchemas.html\"\
        >ListSchemas</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSchema.html\"\
        >DescribeSchema</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteSchema.html\"\
        >DeleteSchema</a> </p> </li> </ul>"
      operationId: CreateSchema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateSchema
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchemaRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateSolution:
    post:
      description: "<p>Creates the configuration for training a model. A trained model\
        \ is known as a solution. After the configuration is created, you train the\
        \ model (create a solution) by calling the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolutionVersion.html\"\
        >CreateSolutionVersion</a> operation. Every time you call <code>CreateSolutionVersion</code>,\
        \ a new version of the solution is created.</p> <p>After creating a solution\
        \ version, you check its accuracy by calling <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_GetSolutionMetrics.html\"\
        >GetSolutionMetrics</a>. When you are satisfied with the version, you deploy\
        \ it using <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\"\
        >CreateCampaign</a>. The campaign provides recommendations to a client through\
        \ the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\"\
        >GetRecommendations</a> API.</p> <p>To train a model, Amazon Personalize requires\
        \ training data and a recipe. The training data comes from the dataset group\
        \ that you provide in the request. A recipe specifies the training algorithm\
        \ and a feature transformation. You can specify one of the predefined recipes\
        \ provided by Amazon Personalize. Alternatively, you can specify <code>performAutoML</code>\
        \ and Amazon Personalize will analyze your data and select the optimum USER_PERSONALIZATION\
        \ recipe for you.</p> <note> <p>Amazon Personalize doesn't support configuring\
        \ the <code>hpoObjective</code> for solution hyperparameter optimization at\
        \ this time.</p> </note> <p> <b>Status</b> </p> <p>A solution can be in one\
        \ of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS\
        \ &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE\
        \ IN_PROGRESS</p> </li> </ul> <p>To get the status of the solution, call <a\
        \ href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\"\
        >DescribeSolution</a>. Wait until the status shows as ACTIVE before calling\
        \ <code>CreateSolutionVersion</code>.</p> <p class=\"title\"> <b>Related APIs</b>\
        \ </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutions.html\"\
        >ListSolutions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolutionVersion.html\"\
        >CreateSolutionVersion</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\"\
        >DescribeSolution</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteSolution.html\"\
        >DeleteSolution</a> </p> </li> </ul> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutionVersions.html\"\
        >ListSolutionVersions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolutionVersion.html\"\
        >DescribeSolutionVersion</a> </p> </li> </ul>"
      operationId: CreateSolution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateSolution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolutionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSolutionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.CreateSolutionVersion:
    post:
      description: "<p>Trains or retrains an active solution in a Custom dataset group.\
        \ A solution is created using the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a> operation and must be in the ACTIVE state before calling\
        \ <code>CreateSolutionVersion</code>. A new version of the solution is created\
        \ every time you call this operation.</p> <p> <b>Status</b> </p> <p>A solution\
        \ version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING</p>\
        \ </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li>\
        \ <p>CREATE FAILED</p> </li> <li> <p>CREATE STOPPING</p> </li> <li> <p>CREATE\
        \ STOPPED</p> </li> </ul> <p>To get the status of the version, call <a href=\"\
        https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolutionVersion.html\"\
        >DescribeSolutionVersion</a>. Wait until the status shows as ACTIVE before\
        \ calling <code>CreateCampaign</code>.</p> <p>If the status shows as CREATE\
        \ FAILED, the response includes a <code>failureReason</code> key, which describes\
        \ why the job failed.</p> <p class=\"title\"> <b>Related APIs</b> </p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutionVersions.html\"\
        >ListSolutionVersions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolutionVersion.html\"\
        >DescribeSolutionVersion</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutions.html\"\
        >ListSolutions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\"\
        >DescribeSolution</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteSolution.html\"\
        >DeleteSolution</a> </p> </li> </ul>"
      operationId: CreateSolutionVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.CreateSolutionVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolutionVersionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSolutionVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteCampaign:
    post:
      description: "Removes a campaign by deleting the solution deployment. The solution\
        \ that the campaign is based on is not deleted and can be redeployed when\
        \ needed. A deleted campaign can no longer be specified in a <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\"\
        >GetRecommendations</a> request. For information on creating campaigns, see\
        \ <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\"\
        >CreateCampaign</a>."
      operationId: DeleteCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteCampaign
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCampaignRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteDataset:
    post:
      description: "Deletes a dataset. You can't delete a dataset if an associated\
        \ <code>DatasetImportJob</code> or <code>SolutionVersion</code> is in the\
        \ CREATE PENDING or IN PROGRESS state. For more information on datasets, see\
        \ <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a>."
      operationId: DeleteDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteDatasetGroup:
    post:
      description: "<p>Deletes a dataset group. Before you delete a dataset group,\
        \ you must delete the following:</p> <ul> <li> <p>All associated event trackers.</p>\
        \ </li> <li> <p>All associated solutions.</p> </li> <li> <p>All datasets in\
        \ the dataset group.</p> </li> </ul>"
      operationId: DeleteDatasetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteDatasetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetGroupRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteEventTracker:
    post:
      description: "Deletes the event tracker. Does not delete the event-interactions\
        \ dataset from the associated dataset group. For more information on event\
        \ trackers, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html\"\
        >CreateEventTracker</a>."
      operationId: DeleteEventTracker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteEventTracker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEventTrackerRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteFilter:
    post:
      description: Deletes a filter.
      operationId: DeleteFilter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteFilter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFilterRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteMetricAttribution:
    post:
      description: Deletes a metric attribution.
      operationId: DeleteMetricAttribution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteMetricAttribution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMetricAttributionRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteRecommender:
    post:
      description: Deactivates and removes a recommender. A deleted recommender can
        no longer be specified in a <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a>
        request.
      operationId: DeleteRecommender
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteRecommender
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRecommenderRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteSchema:
    post:
      description: "Deletes a schema. Before deleting a schema, you must delete all\
        \ datasets referencing the schema. For more information on schemas, see <a\
        \ href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSchema.html\"\
        >CreateSchema</a>."
      operationId: DeleteSchema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteSchema
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSchemaRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DeleteSolution:
    post:
      description: "Deletes all versions of a solution and the <code>Solution</code>\
        \ object itself. Before deleting a solution, you must delete all campaigns\
        \ based on the solution. To determine what campaigns are using the solution,\
        \ call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListCampaigns.html\"\
        >ListCampaigns</a> and supply the Amazon Resource Name (ARN) of the solution.\
        \ You can't delete a solution if an associated <code>SolutionVersion</code>\
        \ is in the CREATE PENDING or IN PROGRESS state. For more information on solutions,\
        \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a>."
      operationId: DeleteSolution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DeleteSolution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSolutionRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeAlgorithm:
    post:
      description: Describes the given algorithm.
      operationId: DescribeAlgorithm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeAlgorithm
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAlgorithmRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlgorithmResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeBatchInferenceJob:
    post:
      description: "Gets the properties of a batch inference job including name, Amazon\
        \ Resource Name (ARN), status, input and output configurations, and the ARN\
        \ of the solution version used to generate the recommendations."
      operationId: DescribeBatchInferenceJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeBatchInferenceJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBatchInferenceJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBatchInferenceJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeBatchSegmentJob:
    post:
      description: "Gets the properties of a batch segment job including name, Amazon\
        \ Resource Name (ARN), status, input and output configurations, and the ARN\
        \ of the solution version used to generate segments."
      operationId: DescribeBatchSegmentJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeBatchSegmentJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBatchSegmentJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBatchSegmentJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeCampaign:
    post:
      description: "<p>Describes the given campaign, including its status.</p> <p>A\
        \ campaign can be in one of the following states:</p> <ul> <li> <p>CREATE\
        \ PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>\
        \ <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>When the\
        \ <code>status</code> is <code>CREATE FAILED</code>, the response includes\
        \ the <code>failureReason</code> key, which describes why.</p> <p>For more\
        \ information on campaigns, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\"\
        >CreateCampaign</a>.</p>"
      operationId: DescribeCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeCampaign
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCampaignRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeDataset:
    post:
      description: "Describes the given dataset. For more information on datasets,\
        \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a>."
      operationId: DescribeDataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeDatasetExportJob:
    post:
      description: "Describes the dataset export job created by <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetExportJob.html\"\
        >CreateDatasetExportJob</a>, including the export job status."
      operationId: DescribeDatasetExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeDatasetExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeDatasetGroup:
    post:
      description: "Describes the given dataset group. For more information on dataset\
        \ groups, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html\"\
        >CreateDatasetGroup</a>."
      operationId: DescribeDatasetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeDatasetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeDatasetImportJob:
    post:
      description: "Describes the dataset import job created by <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetImportJob.html\"\
        >CreateDatasetImportJob</a>, including the import job status."
      operationId: DescribeDatasetImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeDatasetImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetImportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeEventTracker:
    post:
      description: "Describes an event tracker. The response includes the <code>trackingId</code>\
        \ and <code>status</code> of the event tracker. For more information on event\
        \ trackers, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html\"\
        >CreateEventTracker</a>."
      operationId: DescribeEventTracker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeEventTracker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventTrackerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventTrackerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeFeatureTransformation:
    post:
      description: Describes the given feature transformation.
      operationId: DescribeFeatureTransformation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeFeatureTransformation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFeatureTransformationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFeatureTransformationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeFilter:
    post:
      description: Describes a filter's properties.
      operationId: DescribeFilter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeFilter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFilterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFilterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeMetricAttribution:
    post:
      description: Describes a metric attribution.
      operationId: DescribeMetricAttribution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeMetricAttribution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMetricAttributionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMetricAttributionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeRecipe:
    post:
      description: "<p>Describes a recipe.</p> <p>A recipe contains three items:</p>\
        \ <ul> <li> <p>An algorithm that trains a model.</p> </li> <li> <p>Hyperparameters\
        \ that govern the training.</p> </li> <li> <p>Feature transformation information\
        \ for modifying the input data before training.</p> </li> </ul> <p>Amazon\
        \ Personalize provides a set of predefined recipes. You specify a recipe when\
        \ you create a solution with the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a> API. <code>CreateSolution</code> trains a model by using\
        \ the algorithm in the specified recipe and a training dataset. The solution,\
        \ when deployed as a campaign, can provide recommendations using the <a href=\"\
        https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\"\
        >GetRecommendations</a> API.</p>"
      operationId: DescribeRecipe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeRecipe
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRecipeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecipeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeRecommender:
    post:
      description: "<p>Describes the given recommender, including its status.</p>\
        \ <p>A recommender can be in one of the following states:</p> <ul> <li> <p>CREATE\
        \ PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>\
        \ <li> <p>STOP PENDING &gt; STOP IN_PROGRESS &gt; INACTIVE &gt; START PENDING\
        \ &gt; START IN_PROGRESS &gt; ACTIVE</p> </li> <li> <p>DELETE PENDING &gt;\
        \ DELETE IN_PROGRESS</p> </li> </ul> <p>When the <code>status</code> is <code>CREATE\
        \ FAILED</code>, the response includes the <code>failureReason</code> key,\
        \ which describes why.</p> <p>The <code>modelMetrics</code> key is null when\
        \ the recommender is being created or deleted.</p> <p>For more information\
        \ on recommenders, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateRecommender.html\"\
        >CreateRecommender</a>.</p>"
      operationId: DescribeRecommender
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeRecommender
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRecommenderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecommenderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeSchema:
    post:
      description: "Describes a schema. For more information on schemas, see <a href=\"\
        https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSchema.html\"\
        >CreateSchema</a>."
      operationId: DescribeSchema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeSchema
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSchemaRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeSolution:
    post:
      description: "Describes a solution. For more information on solutions, see <a\
        \ href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a>."
      operationId: DescribeSolution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeSolution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSolutionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSolutionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.DescribeSolutionVersion:
    post:
      description: "Describes a specific version of a solution. For more information\
        \ on solutions, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a> "
      operationId: DescribeSolutionVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.DescribeSolutionVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSolutionVersionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSolutionVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.GetSolutionMetrics:
    post:
      description: Gets the metrics for the specified solution version.
      operationId: GetSolutionMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.GetSolutionMetrics
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSolutionMetricsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSolutionMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListBatchInferenceJobs:
    post:
      description: Gets a list of the batch inference jobs that have been performed
        off of a solution version.
      operationId: ListBatchInferenceJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListBatchInferenceJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBatchInferenceJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchInferenceJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListBatchSegmentJobs:
    post:
      description: Gets a list of the batch segment jobs that have been performed
        off of a solution version that you specify.
      operationId: ListBatchSegmentJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListBatchSegmentJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBatchSegmentJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchSegmentJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListCampaigns:
    post:
      description: "Returns a list of campaigns that use the given solution. When\
        \ a solution is not specified, all the campaigns associated with the account\
        \ are listed. The response provides the properties for each campaign, including\
        \ the Amazon Resource Name (ARN). For more information on campaigns, see <a\
        \ href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\"\
        >CreateCampaign</a>."
      operationId: ListCampaigns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListCampaigns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCampaignsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCampaignsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListDatasetExportJobs:
    post:
      description: "Returns a list of dataset export jobs that use the given dataset.\
        \ When a dataset is not specified, all the dataset export jobs associated\
        \ with the account are listed. The response provides the properties for each\
        \ dataset export job, including the Amazon Resource Name (ARN). For more information\
        \ on dataset export jobs, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetExportJob.html\"\
        >CreateDatasetExportJob</a>. For more information on datasets, see <a href=\"\
        https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a>."
      operationId: ListDatasetExportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListDatasetExportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetExportJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetExportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListDatasetGroups:
    post:
      description: "Returns a list of dataset groups. The response provides the properties\
        \ for each dataset group, including the Amazon Resource Name (ARN). For more\
        \ information on dataset groups, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html\"\
        >CreateDatasetGroup</a>."
      operationId: ListDatasetGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListDatasetGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetGroupsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListDatasetImportJobs:
    post:
      description: "Returns a list of dataset import jobs that use the given dataset.\
        \ When a dataset is not specified, all the dataset import jobs associated\
        \ with the account are listed. The response provides the properties for each\
        \ dataset import job, including the Amazon Resource Name (ARN). For more information\
        \ on dataset import jobs, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetImportJob.html\"\
        >CreateDatasetImportJob</a>. For more information on datasets, see <a href=\"\
        https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a>."
      operationId: ListDatasetImportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListDatasetImportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetImportJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListDatasets:
    post:
      description: "Returns the list of datasets contained in the given dataset group.\
        \ The response provides the properties for each dataset, including the Amazon\
        \ Resource Name (ARN). For more information on datasets, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a>."
      operationId: ListDatasets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListDatasets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListEventTrackers:
    post:
      description: "Returns the list of event trackers associated with the account.\
        \ The response provides the properties for each event tracker, including the\
        \ Amazon Resource Name (ARN) and tracking ID. For more information on event\
        \ trackers, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html\"\
        >CreateEventTracker</a>."
      operationId: ListEventTrackers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListEventTrackers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEventTrackersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventTrackersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListFilters:
    post:
      description: Lists all filters that belong to a given dataset group.
      operationId: ListFilters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListFilters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFiltersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFiltersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListMetricAttributionMetrics:
    post:
      description: Lists the metrics for the metric attribution.
      operationId: ListMetricAttributionMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListMetricAttributionMetrics
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMetricAttributionMetricsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMetricAttributionMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListMetricAttributions:
    post:
      description: Lists metric attributions.
      operationId: ListMetricAttributions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListMetricAttributions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMetricAttributionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMetricAttributionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListRecipes:
    post:
      description: "Returns a list of available recipes. The response provides the\
        \ properties for each recipe, including the recipe's Amazon Resource Name\
        \ (ARN)."
      operationId: ListRecipes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListRecipes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRecipesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecipesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListRecommenders:
    post:
      description: "Returns a list of recommenders in a given Domain dataset group.\
        \ When a Domain dataset group is not specified, all the recommenders associated\
        \ with the account are listed. The response provides the properties for each\
        \ recommender, including the Amazon Resource Name (ARN). For more information\
        \ on recommenders, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateRecommender.html\"\
        >CreateRecommender</a>."
      operationId: ListRecommenders
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListRecommenders
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRecommendersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecommendersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListSchemas:
    post:
      description: "Returns the list of schemas associated with the account. The response\
        \ provides the properties for each schema, including the Amazon Resource Name\
        \ (ARN). For more information on schemas, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSchema.html\"\
        >CreateSchema</a>."
      operationId: ListSchemas
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListSchemas
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSchemasRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemasResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListSolutionVersions:
    post:
      description: "Returns a list of solution versions for the given solution. When\
        \ a solution is not specified, all the solution versions associated with the\
        \ account are listed. The response provides the properties for each solution\
        \ version, including the Amazon Resource Name (ARN)."
      operationId: ListSolutionVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListSolutionVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSolutionVersionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolutionVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListSolutions:
    post:
      description: "Returns a list of solutions that use the given dataset group.\
        \ When a dataset group is not specified, all the solutions associated with\
        \ the account are listed. The response provides the properties for each solution,\
        \ including the Amazon Resource Name (ARN). For more information on solutions,\
        \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a>."
      operationId: ListSolutions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListSolutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSolutionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSolutionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.ListTagsForResource:
    post:
      description: Get a list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
        attached to a resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.StartRecommender:
    post:
      description: "Starts a recommender that is INACTIVE. Starting a recommender\
        \ does not create any new models, but resumes billing and automatic retraining\
        \ for the recommender."
      operationId: StartRecommender
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.StartRecommender
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRecommenderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRecommenderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.StopRecommender:
    post:
      description: Stops a recommender that is ACTIVE. Stopping a recommender halts
        billing and automatic retraining for the recommender.
      operationId: StopRecommender
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.StopRecommender
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRecommenderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRecommenderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.StopSolutionVersionCreation:
    post:
      description: "<p>Stops creating a solution version that is in a state of CREATE_PENDING\
        \ or CREATE IN_PROGRESS. </p> <p>Depending on the current state of the solution\
        \ version, the solution version state changes as follows:</p> <ul> <li> <p>CREATE_PENDING\
        \ &gt; CREATE_STOPPED</p> <p>or</p> </li> <li> <p>CREATE_IN_PROGRESS &gt;\
        \ CREATE_STOPPING &gt; CREATE_STOPPED</p> </li> </ul> <p>You are billed for\
        \ all of the training completed up until you stop the solution version creation.\
        \ You cannot resume creating a solution version once it has been stopped.</p>"
      operationId: StopSolutionVersionCreation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.StopSolutionVersionCreation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopSolutionVersionCreationRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.TagResource:
    post:
      description: Add a list of tags to a resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.UntagResource:
    post:
      description: Remove <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
        that are attached to a resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagKeysException'
          description: TooManyTagKeysException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.UpdateCampaign:
    post:
      description: "<p>Updates a campaign by either deploying a new solution or changing\
        \ the value of the campaign's <code>minProvisionedTPS</code> parameter.</p>\
        \ <p>To update a campaign, the campaign status must be ACTIVE or CREATE FAILED.\
        \ Check the campaign status using the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html\"\
        >DescribeCampaign</a> operation.</p> <note> <p>You can still get recommendations\
        \ from a campaign while an update is in progress. The campaign will use the\
        \ previous solution version and campaign configuration to generate recommendations\
        \ until the latest campaign update status is <code>Active</code>. </p> </note>\
        \ <p>For more information on campaigns, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\"\
        >CreateCampaign</a>.</p>"
      operationId: UpdateCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.UpdateCampaign
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.UpdateMetricAttribution:
    post:
      description: Updates a metric attribution.
      operationId: UpdateMetricAttribution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.UpdateMetricAttribution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMetricAttributionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMetricAttributionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AmazonPersonalize.UpdateRecommender:
    post:
      description: Updates the recommender to modify the recommender configuration.
      operationId: UpdateRecommender
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonPersonalize.UpdateRecommender
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecommenderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecommenderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateBatchInferenceJobResponse:
      example:
        batchInferenceJobArn: ""
      properties:
        batchInferenceJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the batch inference job.
      type: object
    CreateBatchInferenceJobRequest:
      example:
        jobName: ""
        batchInferenceJobConfig:
          itemExplorationConfig: ""
        filterArn: ""
        roleArn: ""
        numResults: ""
        solutionVersionArn: ""
        jobInput:
          s3DataSource:
            path: ""
            kmsKeyArn: ""
        jobOutput:
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        tags: ""
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the batch inference job to create.
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version that
              will be used to generate the batch inference recommendations.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the filter to apply to the batch inference job.\
              \ For more information on using filters, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter-batch.html\"\
              >Filtering batch recommendations</a>."
        numResults:
          allOf:
          - $ref: '#/components/schemas/NumBatchResults'
          - description: The number of recommendations to retrieve.
        jobInput:
          $ref: '#/components/schemas/CreateBatchInferenceJobRequest_jobInput'
        jobOutput:
          $ref: '#/components/schemas/CreateBatchInferenceJobRequest_jobOutput'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the Amazon Identity and Access Management role
              that has permissions to read and write to your input and output Amazon
              S3 buckets respectively.
        batchInferenceJobConfig:
          $ref: '#/components/schemas/CreateBatchInferenceJobRequest_batchInferenceJobConfig'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the batch inference job.
      required:
      - jobInput
      - jobName
      - jobOutput
      - roleArn
      - solutionVersionArn
      title: CreateBatchInferenceJobRequest
      type: object
    InvalidInputException: {}
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    ResourceNotFoundException: {}
    ResourceInUseException: {}
    TooManyTagsException: {}
    CreateBatchSegmentJobResponse:
      example:
        batchSegmentJobArn: ""
      properties:
        batchSegmentJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the batch segment job.
      type: object
    CreateBatchSegmentJobRequest:
      example:
        jobName: ""
        filterArn: ""
        roleArn: ""
        numResults: ""
        solutionVersionArn: ""
        jobInput:
          s3DataSource:
            path: ""
            kmsKeyArn: ""
        jobOutput:
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        tags: ""
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the batch segment job to create.
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version you
              want the batch segment job to use to generate batch segments.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the filter to apply to the batch segment job.\
              \ For more information on using filters, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter-batch.html\"\
              >Filtering batch recommendations</a>."
        numResults:
          allOf:
          - $ref: '#/components/schemas/NumBatchResults'
          - description: The number of predicted users generated by the batch segment
              job for each line of input data.
        jobInput:
          $ref: '#/components/schemas/CreateBatchSegmentJobRequest_jobInput'
        jobOutput:
          $ref: '#/components/schemas/CreateBatchSegmentJobRequest_jobOutput'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the Amazon Identity and Access Management role
              that has permissions to read and write to your input and output Amazon
              S3 buckets respectively.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the batch segment job.
      required:
      - jobInput
      - jobName
      - jobOutput
      - roleArn
      - solutionVersionArn
      title: CreateBatchSegmentJobRequest
      type: object
    CreateCampaignResponse:
      example:
        campaignArn: ""
      properties:
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the campaign.
      type: object
    CreateCampaignRequest:
      example:
        minProvisionedTPS: ""
        name: ""
        solutionVersionArn: ""
        campaignConfig:
          itemExplorationConfig: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the new campaign. The campaign name must be unique
              within your account.
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version to
              deploy.
        minProvisionedTPS:
          allOf:
          - $ref: '#/components/schemas/TransactionsPerSecond'
          - description: Specifies the requested minimum provisioned transactions
              (recommendations) per second that Amazon Personalize will support.
        campaignConfig:
          $ref: '#/components/schemas/CreateCampaignRequest_campaignConfig'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the campaign.
      required:
      - name
      - solutionVersionArn
      title: CreateCampaignRequest
      type: object
    CreateDatasetResponse:
      example:
        datasetArn: ""
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset.
      type: object
    CreateDatasetRequest:
      example:
        name: ""
        datasetGroupArn: ""
        schemaArn: ""
        datasetType: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the dataset.
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the schema to associate with the dataset. The
              schema defines the dataset fields.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group to add
              the dataset to.
        datasetType:
          allOf:
          - $ref: '#/components/schemas/DatasetType'
          - description: <p>The type of dataset.</p> <p>One of the following (case
              insensitive) values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p>
              </li> <li> <p>Users</p> </li> </ul>
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the dataset.
      required:
      - datasetGroupArn
      - datasetType
      - name
      - schemaArn
      title: CreateDatasetRequest
      type: object
    CreateDatasetExportJobResponse:
      example:
        datasetExportJobArn: ""
      properties:
        datasetExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset export job.
      type: object
    CreateDatasetExportJobRequest:
      example:
        jobName: ""
        datasetArn: ""
        ingestionMode: ""
        roleArn: ""
        jobOutput:
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        tags: ""
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the dataset export job.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset that contains
              the data to export.
        ingestionMode:
          allOf:
          - $ref: '#/components/schemas/IngestionMode'
          - description: "The data to export, based on how you imported the data.\
              \ You can choose to export only <code>BULK</code> data that you imported\
              \ using a dataset import job, only <code>PUT</code> data that you imported\
              \ incrementally (using the console, PutEvents, PutUsers and PutItems\
              \ operations), or <code>ALL</code> for both types. The default value\
              \ is <code>PUT</code>. "
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM service role that
              has permissions to add data to your output Amazon S3 bucket.
        jobOutput:
          $ref: '#/components/schemas/CreateDatasetExportJobRequest_jobOutput'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the dataset export job.
      required:
      - datasetArn
      - jobName
      - jobOutput
      - roleArn
      title: CreateDatasetExportJobRequest
      type: object
    CreateDatasetGroupResponse:
      example:
        domain: ""
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the new dataset group.
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain for the new Domain dataset group.
      type: object
    CreateDatasetGroupRequest:
      example:
        roleArn: ""
        kmsKeyArn: ""
        domain: ""
        name: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the new dataset group.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the Identity and Access Management (IAM) role
              that has permissions to access the Key Management Service (KMS) key.
              Supplying an IAM role is only valid when also specifying a KMS key.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of a Key Management Service
              (KMS) key used to encrypt the datasets.
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: "The domain of the dataset group. Specify a domain to create\
              \ a Domain dataset group. The domain you specify determines the default\
              \ schemas for datasets and the use cases available for recommenders.\
              \ If you don't specify a domain, you create a Custom dataset group with\
              \ solution versions that you deploy with a campaign. "
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the dataset group.
      required:
      - name
      title: CreateDatasetGroupRequest
      type: object
    CreateDatasetImportJobResponse:
      example:
        datasetImportJobArn: ""
      properties:
        datasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset import job.
      type: object
    CreateDatasetImportJobRequest:
      example:
        jobName: ""
        datasetArn: ""
        importMode: ""
        publishAttributionMetricsToS3: ""
        roleArn: ""
        dataSource:
          dataLocation: ""
        tags: ""
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the dataset import job.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset that receives the imported data.
        dataSource:
          $ref: '#/components/schemas/CreateDatasetImportJobRequest_dataSource'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the IAM role that has permissions to read from
              the Amazon S3 data source.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the dataset import job.
        importMode:
          allOf:
          - $ref: '#/components/schemas/ImportMode'
          - description: "<p>Specify how to add the new records to an existing dataset.\
              \ The default import mode is <code>FULL</code>. If you haven't imported\
              \ bulk records into the dataset previously, you can only specify <code>FULL</code>.</p>\
              \ <ul> <li> <p>Specify <code>FULL</code> to overwrite all existing bulk\
              \ data in your dataset. Data you imported individually is not replaced.</p>\
              \ </li> <li> <p>Specify <code>INCREMENTAL</code> to append the new records\
              \ to the existing data in your dataset. Amazon Personalize replaces\
              \ any record with the same ID with the new one.</p> </li> </ul>"
        publishAttributionMetricsToS3:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If you created a metric attribution, specify whether to\
              \ publish metrics for this import job to Amazon S3"
      required:
      - dataSource
      - datasetArn
      - jobName
      - roleArn
      title: CreateDatasetImportJobRequest
      type: object
    CreateEventTrackerResponse:
      example:
        eventTrackerArn: ""
        trackingId: ""
      properties:
        eventTrackerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the event tracker.
        trackingId:
          allOf:
          - $ref: '#/components/schemas/TrackingId'
          - description: The ID of the event tracker. Include this ID in requests
              to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a>
              API.
      type: object
    CreateEventTrackerRequest:
      example:
        name: ""
        datasetGroupArn: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the event tracker.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group that
              receives the event data.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the event tracker.
      required:
      - datasetGroupArn
      - name
      title: CreateEventTrackerRequest
      type: object
    CreateFilterResponse:
      example:
        filterArn: ""
      properties:
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the new filter.
      type: object
    CreateFilterRequest:
      example:
        name: ""
        datasetGroupArn: ""
        filterExpression: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the filter to create.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group that the filter will belong
              to.
        filterExpression:
          allOf:
          - $ref: '#/components/schemas/FilterExpression'
          - description: "The filter expression defines which items are included or\
              \ excluded from recommendations. Filter expression must follow specific\
              \ format rules. For information about filter expression structure and\
              \ syntax, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter-expressions.html\"\
              >Filter expressions</a>."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the filter.
      required:
      - datasetGroupArn
      - filterExpression
      - name
      title: CreateFilterRequest
      type: object
    CreateMetricAttributionResponse:
      example:
        metricAttributionArn: ""
      properties:
        metricAttributionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the new metric attribution.
      type: object
    CreateMetricAttributionRequest:
      example:
        metricsOutputConfig:
          roleArn: ""
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        name: ""
        datasetGroupArn: ""
        metrics: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the metric attribution.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the destination dataset
              group for the metric attribution.
        metrics:
          allOf:
          - $ref: '#/components/schemas/MetricAttributes'
          - description: "A list of metric attributes for the metric attribution.\
              \ Each metric attribute specifies an event type to track and a function.\
              \ Available functions are <code>SUM()</code> or <code>SAMPLECOUNT()</code>.\
              \ For SUM() functions, provide the dataset type (either Interactions\
              \ or Items) and column to sum as a parameter. For example SUM(Items.PRICE)."
        metricsOutputConfig:
          $ref: '#/components/schemas/CreateMetricAttributionRequest_metricsOutputConfig'
      required:
      - datasetGroupArn
      - metrics
      - metricsOutputConfig
      - name
      title: CreateMetricAttributionRequest
      type: object
    CreateRecommenderResponse:
      example:
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender.
      type: object
    CreateRecommenderRequest:
      example:
        recipeArn: ""
        recommenderConfig:
          itemExplorationConfig: ""
          minRecommendationRequestsPerSecond: ""
        name: ""
        datasetGroupArn: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the recommender.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the destination domain
              dataset group for the recommender.
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the recipe that the recommender\
              \ will use. For a recommender, a recipe is a Domain dataset group use\
              \ case. Only Domain dataset group use cases can be used to create a\
              \ recommender. For information about use cases see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/domain-use-cases.html\"\
              >Choosing recommender use cases</a>. "
        recommenderConfig:
          $ref: '#/components/schemas/CreateRecommenderRequest_recommenderConfig'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the recommender.
      required:
      - datasetGroupArn
      - name
      - recipeArn
      title: CreateRecommenderRequest
      type: object
    CreateSchemaResponse:
      example:
        schemaArn: ""
      properties:
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the created schema.
      type: object
    CreateSchemaRequest:
      example:
        schema: ""
        domain: ""
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the schema.
        schema:
          allOf:
          - $ref: '#/components/schemas/AvroSchema'
          - description: A schema in Avro JSON format.
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: "The domain for the schema. If you are creating a schema\
              \ for a dataset in a Domain dataset group, specify the domain you chose\
              \ when you created the Domain dataset group."
      required:
      - name
      - schema
      title: CreateSchemaRequest
      type: object
    CreateSolutionResponse:
      example:
        solutionArn: ""
      properties:
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the solution.
      type: object
    CreateSolutionRequest:
      example:
        performAutoML: ""
        recipeArn: ""
        performHPO: ""
        name: ""
        datasetGroupArn: ""
        eventType: ""
        solutionConfig:
          featureTransformationParameters: ""
          hpoConfig:
            hpoResourceConfig:
              maxParallelTrainingJobs: ""
              maxNumberOfTrainingJobs: ""
            hpoObjective:
              metricName: ""
              metricRegex: ""
              type: ""
            algorithmHyperParameterRanges:
              integerHyperParameterRanges: ""
              continuousHyperParameterRanges: ""
              categoricalHyperParameterRanges: ""
          autoMLConfig:
            metricName: ""
            recipeList: ""
          algorithmHyperParameters: ""
          optimizationObjective:
            objectiveSensitivity: ""
            itemAttribute: ""
          eventValueThreshold: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the solution.
        performHPO:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Whether to perform hyperparameter optimization (HPO)\
              \ on the specified or selected recipe. The default is <code>false</code>.</p>\
              \ <p>When performing AutoML, this parameter is always <code>true</code>\
              \ and you should not set it to <code>false</code>.</p>"
        performAutoML:
          allOf:
          - $ref: '#/components/schemas/PerformAutoML'
          - description: "<p>Whether to perform automated machine learning (AutoML).\
              \ The default is <code>false</code>. For this case, you must specify\
              \ <code>recipeArn</code>.</p> <p>When set to <code>true</code>, Amazon\
              \ Personalize analyzes your training data and selects the optimal USER_PERSONALIZATION\
              \ recipe and hyperparameters. In this case, you must omit <code>recipeArn</code>.\
              \ Amazon Personalize determines the optimal recipe by running tests\
              \ with different values for the hyperparameters. AutoML lengthens the\
              \ training process as compared to selecting a specific recipe.</p>"
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the recipe to use for model training. Only specified
              when <code>performAutoML</code> is false.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group that
              provides the training data.
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: "<p>When your have multiple event types (using an <code>EVENT_TYPE</code>\
              \ schema field), this parameter specifies which event type (for example,\
              \ 'click' or 'like') is used for training the model.</p> <p>If you do\
              \ not provide an <code>eventType</code>, Amazon Personalize will use\
              \ all interactions for training with equal weight regardless of type.</p>"
        solutionConfig:
          $ref: '#/components/schemas/CreateSolutionRequest_solutionConfig'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the solution.
      required:
      - datasetGroupArn
      - name
      title: CreateSolutionRequest
      type: object
    CreateSolutionVersionResponse:
      example:
        solutionVersionArn: ""
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the new solution version.
      type: object
    CreateSolutionVersionRequest:
      example:
        name: ""
        trainingMode: ""
        solutionArn: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the solution version.
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution containing
              the training configuration information.
        trainingMode:
          allOf:
          - $ref: '#/components/schemas/TrainingMode'
          - description: "<p>The scope of training to be performed when creating the\
              \ solution version. The <code>FULL</code> option trains the solution\
              \ version based on the entirety of the input solution's training data,\
              \ while the <code>UPDATE</code> option processes only the data that\
              \ has changed in comparison to the input solution. Choose <code>UPDATE</code>\
              \ when you want to incrementally update your solution version instead\
              \ of creating an entirely new one.</p> <important> <p>The <code>UPDATE</code>\
              \ option can only be used when you already have an active solution version\
              \ created from the input solution using the <code>FULL</code> option\
              \ and the input solution was trained with the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html\"\
              >User-Personalization</a> recipe or the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-hrnn-coldstart.html\"\
              >HRNN-Coldstart</a> recipe.</p> </important>"
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of <a href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">tags</a>
              to apply to the solution version.
      required:
      - solutionArn
      title: CreateSolutionVersionRequest
      type: object
    DeleteCampaignRequest:
      example:
        campaignArn: ""
      properties:
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the campaign to delete.
      required:
      - campaignArn
      title: DeleteCampaignRequest
      type: object
    DeleteDatasetRequest:
      example:
        datasetArn: ""
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset to delete.
      required:
      - datasetArn
      title: DeleteDatasetRequest
      type: object
    DeleteDatasetGroupRequest:
      example:
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group to delete.
      required:
      - datasetGroupArn
      title: DeleteDatasetGroupRequest
      type: object
    DeleteEventTrackerRequest:
      example:
        eventTrackerArn: ""
      properties:
        eventTrackerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the event tracker to delete.
      required:
      - eventTrackerArn
      title: DeleteEventTrackerRequest
      type: object
    DeleteFilterRequest:
      example:
        filterArn: ""
      properties:
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the filter to delete.
      required:
      - filterArn
      title: DeleteFilterRequest
      type: object
    DeleteMetricAttributionRequest:
      example:
        metricAttributionArn: ""
      properties:
        metricAttributionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The metric attribution's Amazon Resource Name (ARN).
      required:
      - metricAttributionArn
      title: DeleteMetricAttributionRequest
      type: object
    DeleteRecommenderRequest:
      example:
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender to delete.
      required:
      - recommenderArn
      title: DeleteRecommenderRequest
      type: object
    DeleteSchemaRequest:
      example:
        schemaArn: ""
      properties:
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the schema to delete.
      required:
      - schemaArn
      title: DeleteSchemaRequest
      type: object
    DeleteSolutionRequest:
      example:
        solutionArn: ""
      properties:
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the solution to delete.
      required:
      - solutionArn
      title: DeleteSolutionRequest
      type: object
    DescribeAlgorithmResponse:
      example:
        algorithm:
          trainingInputMode: ""
          defaultHyperParameterRanges:
            integerHyperParameterRanges: ""
            continuousHyperParameterRanges: ""
            categoricalHyperParameterRanges: ""
          defaultHyperParameters: ""
          roleArn: ""
          defaultResourceConfig: ""
          name: ""
          algorithmArn: ""
          lastUpdatedDateTime: ""
          algorithmImage:
            name: ""
            dockerURI: ""
          creationDateTime: ""
      properties:
        algorithm:
          $ref: '#/components/schemas/DescribeAlgorithmResponse_algorithm'
      type: object
    DescribeAlgorithmRequest:
      example:
        algorithmArn: ""
      properties:
        algorithmArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the algorithm to describe.
      required:
      - algorithmArn
      title: DescribeAlgorithmRequest
      type: object
    DescribeBatchInferenceJobResponse:
      example:
        batchInferenceJob:
          jobName: ""
          numResults: ""
          jobInput:
            s3DataSource:
              path: ""
              kmsKeyArn: ""
          jobOutput:
            s3DataDestination:
              path: ""
              kmsKeyArn: ""
          batchInferenceJobConfig:
            itemExplorationConfig: ""
          batchInferenceJobArn: ""
          filterArn: ""
          roleArn: ""
          failureReason: ""
          lastUpdatedDateTime: ""
          solutionVersionArn: ""
          status: ""
          creationDateTime: ""
      properties:
        batchInferenceJob:
          $ref: '#/components/schemas/DescribeBatchInferenceJobResponse_batchInferenceJob'
      type: object
    DescribeBatchInferenceJobRequest:
      example:
        batchInferenceJobArn: ""
      properties:
        batchInferenceJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the batch inference job to describe.
      required:
      - batchInferenceJobArn
      title: DescribeBatchInferenceJobRequest
      type: object
    DescribeBatchSegmentJobResponse:
      example:
        batchSegmentJob:
          jobName: ""
          filterArn: ""
          roleArn: ""
          failureReason: ""
          batchSegmentJobArn: ""
          numResults: ""
          lastUpdatedDateTime: ""
          solutionVersionArn: ""
          jobInput:
            s3DataSource:
              path: ""
              kmsKeyArn: ""
          jobOutput:
            s3DataDestination:
              path: ""
              kmsKeyArn: ""
          status: ""
          creationDateTime: ""
      properties:
        batchSegmentJob:
          $ref: '#/components/schemas/DescribeBatchSegmentJobResponse_batchSegmentJob'
      type: object
    DescribeBatchSegmentJobRequest:
      example:
        batchSegmentJobArn: ""
      properties:
        batchSegmentJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the batch segment job to describe.
      required:
      - batchSegmentJobArn
      title: DescribeBatchSegmentJobRequest
      type: object
    DescribeCampaignResponse:
      example:
        campaign:
          minProvisionedTPS: ""
          failureReason: ""
          name: ""
          lastUpdatedDateTime: ""
          latestCampaignUpdate:
            minProvisionedTPS: ""
            failureReason: ""
            lastUpdatedDateTime: ""
            solutionVersionArn: ""
            campaignConfig:
              itemExplorationConfig: ""
            status: ""
            creationDateTime: ""
          solutionVersionArn: ""
          campaignArn: ""
          campaignConfig:
            itemExplorationConfig: ""
          status: ""
          creationDateTime: ""
      properties:
        campaign:
          $ref: '#/components/schemas/DescribeCampaignResponse_campaign'
      type: object
    DescribeCampaignRequest:
      example:
        campaignArn: ""
      properties:
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the campaign.
      required:
      - campaignArn
      title: DescribeCampaignRequest
      type: object
    DescribeDatasetResponse:
      example:
        dataset:
          datasetArn: ""
          name: ""
          datasetGroupArn: ""
          lastUpdatedDateTime: ""
          datasetType: ""
          schemaArn: ""
          status: ""
          creationDateTime: ""
      properties:
        dataset:
          $ref: '#/components/schemas/DescribeDatasetResponse_dataset'
      type: object
    DescribeDatasetRequest:
      example:
        datasetArn: ""
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset to describe.
      required:
      - datasetArn
      title: DescribeDatasetRequest
      type: object
    DescribeDatasetExportJobResponse:
      example:
        datasetExportJob:
          jobName: ""
          datasetArn: ""
          datasetExportJobArn: ""
          ingestionMode: ""
          roleArn: ""
          failureReason: ""
          lastUpdatedDateTime: ""
          status: ""
          jobOutput:
            s3DataDestination:
              path: ""
              kmsKeyArn: ""
          creationDateTime: ""
      properties:
        datasetExportJob:
          $ref: '#/components/schemas/DescribeDatasetExportJobResponse_datasetExportJob'
      type: object
    DescribeDatasetExportJobRequest:
      example:
        datasetExportJobArn: ""
      properties:
        datasetExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset export job
              to describe.
      required:
      - datasetExportJobArn
      title: DescribeDatasetExportJobRequest
      type: object
    DescribeDatasetGroupResponse:
      example:
        datasetGroup:
          roleArn: ""
          kmsKeyArn: ""
          failureReason: ""
          domain: ""
          name: ""
          datasetGroupArn: ""
          lastUpdatedDateTime: ""
          status: ""
          creationDateTime: ""
      properties:
        datasetGroup:
          $ref: '#/components/schemas/DescribeDatasetGroupResponse_datasetGroup'
      type: object
    DescribeDatasetGroupRequest:
      example:
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group to describe.
      required:
      - datasetGroupArn
      title: DescribeDatasetGroupRequest
      type: object
    DescribeDatasetImportJobResponse:
      example:
        datasetImportJob:
          jobName: ""
          datasetArn: ""
          importMode: ""
          publishAttributionMetricsToS3: ""
          roleArn: ""
          failureReason: ""
          lastUpdatedDateTime: ""
          datasetImportJobArn: ""
          dataSource:
            dataLocation: ""
          status: ""
          creationDateTime: ""
      properties:
        datasetImportJob:
          $ref: '#/components/schemas/DescribeDatasetImportJobResponse_datasetImportJob'
      type: object
    DescribeDatasetImportJobRequest:
      example:
        datasetImportJobArn: ""
      properties:
        datasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset import job
              to describe.
      required:
      - datasetImportJobArn
      title: DescribeDatasetImportJobRequest
      type: object
    DescribeEventTrackerResponse:
      example:
        eventTracker:
          accountId: ""
          eventTrackerArn: ""
          name: ""
          datasetGroupArn: ""
          lastUpdatedDateTime: ""
          trackingId: ""
          status: ""
          creationDateTime: ""
      properties:
        eventTracker:
          $ref: '#/components/schemas/DescribeEventTrackerResponse_eventTracker'
      type: object
    DescribeEventTrackerRequest:
      example:
        eventTrackerArn: ""
      properties:
        eventTrackerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the event tracker to describe.
      required:
      - eventTrackerArn
      title: DescribeEventTrackerRequest
      type: object
    DescribeFeatureTransformationResponse:
      example:
        featureTransformation:
          defaultParameters: ""
          name: ""
          featureTransformationArn: ""
          lastUpdatedDateTime: ""
          creationDateTime: ""
          status: ""
      properties:
        featureTransformation:
          $ref: '#/components/schemas/DescribeFeatureTransformationResponse_featureTransformation'
      type: object
    DescribeFeatureTransformationRequest:
      example:
        featureTransformationArn: ""
      properties:
        featureTransformationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the feature transformation
              to describe.
      required:
      - featureTransformationArn
      title: DescribeFeatureTransformationRequest
      type: object
    DescribeFilterResponse:
      example:
        filter:
          filterArn: ""
          failureReason: ""
          name: ""
          datasetGroupArn: ""
          filterExpression: ""
          lastUpdatedDateTime: ""
          creationDateTime: ""
          status: ""
      properties:
        filter:
          $ref: '#/components/schemas/DescribeFilterResponse_filter'
      type: object
    DescribeFilterRequest:
      example:
        filterArn: ""
      properties:
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the filter to describe.
      required:
      - filterArn
      title: DescribeFilterRequest
      type: object
    DescribeMetricAttributionResponse:
      example:
        metricAttribution:
          metricAttributionArn: ""
          metricsOutputConfig:
            roleArn: ""
            s3DataDestination:
              path: ""
              kmsKeyArn: ""
          failureReason: ""
          name: ""
          datasetGroupArn: ""
          lastUpdatedDateTime: ""
          status: ""
          creationDateTime: ""
      properties:
        metricAttribution:
          $ref: '#/components/schemas/DescribeMetricAttributionResponse_metricAttribution'
      type: object
    DescribeMetricAttributionRequest:
      example:
        metricAttributionArn: ""
      properties:
        metricAttributionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The metric attribution's Amazon Resource Name (ARN).
      required:
      - metricAttributionArn
      title: DescribeMetricAttributionRequest
      type: object
    DescribeRecipeResponse:
      example:
        recipe:
          recipeArn: ""
          recipeType: ""
          name: ""
          algorithmArn: ""
          featureTransformationArn: ""
          description: ""
          lastUpdatedDateTime: ""
          status: ""
          creationDateTime: ""
      properties:
        recipe:
          $ref: '#/components/schemas/DescribeRecipeResponse_recipe'
      type: object
    DescribeRecipeRequest:
      example:
        recipeArn: ""
      properties:
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recipe to describe.
      required:
      - recipeArn
      title: DescribeRecipeRequest
      type: object
    DescribeRecommenderResponse:
      example:
        recommender:
          recipeArn: ""
          recommenderConfig:
            itemExplorationConfig: ""
            minRecommendationRequestsPerSecond: ""
          recommenderArn: ""
          failureReason: ""
          modelMetrics: ""
          datasetGroupArn: ""
          name: ""
          latestRecommenderUpdate:
            recommenderConfig:
              itemExplorationConfig: ""
              minRecommendationRequestsPerSecond: ""
            failureReason: ""
            lastUpdatedDateTime: ""
            creationDateTime: ""
            status: ""
          lastUpdatedDateTime: ""
          creationDateTime: ""
          status: ""
      properties:
        recommender:
          $ref: '#/components/schemas/DescribeRecommenderResponse_recommender'
      type: object
    DescribeRecommenderRequest:
      example:
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender to describe.
      required:
      - recommenderArn
      title: DescribeRecommenderRequest
      type: object
    DescribeSchemaResponse:
      example:
        schema:
          schema: ""
          domain: ""
          name: ""
          lastUpdatedDateTime: ""
          schemaArn: ""
          creationDateTime: ""
      properties:
        schema:
          $ref: '#/components/schemas/DescribeSchemaResponse_schema'
      type: object
    DescribeSchemaRequest:
      example:
        schemaArn: ""
      properties:
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the schema to retrieve.
      required:
      - schemaArn
      title: DescribeSchemaRequest
      type: object
    DescribeSolutionResponse:
      example:
        solution:
          performAutoML: ""
          performHPO: ""
          autoMLResult:
            bestRecipeArn: ""
          eventType: ""
          solutionConfig:
            featureTransformationParameters: ""
            hpoConfig:
              hpoResourceConfig:
                maxParallelTrainingJobs: ""
                maxNumberOfTrainingJobs: ""
              hpoObjective:
                metricName: ""
                metricRegex: ""
                type: ""
              algorithmHyperParameterRanges:
                integerHyperParameterRanges: ""
                continuousHyperParameterRanges: ""
                categoricalHyperParameterRanges: ""
            autoMLConfig:
              metricName: ""
              recipeList: ""
            algorithmHyperParameters: ""
            optimizationObjective:
              objectiveSensitivity: ""
              itemAttribute: ""
            eventValueThreshold: ""
          solutionArn: ""
          recipeArn: ""
          name: ""
          datasetGroupArn: ""
          lastUpdatedDateTime: ""
          latestSolutionVersion:
            failureReason: ""
            lastUpdatedDateTime: ""
            solutionVersionArn: ""
            status: ""
            creationDateTime: ""
          status: ""
          creationDateTime: ""
      properties:
        solution:
          $ref: '#/components/schemas/DescribeSolutionResponse_solution'
      type: object
    DescribeSolutionRequest:
      example:
        solutionArn: ""
      properties:
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution to describe.
      required:
      - solutionArn
      title: DescribeSolutionRequest
      type: object
    DescribeSolutionVersionResponse:
      example:
        solutionVersion:
          performAutoML: ""
          performHPO: ""
          eventType: ""
          trainingMode: ""
          solutionConfig:
            featureTransformationParameters: ""
            hpoConfig:
              hpoResourceConfig:
                maxParallelTrainingJobs: ""
                maxNumberOfTrainingJobs: ""
              hpoObjective:
                metricName: ""
                metricRegex: ""
                type: ""
              algorithmHyperParameterRanges:
                integerHyperParameterRanges: ""
                continuousHyperParameterRanges: ""
                categoricalHyperParameterRanges: ""
            autoMLConfig:
              metricName: ""
              recipeList: ""
            algorithmHyperParameters: ""
            optimizationObjective:
              objectiveSensitivity: ""
              itemAttribute: ""
            eventValueThreshold: ""
          solutionArn: ""
          recipeArn: ""
          trainingHours: ""
          failureReason: ""
          name: ""
          datasetGroupArn: ""
          tunedHPOParams:
            algorithmHyperParameters: ""
          lastUpdatedDateTime: ""
          solutionVersionArn: ""
          status: ""
          creationDateTime: ""
      properties:
        solutionVersion:
          $ref: '#/components/schemas/DescribeSolutionVersionResponse_solutionVersion'
      type: object
    DescribeSolutionVersionRequest:
      example:
        solutionVersionArn: ""
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version.
      required:
      - solutionVersionArn
      title: DescribeSolutionVersionRequest
      type: object
    GetSolutionMetricsResponse:
      example:
        metrics: ""
        solutionVersionArn: ""
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The same solution version ARN as specified in the request.
        metrics:
          allOf:
          - $ref: '#/components/schemas/Metrics'
          - description: "The metrics for the solution version. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/working-with-training-metrics.html\"\
              > Evaluating a solution version with metrics </a>."
      type: object
    GetSolutionMetricsRequest:
      example:
        solutionVersionArn: ""
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version for
              which to get metrics.
      required:
      - solutionVersionArn
      title: GetSolutionMetricsRequest
      type: object
    ListBatchInferenceJobsResponse:
      example:
        nextToken: ""
        batchInferenceJobs: ""
      properties:
        batchInferenceJobs:
          allOf:
          - $ref: '#/components/schemas/BatchInferenceJobs'
          - description: A list containing information on each job that is returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value is <code>null</code> when there are no more results to return.
      type: object
    ListBatchInferenceJobsRequest:
      example:
        nextToken: ""
        maxResults: ""
        solutionVersionArn: ""
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version from
              which the batch inference jobs were created.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to request the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of batch inference job results to return
              in each page. The default value is 100.
      title: ListBatchInferenceJobsRequest
      type: object
    InvalidNextTokenException: {}
    ListBatchSegmentJobsResponse:
      example:
        batchSegmentJobs: ""
        nextToken: ""
      properties:
        batchSegmentJobs:
          allOf:
          - $ref: '#/components/schemas/BatchSegmentJobs'
          - description: A list containing information on each job that is returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. The
              value is <code>null</code> when there are no more results to return.
      type: object
    ListBatchSegmentJobsRequest:
      example:
        nextToken: ""
        maxResults: ""
        solutionVersionArn: ""
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version that
              the batch segment jobs used to generate batch segments.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to request the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of batch segment job results to return
              in each page. The default value is 100.
      title: ListBatchSegmentJobsRequest
      type: object
    ListCampaignsResponse:
      example:
        campaigns: ""
        nextToken: ""
      properties:
        campaigns:
          allOf:
          - $ref: '#/components/schemas/Campaigns'
          - description: A list of the campaigns.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of campaigns (if they exist).
      type: object
    ListCampaignsRequest:
      example:
        nextToken: ""
        maxResults: ""
        solutionArn: ""
      properties:
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the solution to list the\
              \ campaigns for. When a solution is not specified, all the campaigns\
              \ associated with the account are listed."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_ListCampaigns.html">ListCampaigns</a>
              for getting the next set of campaigns (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of campaigns to return.
      title: ListCampaignsRequest
      type: object
    ListDatasetExportJobsResponse:
      example:
        nextToken: ""
        datasetExportJobs: ""
      properties:
        datasetExportJobs:
          allOf:
          - $ref: '#/components/schemas/DatasetExportJobs'
          - description: The list of dataset export jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of dataset export jobs (if
              they exist).
      type: object
    ListDatasetExportJobsRequest:
      example:
        datasetArn: ""
        nextToken: ""
        maxResults: ""
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset to list the
              dataset export jobs for.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListDatasetExportJobs</code>
              for getting the next set of dataset export jobs (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of dataset export jobs to return.
      title: ListDatasetExportJobsRequest
      type: object
    ListDatasetGroupsResponse:
      example:
        datasetGroups: ""
        nextToken: ""
      properties:
        datasetGroups:
          allOf:
          - $ref: '#/components/schemas/DatasetGroups'
          - description: The list of your dataset groups.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of dataset groups (if they
              exist).
      type: object
    ListDatasetGroupsRequest:
      example:
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListDatasetGroups</code>
              for getting the next set of dataset groups (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of dataset groups to return.
      title: ListDatasetGroupsRequest
      type: object
    ListDatasetImportJobsResponse:
      example:
        datasetImportJobs: ""
        nextToken: ""
      properties:
        datasetImportJobs:
          allOf:
          - $ref: '#/components/schemas/DatasetImportJobs'
          - description: The list of dataset import jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of dataset import jobs (if
              they exist).
      type: object
    ListDatasetImportJobsRequest:
      example:
        datasetArn: ""
        nextToken: ""
        maxResults: ""
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset to list the
              dataset import jobs for.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListDatasetImportJobs</code>
              for getting the next set of dataset import jobs (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of dataset import jobs to return.
      title: ListDatasetImportJobsRequest
      type: object
    ListDatasetsResponse:
      example:
        nextToken: ""
        datasets: ""
      properties:
        datasets:
          allOf:
          - $ref: '#/components/schemas/Datasets'
          - description: An array of <code>Dataset</code> objects. Each object provides
              metadata information.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of datasets (if they exist).
      type: object
    ListDatasetsRequest:
      example:
        nextToken: ""
        maxResults: ""
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group that
              contains the datasets to list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListDatasetImportJobs</code>
              for getting the next set of dataset import jobs (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of datasets to return.
      title: ListDatasetsRequest
      type: object
    ListEventTrackersResponse:
      example:
        eventTrackers: ""
        nextToken: ""
      properties:
        eventTrackers:
          allOf:
          - $ref: '#/components/schemas/EventTrackers'
          - description: A list of event trackers.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of event trackers (if they
              exist).
      type: object
    ListEventTrackersRequest:
      example:
        nextToken: ""
        maxResults: ""
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a dataset group used to filter the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListEventTrackers</code>
              for getting the next set of event trackers (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of event trackers to return.
      title: ListEventTrackersRequest
      type: object
    ListFiltersResponse:
      example:
        Filters: ""
        nextToken: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: A list of returned filters.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of filters (if they exist).
      type: object
    ListFiltersRequest:
      example:
        nextToken: ""
        maxResults: ""
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group that contains the filters.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListFilters</code>
              for getting the next set of filters (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of filters to return.
      title: ListFiltersRequest
      type: object
    ListMetricAttributionMetricsResponse:
      example:
        nextToken: ""
        metrics: ""
      properties:
        metrics:
          allOf:
          - $ref: '#/components/schemas/MetricAttributes'
          - description: The metrics for the specified metric attribution.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token from a previous <code>ListMetricAttributionMetricsResponse</code>
              request to retrieve the next page of results.
      type: object
    ListMetricAttributionMetricsRequest:
      example:
        metricAttributionArn: ""
        nextToken: ""
        maxResults: ""
      properties:
        metricAttributionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the metric attribution
              to retrieve attributes for.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token from a previous request to retrieve
              the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of metrics to return in one page of results.
      title: ListMetricAttributionMetricsRequest
      type: object
    ListMetricAttributionsResponse:
      example:
        nextToken: ""
        metricAttributions: ""
      properties:
        metricAttributions:
          allOf:
          - $ref: '#/components/schemas/MetricAttributions'
          - description: The list of metric attributions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token from a previous request to retrieve
              the next page of results.
      type: object
    ListMetricAttributionsRequest:
      example:
        nextToken: ""
        maxResults: ""
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The metric attributions' dataset group Amazon Resource Name
              (ARN).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token from a previous request to retrieve
              the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of metric attributions to return in one
              page of results.
      title: ListMetricAttributionsRequest
      type: object
    ListRecipesResponse:
      example:
        recipes: ""
        nextToken: ""
      properties:
        recipes:
          allOf:
          - $ref: '#/components/schemas/Recipes'
          - description: The list of available recipes.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of recipes.
      type: object
    ListRecipesRequest:
      example:
        nextToken: ""
        maxResults: ""
        domain: ""
        recipeProvider: ""
      properties:
        recipeProvider:
          allOf:
          - $ref: '#/components/schemas/RecipeProvider'
          - description: The default is <code>SERVICE</code>.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListRecipes</code>
              for getting the next set of recipes (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of recipes to return.
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: " Filters returned recipes by domain for a Domain dataset\
              \ group. Only recipes (Domain dataset group use cases) for this domain\
              \ are included in the response. If you don't specify a domain, all recipes\
              \ are returned. "
      title: ListRecipesRequest
      type: object
    ListRecommendersResponse:
      example:
        nextToken: ""
        recommenders: ""
      properties:
        recommenders:
          allOf:
          - $ref: '#/components/schemas/Recommenders'
          - description: A list of the recommenders.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of recommenders (if they
              exist).
      type: object
    ListRecommendersRequest:
      example:
        nextToken: ""
        maxResults: ""
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the Domain dataset group\
              \ to list the recommenders for. When a Domain dataset group is not specified,\
              \ all the recommenders associated with the account are listed."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListRecommenders</code>
              for getting the next set of recommenders (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of recommenders to return.
      title: ListRecommendersRequest
      type: object
    ListSchemasResponse:
      example:
        nextToken: ""
        schemas: ""
      properties:
        schemas:
          allOf:
          - $ref: '#/components/schemas/Schemas'
          - description: A list of schemas.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token used to get the next set of schemas (if they exist).
      type: object
    ListSchemasRequest:
      example:
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListSchemas</code>
              for getting the next set of schemas (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of schemas to return.
      title: ListSchemasRequest
      type: object
    ListSolutionVersionsResponse:
      example:
        solutionVersions: ""
        nextToken: ""
      properties:
        solutionVersions:
          allOf:
          - $ref: '#/components/schemas/SolutionVersions'
          - description: A list of solution versions describing the version properties.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of solution versions (if
              they exist).
      type: object
    ListSolutionVersionsRequest:
      example:
        nextToken: ""
        maxResults: ""
        solutionArn: ""
      properties:
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListSolutionVersions</code>
              for getting the next set of solution versions (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of solution versions to return.
      title: ListSolutionVersionsRequest
      type: object
    ListSolutionsResponse:
      example:
        solutions: ""
        nextToken: ""
      properties:
        solutions:
          allOf:
          - $ref: '#/components/schemas/Solutions'
          - description: A list of the current solutions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token for getting the next set of solutions (if they exist).
      type: object
    ListSolutionsRequest:
      example:
        nextToken: ""
        maxResults: ""
        datasetGroupArn: ""
      properties:
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from the previous call to <code>ListSolutions</code>
              for getting the next set of solutions (if they exist).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of solutions to return.
      title: ListSolutionsRequest
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The resource's tags.
      type: object
    ListTagsForResourceRequest:
      example:
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The resource's Amazon Resource Name.
      required:
      - resourceArn
      title: ListTagsForResourceRequest
      type: object
    StartRecommenderResponse:
      example:
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender you started.
      type: object
    StartRecommenderRequest:
      example:
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender to start.
      required:
      - recommenderArn
      title: StartRecommenderRequest
      type: object
    StopRecommenderResponse:
      example:
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender you stopped.
      type: object
    StopRecommenderRequest:
      example:
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender to stop.
      required:
      - recommenderArn
      title: StopRecommenderRequest
      type: object
    StopSolutionVersionCreationRequest:
      example:
        solutionVersionArn: ""
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version you
              want to stop creating.
      required:
      - solutionVersionArn
      title: StopSolutionVersionCreationRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        resourceArn: ""
        tags: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The resource's Amazon Resource Name (ARN).
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags to apply to the resource. For more information see <a
              href="https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html">Tagging
              Personalize resources</a>.
      required:
      - resourceArn
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        tagKeys: ""
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The resource's Amazon Resource Name (ARN).
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          - description: Keys to remove from the resource's tags.
      required:
      - resourceArn
      - tagKeys
      title: UntagResourceRequest
      type: object
    TooManyTagKeysException: {}
    UpdateCampaignResponse:
      example:
        campaignArn: ""
      properties:
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The same campaign ARN as given in the request.
      type: object
    UpdateCampaignRequest:
      example:
        minProvisionedTPS: ""
        solutionVersionArn: ""
        campaignArn: ""
        campaignConfig:
          itemExplorationConfig: ""
      properties:
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the campaign.
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of a new solution version to deploy.
        minProvisionedTPS:
          allOf:
          - $ref: '#/components/schemas/TransactionsPerSecond'
          - description: Specifies the requested minimum provisioned transactions
              (recommendations) per second that Amazon Personalize will support.
        campaignConfig:
          $ref: '#/components/schemas/CreateCampaignRequest_campaignConfig'
      required:
      - campaignArn
      title: UpdateCampaignRequest
      type: object
    UpdateMetricAttributionResponse:
      example:
        metricAttributionArn: ""
      properties:
        metricAttributionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the metric attribution
              that you updated.
      type: object
    UpdateMetricAttributionRequest:
      example:
        metricAttributionArn: ""
        metricsOutputConfig:
          roleArn: ""
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        addMetrics: ""
        removeMetrics: ""
      properties:
        addMetrics:
          allOf:
          - $ref: '#/components/schemas/MetricAttributes'
          - description: Add new metric attributes to the metric attribution.
        removeMetrics:
          allOf:
          - $ref: '#/components/schemas/MetricAttributesNamesList'
          - description: Remove metric attributes from the metric attribution.
        metricsOutputConfig:
          $ref: '#/components/schemas/UpdateMetricAttributionRequest_metricsOutputConfig'
        metricAttributionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the metric attribution
              to update.
      title: UpdateMetricAttributionRequest
      type: object
    UpdateRecommenderResponse:
      example:
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The same recommender Amazon Resource Name (ARN) as given
              in the request.
      type: object
    UpdateRecommenderRequest:
      example:
        recommenderConfig:
          itemExplorationConfig: ""
          minRecommendationRequestsPerSecond: ""
        recommenderArn: ""
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender to modify.
        recommenderConfig:
          $ref: '#/components/schemas/CreateRecommenderRequest_recommenderConfig'
      required:
      - recommenderArn
      - recommenderConfig
      title: UpdateRecommenderRequest
      type: object
    AccountId:
      maxLength: 256
      type: string
    Name:
      maxLength: 63
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
      type: string
    Arn:
      maxLength: 256
      pattern: "arn:([a-z\\d-]+):personalize:.*:.*:.+"
      type: string
    AlgorithmImage:
      description: Describes an algorithm image.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the algorithm image.
        dockerURI:
          allOf:
          - $ref: '#/components/schemas/DockerURI'
          - description: The URI of the Docker container for the algorithm image.
      required:
      - dockerURI
      type: object
    HyperParameters:
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
      maxProperties: 100
      type: object
    DefaultHyperParameterRanges:
      description: "Specifies the hyperparameters and their default ranges. Hyperparameters\
        \ can be categorical, continuous, or integer-valued."
      properties:
        integerHyperParameterRanges:
          allOf:
          - $ref: '#/components/schemas/DefaultIntegerHyperParameterRanges'
          - description: The integer-valued hyperparameters and their default ranges.
        continuousHyperParameterRanges:
          allOf:
          - $ref: '#/components/schemas/DefaultContinuousHyperParameterRanges'
          - description: The continuous hyperparameters and their default ranges.
        categoricalHyperParameterRanges:
          allOf:
          - $ref: '#/components/schemas/DefaultCategoricalHyperParameterRanges'
          - description: The categorical hyperparameters and their default ranges.
      type: object
    ResourceConfig:
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
      maxProperties: 100
      type: object
    TrainingInputMode:
      maxLength: 256
      type: string
    Date:
      format: date-time
      type: string
    Algorithm:
      description: Describes a custom algorithm.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the algorithm.
        algorithmArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the algorithm.
        algorithmImage:
          $ref: '#/components/schemas/Algorithm_algorithmImage'
        defaultHyperParameters:
          allOf:
          - $ref: '#/components/schemas/HyperParameters'
          - description: Specifies the default hyperparameters.
        defaultHyperParameterRanges:
          $ref: '#/components/schemas/Algorithm_defaultHyperParameterRanges'
        defaultResourceConfig:
          allOf:
          - $ref: '#/components/schemas/ResourceConfig'
          - description: Specifies the default maximum number of training jobs and
              parallel training jobs.
        trainingInputMode:
          allOf:
          - $ref: '#/components/schemas/TrainingInputMode'
          - description: The training input mode.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the role.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the algorithm was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the algorithm was last
              updated.
      type: object
    DockerURI:
      maxLength: 256
      type: string
    ArnList:
      items:
        $ref: '#/components/schemas/Arn'
      maxItems: 100
      type: array
    MetricName:
      maxLength: 256
      type: string
    AutoMLConfig:
      description: "When the solution performs AutoML (<code>performAutoML</code>\
        \ is true in <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a>), Amazon Personalize determines which recipe, from the\
        \ specified list, optimizes the given metric. Amazon Personalize then uses\
        \ that recipe for the solution."
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The metric to optimize.
        recipeList:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: The list of candidate recipes.
      type: object
    AutoMLResult:
      description: "When the solution performs AutoML (<code>performAutoML</code>\
        \ is true in <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a>), specifies the recipe that best optimized the specified\
        \ metric."
      properties:
        bestRecipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the best recipe.
      type: object
    AvroSchema:
      maxLength: 10000
      type: string
    FailureReason:
      type: string
    NumBatchResults:
      type: integer
    BatchInferenceJobInput:
      description: The input configuration of a batch inference job.
      properties:
        s3DataSource:
          $ref: '#/components/schemas/BatchInferenceJobInput_s3DataSource'
      required:
      - s3DataSource
      type: object
    BatchInferenceJobOutput:
      description: The output configuration parameters of a batch inference job.
      properties:
        s3DataDestination:
          $ref: '#/components/schemas/BatchInferenceJobOutput_s3DataDestination'
      required:
      - s3DataDestination
      type: object
    BatchInferenceJobConfig:
      description: The configuration details of a batch inference job.
      properties:
        itemExplorationConfig:
          allOf:
          - $ref: '#/components/schemas/HyperParameters'
          - description: "A string to string map specifying the exploration configuration\
              \ hyperparameters, including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>,\
              \ you want to use to configure the amount of item exploration Amazon\
              \ Personalize uses when recommending items. See <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html\"\
              >User-Personalization</a>."
      type: object
    RoleArn:
      maxLength: 256
      pattern: "arn:([a-z\\d-]+):iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+"
      type: string
    Status:
      maxLength: 256
      type: string
    BatchInferenceJob:
      description: Contains information on a batch inference job.
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the batch inference job.
        batchInferenceJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the batch inference job.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the filter used on the batch inference job.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If the batch inference job failed, the reason for the failure."
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version from
              which the batch inference job was created.
        numResults:
          allOf:
          - $ref: '#/components/schemas/NumBatchResults'
          - description: The number of recommendations generated by the batch inference
              job. This number includes the error messages generated for failed input
              records.
        jobInput:
          $ref: '#/components/schemas/BatchInferenceJob_jobInput'
        jobOutput:
          $ref: '#/components/schemas/BatchInferenceJob_jobOutput'
        batchInferenceJobConfig:
          $ref: '#/components/schemas/BatchInferenceJob_batchInferenceJobConfig'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the Amazon Identity and Access Management (IAM)
              role that requested the batch inference job.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the batch inference job. The status is one
              of the following values:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>IN
              PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p>
              </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the batch inference job was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the batch inference job was last updated.
      type: object
    S3DataConfig:
      description: The configuration details of an Amazon S3 input or output bucket.
      example:
        path: ""
        kmsKeyArn: ""
      properties:
        path:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          - description: The file path of the Amazon S3 bucket.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of the Key Management Service
              (KMS) key that Amazon Personalize uses to encrypt or decrypt the input
              and output files.
      required:
      - path
      type: object
    BatchInferenceJobSummary:
      description: A truncated version of the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_BatchInferenceJob.html">BatchInferenceJob</a>.
        The <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_ListBatchInferenceJobs.html">ListBatchInferenceJobs</a>
        operation returns a list of batch inference job summaries.
      properties:
        batchInferenceJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the batch inference job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the batch inference job.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the batch inference job. The status is one
              of the following values:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>IN
              PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p>
              </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the batch inference job was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the batch inference job was last updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If the batch inference job failed, the reason for the failure."
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the solution version used by the batch inference
              job.
      type: object
    BatchInferenceJobs:
      items:
        $ref: '#/components/schemas/BatchInferenceJobSummary'
      maxItems: 100
      type: array
    BatchSegmentJobInput:
      description: The input configuration of a batch segment job.
      properties:
        s3DataSource:
          $ref: '#/components/schemas/S3DataConfig'
      required:
      - s3DataSource
      type: object
    BatchSegmentJobOutput:
      description: The output configuration parameters of a batch segment job.
      properties:
        s3DataDestination:
          $ref: '#/components/schemas/S3DataConfig'
      required:
      - s3DataDestination
      type: object
    BatchSegmentJob:
      description: Contains information on a batch segment job.
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the batch segment job.
        batchSegmentJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the batch segment job.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the filter used on the batch segment job.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If the batch segment job failed, the reason for the failure."
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version used
              by the batch segment job to generate batch segments.
        numResults:
          allOf:
          - $ref: '#/components/schemas/NumBatchResults'
          - description: The number of predicted users generated by the batch segment
              job for each line of input data.
        jobInput:
          $ref: '#/components/schemas/BatchSegmentJob_jobInput'
        jobOutput:
          $ref: '#/components/schemas/BatchSegmentJob_jobOutput'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the Amazon Identity and Access Management (IAM)
              role that requested the batch segment job.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the batch segment job. The status is one
              of the following values:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>IN
              PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p>
              </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the batch segment job was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the batch segment job last updated.
      type: object
    BatchSegmentJobSummary:
      description: A truncated version of the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_BatchSegmentJob.html">BatchSegmentJob</a>
        datatype. <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_ListBatchSegmentJobs.html">ListBatchSegmentJobs</a>
        operation returns a list of batch segment job summaries.
      properties:
        batchSegmentJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the batch segment job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the batch segment job.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the batch segment job. The status is one
              of the following values:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>IN
              PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p>
              </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the batch segment job was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the batch segment job was last updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If the batch segment job failed, the reason for the failure."
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version used
              by the batch segment job to generate batch segments.
      type: object
    BatchSegmentJobs:
      items:
        $ref: '#/components/schemas/BatchSegmentJobSummary'
      maxItems: 100
      type: array
    Boolean:
      type: boolean
    TransactionsPerSecond:
      minimum: 1
      type: integer
    CampaignConfig:
      description: The configuration details of a campaign.
      example:
        itemExplorationConfig: ""
      properties:
        itemExplorationConfig:
          allOf:
          - $ref: '#/components/schemas/HyperParameters'
          - description: "Specifies the exploration configuration hyperparameters,\
              \ including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>,\
              \ you want to use to configure the amount of item exploration Amazon\
              \ Personalize uses when recommending items. Provide <code>itemExplorationConfig</code>\
              \ data only if your solution uses the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html\"\
              >User-Personalization</a> recipe."
      type: object
    CampaignUpdateSummary:
      description: "Provides a summary of the properties of a campaign update. For\
        \ a complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html\"\
        >DescribeCampaign</a> API."
      example:
        minProvisionedTPS: ""
        failureReason: ""
        lastUpdatedDateTime: ""
        solutionVersionArn: ""
        campaignConfig:
          itemExplorationConfig: ""
        status: ""
        creationDateTime: ""
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the deployed solution version.
        minProvisionedTPS:
          allOf:
          - $ref: '#/components/schemas/TransactionsPerSecond'
          - description: Specifies the requested minimum provisioned transactions
              (recommendations) per second that Amazon Personalize will support.
        campaignConfig:
          $ref: '#/components/schemas/CampaignConfig'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the campaign update.</p> <p>A campaign update
              can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING
              &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li>
              <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a campaign update fails, the reason behind the failure."
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the campaign update
              was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the campaign update
              was last updated.
      type: object
    Campaign:
      description: "An object that describes the deployment of a solution version.\
        \ For more information on campaigns, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\"\
        >CreateCampaign</a>."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the campaign.
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) of the campaign. '
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of a specific version of the
              solution.
        minProvisionedTPS:
          allOf:
          - $ref: '#/components/schemas/TransactionsPerSecond'
          - description: Specifies the requested minimum provisioned transactions
              (recommendations) per second.
        campaignConfig:
          $ref: '#/components/schemas/CreateCampaignRequest_campaignConfig'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the campaign.</p> <p>A campaign can be in
              one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE
              IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE
              PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a campaign fails, the reason behind the failure."
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the campaign was
              created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the campaign was
              last updated.
        latestCampaignUpdate:
          $ref: '#/components/schemas/CampaignUpdateSummary'
      type: object
    CampaignSummary:
      description: "Provides a summary of the properties of a campaign. For a complete\
        \ listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html\"\
        >DescribeCampaign</a> API."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the campaign.
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the campaign.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the campaign.</p> <p>A campaign can be in
              one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE
              IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE
              PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the campaign was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the campaign was last
              updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a campaign fails, the reason behind the failure."
      type: object
    Campaigns:
      items:
        $ref: '#/components/schemas/CampaignSummary'
      maxItems: 100
      type: array
    ParameterName:
      maxLength: 256
      type: string
    CategoricalValues:
      items:
        $ref: '#/components/schemas/CategoricalValue'
      maxItems: 100
      type: array
    CategoricalHyperParameterRange:
      description: Provides the name and range of a categorical hyperparameter.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          - description: The name of the hyperparameter.
        values:
          allOf:
          - $ref: '#/components/schemas/CategoricalValues'
          - description: A list of the categories for the hyperparameter.
      type: object
    CategoricalHyperParameterRanges:
      items:
        $ref: '#/components/schemas/CategoricalHyperParameterRange'
      maxItems: 100
      type: array
    CategoricalValue:
      maxLength: 1000
      type: string
    ContinuousMinValue:
      format: double
      minimum: -1000000
      type: number
    ContinuousMaxValue:
      format: double
      minimum: -1000000
      type: number
    ContinuousHyperParameterRange:
      description: Provides the name and range of a continuous hyperparameter.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          - description: The name of the hyperparameter.
        minValue:
          allOf:
          - $ref: '#/components/schemas/ContinuousMinValue'
          - description: The minimum allowable value for the hyperparameter.
        maxValue:
          allOf:
          - $ref: '#/components/schemas/ContinuousMaxValue'
          - description: The maximum allowable value for the hyperparameter.
      type: object
    ContinuousHyperParameterRanges:
      items:
        $ref: '#/components/schemas/ContinuousHyperParameterRange'
      maxItems: 100
      type: array
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    IngestionMode:
      enum:
      - BULK
      - PUT
      - ALL
      type: string
    DatasetExportJobOutput:
      description: The output configuration parameters of a dataset export job.
      properties:
        s3DataDestination:
          $ref: '#/components/schemas/S3DataConfig'
      required:
      - s3DataDestination
      type: object
    KmsKeyArn:
      maxLength: 2048
      pattern: "arn:aws.*:kms:.*:[0-9]{12}:key/.*"
      type: string
    Domain:
      enum:
      - ECOMMERCE
      - VIDEO_ON_DEMAND
      type: string
    DataSource:
      description: Describes the data source that contains the data to upload to a
        dataset.
      properties:
        dataLocation:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          - description: "<p>The path to the Amazon S3 bucket where the data that\
              \ you want to upload to your dataset is stored. For example: </p> <p>\
              \ <code>s3://bucket-name/folder-name/</code> </p>"
      type: object
    ImportMode:
      enum:
      - FULL
      - INCREMENTAL
      type: string
    DatasetType:
      maxLength: 256
      type: string
    TrackingId:
      maxLength: 256
      type: string
    FilterExpression:
      format: password
      maxLength: 2500
      minLength: 1
      type: string
    MetricAttributes:
      items:
        $ref: '#/components/schemas/MetricAttribute'
      maxItems: 10
      type: array
    MetricAttributionOutput:
      description: The output configuration details for a metric attribution.
      properties:
        s3DataDestination:
          $ref: '#/components/schemas/S3DataConfig'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "The Amazon Resource Name (ARN) of the IAM service role that\
              \ has permissions to add data to your output Amazon S3 bucket and add\
              \ metrics to Amazon CloudWatch. For more information, see <a href=\"\
              https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html\"\
              >Measuring impact of recommendations</a>."
      required:
      - roleArn
      type: object
    RecommenderConfig:
      description: The configuration details of the recommender.
      properties:
        itemExplorationConfig:
          allOf:
          - $ref: '#/components/schemas/HyperParameters'
          - description: "Specifies the exploration configuration hyperparameters,\
              \ including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>,\
              \ you want to use to configure the amount of item exploration Amazon\
              \ Personalize uses when recommending items. Provide <code>itemExplorationConfig</code>\
              \ data only if your recommenders generate personalized recommendations\
              \ for a user (not popular items or similar items)."
        minRecommendationRequestsPerSecond:
          allOf:
          - $ref: '#/components/schemas/TransactionsPerSecond'
          - description: Specifies the requested minimum provisioned recommendation
              requests per second that Amazon Personalize will support.
      type: object
    PerformAutoML:
      type: boolean
    EventType:
      maxLength: 256
      type: string
    SolutionConfig:
      description: Describes the configuration properties for the solution.
      properties:
        eventValueThreshold:
          allOf:
          - $ref: '#/components/schemas/EventValueThreshold'
          - description: Only events with a value greater than or equal to this threshold
              are used for training a model.
        hpoConfig:
          $ref: '#/components/schemas/SolutionConfig_hpoConfig'
        algorithmHyperParameters:
          allOf:
          - $ref: '#/components/schemas/HyperParameters'
          - description: Lists the hyperparameter names and ranges.
        featureTransformationParameters:
          allOf:
          - $ref: '#/components/schemas/FeatureTransformationParameters'
          - description: Lists the feature transformation parameters.
        autoMLConfig:
          $ref: '#/components/schemas/SolutionConfig_autoMLConfig'
        optimizationObjective:
          $ref: '#/components/schemas/SolutionConfig_optimizationObjective'
      type: object
    TrainingMode:
      enum:
      - FULL
      - UPDATE
      type: string
    S3Location:
      maxLength: 256
      pattern: (s3|http|https)://.+
      type: string
    Dataset:
      description: Provides metadata for a dataset.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset that you want
              metadata for.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group.
        datasetType:
          allOf:
          - $ref: '#/components/schemas/DatasetType'
          - description: <p>One of the following values:</p> <ul> <li> <p>Interactions</p>
              </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul>
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the associated schema.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the dataset.</p> <p>A dataset can be in
              one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE
              IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE
              PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The creation date and time (in Unix time) of the dataset.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: A time stamp that shows when the dataset was updated.
      type: object
    DatasetExportJob:
      description: "<p>Describes a job that exports a dataset to an Amazon S3 bucket.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetExportJob.html\"\
        >CreateDatasetExportJob</a>.</p> <p>A dataset export job can be in one of\
        \ the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS\
        \ &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>"
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the export job.
        datasetExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset export job.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset to export.
        ingestionMode:
          allOf:
          - $ref: '#/components/schemas/IngestionMode'
          - description: "The data to export, based on how you imported the data.\
              \ You can choose to export <code>BULK</code> data that you imported\
              \ using a dataset import job, <code>PUT</code> data that you imported\
              \ incrementally (using the console, PutEvents, PutUsers and PutItems\
              \ operations), or <code>ALL</code> for both types. The default value\
              \ is <code>PUT</code>. "
        roleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the IAM service role that
              has permissions to add data to your output Amazon S3 bucket.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the dataset export job.</p> <p>A dataset
              export job can be in one of the following states:</p> <ul> <li> <p>CREATE
              PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>
              </ul>
        jobOutput:
          $ref: '#/components/schemas/DatasetExportJob_jobOutput'
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The creation date and time (in Unix time) of the dataset
              export job.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) the status of the dataset
              export job was last updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a dataset export job fails, provides the reason why."
      type: object
    DatasetExportJobSummary:
      description: "Provides a summary of the properties of a dataset export job.\
        \ For a complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetExportJob.html\"\
        >DescribeDatasetExportJob</a> API."
      properties:
        datasetExportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset export job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset export job.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the dataset export job.</p> <p>A dataset
              export job can be in one of the following states:</p> <ul> <li> <p>CREATE
              PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>
              </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the dataset export
              job was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the dataset export
              job status was last updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a dataset export job fails, the reason behind the failure."
      type: object
    DatasetExportJobs:
      items:
        $ref: '#/components/schemas/DatasetExportJobSummary'
      maxItems: 100
      type: array
    DatasetGroup:
      description: "<p>A dataset group is a collection of related datasets (Interactions,\
        \ User, and Item). You create a dataset group by calling <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html\"\
        >CreateDatasetGroup</a>. You then create a dataset and add it to a dataset\
        \ group by calling <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html\"\
        >CreateDataset</a>. The dataset group is used to create and train a solution\
        \ by calling <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\"\
        >CreateSolution</a>. A dataset group can contain only one of each type of\
        \ dataset.</p> <p>You can specify an Key Management Service (KMS) key to encrypt\
        \ the datasets in the group.</p>"
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset group.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The current status of the dataset group.</p> <p>A dataset
              group can be in one of the following states:</p> <ul> <li> <p>CREATE
              PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>
              <li> <p>DELETE PENDING</p> </li> </ul>
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the IAM role that has permissions to create the
              dataset group.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of the Key Management Service
              (KMS) key used to encrypt the datasets.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The creation date and time (in Unix time) of the dataset
              group.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The last update date and time (in Unix time) of the dataset
              group.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If creating a dataset group fails, provides the reason why."
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain of a Domain dataset group.
      type: object
    DatasetGroupSummary:
      description: "Provides a summary of the properties of a dataset group. For a\
        \ complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetGroup.html\"\
        >DescribeDatasetGroup</a> API."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset group.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the dataset group.</p> <p>A dataset group
              can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING
              &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li>
              <p>DELETE PENDING</p> </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the dataset group was
              created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the dataset group was
              last updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If creating a dataset group fails, the reason behind the\
              \ failure."
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain of a Domain dataset group.
      type: object
    DatasetGroups:
      items:
        $ref: '#/components/schemas/DatasetGroupSummary'
      maxItems: 100
      type: array
    DatasetImportJob:
      description: "<p>Describes a job that imports training data from a data source\
        \ (Amazon S3 bucket) to an Amazon Personalize dataset. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetImportJob.html\"\
        >CreateDatasetImportJob</a>.</p> <p>A dataset import job can be in one of\
        \ the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS\
        \ &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>"
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the import job.
        datasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset import job.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset that receives
              the imported data.
        dataSource:
          $ref: '#/components/schemas/CreateDatasetImportJobRequest_dataSource'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the IAM role that has permissions to read from
              the Amazon S3 data source.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the dataset import job.</p> <p>A dataset
              import job can be in one of the following states:</p> <ul> <li> <p>CREATE
              PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>
              </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The creation date and time (in Unix time) of the dataset
              import job.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) the dataset was last updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a dataset import job fails, provides the reason why."
        importMode:
          allOf:
          - $ref: '#/components/schemas/ImportMode'
          - description: The import mode used by the dataset import job to import
              new records.
        publishAttributionMetricsToS3:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the job publishes metrics to Amazon S3 for a metric
              attribution.
      type: object
    DatasetImportJobSummary:
      description: "Provides a summary of the properties of a dataset import job.\
        \ For a complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDatasetImportJob.html\"\
        >DescribeDatasetImportJob</a> API."
      properties:
        datasetImportJobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset import job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset import job.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the dataset import job.</p> <p>A dataset
              import job can be in one of the following states:</p> <ul> <li> <p>CREATE
              PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>
              </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the dataset import
              job was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the dataset import
              job status was last updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a dataset import job fails, the reason behind the failure."
        importMode:
          allOf:
          - $ref: '#/components/schemas/ImportMode'
          - description: 'The import mode the dataset import job used to update the
              data in the dataset. For more information see <a href="https://docs.aws.amazon.com/personalize/latest/dg/updating-existing-bulk-data.html">Updating
              existing bulk data</a>. '
      type: object
    DatasetImportJobs:
      items:
        $ref: '#/components/schemas/DatasetImportJobSummary'
      maxItems: 100
      type: array
    DatasetSchema:
      description: "Describes the schema for a dataset. For more information on schemas,\
        \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSchema.html\"\
        >CreateSchema</a>."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the schema.
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the schema.
        schema:
          allOf:
          - $ref: '#/components/schemas/AvroSchema'
          - description: The schema.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the schema was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the schema was last
              updated.
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain of a schema that you created for a dataset in
              a Domain dataset group.
      type: object
    DatasetSchemaSummary:
      description: "Provides a summary of the properties of a dataset schema. For\
        \ a complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSchema.html\"\
        >DescribeSchema</a> API."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the schema.
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the schema.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the schema was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the schema was last
              updated.
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain of a schema that you created for a dataset in
              a Domain dataset group.
      type: object
    DatasetSummary:
      description: "Provides a summary of the properties of a dataset. For a complete\
        \ listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeDataset.html\"\
        >DescribeDataset</a> API."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the dataset.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset.
        datasetType:
          allOf:
          - $ref: '#/components/schemas/DatasetType'
          - description: <p>The dataset type. One of the following values:</p> <ul>
              <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p>
              </li> <li> <p>Event-Interactions</p> </li> </ul>
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the dataset.</p> <p>A dataset can be in
              one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE
              IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE
              PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the dataset was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the dataset was last
              updated.
      type: object
    Datasets:
      items:
        $ref: '#/components/schemas/DatasetSummary'
      maxItems: 100
      type: array
    Tunable:
      type: boolean
    DefaultCategoricalHyperParameterRange:
      description: Provides the name and default range of a categorical hyperparameter
        and whether the hyperparameter is tunable. A tunable hyperparameter can have
        its value determined during hyperparameter optimization (HPO).
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          - description: The name of the hyperparameter.
        values:
          allOf:
          - $ref: '#/components/schemas/CategoricalValues'
          - description: A list of the categories for the hyperparameter.
        isTunable:
          allOf:
          - $ref: '#/components/schemas/Tunable'
          - description: Whether the hyperparameter is tunable.
      type: object
    DefaultCategoricalHyperParameterRanges:
      items:
        $ref: '#/components/schemas/DefaultCategoricalHyperParameterRange'
      maxItems: 100
      type: array
    DefaultContinuousHyperParameterRange:
      description: Provides the name and default range of a continuous hyperparameter
        and whether the hyperparameter is tunable. A tunable hyperparameter can have
        its value determined during hyperparameter optimization (HPO).
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          - description: The name of the hyperparameter.
        minValue:
          allOf:
          - $ref: '#/components/schemas/ContinuousMinValue'
          - description: The minimum allowable value for the hyperparameter.
        maxValue:
          allOf:
          - $ref: '#/components/schemas/ContinuousMaxValue'
          - description: The maximum allowable value for the hyperparameter.
        isTunable:
          allOf:
          - $ref: '#/components/schemas/Tunable'
          - description: Whether the hyperparameter is tunable.
      type: object
    DefaultContinuousHyperParameterRanges:
      items:
        $ref: '#/components/schemas/DefaultContinuousHyperParameterRange'
      maxItems: 100
      type: array
    DefaultIntegerHyperParameterRanges:
      items:
        $ref: '#/components/schemas/DefaultIntegerHyperParameterRange'
      maxItems: 100
      type: array
    IntegerMinValue:
      minimum: -1000000
      type: integer
    IntegerMaxValue:
      maximum: 1000000
      type: integer
    DefaultIntegerHyperParameterRange:
      description: Provides the name and default range of a integer-valued hyperparameter
        and whether the hyperparameter is tunable. A tunable hyperparameter can have
        its value determined during hyperparameter optimization (HPO).
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          - description: The name of the hyperparameter.
        minValue:
          allOf:
          - $ref: '#/components/schemas/IntegerMinValue'
          - description: The minimum allowable value for the hyperparameter.
        maxValue:
          allOf:
          - $ref: '#/components/schemas/IntegerMaxValue'
          - description: The maximum allowable value for the hyperparameter.
        isTunable:
          allOf:
          - $ref: '#/components/schemas/Tunable'
          - description: Indicates whether the hyperparameter is tunable.
      type: object
    EventTracker:
      description: Provides information about an event tracker.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the event tracker.
        eventTrackerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the event tracker.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account that owns the event tracker.
        trackingId:
          allOf:
          - $ref: '#/components/schemas/TrackingId'
          - description: The ID of the event tracker. Include this ID in requests
              to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a>
              API.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group that
              receives the event data.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the event tracker.</p> <p>An event tracker
              can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING
              &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li>
              <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the event tracker
              was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the event tracker was
              last updated.
      type: object
    FeatureTransformation:
      description: Provides feature transformation information. Feature transformation
        is the process of modifying raw input data into a form more suitable for model
        training.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the feature transformation.
        featureTransformationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the FeatureTransformation
              object.
        defaultParameters:
          allOf:
          - $ref: '#/components/schemas/FeaturizationParameters'
          - description: Provides the default parameters for feature transformation.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The creation date and time (in Unix time) of the feature
              transformation.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The last update date and time (in Unix time) of the feature
              transformation.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the feature transformation.</p> <p>A feature
              transformation can be in one of the following states:</p> <ul> <li>
              <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p>
              </li> </ul>
      type: object
    Filter:
      description: "Contains information on a recommendation filter, including its\
        \ ARN, status, and filter expression."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the filter.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the filter.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the filter was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the filter was last updated.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group to which the filter belongs.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If the filter failed, the reason for its failure."
        filterExpression:
          allOf:
          - $ref: '#/components/schemas/FilterExpression'
          - description: "Specifies the type of item interactions to filter out of\
              \ recommendation results. The filter expression must follow specific\
              \ format rules. For information about filter expression structure and\
              \ syntax, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter-expressions.html\"\
              >Filter expressions</a>."
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the filter.
      type: object
    MetricAttribution:
      description: "Contains information on a metric attribution. A metric attribution\
        \ creates reports on the data that you import into Amazon Personalize. Depending\
        \ on how you import the data, you can view reports in Amazon CloudWatch or\
        \ Amazon S3. For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html\"\
        >Measuring impact of recommendations</a>."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The metric attribution's name.
        metricAttributionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The metric attribution's Amazon Resource Name (ARN).
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The metric attribution's dataset group Amazon Resource Name
              (ARN).
        metricsOutputConfig:
          $ref: '#/components/schemas/MetricAttribution_metricsOutputConfig'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The metric attribution's status.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The metric attribution's creation date time.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The metric attribution's last updated date time.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: The metric attribution's failure reason.
      type: object
    Recipe:
      description: 'Provides information about a recipe. Each recipe provides an algorithm
        that Amazon Personalize uses in model training when you use the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html">CreateSolution</a>
        operation. '
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the recipe.
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recipe.
        algorithmArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the algorithm that Amazon
              Personalize uses to train the model.
        featureTransformationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the FeatureTransformation object.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the recipe.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the recipe.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the recipe was created.
        recipeType:
          allOf:
          - $ref: '#/components/schemas/RecipeType'
          - description: <p>One of the following values:</p> <ul> <li> <p>PERSONALIZED_RANKING</p>
              </li> <li> <p>RELATED_ITEMS</p> </li> <li> <p>USER_PERSONALIZATION</p>
              </li> </ul>
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the recipe was last
              updated.
      type: object
    Recommender:
      description: "Describes a recommendation generator for a Domain dataset group.\
        \ You create a recommender in a Domain dataset group for a specific domain\
        \ use case (domain recipe), and specify the recommender in a <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\"\
        >GetRecommendations</a> request."
      properties:
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Domain dataset group
              that contains the recommender.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the recommender.
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) of the recipe (Domain dataset
              group use case) that the recommender was created for. '
        recommenderConfig:
          $ref: '#/components/schemas/CreateRecommenderRequest_recommenderConfig'
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the recommender was
              created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the recommender was
              last updated.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the recommender.</p> <p>A recommender can
              be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt;
              CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>STOP
              PENDING &gt; STOP IN_PROGRESS &gt; INACTIVE &gt; START PENDING &gt;
              START IN_PROGRESS &gt; ACTIVE</p> </li> <li> <p>DELETE PENDING &gt;
              DELETE IN_PROGRESS</p> </li> </ul>
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a recommender fails, the reason behind the failure."
        latestRecommenderUpdate:
          $ref: '#/components/schemas/Recommender_latestRecommenderUpdate'
        modelMetrics:
          allOf:
          - $ref: '#/components/schemas/Metrics'
          - description: "Provides evaluation metrics that help you determine the\
              \ performance of a recommender. For more information, see <a href=\"\
              https://docs.aws.amazon.com/personalize/latest/dg/evaluating-recommenders.html\"\
              > Evaluating a recommender</a>."
      type: object
    Solution:
      description: An object that provides information about a solution. A solution
        is a trained model that can be deployed as a campaign.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the solution.
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the solution.
        performHPO:
          allOf:
          - $ref: '#/components/schemas/PerformHPO'
          - description: Whether to perform hyperparameter optimization (HPO) on the
              chosen recipe. The default is <code>false</code>.
        performAutoML:
          allOf:
          - $ref: '#/components/schemas/PerformAutoML'
          - description: "When true, Amazon Personalize performs a search for the\
              \ best USER_PERSONALIZATION recipe from the list specified in the solution\
              \ configuration (<code>recipeArn</code> must not be specified). When\
              \ false (the default), Amazon Personalize uses <code>recipeArn</code>\
              \ for training."
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the recipe used to create the solution.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group that
              provides the training data.
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: "The event type (for example, 'click' or 'like') that is\
              \ used for training the model. If no <code>eventType</code> is provided,\
              \ Amazon Personalize uses all interactions for training with equal weight\
              \ regardless of type."
        solutionConfig:
          $ref: '#/components/schemas/Solution_solutionConfig'
        autoMLResult:
          $ref: '#/components/schemas/Solution_autoMLResult'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the solution.</p> <p>A solution can be in
              one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE
              IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE
              PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The creation date and time (in Unix time) of the solution.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the solution was last
              updated.
        latestSolutionVersion:
          $ref: '#/components/schemas/Solution_latestSolutionVersion'
      type: object
    SolutionVersion:
      description: An object that provides information about a specific version of
        a <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_Solution.html">Solution</a>
        in a Custom dataset group.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the solution version.
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the solution version.
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the solution.
        performHPO:
          allOf:
          - $ref: '#/components/schemas/PerformHPO'
          - description: Whether to perform hyperparameter optimization (HPO) on the
              chosen recipe. The default is <code>false</code>.
        performAutoML:
          allOf:
          - $ref: '#/components/schemas/PerformAutoML'
          - description: "When true, Amazon Personalize searches for the most optimal\
              \ recipe according to the solution configuration. When false (the default),\
              \ Amazon Personalize uses <code>recipeArn</code>."
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the recipe used in the solution.
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: "The event type (for example, 'click' or 'like') that is\
              \ used for training the model."
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset group providing
              the training data.
        solutionConfig:
          $ref: '#/components/schemas/Solution_solutionConfig'
        trainingHours:
          allOf:
          - $ref: '#/components/schemas/TrainingHours'
          - description: The time used to train the model. You are billed for the
              time it takes to train a model. This field is visible only after Amazon
              Personalize successfully trains a model.
        trainingMode:
          allOf:
          - $ref: '#/components/schemas/TrainingMode'
          - description: "<p>The scope of training to be performed when creating the\
              \ solution version. The <code>FULL</code> option trains the solution\
              \ version based on the entirety of the input solution's training data,\
              \ while the <code>UPDATE</code> option processes only the data that\
              \ has changed in comparison to the input solution. Choose <code>UPDATE</code>\
              \ when you want to incrementally update your solution version instead\
              \ of creating an entirely new one.</p> <important> <p>The <code>UPDATE</code>\
              \ option can only be used when you already have an active solution version\
              \ created from the input solution using the <code>FULL</code> option\
              \ and the input solution was trained with the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html\"\
              >User-Personalization</a> recipe or the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-hrnn-coldstart.html\"\
              >HRNN-Coldstart</a> recipe.</p> </important>"
        tunedHPOParams:
          $ref: '#/components/schemas/SolutionVersion_tunedHPOParams'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the solution version.</p> <p>A solution
              version can be in one of the following states:</p> <ul> <li> <p>CREATE
              PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p>
              </li> <li> <p>CREATE FAILED</p> </li> <li> <p>CREATE STOPPING</p> </li>
              <li> <p>CREATE STOPPED</p> </li> </ul>
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If training a solution version fails, the reason for the\
              \ failure."
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that this version of the
              solution was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the solution was last
              updated.
      type: object
    Description:
      type: string
    EventTrackerSummary:
      description: "Provides a summary of the properties of an event tracker. For\
        \ a complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeEventTracker.html\"\
        >DescribeEventTracker</a> API."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the event tracker.
        eventTrackerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the event tracker.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the event tracker.</p> <p>An event tracker
              can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING
              &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li>
              <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the event tracker was
              created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the event tracker was
              last updated.
      type: object
    EventTrackers:
      items:
        $ref: '#/components/schemas/EventTrackerSummary'
      maxItems: 100
      type: array
    EventValueThreshold:
      maxLength: 256
      type: string
    FeaturizationParameters:
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
      maxProperties: 100
      type: object
    ParameterValue:
      maxLength: 1000
      type: string
    FeatureTransformationParameters:
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
      maxProperties: 100
      type: object
    FilterSummary:
      description: A short summary of a filter's attributes.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the filter.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the filter.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the filter was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time at which the filter was last updated.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset group to which the filter belongs.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If the filter failed, the reason for the failure."
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the filter.
      type: object
    Filters:
      items:
        $ref: '#/components/schemas/FilterSummary'
      maxItems: 100
      type: array
    Metrics:
      additionalProperties:
        $ref: '#/components/schemas/MetricValue'
      maxProperties: 100
      type: object
    HPOObjective:
      description: <p>The metric to optimize during hyperparameter optimization (HPO).</p>
        <note> <p>Amazon Personalize doesn't support configuring the <code>hpoObjective</code>
        at this time.</p> </note>
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/HPOObjectiveType'
          - description: The type of the metric. Valid values are <code>Maximize</code>
              and <code>Minimize</code>.
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the metric.
        metricRegex:
          allOf:
          - $ref: '#/components/schemas/MetricRegex'
          - description: A regular expression for finding the metric in the training
              job logs.
      type: object
    HPOResourceConfig:
      description: Describes the resource configuration for hyperparameter optimization
        (HPO).
      properties:
        maxNumberOfTrainingJobs:
          allOf:
          - $ref: '#/components/schemas/HPOResource'
          - description: The maximum number of training jobs when you create a solution
              version. The maximum value for <code>maxNumberOfTrainingJobs</code>
              is <code>40</code>.
        maxParallelTrainingJobs:
          allOf:
          - $ref: '#/components/schemas/HPOResource'
          - description: The maximum number of parallel training jobs when you create
              a solution version. The maximum value for <code>maxParallelTrainingJobs</code>
              is <code>10</code>.
      type: object
    HyperParameterRanges:
      description: "Specifies the hyperparameters and their ranges. Hyperparameters\
        \ can be categorical, continuous, or integer-valued."
      properties:
        integerHyperParameterRanges:
          allOf:
          - $ref: '#/components/schemas/IntegerHyperParameterRanges'
          - description: The integer-valued hyperparameters and their ranges.
        continuousHyperParameterRanges:
          allOf:
          - $ref: '#/components/schemas/ContinuousHyperParameterRanges'
          - description: The continuous hyperparameters and their ranges.
        categoricalHyperParameterRanges:
          allOf:
          - $ref: '#/components/schemas/CategoricalHyperParameterRanges'
          - description: The categorical hyperparameters and their ranges.
      type: object
    HPOConfig:
      description: Describes the properties for hyperparameter optimization (HPO).
      properties:
        hpoObjective:
          $ref: '#/components/schemas/HPOConfig_hpoObjective'
        hpoResourceConfig:
          $ref: '#/components/schemas/HPOConfig_hpoResourceConfig'
        algorithmHyperParameterRanges:
          $ref: '#/components/schemas/HPOConfig_algorithmHyperParameterRanges'
      type: object
    HPOObjectiveType:
      maxLength: 256
      type: string
    MetricRegex:
      maxLength: 256
      type: string
    HPOResource:
      maxLength: 256
      type: string
    IntegerHyperParameterRanges:
      items:
        $ref: '#/components/schemas/IntegerHyperParameterRange'
      maxItems: 100
      type: array
    IntegerHyperParameterRange:
      description: Provides the name and range of an integer-valued hyperparameter.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          - description: The name of the hyperparameter.
        minValue:
          allOf:
          - $ref: '#/components/schemas/IntegerMinValue'
          - description: The minimum allowable value for the hyperparameter.
        maxValue:
          allOf:
          - $ref: '#/components/schemas/IntegerMaxValue'
          - description: The maximum allowable value for the hyperparameter.
      type: object
    ItemAttribute:
      maxLength: 150
      minLength: 1
      type: string
    NextToken:
      maxLength: 1500
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    MetricAttributions:
      items:
        $ref: '#/components/schemas/MetricAttributionSummary'
      maxItems: 100
      type: array
    RecipeProvider:
      enum:
      - SERVICE
      type: string
    Recipes:
      items:
        $ref: '#/components/schemas/RecipeSummary'
      maxItems: 100
      type: array
    Recommenders:
      items:
        $ref: '#/components/schemas/RecommenderSummary'
      maxItems: 100
      type: array
    Schemas:
      items:
        $ref: '#/components/schemas/DatasetSchemaSummary'
      maxItems: 100
      type: array
    SolutionVersions:
      items:
        $ref: '#/components/schemas/SolutionVersionSummary'
      maxItems: 100
      type: array
    Solutions:
      items:
        $ref: '#/components/schemas/SolutionSummary'
      maxItems: 100
      type: array
    MetricExpression:
      maxLength: 256
      type: string
    MetricAttribute:
      description: "Contains information on a metric that a metric attribution reports\
        \ on. For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html\"\
        >Measuring impact of recommendations</a>."
      properties:
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: The metric's event type.
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The metric's name. The name helps you identify the metric
              in Amazon CloudWatch or Amazon S3.
        expression:
          allOf:
          - $ref: '#/components/schemas/MetricExpression'
          - description: "The attribute's expression. Available functions are <code>SUM()</code>\
              \ or <code>SAMPLECOUNT()</code>. For SUM() functions, provide the dataset\
              \ type (either Interactions or Items) and column to sum as a parameter.\
              \ For example SUM(Items.PRICE)."
      required:
      - eventType
      - expression
      - metricName
      type: object
    MetricAttributesNamesList:
      items:
        $ref: '#/components/schemas/MetricName'
      maxItems: 10
      type: array
    MetricAttributionSummary:
      description: "Provides a summary of the properties of a metric attribution.\
        \ For a complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeMetricAttribution.html\"\
        >DescribeMetricAttribution</a>."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the metric attribution.
        metricAttributionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The metric attribution's Amazon Resource Name (ARN).
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The metric attribution's status.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The metric attribution's creation date time.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The metric attribution's last updated date time.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: The metric attribution's failure reason.
      type: object
    MetricValue:
      format: double
      type: number
    ObjectiveSensitivity:
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - "false"
      type: string
    OptimizationObjective:
      description: "Describes the additional objective for the solution, such as maximizing\
        \ streaming minutes or increasing revenue. For more information see <a href=\"\
        https://docs.aws.amazon.com/personalize/latest/dg/optimizing-solution-for-objective.html\"\
        >Optimizing a solution</a>."
      properties:
        itemAttribute:
          allOf:
          - $ref: '#/components/schemas/ItemAttribute'
          - description: "The numerical metadata column in an Items dataset related\
              \ to the optimization objective. For example, VIDEO_LENGTH (to maximize\
              \ streaming minutes), or PRICE (to maximize revenue)."
        objectiveSensitivity:
          allOf:
          - $ref: '#/components/schemas/ObjectiveSensitivity'
          - description: Specifies how Amazon Personalize balances the importance
              of your optimization objective versus relevance.
      type: object
    PerformHPO:
      type: boolean
    RecipeType:
      maxLength: 256
      type: string
    RecipeSummary:
      description: "Provides a summary of the properties of a recipe. For a complete\
        \ listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeRecipe.html\"\
        >DescribeRecipe</a> API."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the recipe.
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recipe.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the recipe.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the recipe was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the recipe was last
              updated.
        domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: The domain of the recipe (if the recipe is a Domain dataset
              group use case).
      type: object
    RecommenderUpdateSummary:
      description: "Provides a summary of the properties of a recommender update.\
        \ For a complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeRecommender.html\"\
        >DescribeRecommender</a> API."
      properties:
        recommenderConfig:
          $ref: '#/components/schemas/RecommenderUpdateSummary_recommenderConfig'
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the recommender update
              was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the recommender update
              was last updated.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the recommender update.</p> <p>A recommender
              can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING
              &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li>
              <p>STOP PENDING &gt; STOP IN_PROGRESS &gt; INACTIVE &gt; START PENDING
              &gt; START IN_PROGRESS &gt; ACTIVE</p> </li> <li> <p>DELETE PENDING
              &gt; DELETE IN_PROGRESS</p> </li> </ul>
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a recommender update fails, the reason behind the failure."
      type: object
    RecommenderSummary:
      description: Provides a summary of the properties of the recommender.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the recommender.
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender.
        datasetGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Domain dataset group
              that contains the recommender.
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recipe (Domain dataset
              group use case) that the recommender was created for.
        recommenderConfig:
          $ref: '#/components/schemas/CreateRecommenderRequest_recommenderConfig'
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the recommender. A recommender can be in
              one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE
              IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>STOP PENDING
              &gt; STOP IN_PROGRESS &gt; INACTIVE &gt; START PENDING &gt; START IN_PROGRESS
              &gt; ACTIVE</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p>
              </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the recommender was
              created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix format) that the recommender was
              last updated.
      type: object
    SolutionVersionSummary:
      description: "Provides a summary of the properties of a solution version. For\
        \ a complete listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolutionVersion.html\"\
        >DescribeSolutionVersion</a> API."
      properties:
        solutionVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution version.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the solution version.</p> <p>A solution
              version can be in one of the following states:</p> <ul> <li> <p>CREATE
              PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li>
              </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that this version of a solution
              was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the solution version
              was last updated.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: "If a solution version fails, the reason behind the failure."
      type: object
    SolutionSummary:
      description: "Provides a summary of the properties of a solution. For a complete\
        \ listing, call the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\"\
        >DescribeSolution</a> API."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the solution.
        solutionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the solution.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the solution.</p> <p>A solution can be in
              one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE
              IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE
              PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the solution was created.
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time (in Unix time) that the solution was last
              updated.
        recipeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recipe used by the
              solution.
      type: object
    TrainingHours:
      format: double
      minimum: 0
      type: number
    TunedHPOParams:
      description: "If hyperparameter optimization (HPO) was performed, contains the\
        \ hyperparameter values of the best performing model."
      properties:
        algorithmHyperParameters:
          allOf:
          - $ref: '#/components/schemas/HyperParameters'
          - description: A list of the hyperparameter values of the best performing
              model.
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    Tag:
      description: "The optional metadata that you apply to resources to help you\
        \ categorize and organize them. Each tag consists of a key and an optional\
        \ value, both of which you define. For more information see <a href=\"https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html\"\
        >Tagging Personalize resources</a>. "
      properties:
        tagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: One part of a key-value pair that makes up a tag. A key is
              a general label that acts like a category for more specific tag values.
        tagValue:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The optional part of a key-value pair that makes up a tag.
              A value acts as a descriptor within a tag category (key).
      required:
      - tagKey
      - tagValue
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    CreateBatchInferenceJobRequest_jobInput:
      allOf:
      - $ref: '#/components/schemas/BatchInferenceJobInput'
      - description: The Amazon S3 path that leads to the input file to base your
          recommendations on. The input material must be in JSON format.
      example:
        s3DataSource:
          path: ""
          kmsKeyArn: ""
    CreateBatchInferenceJobRequest_jobOutput:
      allOf:
      - $ref: '#/components/schemas/BatchInferenceJobOutput'
      - description: The path to the Amazon S3 bucket where the job's output will
          be stored.
      example:
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    CreateBatchInferenceJobRequest_batchInferenceJobConfig:
      allOf:
      - $ref: '#/components/schemas/BatchInferenceJobConfig'
      - description: The configuration details of a batch inference job.
      example:
        itemExplorationConfig: ""
    CreateBatchSegmentJobRequest_jobInput:
      allOf:
      - $ref: '#/components/schemas/BatchSegmentJobInput'
      - description: The Amazon S3 path for the input data used to generate the batch
          segment job.
      example:
        s3DataSource:
          path: ""
          kmsKeyArn: ""
    CreateBatchSegmentJobRequest_jobOutput:
      allOf:
      - $ref: '#/components/schemas/BatchSegmentJobOutput'
      - description: The Amazon S3 path for the bucket where the job's output will
          be stored.
      example:
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    CreateCampaignRequest_campaignConfig:
      allOf:
      - $ref: '#/components/schemas/CampaignConfig'
      - description: The configuration details of a campaign.
      example:
        itemExplorationConfig: ""
    CreateDatasetExportJobRequest_jobOutput:
      allOf:
      - $ref: '#/components/schemas/DatasetExportJobOutput'
      - description: The path to the Amazon S3 bucket where the job's output is stored.
      example:
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    CreateDatasetImportJobRequest_dataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: The Amazon S3 bucket that contains the training data to import.
      example:
        dataLocation: ""
    CreateMetricAttributionRequest_metricsOutputConfig:
      allOf:
      - $ref: '#/components/schemas/MetricAttributionOutput'
      - description: The output configuration details for the metric attribution.
      example:
        roleArn: ""
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    CreateRecommenderRequest_recommenderConfig:
      allOf:
      - $ref: '#/components/schemas/RecommenderConfig'
      - description: The configuration details of the recommender.
      example:
        itemExplorationConfig: ""
        minRecommendationRequestsPerSecond: ""
    CreateSolutionRequest_solutionConfig:
      allOf:
      - $ref: '#/components/schemas/SolutionConfig'
      - description: "<p>The configuration to use with the solution. When <code>performAutoML</code>\
          \ is set to true, Amazon Personalize only evaluates the <code>autoMLConfig</code>\
          \ section of the solution configuration.</p> <note> <p>Amazon Personalize\
          \ doesn't support configuring the <code>hpoObjective</code> at this time.</p>\
          \ </note>"
      example:
        featureTransformationParameters: ""
        hpoConfig:
          hpoResourceConfig:
            maxParallelTrainingJobs: ""
            maxNumberOfTrainingJobs: ""
          hpoObjective:
            metricName: ""
            metricRegex: ""
            type: ""
          algorithmHyperParameterRanges:
            integerHyperParameterRanges: ""
            continuousHyperParameterRanges: ""
            categoricalHyperParameterRanges: ""
        autoMLConfig:
          metricName: ""
          recipeList: ""
        algorithmHyperParameters: ""
        optimizationObjective:
          objectiveSensitivity: ""
          itemAttribute: ""
        eventValueThreshold: ""
    DescribeAlgorithmResponse_algorithm:
      allOf:
      - $ref: '#/components/schemas/Algorithm'
      - description: A listing of the properties of the algorithm.
      example:
        trainingInputMode: ""
        defaultHyperParameterRanges:
          integerHyperParameterRanges: ""
          continuousHyperParameterRanges: ""
          categoricalHyperParameterRanges: ""
        defaultHyperParameters: ""
        roleArn: ""
        defaultResourceConfig: ""
        name: ""
        algorithmArn: ""
        lastUpdatedDateTime: ""
        algorithmImage:
          name: ""
          dockerURI: ""
        creationDateTime: ""
    DescribeBatchInferenceJobResponse_batchInferenceJob:
      allOf:
      - $ref: '#/components/schemas/BatchInferenceJob'
      - description: Information on the specified batch inference job.
      example:
        jobName: ""
        numResults: ""
        jobInput:
          s3DataSource:
            path: ""
            kmsKeyArn: ""
        jobOutput:
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        batchInferenceJobConfig:
          itemExplorationConfig: ""
        batchInferenceJobArn: ""
        filterArn: ""
        roleArn: ""
        failureReason: ""
        lastUpdatedDateTime: ""
        solutionVersionArn: ""
        status: ""
        creationDateTime: ""
    DescribeBatchSegmentJobResponse_batchSegmentJob:
      allOf:
      - $ref: '#/components/schemas/BatchSegmentJob'
      - description: Information on the specified batch segment job.
      example:
        jobName: ""
        filterArn: ""
        roleArn: ""
        failureReason: ""
        batchSegmentJobArn: ""
        numResults: ""
        lastUpdatedDateTime: ""
        solutionVersionArn: ""
        jobInput:
          s3DataSource:
            path: ""
            kmsKeyArn: ""
        jobOutput:
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        status: ""
        creationDateTime: ""
    DescribeCampaignResponse_campaign:
      allOf:
      - $ref: '#/components/schemas/Campaign'
      - description: The properties of the campaign.
      example:
        minProvisionedTPS: ""
        failureReason: ""
        name: ""
        lastUpdatedDateTime: ""
        latestCampaignUpdate:
          minProvisionedTPS: ""
          failureReason: ""
          lastUpdatedDateTime: ""
          solutionVersionArn: ""
          campaignConfig:
            itemExplorationConfig: ""
          status: ""
          creationDateTime: ""
        solutionVersionArn: ""
        campaignArn: ""
        campaignConfig:
          itemExplorationConfig: ""
        status: ""
        creationDateTime: ""
    DescribeDatasetResponse_dataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - description: A listing of the dataset's properties.
      example:
        datasetArn: ""
        name: ""
        datasetGroupArn: ""
        lastUpdatedDateTime: ""
        datasetType: ""
        schemaArn: ""
        status: ""
        creationDateTime: ""
    DescribeDatasetExportJobResponse_datasetExportJob:
      allOf:
      - $ref: '#/components/schemas/DatasetExportJob'
      - description: "<p>Information about the dataset export job, including the status.</p>\
          \ <p>The status is one of the following values:</p> <ul> <li> <p>CREATE\
          \ PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p>\
          \ </li> <li> <p>CREATE FAILED</p> </li> </ul>"
      example:
        jobName: ""
        datasetArn: ""
        datasetExportJobArn: ""
        ingestionMode: ""
        roleArn: ""
        failureReason: ""
        lastUpdatedDateTime: ""
        status: ""
        jobOutput:
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        creationDateTime: ""
    DescribeDatasetGroupResponse_datasetGroup:
      allOf:
      - $ref: '#/components/schemas/DatasetGroup'
      - description: A listing of the dataset group's properties.
      example:
        roleArn: ""
        kmsKeyArn: ""
        failureReason: ""
        domain: ""
        name: ""
        datasetGroupArn: ""
        lastUpdatedDateTime: ""
        status: ""
        creationDateTime: ""
    DescribeDatasetImportJobResponse_datasetImportJob:
      allOf:
      - $ref: '#/components/schemas/DatasetImportJob'
      - description: "<p>Information about the dataset import job, including the status.</p>\
          \ <p>The status is one of the following values:</p> <ul> <li> <p>CREATE\
          \ PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p>\
          \ </li> <li> <p>CREATE FAILED</p> </li> </ul>"
      example:
        jobName: ""
        datasetArn: ""
        importMode: ""
        publishAttributionMetricsToS3: ""
        roleArn: ""
        failureReason: ""
        lastUpdatedDateTime: ""
        datasetImportJobArn: ""
        dataSource:
          dataLocation: ""
        status: ""
        creationDateTime: ""
    DescribeEventTrackerResponse_eventTracker:
      allOf:
      - $ref: '#/components/schemas/EventTracker'
      - description: An object that describes the event tracker.
      example:
        accountId: ""
        eventTrackerArn: ""
        name: ""
        datasetGroupArn: ""
        lastUpdatedDateTime: ""
        trackingId: ""
        status: ""
        creationDateTime: ""
    DescribeFeatureTransformationResponse_featureTransformation:
      allOf:
      - $ref: '#/components/schemas/FeatureTransformation'
      - description: A listing of the FeatureTransformation properties.
      example:
        defaultParameters: ""
        name: ""
        featureTransformationArn: ""
        lastUpdatedDateTime: ""
        creationDateTime: ""
        status: ""
    DescribeFilterResponse_filter:
      allOf:
      - $ref: '#/components/schemas/Filter'
      - description: The filter's details.
      example:
        filterArn: ""
        failureReason: ""
        name: ""
        datasetGroupArn: ""
        filterExpression: ""
        lastUpdatedDateTime: ""
        creationDateTime: ""
        status: ""
    DescribeMetricAttributionResponse_metricAttribution:
      allOf:
      - $ref: '#/components/schemas/MetricAttribution'
      - description: The details of the metric attribution.
      example:
        metricAttributionArn: ""
        metricsOutputConfig:
          roleArn: ""
          s3DataDestination:
            path: ""
            kmsKeyArn: ""
        failureReason: ""
        name: ""
        datasetGroupArn: ""
        lastUpdatedDateTime: ""
        status: ""
        creationDateTime: ""
    DescribeRecipeResponse_recipe:
      allOf:
      - $ref: '#/components/schemas/Recipe'
      - description: An object that describes the recipe.
      example:
        recipeArn: ""
        recipeType: ""
        name: ""
        algorithmArn: ""
        featureTransformationArn: ""
        description: ""
        lastUpdatedDateTime: ""
        status: ""
        creationDateTime: ""
    DescribeRecommenderResponse_recommender:
      allOf:
      - $ref: '#/components/schemas/Recommender'
      - description: The properties of the recommender.
      example:
        recipeArn: ""
        recommenderConfig:
          itemExplorationConfig: ""
          minRecommendationRequestsPerSecond: ""
        recommenderArn: ""
        failureReason: ""
        modelMetrics: ""
        datasetGroupArn: ""
        name: ""
        latestRecommenderUpdate:
          recommenderConfig:
            itemExplorationConfig: ""
            minRecommendationRequestsPerSecond: ""
          failureReason: ""
          lastUpdatedDateTime: ""
          creationDateTime: ""
          status: ""
        lastUpdatedDateTime: ""
        creationDateTime: ""
        status: ""
    DescribeSchemaResponse_schema:
      allOf:
      - $ref: '#/components/schemas/DatasetSchema'
      - description: The requested schema.
      example:
        schema: ""
        domain: ""
        name: ""
        lastUpdatedDateTime: ""
        schemaArn: ""
        creationDateTime: ""
    DescribeSolutionResponse_solution:
      allOf:
      - $ref: '#/components/schemas/Solution'
      - description: An object that describes the solution.
      example:
        performAutoML: ""
        performHPO: ""
        autoMLResult:
          bestRecipeArn: ""
        eventType: ""
        solutionConfig:
          featureTransformationParameters: ""
          hpoConfig:
            hpoResourceConfig:
              maxParallelTrainingJobs: ""
              maxNumberOfTrainingJobs: ""
            hpoObjective:
              metricName: ""
              metricRegex: ""
              type: ""
            algorithmHyperParameterRanges:
              integerHyperParameterRanges: ""
              continuousHyperParameterRanges: ""
              categoricalHyperParameterRanges: ""
          autoMLConfig:
            metricName: ""
            recipeList: ""
          algorithmHyperParameters: ""
          optimizationObjective:
            objectiveSensitivity: ""
            itemAttribute: ""
          eventValueThreshold: ""
        solutionArn: ""
        recipeArn: ""
        name: ""
        datasetGroupArn: ""
        lastUpdatedDateTime: ""
        latestSolutionVersion:
          failureReason: ""
          lastUpdatedDateTime: ""
          solutionVersionArn: ""
          status: ""
          creationDateTime: ""
        status: ""
        creationDateTime: ""
    DescribeSolutionVersionResponse_solutionVersion:
      allOf:
      - $ref: '#/components/schemas/SolutionVersion'
      - description: The solution version.
      example:
        performAutoML: ""
        performHPO: ""
        eventType: ""
        trainingMode: ""
        solutionConfig:
          featureTransformationParameters: ""
          hpoConfig:
            hpoResourceConfig:
              maxParallelTrainingJobs: ""
              maxNumberOfTrainingJobs: ""
            hpoObjective:
              metricName: ""
              metricRegex: ""
              type: ""
            algorithmHyperParameterRanges:
              integerHyperParameterRanges: ""
              continuousHyperParameterRanges: ""
              categoricalHyperParameterRanges: ""
          autoMLConfig:
            metricName: ""
            recipeList: ""
          algorithmHyperParameters: ""
          optimizationObjective:
            objectiveSensitivity: ""
            itemAttribute: ""
          eventValueThreshold: ""
        solutionArn: ""
        recipeArn: ""
        trainingHours: ""
        failureReason: ""
        name: ""
        datasetGroupArn: ""
        tunedHPOParams:
          algorithmHyperParameters: ""
        lastUpdatedDateTime: ""
        solutionVersionArn: ""
        status: ""
        creationDateTime: ""
    UpdateMetricAttributionRequest_metricsOutputConfig:
      allOf:
      - $ref: '#/components/schemas/MetricAttributionOutput'
      - description: An output config for the metric attribution.
      example:
        roleArn: ""
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    Algorithm_algorithmImage:
      allOf:
      - $ref: '#/components/schemas/AlgorithmImage'
      - description: The URI of the Docker container for the algorithm image.
      example:
        name: ""
        dockerURI: ""
    Algorithm_defaultHyperParameterRanges:
      allOf:
      - $ref: '#/components/schemas/DefaultHyperParameterRanges'
      - description: "Specifies the default hyperparameters, their ranges, and whether\
          \ they are tunable. A tunable hyperparameter can have its value determined\
          \ during hyperparameter optimization (HPO)."
      example:
        integerHyperParameterRanges: ""
        continuousHyperParameterRanges: ""
        categoricalHyperParameterRanges: ""
    BatchInferenceJobInput_s3DataSource:
      allOf:
      - $ref: '#/components/schemas/S3DataConfig'
      - description: The URI of the Amazon S3 location that contains your input data.
          The Amazon S3 bucket must be in the same region as the API endpoint you
          are calling.
      example:
        path: ""
        kmsKeyArn: ""
    BatchInferenceJobOutput_s3DataDestination:
      allOf:
      - $ref: '#/components/schemas/S3DataConfig'
      - description: Information on the Amazon S3 bucket in which the batch inference
          job's output is stored.
      example:
        path: ""
        kmsKeyArn: ""
    BatchInferenceJob_jobInput:
      allOf:
      - $ref: '#/components/schemas/BatchInferenceJobInput'
      - description: The Amazon S3 path that leads to the input data used to generate
          the batch inference job.
      example:
        s3DataSource:
          path: ""
          kmsKeyArn: ""
    BatchInferenceJob_jobOutput:
      allOf:
      - $ref: '#/components/schemas/BatchInferenceJobOutput'
      - description: The Amazon S3 bucket that contains the output data generated
          by the batch inference job.
      example:
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    BatchInferenceJob_batchInferenceJobConfig:
      allOf:
      - $ref: '#/components/schemas/BatchInferenceJobConfig'
      - description: A string to string map of the configuration details of a batch
          inference job.
      example:
        itemExplorationConfig: ""
    BatchSegmentJob_jobInput:
      allOf:
      - $ref: '#/components/schemas/BatchSegmentJobInput'
      - description: The Amazon S3 path that leads to the input data used to generate
          the batch segment job.
      example:
        s3DataSource:
          path: ""
          kmsKeyArn: ""
    BatchSegmentJob_jobOutput:
      allOf:
      - $ref: '#/components/schemas/BatchSegmentJobOutput'
      - description: The Amazon S3 bucket that contains the output data generated
          by the batch segment job.
      example:
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    SolutionConfig_hpoConfig:
      allOf:
      - $ref: '#/components/schemas/HPOConfig'
      - description: Describes the properties for hyperparameter optimization (HPO).
      example:
        hpoResourceConfig:
          maxParallelTrainingJobs: ""
          maxNumberOfTrainingJobs: ""
        hpoObjective:
          metricName: ""
          metricRegex: ""
          type: ""
        algorithmHyperParameterRanges:
          integerHyperParameterRanges: ""
          continuousHyperParameterRanges: ""
          categoricalHyperParameterRanges: ""
    SolutionConfig_autoMLConfig:
      allOf:
      - $ref: '#/components/schemas/AutoMLConfig'
      - description: The <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_AutoMLConfig.html">AutoMLConfig</a>
          object containing a list of recipes to search when AutoML is performed.
      example:
        metricName: ""
        recipeList: ""
    SolutionConfig_optimizationObjective:
      allOf:
      - $ref: '#/components/schemas/OptimizationObjective'
      - description: "Describes the additional objective for the solution, such as\
          \ maximizing streaming minutes or increasing revenue. For more information\
          \ see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/optimizing-solution-for-objective.html\"\
          >Optimizing a solution</a>."
      example:
        objectiveSensitivity: ""
        itemAttribute: ""
    DatasetExportJob_jobOutput:
      allOf:
      - $ref: '#/components/schemas/DatasetExportJobOutput'
      - description: <p>The path to the Amazon S3 bucket where the job's output is
          stored. For example:</p> <p> <code>s3://bucket-name/folder-name/</code>
          </p>
      example:
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    MetricAttribution_metricsOutputConfig:
      allOf:
      - $ref: '#/components/schemas/MetricAttributionOutput'
      - description: The metric attribution's output configuration.
      example:
        roleArn: ""
        s3DataDestination:
          path: ""
          kmsKeyArn: ""
    Recommender_latestRecommenderUpdate:
      allOf:
      - $ref: '#/components/schemas/RecommenderUpdateSummary'
      - description: 'Provides a summary of the latest updates to the recommender. '
      example:
        recommenderConfig:
          itemExplorationConfig: ""
          minRecommendationRequestsPerSecond: ""
        failureReason: ""
        lastUpdatedDateTime: ""
        creationDateTime: ""
        status: ""
    Solution_solutionConfig:
      allOf:
      - $ref: '#/components/schemas/SolutionConfig'
      - description: Describes the configuration properties for the solution.
      example:
        featureTransformationParameters: ""
        hpoConfig:
          hpoResourceConfig:
            maxParallelTrainingJobs: ""
            maxNumberOfTrainingJobs: ""
          hpoObjective:
            metricName: ""
            metricRegex: ""
            type: ""
          algorithmHyperParameterRanges:
            integerHyperParameterRanges: ""
            continuousHyperParameterRanges: ""
            categoricalHyperParameterRanges: ""
        autoMLConfig:
          metricName: ""
          recipeList: ""
        algorithmHyperParameters: ""
        optimizationObjective:
          objectiveSensitivity: ""
          itemAttribute: ""
        eventValueThreshold: ""
    Solution_autoMLResult:
      allOf:
      - $ref: '#/components/schemas/AutoMLResult'
      - description: "When <code>performAutoML</code> is true, specifies the best\
          \ recipe found."
      example:
        bestRecipeArn: ""
    Solution_latestSolutionVersion:
      allOf:
      - $ref: '#/components/schemas/SolutionVersionSummary'
      - description: "Describes the latest version of the solution, including the\
          \ status and the ARN."
      example:
        failureReason: ""
        lastUpdatedDateTime: ""
        solutionVersionArn: ""
        status: ""
        creationDateTime: ""
    SolutionVersion_tunedHPOParams:
      allOf:
      - $ref: '#/components/schemas/TunedHPOParams'
      - description: "If hyperparameter optimization was performed, contains the hyperparameter\
          \ values of the best performing model."
      example:
        algorithmHyperParameters: ""
    HPOConfig_hpoObjective:
      allOf:
      - $ref: '#/components/schemas/HPOObjective'
      - description: <p>The metric to optimize during HPO.</p> <note> <p>Amazon Personalize
          doesn't support configuring the <code>hpoObjective</code> at this time.</p>
          </note>
      example:
        metricName: ""
        metricRegex: ""
        type: ""
    HPOConfig_hpoResourceConfig:
      allOf:
      - $ref: '#/components/schemas/HPOResourceConfig'
      - description: Describes the resource configuration for HPO.
      example:
        maxParallelTrainingJobs: ""
        maxNumberOfTrainingJobs: ""
    HPOConfig_algorithmHyperParameterRanges:
      allOf:
      - $ref: '#/components/schemas/HyperParameterRanges'
      - description: The hyperparameters and their allowable ranges.
      example:
        integerHyperParameterRanges: ""
        continuousHyperParameterRanges: ""
        categoricalHyperParameterRanges: ""
    RecommenderUpdateSummary_recommenderConfig:
      allOf:
      - $ref: '#/components/schemas/RecommenderConfig'
      - description: The configuration details of the recommender update.
      example:
        itemExplorationConfig: ""
        minRecommendationRequestsPerSecond: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

