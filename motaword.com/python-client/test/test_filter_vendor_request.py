# coding: utf-8

"""
    MotaWord API

    Use MotaWord API to post and track your translation projects.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.filter_vendor_request import FilterVendorRequest

class TestFilterVendorRequest(unittest.TestCase):
    """FilterVendorRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FilterVendorRequest:
        """Test FilterVendorRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FilterVendorRequest`
        """
        model = FilterVendorRequest()
        if include_optional:
            return FilterVendorRequest(
                clients = [
                    56
                    ],
                communication_channel = [
                    ''
                    ],
                corporate_ids_for_auth = [
                    56
                    ],
                corporates = [
                    56
                    ],
                country = [
                    ''
                    ],
                created_at = '',
                current_services = [
                    ''
                    ],
                daily_proofreading_capacity = 56,
                daily_translation_capacity = 56,
                destination_languages = [
                    56
                    ],
                dtp_software = [
                    ''
                    ],
                email_address = '',
                experience = [
                    ''
                    ],
                first_name = '',
                id = [
                    56
                    ],
                is_certified_translator = True,
                is_sworn_translator = True,
                language_pairs = [
                    [
                        56
                        ]
                    ],
                last_name = '',
                last_online = '',
                last_worked = '',
                memoq = 56,
                memsource = 56,
                min_tqs = 1.337,
                omegat = 56,
                project_count = 56,
                proofreader_experience = 56,
                provides_creative_writing_service = True,
                provides_postedit_service = True,
                quote_file_subjects = [
                    ''
                    ],
                reference = '',
                sdl_trados = 56,
                search = '',
                skype_id = '',
                smartcat = 56,
                smartling = 56,
                source_languages = [
                    56
                    ],
                specialization = [
                    ''
                    ],
                status = [
                    ''
                    ],
                subtitle_edit = 56,
                subtitle_workshop = 56,
                translator_association = '',
                transsuite_2000 = 56,
                user_working_timezone = [
                    ''
                    ],
                vendor_profile_lsp = '',
                vendor_tags = [
                    ''
                    ],
                vendor_type = [
                    ''
                    ],
                vendor_working_timezone = [
                    ''
                    ],
                word_count = 56,
                wordbee = 56,
                wordfast = 56,
                work_type = '',
                work_with = '',
                working_as = [
                    ''
                    ],
                xbench = 56,
                xtm = 56
            )
        else:
            return FilterVendorRequest(
        )
        """

    def testFilterVendorRequest(self):
        """Test FilterVendorRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
