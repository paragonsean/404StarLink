# coding: utf-8

"""
    MotaWord API

    Use MotaWord API to post and track your translation projects.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_everywhere_result import SearchEverywhereResult

class TestSearchEverywhereResult(unittest.TestCase):
    """SearchEverywhereResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchEverywhereResult:
        """Test SearchEverywhereResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchEverywhereResult`
        """
        model = SearchEverywhereResult()
        if include_optional:
            return SearchEverywhereResult(
                meta = openapi_client.models.paging_meta.PagingMeta(
                    paging = openapi_client.models.paging_meta_paging.PagingMeta_paging(
                        count = 56, 
                        links = null, 
                        page = 56, 
                        per_page = 56, 
                        total_count = 56, ), ),
                result = openapi_client.models.search_everywhere_result_result.SearchEverywhereResult_result(
                    documents = [
                        null
                        ], 
                    projects = [
                        null
                        ], 
                    strings = [
                        openapi_client.models.string_in_search.StringInSearch(
                            file_id = 56, 
                            internal_project_id = 56, 
                            last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            project_id = 56, 
                            search_score = 1.337, 
                            source = '', 
                            status = 'Approved', 
                            string_id = 56, 
                            target = '', 
                            targets = [
                                ''
                                ], 
                            tm_name = '', 
                            type = 'LOCAL_PROJECT', )
                        ], )
            )
        else:
            return SearchEverywhereResult(
        )
        """

    def testSearchEverywhereResult(self):
        """Test SearchEverywhereResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
