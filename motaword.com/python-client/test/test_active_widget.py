# coding: utf-8

"""
    MotaWord API

    Use MotaWord API to post and track your translation projects.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.active_widget import ActiveWidget

class TestActiveWidget(unittest.TestCase):
    """ActiveWidget unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActiveWidget:
        """Test ActiveWidget
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActiveWidget`
        """
        model = ActiveWidget()
        if include_optional:
            return ActiveWidget(
                allow_hash_in_url = True,
                allow_query_in_url = True,
                auto_detect_source_language = True,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                elements = '',
                follow_user = True,
                force_cache_refresh_interval = True,
                id = 56,
                language_mappings = '',
                live = True,
                modify_links = True,
                name = '',
                optimize_per_page = True,
                pages = '',
                path_regex = '',
                position = '',
                query_name = 'locale',
                reboot_on_url_change = True,
                restricted_domains = '',
                sections = '',
                test_mode = True,
                theme = '',
                token = '',
                url_change_mode = '',
                url_mode = '',
                use_cache = True,
                use_dummy_translations = True,
                variables = ''
            )
        else:
            return ActiveWidget(
        )
        """

    def testActiveWidget(self):
        """Test ActiveWidget"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
