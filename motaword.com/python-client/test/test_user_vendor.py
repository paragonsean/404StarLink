# coding: utf-8

"""
    MotaWord API

    Use MotaWord API to post and track your translation projects.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_vendor import UserVendor

class TestUserVendor(unittest.TestCase):
    """UserVendor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserVendor:
        """Test UserVendor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserVendor`
        """
        model = UserVendor()
        if include_optional:
            return UserVendor(
                can_work_manual_files = True,
                email_open_rate = 1.337,
                is_frozen = True,
                is_proofreader = True,
                language_pairs = [
                    openapi_client.models.language_pair.LanguagePair(
                        source_language = '', 
                        target_language = '', )
                    ],
                native_language = '',
                pam_tqs = 1.337,
                paypal_email = '',
                profile_survey = openapi_client.models.profile_survey.ProfileSurvey(
                    current_services = '', 
                    daily_proofreading_capacity = '', 
                    daily_translation_capacity = '', 
                    dtp_software = '', 
                    experience = '', 
                    is_certified_translator = '', 
                    is_sworn_translator = '', 
                    memoq = '', 
                    memsource = '', 
                    omegat = '', 
                    proofreader_experience = '', 
                    provides_creative_writing_service = '', 
                    provides_postedit_service = '', 
                    reference = '', 
                    sdl_trados = '', 
                    skype_id = '', 
                    smartcat = '', 
                    smartling = '', 
                    software = '', 
                    specialization = '', 
                    subtitle_edit = '', 
                    subtitle_workshop = '', 
                    translator_association = '', 
                    transsuite_2000 = '', 
                    vendor_profile_lsp = '', 
                    wordbee = '', 
                    wordfast = '', 
                    work_type = '', 
                    work_with = '', 
                    working_as = '', 
                    working_timezone = '', 
                    xbench = '', 
                    xtm = '', ),
                require_1099 = True,
                tags = [
                    ''
                    ],
                tms_user_name = '',
                vendor_type = ''
            )
        else:
            return UserVendor(
        )
        """

    def testUserVendor(self):
        """Test UserVendor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
