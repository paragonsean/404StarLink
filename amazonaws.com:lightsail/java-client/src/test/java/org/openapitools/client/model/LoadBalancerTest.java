/*
 * Amazon Lightsail
 * <p>Amazon Lightsail is the easiest way to get started with Amazon Web Services (Amazon Web Services) for developers who need to build websites or web applications. It includes everything you need to launch your project quickly - instances (virtual private servers), container services, storage buckets, managed databases, SSD-based block storage, static IP addresses, load balancers, content delivery network (CDN) distributions, DNS management of registered domains, and resource snapshots (backups) - for a low, predictable monthly price.</p> <p>You can manage your Lightsail resources using the Lightsail console, Lightsail API, Command Line Interface (CLI), or SDKs. For more information about Lightsail concepts and tasks, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli\">Amazon Lightsail Developer Guide</a>.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the Lightsail service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Lightsail service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lightsail.html\">Amazon Lightsail Endpoints and Quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.IpAddressType;
import org.openapitools.client.model.LoadBalancerLocation;
import org.openapitools.client.model.LoadBalancerProtocol;
import org.openapitools.client.model.LoadBalancerState;
import org.openapitools.client.model.ResourceType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LoadBalancer
 */
public class LoadBalancerTest {
    private final LoadBalancer model = new LoadBalancer();

    /**
     * Model tests for LoadBalancer
     */
    @Test
    public void testLoadBalancer() {
        // TODO: test LoadBalancer
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'supportCode'
     */
    @Test
    public void supportCodeTest() {
        // TODO: test supportCode
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'resourceType'
     */
    @Test
    public void resourceTypeTest() {
        // TODO: test resourceType
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'dnsName'
     */
    @Test
    public void dnsNameTest() {
        // TODO: test dnsName
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'publicPorts'
     */
    @Test
    public void publicPortsTest() {
        // TODO: test publicPorts
    }

    /**
     * Test the property 'healthCheckPath'
     */
    @Test
    public void healthCheckPathTest() {
        // TODO: test healthCheckPath
    }

    /**
     * Test the property 'instancePort'
     */
    @Test
    public void instancePortTest() {
        // TODO: test instancePort
    }

    /**
     * Test the property 'instanceHealthSummary'
     */
    @Test
    public void instanceHealthSummaryTest() {
        // TODO: test instanceHealthSummary
    }

    /**
     * Test the property 'tlsCertificateSummaries'
     */
    @Test
    public void tlsCertificateSummariesTest() {
        // TODO: test tlsCertificateSummaries
    }

    /**
     * Test the property 'configurationOptions'
     */
    @Test
    public void configurationOptionsTest() {
        // TODO: test configurationOptions
    }

    /**
     * Test the property 'ipAddressType'
     */
    @Test
    public void ipAddressTypeTest() {
        // TODO: test ipAddressType
    }

    /**
     * Test the property 'httpsRedirectionEnabled'
     */
    @Test
    public void httpsRedirectionEnabledTest() {
        // TODO: test httpsRedirectionEnabled
    }

    /**
     * Test the property 'tlsPolicyName'
     */
    @Test
    public void tlsPolicyNameTest() {
        // TODO: test tlsPolicyName
    }

}
