/*
 * AWS OpsWorks
 * <fullname>AWS OpsWorks</fullname> <p>Welcome to the <i>AWS OpsWorks Stacks API Reference</i>. This guide provides descriptions, syntax, and usage examples for AWS OpsWorks Stacks actions and data types, including common parameters and error codes. </p> <p>AWS OpsWorks Stacks is an application management service that provides an integrated experience for overseeing the complete application lifecycle. For information about this product, go to the <a href=\"http://aws.amazon.com/opsworks/\">AWS OpsWorks</a> details page. </p> <p> <b>SDKs and CLI</b> </p> <p>The most common way to use the AWS OpsWorks Stacks API is by using the AWS Command Line Interface (CLI) or by using one of the AWS SDKs to implement applications in your preferred language. For more information, see:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html\">AWS CLI</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/opsworks/AWSOpsWorksClient.html\">AWS SDK for Java</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/latest/apidocs/html/N_Amazon_OpsWorks.htm\">AWS SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php-2/latest/class-Aws.OpsWorks.OpsWorksClient.html\">AWS SDK for PHP 2</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/sdkforruby/api/\">AWS SDK for Ruby</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/sdkforjavascript/\">AWS SDK for Node.js</a> </p> </li> <li> <p> <a href=\"http://docs.pythonboto.org/en/latest/ref/opsworks.html\">AWS SDK for Python(Boto)</a> </p> </li> </ul> <p> <b>Endpoints</b> </p> <p>AWS OpsWorks Stacks supports the following endpoints, all HTTPS. You must connect to one of the following endpoints. Stacks can only be accessed or managed within the endpoint in which they are created.</p> <ul> <li> <p>opsworks.us-east-1.amazonaws.com</p> </li> <li> <p>opsworks.us-east-2.amazonaws.com</p> </li> <li> <p>opsworks.us-west-1.amazonaws.com</p> </li> <li> <p>opsworks.us-west-2.amazonaws.com</p> </li> <li> <p>opsworks.ca-central-1.amazonaws.com (API only; not available in the AWS console)</p> </li> <li> <p>opsworks.eu-west-1.amazonaws.com</p> </li> <li> <p>opsworks.eu-west-2.amazonaws.com</p> </li> <li> <p>opsworks.eu-west-3.amazonaws.com</p> </li> <li> <p>opsworks.eu-central-1.amazonaws.com</p> </li> <li> <p>opsworks.ap-northeast-1.amazonaws.com</p> </li> <li> <p>opsworks.ap-northeast-2.amazonaws.com</p> </li> <li> <p>opsworks.ap-south-1.amazonaws.com</p> </li> <li> <p>opsworks.ap-southeast-1.amazonaws.com</p> </li> <li> <p>opsworks.ap-southeast-2.amazonaws.com</p> </li> <li> <p>opsworks.sa-east-1.amazonaws.com</p> </li> </ul> <p> <b>Chef Versions</b> </p> <p>When you call <a>CreateStack</a>, <a>CloneStack</a>, or <a>UpdateStack</a> we recommend you use the <code>ConfigurationManager</code> parameter to specify the Chef version. The recommended and default value for Linux stacks is currently 12. Windows stacks use Chef 12.2. For more information, see <a href=\"https://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook-chef11.html\">Chef Versions</a>.</p> <note> <p>You can specify Chef 12, 11.10, or 11.4 for your Linux stack. We recommend migrating your existing Linux stacks to Chef 12 as soon as possible.</p> </note>
 *
 * The version of the OpenAPI document: 2013-02-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Architecture;
import org.openapitools.client.model.AutoScalingType;
import org.openapitools.client.model.InstanceReportedOs;
import org.openapitools.client.model.RootDeviceType;
import org.openapitools.client.model.VirtualizationType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes an instance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:57:31.585098-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Instance {
  public static final String SERIALIZED_NAME_AGENT_VERSION = "AgentVersion";
  @SerializedName(SERIALIZED_NAME_AGENT_VERSION)
  private String agentVersion;

  public static final String SERIALIZED_NAME_AMI_ID = "AmiId";
  @SerializedName(SERIALIZED_NAME_AMI_ID)
  private String amiId;

  public static final String SERIALIZED_NAME_ARCHITECTURE = "Architecture";
  @SerializedName(SERIALIZED_NAME_ARCHITECTURE)
  private Architecture architecture;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_AUTO_SCALING_TYPE = "AutoScalingType";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_TYPE)
  private AutoScalingType autoScalingType;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "AvailabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_BLOCK_DEVICE_MAPPINGS = "BlockDeviceMappings";
  @SerializedName(SERIALIZED_NAME_BLOCK_DEVICE_MAPPINGS)
  private List blockDeviceMappings;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_EBS_OPTIMIZED = "EbsOptimized";
  @SerializedName(SERIALIZED_NAME_EBS_OPTIMIZED)
  private Boolean ebsOptimized;

  public static final String SERIALIZED_NAME_EC2_INSTANCE_ID = "Ec2InstanceId";
  @SerializedName(SERIALIZED_NAME_EC2_INSTANCE_ID)
  private String ec2InstanceId;

  public static final String SERIALIZED_NAME_ECS_CLUSTER_ARN = "EcsClusterArn";
  @SerializedName(SERIALIZED_NAME_ECS_CLUSTER_ARN)
  private String ecsClusterArn;

  public static final String SERIALIZED_NAME_ECS_CONTAINER_INSTANCE_ARN = "EcsContainerInstanceArn";
  @SerializedName(SERIALIZED_NAME_ECS_CONTAINER_INSTANCE_ARN)
  private String ecsContainerInstanceArn;

  public static final String SERIALIZED_NAME_ELASTIC_IP = "ElasticIp";
  @SerializedName(SERIALIZED_NAME_ELASTIC_IP)
  private String elasticIp;

  public static final String SERIALIZED_NAME_HOSTNAME = "Hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_INFRASTRUCTURE_CLASS = "InfrastructureClass";
  @SerializedName(SERIALIZED_NAME_INFRASTRUCTURE_CLASS)
  private String infrastructureClass;

  public static final String SERIALIZED_NAME_INSTALL_UPDATES_ON_BOOT = "InstallUpdatesOnBoot";
  @SerializedName(SERIALIZED_NAME_INSTALL_UPDATES_ON_BOOT)
  private Boolean installUpdatesOnBoot;

  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_INSTANCE_PROFILE_ARN = "InstanceProfileArn";
  @SerializedName(SERIALIZED_NAME_INSTANCE_PROFILE_ARN)
  private String instanceProfileArn;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private String instanceType;

  public static final String SERIALIZED_NAME_LAST_SERVICE_ERROR_ID = "LastServiceErrorId";
  @SerializedName(SERIALIZED_NAME_LAST_SERVICE_ERROR_ID)
  private String lastServiceErrorId;

  public static final String SERIALIZED_NAME_LAYER_IDS = "LayerIds";
  @SerializedName(SERIALIZED_NAME_LAYER_IDS)
  private List layerIds;

  public static final String SERIALIZED_NAME_OS = "Os";
  @SerializedName(SERIALIZED_NAME_OS)
  private String os;

  public static final String SERIALIZED_NAME_PLATFORM = "Platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_PRIVATE_DNS = "PrivateDns";
  @SerializedName(SERIALIZED_NAME_PRIVATE_DNS)
  private String privateDns;

  public static final String SERIALIZED_NAME_PRIVATE_IP = "PrivateIp";
  @SerializedName(SERIALIZED_NAME_PRIVATE_IP)
  private String privateIp;

  public static final String SERIALIZED_NAME_PUBLIC_DNS = "PublicDns";
  @SerializedName(SERIALIZED_NAME_PUBLIC_DNS)
  private String publicDns;

  public static final String SERIALIZED_NAME_PUBLIC_IP = "PublicIp";
  @SerializedName(SERIALIZED_NAME_PUBLIC_IP)
  private String publicIp;

  public static final String SERIALIZED_NAME_REGISTERED_BY = "RegisteredBy";
  @SerializedName(SERIALIZED_NAME_REGISTERED_BY)
  private String registeredBy;

  public static final String SERIALIZED_NAME_REPORTED_AGENT_VERSION = "ReportedAgentVersion";
  @SerializedName(SERIALIZED_NAME_REPORTED_AGENT_VERSION)
  private String reportedAgentVersion;

  public static final String SERIALIZED_NAME_REPORTED_OS = "ReportedOs";
  @SerializedName(SERIALIZED_NAME_REPORTED_OS)
  private InstanceReportedOs reportedOs;

  public static final String SERIALIZED_NAME_ROOT_DEVICE_TYPE = "RootDeviceType";
  @SerializedName(SERIALIZED_NAME_ROOT_DEVICE_TYPE)
  private RootDeviceType rootDeviceType;

  public static final String SERIALIZED_NAME_ROOT_DEVICE_VOLUME_ID = "RootDeviceVolumeId";
  @SerializedName(SERIALIZED_NAME_ROOT_DEVICE_VOLUME_ID)
  private String rootDeviceVolumeId;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_SSH_HOST_DSA_KEY_FINGERPRINT = "SshHostDsaKeyFingerprint";
  @SerializedName(SERIALIZED_NAME_SSH_HOST_DSA_KEY_FINGERPRINT)
  private String sshHostDsaKeyFingerprint;

  public static final String SERIALIZED_NAME_SSH_HOST_RSA_KEY_FINGERPRINT = "SshHostRsaKeyFingerprint";
  @SerializedName(SERIALIZED_NAME_SSH_HOST_RSA_KEY_FINGERPRINT)
  private String sshHostRsaKeyFingerprint;

  public static final String SERIALIZED_NAME_SSH_KEY_NAME = "SshKeyName";
  @SerializedName(SERIALIZED_NAME_SSH_KEY_NAME)
  private String sshKeyName;

  public static final String SERIALIZED_NAME_STACK_ID = "StackId";
  @SerializedName(SERIALIZED_NAME_STACK_ID)
  private String stackId;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SUBNET_ID = "SubnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;

  public static final String SERIALIZED_NAME_TENANCY = "Tenancy";
  @SerializedName(SERIALIZED_NAME_TENANCY)
  private String tenancy;

  public static final String SERIALIZED_NAME_VIRTUALIZATION_TYPE = "VirtualizationType";
  @SerializedName(SERIALIZED_NAME_VIRTUALIZATION_TYPE)
  private VirtualizationType virtualizationType;

  public Instance() {
  }

  public Instance agentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
    return this;
  }

  /**
   * Get agentVersion
   * @return agentVersion
   */
  @javax.annotation.Nullable
  public String getAgentVersion() {
    return agentVersion;
  }

  public void setAgentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
  }


  public Instance amiId(String amiId) {
    this.amiId = amiId;
    return this;
  }

  /**
   * Get amiId
   * @return amiId
   */
  @javax.annotation.Nullable
  public String getAmiId() {
    return amiId;
  }

  public void setAmiId(String amiId) {
    this.amiId = amiId;
  }


  public Instance architecture(Architecture architecture) {
    this.architecture = architecture;
    return this;
  }

  /**
   * Get architecture
   * @return architecture
   */
  @javax.annotation.Nullable
  public Architecture getArchitecture() {
    return architecture;
  }

  public void setArchitecture(Architecture architecture) {
    this.architecture = architecture;
  }


  public Instance arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public Instance autoScalingType(AutoScalingType autoScalingType) {
    this.autoScalingType = autoScalingType;
    return this;
  }

  /**
   * Get autoScalingType
   * @return autoScalingType
   */
  @javax.annotation.Nullable
  public AutoScalingType getAutoScalingType() {
    return autoScalingType;
  }

  public void setAutoScalingType(AutoScalingType autoScalingType) {
    this.autoScalingType = autoScalingType;
  }


  public Instance availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

  /**
   * Get availabilityZone
   * @return availabilityZone
   */
  @javax.annotation.Nullable
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public Instance blockDeviceMappings(List blockDeviceMappings) {
    this.blockDeviceMappings = blockDeviceMappings;
    return this;
  }

  /**
   * Get blockDeviceMappings
   * @return blockDeviceMappings
   */
  @javax.annotation.Nullable
  public List getBlockDeviceMappings() {
    return blockDeviceMappings;
  }

  public void setBlockDeviceMappings(List blockDeviceMappings) {
    this.blockDeviceMappings = blockDeviceMappings;
  }


  public Instance createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public Instance ebsOptimized(Boolean ebsOptimized) {
    this.ebsOptimized = ebsOptimized;
    return this;
  }

  /**
   * Get ebsOptimized
   * @return ebsOptimized
   */
  @javax.annotation.Nullable
  public Boolean getEbsOptimized() {
    return ebsOptimized;
  }

  public void setEbsOptimized(Boolean ebsOptimized) {
    this.ebsOptimized = ebsOptimized;
  }


  public Instance ec2InstanceId(String ec2InstanceId) {
    this.ec2InstanceId = ec2InstanceId;
    return this;
  }

  /**
   * Get ec2InstanceId
   * @return ec2InstanceId
   */
  @javax.annotation.Nullable
  public String getEc2InstanceId() {
    return ec2InstanceId;
  }

  public void setEc2InstanceId(String ec2InstanceId) {
    this.ec2InstanceId = ec2InstanceId;
  }


  public Instance ecsClusterArn(String ecsClusterArn) {
    this.ecsClusterArn = ecsClusterArn;
    return this;
  }

  /**
   * Get ecsClusterArn
   * @return ecsClusterArn
   */
  @javax.annotation.Nullable
  public String getEcsClusterArn() {
    return ecsClusterArn;
  }

  public void setEcsClusterArn(String ecsClusterArn) {
    this.ecsClusterArn = ecsClusterArn;
  }


  public Instance ecsContainerInstanceArn(String ecsContainerInstanceArn) {
    this.ecsContainerInstanceArn = ecsContainerInstanceArn;
    return this;
  }

  /**
   * Get ecsContainerInstanceArn
   * @return ecsContainerInstanceArn
   */
  @javax.annotation.Nullable
  public String getEcsContainerInstanceArn() {
    return ecsContainerInstanceArn;
  }

  public void setEcsContainerInstanceArn(String ecsContainerInstanceArn) {
    this.ecsContainerInstanceArn = ecsContainerInstanceArn;
  }


  public Instance elasticIp(String elasticIp) {
    this.elasticIp = elasticIp;
    return this;
  }

  /**
   * Get elasticIp
   * @return elasticIp
   */
  @javax.annotation.Nullable
  public String getElasticIp() {
    return elasticIp;
  }

  public void setElasticIp(String elasticIp) {
    this.elasticIp = elasticIp;
  }


  public Instance hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

  /**
   * Get hostname
   * @return hostname
   */
  @javax.annotation.Nullable
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public Instance infrastructureClass(String infrastructureClass) {
    this.infrastructureClass = infrastructureClass;
    return this;
  }

  /**
   * Get infrastructureClass
   * @return infrastructureClass
   */
  @javax.annotation.Nullable
  public String getInfrastructureClass() {
    return infrastructureClass;
  }

  public void setInfrastructureClass(String infrastructureClass) {
    this.infrastructureClass = infrastructureClass;
  }


  public Instance installUpdatesOnBoot(Boolean installUpdatesOnBoot) {
    this.installUpdatesOnBoot = installUpdatesOnBoot;
    return this;
  }

  /**
   * Get installUpdatesOnBoot
   * @return installUpdatesOnBoot
   */
  @javax.annotation.Nullable
  public Boolean getInstallUpdatesOnBoot() {
    return installUpdatesOnBoot;
  }

  public void setInstallUpdatesOnBoot(Boolean installUpdatesOnBoot) {
    this.installUpdatesOnBoot = installUpdatesOnBoot;
  }


  public Instance instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public Instance instanceProfileArn(String instanceProfileArn) {
    this.instanceProfileArn = instanceProfileArn;
    return this;
  }

  /**
   * Get instanceProfileArn
   * @return instanceProfileArn
   */
  @javax.annotation.Nullable
  public String getInstanceProfileArn() {
    return instanceProfileArn;
  }

  public void setInstanceProfileArn(String instanceProfileArn) {
    this.instanceProfileArn = instanceProfileArn;
  }


  public Instance instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public Instance lastServiceErrorId(String lastServiceErrorId) {
    this.lastServiceErrorId = lastServiceErrorId;
    return this;
  }

  /**
   * Get lastServiceErrorId
   * @return lastServiceErrorId
   */
  @javax.annotation.Nullable
  public String getLastServiceErrorId() {
    return lastServiceErrorId;
  }

  public void setLastServiceErrorId(String lastServiceErrorId) {
    this.lastServiceErrorId = lastServiceErrorId;
  }


  public Instance layerIds(List layerIds) {
    this.layerIds = layerIds;
    return this;
  }

  /**
   * Get layerIds
   * @return layerIds
   */
  @javax.annotation.Nullable
  public List getLayerIds() {
    return layerIds;
  }

  public void setLayerIds(List layerIds) {
    this.layerIds = layerIds;
  }


  public Instance os(String os) {
    this.os = os;
    return this;
  }

  /**
   * Get os
   * @return os
   */
  @javax.annotation.Nullable
  public String getOs() {
    return os;
  }

  public void setOs(String os) {
    this.os = os;
  }


  public Instance platform(String platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @javax.annotation.Nullable
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public Instance privateDns(String privateDns) {
    this.privateDns = privateDns;
    return this;
  }

  /**
   * Get privateDns
   * @return privateDns
   */
  @javax.annotation.Nullable
  public String getPrivateDns() {
    return privateDns;
  }

  public void setPrivateDns(String privateDns) {
    this.privateDns = privateDns;
  }


  public Instance privateIp(String privateIp) {
    this.privateIp = privateIp;
    return this;
  }

  /**
   * Get privateIp
   * @return privateIp
   */
  @javax.annotation.Nullable
  public String getPrivateIp() {
    return privateIp;
  }

  public void setPrivateIp(String privateIp) {
    this.privateIp = privateIp;
  }


  public Instance publicDns(String publicDns) {
    this.publicDns = publicDns;
    return this;
  }

  /**
   * Get publicDns
   * @return publicDns
   */
  @javax.annotation.Nullable
  public String getPublicDns() {
    return publicDns;
  }

  public void setPublicDns(String publicDns) {
    this.publicDns = publicDns;
  }


  public Instance publicIp(String publicIp) {
    this.publicIp = publicIp;
    return this;
  }

  /**
   * Get publicIp
   * @return publicIp
   */
  @javax.annotation.Nullable
  public String getPublicIp() {
    return publicIp;
  }

  public void setPublicIp(String publicIp) {
    this.publicIp = publicIp;
  }


  public Instance registeredBy(String registeredBy) {
    this.registeredBy = registeredBy;
    return this;
  }

  /**
   * Get registeredBy
   * @return registeredBy
   */
  @javax.annotation.Nullable
  public String getRegisteredBy() {
    return registeredBy;
  }

  public void setRegisteredBy(String registeredBy) {
    this.registeredBy = registeredBy;
  }


  public Instance reportedAgentVersion(String reportedAgentVersion) {
    this.reportedAgentVersion = reportedAgentVersion;
    return this;
  }

  /**
   * Get reportedAgentVersion
   * @return reportedAgentVersion
   */
  @javax.annotation.Nullable
  public String getReportedAgentVersion() {
    return reportedAgentVersion;
  }

  public void setReportedAgentVersion(String reportedAgentVersion) {
    this.reportedAgentVersion = reportedAgentVersion;
  }


  public Instance reportedOs(InstanceReportedOs reportedOs) {
    this.reportedOs = reportedOs;
    return this;
  }

  /**
   * Get reportedOs
   * @return reportedOs
   */
  @javax.annotation.Nullable
  public InstanceReportedOs getReportedOs() {
    return reportedOs;
  }

  public void setReportedOs(InstanceReportedOs reportedOs) {
    this.reportedOs = reportedOs;
  }


  public Instance rootDeviceType(RootDeviceType rootDeviceType) {
    this.rootDeviceType = rootDeviceType;
    return this;
  }

  /**
   * Get rootDeviceType
   * @return rootDeviceType
   */
  @javax.annotation.Nullable
  public RootDeviceType getRootDeviceType() {
    return rootDeviceType;
  }

  public void setRootDeviceType(RootDeviceType rootDeviceType) {
    this.rootDeviceType = rootDeviceType;
  }


  public Instance rootDeviceVolumeId(String rootDeviceVolumeId) {
    this.rootDeviceVolumeId = rootDeviceVolumeId;
    return this;
  }

  /**
   * Get rootDeviceVolumeId
   * @return rootDeviceVolumeId
   */
  @javax.annotation.Nullable
  public String getRootDeviceVolumeId() {
    return rootDeviceVolumeId;
  }

  public void setRootDeviceVolumeId(String rootDeviceVolumeId) {
    this.rootDeviceVolumeId = rootDeviceVolumeId;
  }


  public Instance securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public Instance sshHostDsaKeyFingerprint(String sshHostDsaKeyFingerprint) {
    this.sshHostDsaKeyFingerprint = sshHostDsaKeyFingerprint;
    return this;
  }

  /**
   * Get sshHostDsaKeyFingerprint
   * @return sshHostDsaKeyFingerprint
   */
  @javax.annotation.Nullable
  public String getSshHostDsaKeyFingerprint() {
    return sshHostDsaKeyFingerprint;
  }

  public void setSshHostDsaKeyFingerprint(String sshHostDsaKeyFingerprint) {
    this.sshHostDsaKeyFingerprint = sshHostDsaKeyFingerprint;
  }


  public Instance sshHostRsaKeyFingerprint(String sshHostRsaKeyFingerprint) {
    this.sshHostRsaKeyFingerprint = sshHostRsaKeyFingerprint;
    return this;
  }

  /**
   * Get sshHostRsaKeyFingerprint
   * @return sshHostRsaKeyFingerprint
   */
  @javax.annotation.Nullable
  public String getSshHostRsaKeyFingerprint() {
    return sshHostRsaKeyFingerprint;
  }

  public void setSshHostRsaKeyFingerprint(String sshHostRsaKeyFingerprint) {
    this.sshHostRsaKeyFingerprint = sshHostRsaKeyFingerprint;
  }


  public Instance sshKeyName(String sshKeyName) {
    this.sshKeyName = sshKeyName;
    return this;
  }

  /**
   * Get sshKeyName
   * @return sshKeyName
   */
  @javax.annotation.Nullable
  public String getSshKeyName() {
    return sshKeyName;
  }

  public void setSshKeyName(String sshKeyName) {
    this.sshKeyName = sshKeyName;
  }


  public Instance stackId(String stackId) {
    this.stackId = stackId;
    return this;
  }

  /**
   * Get stackId
   * @return stackId
   */
  @javax.annotation.Nullable
  public String getStackId() {
    return stackId;
  }

  public void setStackId(String stackId) {
    this.stackId = stackId;
  }


  public Instance status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public Instance subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

  /**
   * Get subnetId
   * @return subnetId
   */
  @javax.annotation.Nullable
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public Instance tenancy(String tenancy) {
    this.tenancy = tenancy;
    return this;
  }

  /**
   * Get tenancy
   * @return tenancy
   */
  @javax.annotation.Nullable
  public String getTenancy() {
    return tenancy;
  }

  public void setTenancy(String tenancy) {
    this.tenancy = tenancy;
  }


  public Instance virtualizationType(VirtualizationType virtualizationType) {
    this.virtualizationType = virtualizationType;
    return this;
  }

  /**
   * Get virtualizationType
   * @return virtualizationType
   */
  @javax.annotation.Nullable
  public VirtualizationType getVirtualizationType() {
    return virtualizationType;
  }

  public void setVirtualizationType(VirtualizationType virtualizationType) {
    this.virtualizationType = virtualizationType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Instance instance = (Instance) o;
    return Objects.equals(this.agentVersion, instance.agentVersion) &&
        Objects.equals(this.amiId, instance.amiId) &&
        Objects.equals(this.architecture, instance.architecture) &&
        Objects.equals(this.arn, instance.arn) &&
        Objects.equals(this.autoScalingType, instance.autoScalingType) &&
        Objects.equals(this.availabilityZone, instance.availabilityZone) &&
        Objects.equals(this.blockDeviceMappings, instance.blockDeviceMappings) &&
        Objects.equals(this.createdAt, instance.createdAt) &&
        Objects.equals(this.ebsOptimized, instance.ebsOptimized) &&
        Objects.equals(this.ec2InstanceId, instance.ec2InstanceId) &&
        Objects.equals(this.ecsClusterArn, instance.ecsClusterArn) &&
        Objects.equals(this.ecsContainerInstanceArn, instance.ecsContainerInstanceArn) &&
        Objects.equals(this.elasticIp, instance.elasticIp) &&
        Objects.equals(this.hostname, instance.hostname) &&
        Objects.equals(this.infrastructureClass, instance.infrastructureClass) &&
        Objects.equals(this.installUpdatesOnBoot, instance.installUpdatesOnBoot) &&
        Objects.equals(this.instanceId, instance.instanceId) &&
        Objects.equals(this.instanceProfileArn, instance.instanceProfileArn) &&
        Objects.equals(this.instanceType, instance.instanceType) &&
        Objects.equals(this.lastServiceErrorId, instance.lastServiceErrorId) &&
        Objects.equals(this.layerIds, instance.layerIds) &&
        Objects.equals(this.os, instance.os) &&
        Objects.equals(this.platform, instance.platform) &&
        Objects.equals(this.privateDns, instance.privateDns) &&
        Objects.equals(this.privateIp, instance.privateIp) &&
        Objects.equals(this.publicDns, instance.publicDns) &&
        Objects.equals(this.publicIp, instance.publicIp) &&
        Objects.equals(this.registeredBy, instance.registeredBy) &&
        Objects.equals(this.reportedAgentVersion, instance.reportedAgentVersion) &&
        Objects.equals(this.reportedOs, instance.reportedOs) &&
        Objects.equals(this.rootDeviceType, instance.rootDeviceType) &&
        Objects.equals(this.rootDeviceVolumeId, instance.rootDeviceVolumeId) &&
        Objects.equals(this.securityGroupIds, instance.securityGroupIds) &&
        Objects.equals(this.sshHostDsaKeyFingerprint, instance.sshHostDsaKeyFingerprint) &&
        Objects.equals(this.sshHostRsaKeyFingerprint, instance.sshHostRsaKeyFingerprint) &&
        Objects.equals(this.sshKeyName, instance.sshKeyName) &&
        Objects.equals(this.stackId, instance.stackId) &&
        Objects.equals(this.status, instance.status) &&
        Objects.equals(this.subnetId, instance.subnetId) &&
        Objects.equals(this.tenancy, instance.tenancy) &&
        Objects.equals(this.virtualizationType, instance.virtualizationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentVersion, amiId, architecture, arn, autoScalingType, availabilityZone, blockDeviceMappings, createdAt, ebsOptimized, ec2InstanceId, ecsClusterArn, ecsContainerInstanceArn, elasticIp, hostname, infrastructureClass, installUpdatesOnBoot, instanceId, instanceProfileArn, instanceType, lastServiceErrorId, layerIds, os, platform, privateDns, privateIp, publicDns, publicIp, registeredBy, reportedAgentVersion, reportedOs, rootDeviceType, rootDeviceVolumeId, securityGroupIds, sshHostDsaKeyFingerprint, sshHostRsaKeyFingerprint, sshKeyName, stackId, status, subnetId, tenancy, virtualizationType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Instance {\n");
    sb.append("    agentVersion: ").append(toIndentedString(agentVersion)).append("\n");
    sb.append("    amiId: ").append(toIndentedString(amiId)).append("\n");
    sb.append("    architecture: ").append(toIndentedString(architecture)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    autoScalingType: ").append(toIndentedString(autoScalingType)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    blockDeviceMappings: ").append(toIndentedString(blockDeviceMappings)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    ebsOptimized: ").append(toIndentedString(ebsOptimized)).append("\n");
    sb.append("    ec2InstanceId: ").append(toIndentedString(ec2InstanceId)).append("\n");
    sb.append("    ecsClusterArn: ").append(toIndentedString(ecsClusterArn)).append("\n");
    sb.append("    ecsContainerInstanceArn: ").append(toIndentedString(ecsContainerInstanceArn)).append("\n");
    sb.append("    elasticIp: ").append(toIndentedString(elasticIp)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    infrastructureClass: ").append(toIndentedString(infrastructureClass)).append("\n");
    sb.append("    installUpdatesOnBoot: ").append(toIndentedString(installUpdatesOnBoot)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceProfileArn: ").append(toIndentedString(instanceProfileArn)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    lastServiceErrorId: ").append(toIndentedString(lastServiceErrorId)).append("\n");
    sb.append("    layerIds: ").append(toIndentedString(layerIds)).append("\n");
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    privateDns: ").append(toIndentedString(privateDns)).append("\n");
    sb.append("    privateIp: ").append(toIndentedString(privateIp)).append("\n");
    sb.append("    publicDns: ").append(toIndentedString(publicDns)).append("\n");
    sb.append("    publicIp: ").append(toIndentedString(publicIp)).append("\n");
    sb.append("    registeredBy: ").append(toIndentedString(registeredBy)).append("\n");
    sb.append("    reportedAgentVersion: ").append(toIndentedString(reportedAgentVersion)).append("\n");
    sb.append("    reportedOs: ").append(toIndentedString(reportedOs)).append("\n");
    sb.append("    rootDeviceType: ").append(toIndentedString(rootDeviceType)).append("\n");
    sb.append("    rootDeviceVolumeId: ").append(toIndentedString(rootDeviceVolumeId)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    sshHostDsaKeyFingerprint: ").append(toIndentedString(sshHostDsaKeyFingerprint)).append("\n");
    sb.append("    sshHostRsaKeyFingerprint: ").append(toIndentedString(sshHostRsaKeyFingerprint)).append("\n");
    sb.append("    sshKeyName: ").append(toIndentedString(sshKeyName)).append("\n");
    sb.append("    stackId: ").append(toIndentedString(stackId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tenancy: ").append(toIndentedString(tenancy)).append("\n");
    sb.append("    virtualizationType: ").append(toIndentedString(virtualizationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AgentVersion");
    openapiFields.add("AmiId");
    openapiFields.add("Architecture");
    openapiFields.add("Arn");
    openapiFields.add("AutoScalingType");
    openapiFields.add("AvailabilityZone");
    openapiFields.add("BlockDeviceMappings");
    openapiFields.add("CreatedAt");
    openapiFields.add("EbsOptimized");
    openapiFields.add("Ec2InstanceId");
    openapiFields.add("EcsClusterArn");
    openapiFields.add("EcsContainerInstanceArn");
    openapiFields.add("ElasticIp");
    openapiFields.add("Hostname");
    openapiFields.add("InfrastructureClass");
    openapiFields.add("InstallUpdatesOnBoot");
    openapiFields.add("InstanceId");
    openapiFields.add("InstanceProfileArn");
    openapiFields.add("InstanceType");
    openapiFields.add("LastServiceErrorId");
    openapiFields.add("LayerIds");
    openapiFields.add("Os");
    openapiFields.add("Platform");
    openapiFields.add("PrivateDns");
    openapiFields.add("PrivateIp");
    openapiFields.add("PublicDns");
    openapiFields.add("PublicIp");
    openapiFields.add("RegisteredBy");
    openapiFields.add("ReportedAgentVersion");
    openapiFields.add("ReportedOs");
    openapiFields.add("RootDeviceType");
    openapiFields.add("RootDeviceVolumeId");
    openapiFields.add("SecurityGroupIds");
    openapiFields.add("SshHostDsaKeyFingerprint");
    openapiFields.add("SshHostRsaKeyFingerprint");
    openapiFields.add("SshKeyName");
    openapiFields.add("StackId");
    openapiFields.add("Status");
    openapiFields.add("SubnetId");
    openapiFields.add("Tenancy");
    openapiFields.add("VirtualizationType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Instance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Instance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Instance is not found in the empty JSON string", Instance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Instance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Instance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AgentVersion`
      if (jsonObj.get("AgentVersion") != null && !jsonObj.get("AgentVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AgentVersion"));
      }
      // validate the optional field `AmiId`
      if (jsonObj.get("AmiId") != null && !jsonObj.get("AmiId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AmiId"));
      }
      // validate the optional field `Architecture`
      if (jsonObj.get("Architecture") != null && !jsonObj.get("Architecture").isJsonNull()) {
        Architecture.validateJsonElement(jsonObj.get("Architecture"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `AutoScalingType`
      if (jsonObj.get("AutoScalingType") != null && !jsonObj.get("AutoScalingType").isJsonNull()) {
        AutoScalingType.validateJsonElement(jsonObj.get("AutoScalingType"));
      }
      // validate the optional field `AvailabilityZone`
      if (jsonObj.get("AvailabilityZone") != null && !jsonObj.get("AvailabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AvailabilityZone"));
      }
      // validate the optional field `BlockDeviceMappings`
      if (jsonObj.get("BlockDeviceMappings") != null && !jsonObj.get("BlockDeviceMappings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BlockDeviceMappings"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `EbsOptimized`
      if (jsonObj.get("EbsOptimized") != null && !jsonObj.get("EbsOptimized").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EbsOptimized"));
      }
      // validate the optional field `Ec2InstanceId`
      if (jsonObj.get("Ec2InstanceId") != null && !jsonObj.get("Ec2InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Ec2InstanceId"));
      }
      // validate the optional field `EcsClusterArn`
      if (jsonObj.get("EcsClusterArn") != null && !jsonObj.get("EcsClusterArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EcsClusterArn"));
      }
      // validate the optional field `EcsContainerInstanceArn`
      if (jsonObj.get("EcsContainerInstanceArn") != null && !jsonObj.get("EcsContainerInstanceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EcsContainerInstanceArn"));
      }
      // validate the optional field `ElasticIp`
      if (jsonObj.get("ElasticIp") != null && !jsonObj.get("ElasticIp").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ElasticIp"));
      }
      // validate the optional field `Hostname`
      if (jsonObj.get("Hostname") != null && !jsonObj.get("Hostname").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Hostname"));
      }
      // validate the optional field `InfrastructureClass`
      if (jsonObj.get("InfrastructureClass") != null && !jsonObj.get("InfrastructureClass").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InfrastructureClass"));
      }
      // validate the optional field `InstallUpdatesOnBoot`
      if (jsonObj.get("InstallUpdatesOnBoot") != null && !jsonObj.get("InstallUpdatesOnBoot").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("InstallUpdatesOnBoot"));
      }
      // validate the optional field `InstanceId`
      if (jsonObj.get("InstanceId") != null && !jsonObj.get("InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceId"));
      }
      // validate the optional field `InstanceProfileArn`
      if (jsonObj.get("InstanceProfileArn") != null && !jsonObj.get("InstanceProfileArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceProfileArn"));
      }
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `LastServiceErrorId`
      if (jsonObj.get("LastServiceErrorId") != null && !jsonObj.get("LastServiceErrorId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastServiceErrorId"));
      }
      // validate the optional field `LayerIds`
      if (jsonObj.get("LayerIds") != null && !jsonObj.get("LayerIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LayerIds"));
      }
      // validate the optional field `Os`
      if (jsonObj.get("Os") != null && !jsonObj.get("Os").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Os"));
      }
      // validate the optional field `Platform`
      if (jsonObj.get("Platform") != null && !jsonObj.get("Platform").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Platform"));
      }
      // validate the optional field `PrivateDns`
      if (jsonObj.get("PrivateDns") != null && !jsonObj.get("PrivateDns").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PrivateDns"));
      }
      // validate the optional field `PrivateIp`
      if (jsonObj.get("PrivateIp") != null && !jsonObj.get("PrivateIp").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PrivateIp"));
      }
      // validate the optional field `PublicDns`
      if (jsonObj.get("PublicDns") != null && !jsonObj.get("PublicDns").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PublicDns"));
      }
      // validate the optional field `PublicIp`
      if (jsonObj.get("PublicIp") != null && !jsonObj.get("PublicIp").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PublicIp"));
      }
      // validate the optional field `RegisteredBy`
      if (jsonObj.get("RegisteredBy") != null && !jsonObj.get("RegisteredBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RegisteredBy"));
      }
      // validate the optional field `ReportedAgentVersion`
      if (jsonObj.get("ReportedAgentVersion") != null && !jsonObj.get("ReportedAgentVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReportedAgentVersion"));
      }
      // validate the optional field `ReportedOs`
      if (jsonObj.get("ReportedOs") != null && !jsonObj.get("ReportedOs").isJsonNull()) {
        InstanceReportedOs.validateJsonElement(jsonObj.get("ReportedOs"));
      }
      // validate the optional field `RootDeviceType`
      if (jsonObj.get("RootDeviceType") != null && !jsonObj.get("RootDeviceType").isJsonNull()) {
        RootDeviceType.validateJsonElement(jsonObj.get("RootDeviceType"));
      }
      // validate the optional field `RootDeviceVolumeId`
      if (jsonObj.get("RootDeviceVolumeId") != null && !jsonObj.get("RootDeviceVolumeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RootDeviceVolumeId"));
      }
      // validate the optional field `SecurityGroupIds`
      if (jsonObj.get("SecurityGroupIds") != null && !jsonObj.get("SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroupIds"));
      }
      // validate the optional field `SshHostDsaKeyFingerprint`
      if (jsonObj.get("SshHostDsaKeyFingerprint") != null && !jsonObj.get("SshHostDsaKeyFingerprint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SshHostDsaKeyFingerprint"));
      }
      // validate the optional field `SshHostRsaKeyFingerprint`
      if (jsonObj.get("SshHostRsaKeyFingerprint") != null && !jsonObj.get("SshHostRsaKeyFingerprint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SshHostRsaKeyFingerprint"));
      }
      // validate the optional field `SshKeyName`
      if (jsonObj.get("SshKeyName") != null && !jsonObj.get("SshKeyName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SshKeyName"));
      }
      // validate the optional field `StackId`
      if (jsonObj.get("StackId") != null && !jsonObj.get("StackId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StackId"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `SubnetId`
      if (jsonObj.get("SubnetId") != null && !jsonObj.get("SubnetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubnetId"));
      }
      // validate the optional field `Tenancy`
      if (jsonObj.get("Tenancy") != null && !jsonObj.get("Tenancy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Tenancy"));
      }
      // validate the optional field `VirtualizationType`
      if (jsonObj.get("VirtualizationType") != null && !jsonObj.get("VirtualizationType").isJsonNull()) {
        VirtualizationType.validateJsonElement(jsonObj.get("VirtualizationType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Instance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Instance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Instance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Instance.class));

       return (TypeAdapter<T>) new TypeAdapter<Instance>() {
           @Override
           public void write(JsonWriter out, Instance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Instance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Instance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Instance
   * @throws IOException if the JSON string is invalid with respect to Instance
   */
  public static Instance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Instance.class);
  }

  /**
   * Convert an instance of Instance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

