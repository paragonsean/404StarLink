/*
 * AWS OpsWorks
 * <fullname>AWS OpsWorks</fullname> <p>Welcome to the <i>AWS OpsWorks Stacks API Reference</i>. This guide provides descriptions, syntax, and usage examples for AWS OpsWorks Stacks actions and data types, including common parameters and error codes. </p> <p>AWS OpsWorks Stacks is an application management service that provides an integrated experience for overseeing the complete application lifecycle. For information about this product, go to the <a href=\"http://aws.amazon.com/opsworks/\">AWS OpsWorks</a> details page. </p> <p> <b>SDKs and CLI</b> </p> <p>The most common way to use the AWS OpsWorks Stacks API is by using the AWS Command Line Interface (CLI) or by using one of the AWS SDKs to implement applications in your preferred language. For more information, see:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html\">AWS CLI</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/opsworks/AWSOpsWorksClient.html\">AWS SDK for Java</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sdkfornet/latest/apidocs/html/N_Amazon_OpsWorks.htm\">AWS SDK for .NET</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/aws-sdk-php-2/latest/class-Aws.OpsWorks.OpsWorksClient.html\">AWS SDK for PHP 2</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/sdkforruby/api/\">AWS SDK for Ruby</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/sdkforjavascript/\">AWS SDK for Node.js</a> </p> </li> <li> <p> <a href=\"http://docs.pythonboto.org/en/latest/ref/opsworks.html\">AWS SDK for Python(Boto)</a> </p> </li> </ul> <p> <b>Endpoints</b> </p> <p>AWS OpsWorks Stacks supports the following endpoints, all HTTPS. You must connect to one of the following endpoints. Stacks can only be accessed or managed within the endpoint in which they are created.</p> <ul> <li> <p>opsworks.us-east-1.amazonaws.com</p> </li> <li> <p>opsworks.us-east-2.amazonaws.com</p> </li> <li> <p>opsworks.us-west-1.amazonaws.com</p> </li> <li> <p>opsworks.us-west-2.amazonaws.com</p> </li> <li> <p>opsworks.ca-central-1.amazonaws.com (API only; not available in the AWS console)</p> </li> <li> <p>opsworks.eu-west-1.amazonaws.com</p> </li> <li> <p>opsworks.eu-west-2.amazonaws.com</p> </li> <li> <p>opsworks.eu-west-3.amazonaws.com</p> </li> <li> <p>opsworks.eu-central-1.amazonaws.com</p> </li> <li> <p>opsworks.ap-northeast-1.amazonaws.com</p> </li> <li> <p>opsworks.ap-northeast-2.amazonaws.com</p> </li> <li> <p>opsworks.ap-south-1.amazonaws.com</p> </li> <li> <p>opsworks.ap-southeast-1.amazonaws.com</p> </li> <li> <p>opsworks.ap-southeast-2.amazonaws.com</p> </li> <li> <p>opsworks.sa-east-1.amazonaws.com</p> </li> </ul> <p> <b>Chef Versions</b> </p> <p>When you call <a>CreateStack</a>, <a>CloneStack</a>, or <a>UpdateStack</a> we recommend you use the <code>ConfigurationManager</code> parameter to specify the Chef version. The recommended and default value for Linux stacks is currently 12. Windows stacks use Chef 12.2. For more information, see <a href=\"https://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook-chef11.html\">Chef Versions</a>.</p> <note> <p>You can specify Chef 12, 11.10, or 11.4 for your Linux stack. We recommend migrating your existing Linux stacks to Chef 12 as soon as possible.</p> </note>
 *
 * The version of the OpenAPI document: 2013-02-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.LayerCloudWatchLogsConfiguration;
import org.openapitools.client.model.LayerDefaultRecipes;
import org.openapitools.client.model.LayerLifecycleEventConfiguration;
import org.openapitools.client.model.LayerType;
import org.openapitools.client.model.UpdateLayerRequestCustomRecipes;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Layer
 */
public class LayerTest {
    private final Layer model = new Layer();

    /**
     * Model tests for Layer
     */
    @Test
    public void testLayer() {
        // TODO: test Layer
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'stackId'
     */
    @Test
    public void stackIdTest() {
        // TODO: test stackId
    }

    /**
     * Test the property 'layerId'
     */
    @Test
    public void layerIdTest() {
        // TODO: test layerId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'shortname'
     */
    @Test
    public void shortnameTest() {
        // TODO: test shortname
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'cloudWatchLogsConfiguration'
     */
    @Test
    public void cloudWatchLogsConfigurationTest() {
        // TODO: test cloudWatchLogsConfiguration
    }

    /**
     * Test the property 'customInstanceProfileArn'
     */
    @Test
    public void customInstanceProfileArnTest() {
        // TODO: test customInstanceProfileArn
    }

    /**
     * Test the property 'customJson'
     */
    @Test
    public void customJsonTest() {
        // TODO: test customJson
    }

    /**
     * Test the property 'customSecurityGroupIds'
     */
    @Test
    public void customSecurityGroupIdsTest() {
        // TODO: test customSecurityGroupIds
    }

    /**
     * Test the property 'defaultSecurityGroupNames'
     */
    @Test
    public void defaultSecurityGroupNamesTest() {
        // TODO: test defaultSecurityGroupNames
    }

    /**
     * Test the property 'packages'
     */
    @Test
    public void packagesTest() {
        // TODO: test packages
    }

    /**
     * Test the property 'volumeConfigurations'
     */
    @Test
    public void volumeConfigurationsTest() {
        // TODO: test volumeConfigurations
    }

    /**
     * Test the property 'enableAutoHealing'
     */
    @Test
    public void enableAutoHealingTest() {
        // TODO: test enableAutoHealing
    }

    /**
     * Test the property 'autoAssignElasticIps'
     */
    @Test
    public void autoAssignElasticIpsTest() {
        // TODO: test autoAssignElasticIps
    }

    /**
     * Test the property 'autoAssignPublicIps'
     */
    @Test
    public void autoAssignPublicIpsTest() {
        // TODO: test autoAssignPublicIps
    }

    /**
     * Test the property 'defaultRecipes'
     */
    @Test
    public void defaultRecipesTest() {
        // TODO: test defaultRecipes
    }

    /**
     * Test the property 'customRecipes'
     */
    @Test
    public void customRecipesTest() {
        // TODO: test customRecipes
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'installUpdatesOnBoot'
     */
    @Test
    public void installUpdatesOnBootTest() {
        // TODO: test installUpdatesOnBoot
    }

    /**
     * Test the property 'useEbsOptimizedInstances'
     */
    @Test
    public void useEbsOptimizedInstancesTest() {
        // TODO: test useEbsOptimizedInstances
    }

    /**
     * Test the property 'lifecycleEventConfiguration'
     */
    @Test
    public void lifecycleEventConfigurationTest() {
        // TODO: test lifecycleEventConfiguration
    }

}
