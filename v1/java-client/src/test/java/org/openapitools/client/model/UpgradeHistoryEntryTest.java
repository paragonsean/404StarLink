/*
 * Notebooks API
 * Notebooks API is used to manage notebook resources in Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpgradeHistoryEntry
 */
public class UpgradeHistoryEntryTest {
    private final UpgradeHistoryEntry model = new UpgradeHistoryEntry();

    /**
     * Model tests for UpgradeHistoryEntry
     */
    @Test
    public void testUpgradeHistoryEntry() {
        // TODO: test UpgradeHistoryEntry
    }

    /**
     * Test the property 'action'
     */
    @Test
    public void actionTest() {
        // TODO: test action
    }

    /**
     * Test the property 'containerImage'
     */
    @Test
    public void containerImageTest() {
        // TODO: test containerImage
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'framework'
     */
    @Test
    public void frameworkTest() {
        // TODO: test framework
    }

    /**
     * Test the property 'snapshot'
     */
    @Test
    public void snapshotTest() {
        // TODO: test snapshot
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'targetImage'
     */
    @Test
    public void targetImageTest() {
        // TODO: test targetImage
    }

    /**
     * Test the property 'targetVersion'
     */
    @Test
    public void targetVersionTest() {
        // TODO: test targetVersion
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'vmImage'
     */
    @Test
    public void vmImageTest() {
        // TODO: test vmImage
    }

}
