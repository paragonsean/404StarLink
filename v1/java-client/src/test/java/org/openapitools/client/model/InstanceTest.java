/*
 * Notebooks API
 * Notebooks API is used to manage notebook resources in Google Cloud.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AcceleratorConfig;
import org.openapitools.client.model.ContainerImage;
import org.openapitools.client.model.Disk;
import org.openapitools.client.model.ReservationAffinity;
import org.openapitools.client.model.ShieldedInstanceConfig;
import org.openapitools.client.model.UpgradeHistoryEntry;
import org.openapitools.client.model.VmImage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Instance
 */
public class InstanceTest {
    private final Instance model = new Instance();

    /**
     * Model tests for Instance
     */
    @Test
    public void testInstance() {
        // TODO: test Instance
    }

    /**
     * Test the property 'acceleratorConfig'
     */
    @Test
    public void acceleratorConfigTest() {
        // TODO: test acceleratorConfig
    }

    /**
     * Test the property 'bootDiskSizeGb'
     */
    @Test
    public void bootDiskSizeGbTest() {
        // TODO: test bootDiskSizeGb
    }

    /**
     * Test the property 'bootDiskType'
     */
    @Test
    public void bootDiskTypeTest() {
        // TODO: test bootDiskType
    }

    /**
     * Test the property 'canIpForward'
     */
    @Test
    public void canIpForwardTest() {
        // TODO: test canIpForward
    }

    /**
     * Test the property 'containerImage'
     */
    @Test
    public void containerImageTest() {
        // TODO: test containerImage
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'creator'
     */
    @Test
    public void creatorTest() {
        // TODO: test creator
    }

    /**
     * Test the property 'customGpuDriverPath'
     */
    @Test
    public void customGpuDriverPathTest() {
        // TODO: test customGpuDriverPath
    }

    /**
     * Test the property 'dataDiskSizeGb'
     */
    @Test
    public void dataDiskSizeGbTest() {
        // TODO: test dataDiskSizeGb
    }

    /**
     * Test the property 'dataDiskType'
     */
    @Test
    public void dataDiskTypeTest() {
        // TODO: test dataDiskType
    }

    /**
     * Test the property 'diskEncryption'
     */
    @Test
    public void diskEncryptionTest() {
        // TODO: test diskEncryption
    }

    /**
     * Test the property 'disks'
     */
    @Test
    public void disksTest() {
        // TODO: test disks
    }

    /**
     * Test the property 'installGpuDriver'
     */
    @Test
    public void installGpuDriverTest() {
        // TODO: test installGpuDriver
    }

    /**
     * Test the property 'instanceOwners'
     */
    @Test
    public void instanceOwnersTest() {
        // TODO: test instanceOwners
    }

    /**
     * Test the property 'kmsKey'
     */
    @Test
    public void kmsKeyTest() {
        // TODO: test kmsKey
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'machineType'
     */
    @Test
    public void machineTypeTest() {
        // TODO: test machineType
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'network'
     */
    @Test
    public void networkTest() {
        // TODO: test network
    }

    /**
     * Test the property 'nicType'
     */
    @Test
    public void nicTypeTest() {
        // TODO: test nicType
    }

    /**
     * Test the property 'noProxyAccess'
     */
    @Test
    public void noProxyAccessTest() {
        // TODO: test noProxyAccess
    }

    /**
     * Test the property 'noPublicIp'
     */
    @Test
    public void noPublicIpTest() {
        // TODO: test noPublicIp
    }

    /**
     * Test the property 'noRemoveDataDisk'
     */
    @Test
    public void noRemoveDataDiskTest() {
        // TODO: test noRemoveDataDisk
    }

    /**
     * Test the property 'postStartupScript'
     */
    @Test
    public void postStartupScriptTest() {
        // TODO: test postStartupScript
    }

    /**
     * Test the property 'proxyUri'
     */
    @Test
    public void proxyUriTest() {
        // TODO: test proxyUri
    }

    /**
     * Test the property 'reservationAffinity'
     */
    @Test
    public void reservationAffinityTest() {
        // TODO: test reservationAffinity
    }

    /**
     * Test the property 'serviceAccount'
     */
    @Test
    public void serviceAccountTest() {
        // TODO: test serviceAccount
    }

    /**
     * Test the property 'serviceAccountScopes'
     */
    @Test
    public void serviceAccountScopesTest() {
        // TODO: test serviceAccountScopes
    }

    /**
     * Test the property 'shieldedInstanceConfig'
     */
    @Test
    public void shieldedInstanceConfigTest() {
        // TODO: test shieldedInstanceConfig
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'subnet'
     */
    @Test
    public void subnetTest() {
        // TODO: test subnet
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'upgradeHistory'
     */
    @Test
    public void upgradeHistoryTest() {
        // TODO: test upgradeHistory
    }

    /**
     * Test the property 'vmImage'
     */
    @Test
    public void vmImageTest() {
        // TODO: test vmImage
    }

}
