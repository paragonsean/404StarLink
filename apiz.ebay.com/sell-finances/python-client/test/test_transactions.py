# coding: utf-8

"""
    eBay Finances API

    This API is used to retrieve seller payouts and monetary transaction details related to those payouts.

    The version of the OpenAPI document: v1.15.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.transactions import Transactions

class TestTransactions(unittest.TestCase):
    """Transactions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Transactions:
        """Test Transactions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Transactions`
        """
        model = Transactions()
        if include_optional:
            return Transactions(
                href = '',
                limit = 56,
                next = '',
                offset = 56,
                prev = '',
                total = 56,
                transactions = [
                    openapi_client.models.transaction.Transaction(
                        amount = openapi_client.models.amount.Amount(
                            converted_from_currency = '', 
                            converted_from_value = '', 
                            currency = '', 
                            exchange_rate = '', 
                            value = '', ), 
                        booking_entry = '', 
                        buyer = openapi_client.models.buyer.Buyer(
                            username = '', ), 
                        e_bay_collected_tax_amount = openapi_client.models.amount.Amount(
                            converted_from_currency = '', 
                            converted_from_value = '', 
                            currency = '', 
                            exchange_rate = '', 
                            value = '', ), 
                        fee_jurisdiction = openapi_client.models.fee_jurisdiction.FeeJurisdiction(
                            region_name = '', 
                            region_type = '', ), 
                        fee_type = '', 
                        order_id = '', 
                        order_line_items = [
                            openapi_client.models.order_line_item.OrderLineItem(
                                fee_basis_amount = , 
                                line_item_id = '', 
                                marketplace_fees = [
                                    openapi_client.models.fee.Fee(
                                        fee_memo = '', 
                                        fee_type = '', )
                                    ], )
                            ], 
                        payments_entity = '', 
                        payout_id = '', 
                        references = [
                            openapi_client.models.reference.Reference(
                                reference_id = '', 
                                reference_type = '', )
                            ], 
                        sales_record_reference = '', 
                        total_fee_amount = , 
                        total_fee_basis_amount = , 
                        transaction_date = '', 
                        transaction_id = '', 
                        transaction_memo = '', 
                        transaction_status = '', 
                        transaction_type = '', )
                    ]
            )
        else:
            return Transactions(
        )
        """

    def testTransactions(self):
        """Test Transactions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
