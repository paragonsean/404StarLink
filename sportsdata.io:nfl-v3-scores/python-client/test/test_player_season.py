# coding: utf-8

"""
    NFL v3 Scores

    NFL schedules, scores, odds, weather, and news API.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.player_season import PlayerSeason

class TestPlayerSeason(unittest.TestCase):
    """PlayerSeason unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlayerSeason:
        """Test PlayerSeason
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlayerSeason`
        """
        model = PlayerSeason()
        if include_optional:
            return PlayerSeason(
                activated = 56,
                assisted_tackles = 1.337,
                auction_value = 1.337,
                auction_value_ppr = 1.337,
                average_draft_position = 1.337,
                average_draft_position2_qb = 1.337,
                average_draft_position_dynasty = 1.337,
                average_draft_position_ppr = 1.337,
                average_draft_position_rookie = 1.337,
                blocked_kick_return_touchdowns = 1.337,
                blocked_kick_return_yards = 1.337,
                blocked_kicks = 1.337,
                defensive_snaps_played = 56,
                defensive_team_snaps = 56,
                defensive_touchdowns = 1.337,
                extra_points_attempted = 1.337,
                extra_points_had_blocked = 1.337,
                extra_points_made = 1.337,
                fantasy_points = 1.337,
                fantasy_points_draft_kings = 1.337,
                fantasy_points_fan_duel = 1.337,
                fantasy_points_fantasy_draft = 1.337,
                fantasy_points_ppr = 1.337,
                fantasy_points_yahoo = 1.337,
                fantasy_position = '',
                field_goal_percentage = 1.337,
                field_goal_return_touchdowns = 1.337,
                field_goal_return_yards = 1.337,
                field_goals_attempted = 1.337,
                field_goals_had_blocked = 1.337,
                field_goals_longest_made = 1.337,
                field_goals_made = 1.337,
                field_goals_made0to19 = 1.337,
                field_goals_made20to29 = 1.337,
                field_goals_made30to39 = 1.337,
                field_goals_made40to49 = 1.337,
                field_goals_made50_plus = 1.337,
                fumble_return_touchdowns = 1.337,
                fumble_return_yards = 1.337,
                fumbles = 1.337,
                fumbles_forced = 1.337,
                fumbles_lost = 1.337,
                fumbles_out_of_bounds = 1.337,
                fumbles_own_recoveries = 1.337,
                fumbles_recovered = 1.337,
                global_team_id = 56,
                humidity = 56,
                interception_return_touchdowns = 1.337,
                interception_return_yards = 1.337,
                interceptions = 1.337,
                kick_return_fair_catches = 1.337,
                kick_return_long = 1.337,
                kick_return_touchdowns = 1.337,
                kick_return_yards = 1.337,
                kick_return_yards_per_attempt = 1.337,
                kick_returns = 1.337,
                misc_assisted_tackles = 1.337,
                misc_fumbles_forced = 1.337,
                misc_fumbles_recovered = 1.337,
                misc_solo_tackles = 1.337,
                name = '',
                number = 56,
                offensive_fumble_recovery_touchdowns = 56,
                offensive_snaps_played = 56,
                offensive_team_snaps = 56,
                offensive_touchdowns = 1.337,
                passes_defended = 1.337,
                passing_attempts = 1.337,
                passing_completion_percentage = 1.337,
                passing_completions = 1.337,
                passing_interceptions = 1.337,
                passing_long = 1.337,
                passing_rating = 1.337,
                passing_sack_yards = 1.337,
                passing_sacks = 1.337,
                passing_touchdowns = 1.337,
                passing_yards = 1.337,
                passing_yards_per_attempt = 1.337,
                passing_yards_per_completion = 1.337,
                played = 56,
                player_id = 56,
                player_season_id = 56,
                position = '',
                position_category = '',
                punt_average = 1.337,
                punt_inside20 = 1.337,
                punt_long = 1.337,
                punt_net_average = 1.337,
                punt_net_yards = 1.337,
                punt_return_fair_catches = 1.337,
                punt_return_long = 1.337,
                punt_return_touchdowns = 1.337,
                punt_return_yards = 1.337,
                punt_return_yards_per_attempt = 1.337,
                punt_returns = 1.337,
                punt_touchbacks = 1.337,
                punt_yards = 1.337,
                punts = 1.337,
                punts_had_blocked = 1.337,
                quarterback_hits = 1.337,
                receiving_long = 1.337,
                receiving_targets = 1.337,
                receiving_touchdowns = 1.337,
                receiving_yards = 1.337,
                receiving_yards_per_reception = 1.337,
                receiving_yards_per_target = 1.337,
                reception_percentage = 1.337,
                receptions = 1.337,
                rushing_attempts = 1.337,
                rushing_long = 1.337,
                rushing_touchdowns = 1.337,
                rushing_yards = 1.337,
                rushing_yards_per_attempt = 1.337,
                sack_yards = 1.337,
                sacks = 1.337,
                safeties = 1.337,
                safeties_allowed = 1.337,
                scoring_details = [
                    openapi_client.models.scoring_detail.ScoringDetail(
                        game_key = '', 
                        length = 56, 
                        player_game_id = 56, 
                        player_id = 56, 
                        score_id = 56, 
                        scoring_detail_id = 56, 
                        scoring_play_id = 56, 
                        scoring_type = '', 
                        season = 56, 
                        season_type = 56, 
                        team = '', 
                        week = 56, )
                    ],
                season = 56,
                season_type = 56,
                short_name = '',
                solo_tackles = 1.337,
                special_teams_assisted_tackles = 1.337,
                special_teams_fumbles_forced = 1.337,
                special_teams_fumbles_recovered = 1.337,
                special_teams_snaps_played = 56,
                special_teams_solo_tackles = 1.337,
                special_teams_team_snaps = 56,
                special_teams_touchdowns = 1.337,
                started = 56,
                tackles = 1.337,
                tackles_for_loss = 1.337,
                team = '',
                team_id = 56,
                temperature = 56,
                touchdowns = 1.337,
                two_point_conversion_passes = 1.337,
                two_point_conversion_receptions = 1.337,
                two_point_conversion_returns = 1.337,
                two_point_conversion_runs = 1.337,
                wind_speed = 56
            )
        else:
            return PlayerSeason(
        )
        """

    def testPlayerSeason(self):
        """Test PlayerSeason"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
