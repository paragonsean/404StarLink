# coding: utf-8

"""
    NFL v3 Scores

    NFL schedules, scores, odds, weather, and news API.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class TeamSeason(BaseModel):
    """
    TeamSeason
    """ # noqa: E501
    assisted_tackles: Optional[StrictInt] = Field(default=None, alias="AssistedTackles")
    blocked_kick_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="BlockedKickReturnTouchdowns")
    blocked_kick_return_yards: Optional[StrictInt] = Field(default=None, alias="BlockedKickReturnYards")
    blocked_kicks: Optional[StrictInt] = Field(default=None, alias="BlockedKicks")
    completion_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="CompletionPercentage")
    extra_point_kicking_attempts: Optional[StrictInt] = Field(default=None, alias="ExtraPointKickingAttempts")
    extra_point_kicking_conversions: Optional[StrictInt] = Field(default=None, alias="ExtraPointKickingConversions")
    extra_point_passing_attempts: Optional[StrictInt] = Field(default=None, alias="ExtraPointPassingAttempts")
    extra_point_passing_conversions: Optional[StrictInt] = Field(default=None, alias="ExtraPointPassingConversions")
    extra_point_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="ExtraPointPercentage")
    extra_point_rushing_attempts: Optional[StrictInt] = Field(default=None, alias="ExtraPointRushingAttempts")
    extra_point_rushing_conversions: Optional[StrictInt] = Field(default=None, alias="ExtraPointRushingConversions")
    extra_points_had_blocked: Optional[StrictInt] = Field(default=None, alias="ExtraPointsHadBlocked")
    field_goal_attempts: Optional[StrictInt] = Field(default=None, alias="FieldGoalAttempts")
    field_goal_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="FieldGoalPercentage")
    field_goal_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="FieldGoalReturnTouchdowns")
    field_goal_return_yards: Optional[StrictInt] = Field(default=None, alias="FieldGoalReturnYards")
    field_goals_had_blocked: Optional[StrictInt] = Field(default=None, alias="FieldGoalsHadBlocked")
    field_goals_made: Optional[StrictInt] = Field(default=None, alias="FieldGoalsMade")
    first_downs: Optional[StrictInt] = Field(default=None, alias="FirstDowns")
    first_downs_by_passing: Optional[StrictInt] = Field(default=None, alias="FirstDownsByPassing")
    first_downs_by_penalty: Optional[StrictInt] = Field(default=None, alias="FirstDownsByPenalty")
    first_downs_by_rushing: Optional[StrictInt] = Field(default=None, alias="FirstDownsByRushing")
    fourth_down_attempts: Optional[StrictInt] = Field(default=None, alias="FourthDownAttempts")
    fourth_down_conversions: Optional[StrictInt] = Field(default=None, alias="FourthDownConversions")
    fourth_down_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="FourthDownPercentage")
    fumble_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="FumbleReturnTouchdowns")
    fumble_return_yards: Optional[StrictInt] = Field(default=None, alias="FumbleReturnYards")
    fumbles: Optional[StrictInt] = Field(default=None, alias="Fumbles")
    fumbles_forced: Optional[StrictInt] = Field(default=None, alias="FumblesForced")
    fumbles_lost: Optional[StrictInt] = Field(default=None, alias="FumblesLost")
    fumbles_recovered: Optional[StrictInt] = Field(default=None, alias="FumblesRecovered")
    games: Optional[StrictInt] = Field(default=None, alias="Games")
    giveaways: Optional[StrictInt] = Field(default=None, alias="Giveaways")
    global_team_id: Optional[StrictInt] = Field(default=None, alias="GlobalTeamID")
    goal_to_go_attempts: Optional[StrictInt] = Field(default=None, alias="GoalToGoAttempts")
    goal_to_go_conversions: Optional[StrictInt] = Field(default=None, alias="GoalToGoConversions")
    goal_to_go_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="GoalToGoPercentage")
    humidity: Optional[StrictInt] = Field(default=None, alias="Humidity")
    interception_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="InterceptionReturnTouchdowns")
    interception_return_yards: Optional[StrictInt] = Field(default=None, alias="InterceptionReturnYards")
    interception_returns: Optional[StrictInt] = Field(default=None, alias="InterceptionReturns")
    kick_return_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="KickReturnAverage")
    kick_return_long: Optional[StrictInt] = Field(default=None, alias="KickReturnLong")
    kick_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="KickReturnTouchdowns")
    kick_return_yard_differential: Optional[StrictInt] = Field(default=None, alias="KickReturnYardDifferential")
    kick_return_yards: Optional[StrictInt] = Field(default=None, alias="KickReturnYards")
    kick_returns: Optional[StrictInt] = Field(default=None, alias="KickReturns")
    kickoff_touchbacks: Optional[StrictInt] = Field(default=None, alias="KickoffTouchbacks")
    kickoffs: Optional[StrictInt] = Field(default=None, alias="Kickoffs")
    kickoffs_in_end_zone: Optional[StrictInt] = Field(default=None, alias="KickoffsInEndZone")
    offensive_plays: Optional[StrictInt] = Field(default=None, alias="OffensivePlays")
    offensive_yards: Optional[StrictInt] = Field(default=None, alias="OffensiveYards")
    offensive_yards_per_play: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OffensiveYardsPerPlay")
    opponent_assisted_tackles: Optional[StrictInt] = Field(default=None, alias="OpponentAssistedTackles")
    opponent_blocked_kick_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentBlockedKickReturnTouchdowns")
    opponent_blocked_kick_return_yards: Optional[StrictInt] = Field(default=None, alias="OpponentBlockedKickReturnYards")
    opponent_blocked_kicks: Optional[StrictInt] = Field(default=None, alias="OpponentBlockedKicks")
    opponent_completion_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentCompletionPercentage")
    opponent_extra_point_kicking_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentExtraPointKickingAttempts")
    opponent_extra_point_kicking_conversions: Optional[StrictInt] = Field(default=None, alias="OpponentExtraPointKickingConversions")
    opponent_extra_point_passing_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentExtraPointPassingAttempts")
    opponent_extra_point_passing_conversions: Optional[StrictInt] = Field(default=None, alias="OpponentExtraPointPassingConversions")
    opponent_extra_point_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentExtraPointPercentage")
    opponent_extra_point_rushing_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentExtraPointRushingAttempts")
    opponent_extra_point_rushing_conversions: Optional[StrictInt] = Field(default=None, alias="OpponentExtraPointRushingConversions")
    opponent_extra_points_had_blocked: Optional[StrictInt] = Field(default=None, alias="OpponentExtraPointsHadBlocked")
    opponent_field_goal_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentFieldGoalAttempts")
    opponent_field_goal_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentFieldGoalPercentage")
    opponent_field_goal_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentFieldGoalReturnTouchdowns")
    opponent_field_goal_return_yards: Optional[StrictInt] = Field(default=None, alias="OpponentFieldGoalReturnYards")
    opponent_field_goals_had_blocked: Optional[StrictInt] = Field(default=None, alias="OpponentFieldGoalsHadBlocked")
    opponent_field_goals_made: Optional[StrictInt] = Field(default=None, alias="OpponentFieldGoalsMade")
    opponent_first_downs: Optional[StrictInt] = Field(default=None, alias="OpponentFirstDowns")
    opponent_first_downs_by_passing: Optional[StrictInt] = Field(default=None, alias="OpponentFirstDownsByPassing")
    opponent_first_downs_by_penalty: Optional[StrictInt] = Field(default=None, alias="OpponentFirstDownsByPenalty")
    opponent_first_downs_by_rushing: Optional[StrictInt] = Field(default=None, alias="OpponentFirstDownsByRushing")
    opponent_fourth_down_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentFourthDownAttempts")
    opponent_fourth_down_conversions: Optional[StrictInt] = Field(default=None, alias="OpponentFourthDownConversions")
    opponent_fourth_down_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentFourthDownPercentage")
    opponent_fumble_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentFumbleReturnTouchdowns")
    opponent_fumble_return_yards: Optional[StrictInt] = Field(default=None, alias="OpponentFumbleReturnYards")
    opponent_fumbles: Optional[StrictInt] = Field(default=None, alias="OpponentFumbles")
    opponent_fumbles_forced: Optional[StrictInt] = Field(default=None, alias="OpponentFumblesForced")
    opponent_fumbles_lost: Optional[StrictInt] = Field(default=None, alias="OpponentFumblesLost")
    opponent_fumbles_recovered: Optional[StrictInt] = Field(default=None, alias="OpponentFumblesRecovered")
    opponent_giveaways: Optional[StrictInt] = Field(default=None, alias="OpponentGiveaways")
    opponent_goal_to_go_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentGoalToGoAttempts")
    opponent_goal_to_go_conversions: Optional[StrictInt] = Field(default=None, alias="OpponentGoalToGoConversions")
    opponent_goal_to_go_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentGoalToGoPercentage")
    opponent_interception_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentInterceptionReturnTouchdowns")
    opponent_interception_return_yards: Optional[StrictInt] = Field(default=None, alias="OpponentInterceptionReturnYards")
    opponent_interception_returns: Optional[StrictInt] = Field(default=None, alias="OpponentInterceptionReturns")
    opponent_kick_return_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentKickReturnAverage")
    opponent_kick_return_long: Optional[StrictInt] = Field(default=None, alias="OpponentKickReturnLong")
    opponent_kick_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentKickReturnTouchdowns")
    opponent_kick_return_yards: Optional[StrictInt] = Field(default=None, alias="OpponentKickReturnYards")
    opponent_kick_returns: Optional[StrictInt] = Field(default=None, alias="OpponentKickReturns")
    opponent_kickoff_touchbacks: Optional[StrictInt] = Field(default=None, alias="OpponentKickoffTouchbacks")
    opponent_kickoffs: Optional[StrictInt] = Field(default=None, alias="OpponentKickoffs")
    opponent_kickoffs_in_end_zone: Optional[StrictInt] = Field(default=None, alias="OpponentKickoffsInEndZone")
    opponent_offensive_plays: Optional[StrictInt] = Field(default=None, alias="OpponentOffensivePlays")
    opponent_offensive_yards: Optional[StrictInt] = Field(default=None, alias="OpponentOffensiveYards")
    opponent_offensive_yards_per_play: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentOffensiveYardsPerPlay")
    opponent_passer_rating: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentPasserRating")
    opponent_passes_defended: Optional[StrictInt] = Field(default=None, alias="OpponentPassesDefended")
    opponent_passing_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentPassingAttempts")
    opponent_passing_completions: Optional[StrictInt] = Field(default=None, alias="OpponentPassingCompletions")
    opponent_passing_dropbacks: Optional[StrictInt] = Field(default=None, alias="OpponentPassingDropbacks")
    opponent_passing_interception_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentPassingInterceptionPercentage")
    opponent_passing_interceptions: Optional[StrictInt] = Field(default=None, alias="OpponentPassingInterceptions")
    opponent_passing_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentPassingTouchdowns")
    opponent_passing_yards: Optional[StrictInt] = Field(default=None, alias="OpponentPassingYards")
    opponent_passing_yards_per_attempt: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentPassingYardsPerAttempt")
    opponent_passing_yards_per_completion: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentPassingYardsPerCompletion")
    opponent_penalties: Optional[StrictInt] = Field(default=None, alias="OpponentPenalties")
    opponent_penalty_yards: Optional[StrictInt] = Field(default=None, alias="OpponentPenaltyYards")
    opponent_punt_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentPuntAverage")
    opponent_punt_net_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentPuntNetAverage")
    opponent_punt_net_yards: Optional[StrictInt] = Field(default=None, alias="OpponentPuntNetYards")
    opponent_punt_return_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentPuntReturnAverage")
    opponent_punt_return_long: Optional[StrictInt] = Field(default=None, alias="OpponentPuntReturnLong")
    opponent_punt_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentPuntReturnTouchdowns")
    opponent_punt_return_yards: Optional[StrictInt] = Field(default=None, alias="OpponentPuntReturnYards")
    opponent_punt_returns: Optional[StrictInt] = Field(default=None, alias="OpponentPuntReturns")
    opponent_punt_yards: Optional[StrictInt] = Field(default=None, alias="OpponentPuntYards")
    opponent_punts: Optional[StrictInt] = Field(default=None, alias="OpponentPunts")
    opponent_punts_had_blocked: Optional[StrictInt] = Field(default=None, alias="OpponentPuntsHadBlocked")
    opponent_quarterback_hits: Optional[StrictInt] = Field(default=None, alias="OpponentQuarterbackHits")
    opponent_quarterback_hits_differential: Optional[StrictInt] = Field(default=None, alias="OpponentQuarterbackHitsDifferential")
    opponent_quarterback_hits_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentQuarterbackHitsPercentage")
    opponent_quarterback_sacks_differential: Optional[StrictInt] = Field(default=None, alias="OpponentQuarterbackSacksDifferential")
    opponent_red_zone_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentRedZoneAttempts")
    opponent_red_zone_conversions: Optional[StrictInt] = Field(default=None, alias="OpponentRedZoneConversions")
    opponent_red_zone_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentRedZonePercentage")
    opponent_return_yards: Optional[StrictInt] = Field(default=None, alias="OpponentReturnYards")
    opponent_rushing_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentRushingAttempts")
    opponent_rushing_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentRushingTouchdowns")
    opponent_rushing_yards: Optional[StrictInt] = Field(default=None, alias="OpponentRushingYards")
    opponent_rushing_yards_per_attempt: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentRushingYardsPerAttempt")
    opponent_sack_yards: Optional[StrictInt] = Field(default=None, alias="OpponentSackYards")
    opponent_sacks: Optional[StrictInt] = Field(default=None, alias="OpponentSacks")
    opponent_safeties: Optional[StrictInt] = Field(default=None, alias="OpponentSafeties")
    opponent_score: Optional[StrictInt] = Field(default=None, alias="OpponentScore")
    opponent_score_overtime: Optional[StrictInt] = Field(default=None, alias="OpponentScoreOvertime")
    opponent_score_quarter1: Optional[StrictInt] = Field(default=None, alias="OpponentScoreQuarter1")
    opponent_score_quarter2: Optional[StrictInt] = Field(default=None, alias="OpponentScoreQuarter2")
    opponent_score_quarter3: Optional[StrictInt] = Field(default=None, alias="OpponentScoreQuarter3")
    opponent_score_quarter4: Optional[StrictInt] = Field(default=None, alias="OpponentScoreQuarter4")
    opponent_solo_tackles: Optional[StrictInt] = Field(default=None, alias="OpponentSoloTackles")
    opponent_tackles_for_loss: Optional[StrictInt] = Field(default=None, alias="OpponentTacklesForLoss")
    opponent_tackles_for_loss_differential: Optional[StrictInt] = Field(default=None, alias="OpponentTacklesForLossDifferential")
    opponent_tackles_for_loss_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentTacklesForLossPercentage")
    opponent_takeaways: Optional[StrictInt] = Field(default=None, alias="OpponentTakeaways")
    opponent_third_down_attempts: Optional[StrictInt] = Field(default=None, alias="OpponentThirdDownAttempts")
    opponent_third_down_conversions: Optional[StrictInt] = Field(default=None, alias="OpponentThirdDownConversions")
    opponent_third_down_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentThirdDownPercentage")
    opponent_time_of_possession: Optional[StrictStr] = Field(default=None, alias="OpponentTimeOfPossession")
    opponent_times_sacked: Optional[StrictInt] = Field(default=None, alias="OpponentTimesSacked")
    opponent_times_sacked_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OpponentTimesSackedPercentage")
    opponent_times_sacked_yards: Optional[StrictInt] = Field(default=None, alias="OpponentTimesSackedYards")
    opponent_touchdowns: Optional[StrictInt] = Field(default=None, alias="OpponentTouchdowns")
    opponent_turnover_differential: Optional[StrictInt] = Field(default=None, alias="OpponentTurnoverDifferential")
    opponent_two_point_conversion_returns: Optional[StrictInt] = Field(default=None, alias="OpponentTwoPointConversionReturns")
    over_under: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OverUnder")
    passer_rating: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PasserRating")
    passes_defended: Optional[StrictInt] = Field(default=None, alias="PassesDefended")
    passing_attempts: Optional[StrictInt] = Field(default=None, alias="PassingAttempts")
    passing_completions: Optional[StrictInt] = Field(default=None, alias="PassingCompletions")
    passing_dropbacks: Optional[StrictInt] = Field(default=None, alias="PassingDropbacks")
    passing_interception_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PassingInterceptionPercentage")
    passing_interceptions: Optional[StrictInt] = Field(default=None, alias="PassingInterceptions")
    passing_touchdowns: Optional[StrictInt] = Field(default=None, alias="PassingTouchdowns")
    passing_yards: Optional[StrictInt] = Field(default=None, alias="PassingYards")
    passing_yards_per_attempt: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PassingYardsPerAttempt")
    passing_yards_per_completion: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PassingYardsPerCompletion")
    penalties: Optional[StrictInt] = Field(default=None, alias="Penalties")
    penalty_yard_differential: Optional[StrictInt] = Field(default=None, alias="PenaltyYardDifferential")
    penalty_yards: Optional[StrictInt] = Field(default=None, alias="PenaltyYards")
    point_differential: Optional[StrictInt] = Field(default=None, alias="PointDifferential")
    point_spread: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PointSpread")
    punt_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PuntAverage")
    punt_net_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PuntNetAverage")
    punt_net_yards: Optional[StrictInt] = Field(default=None, alias="PuntNetYards")
    punt_return_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PuntReturnAverage")
    punt_return_long: Optional[StrictInt] = Field(default=None, alias="PuntReturnLong")
    punt_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="PuntReturnTouchdowns")
    punt_return_yard_differential: Optional[StrictInt] = Field(default=None, alias="PuntReturnYardDifferential")
    punt_return_yards: Optional[StrictInt] = Field(default=None, alias="PuntReturnYards")
    punt_returns: Optional[StrictInt] = Field(default=None, alias="PuntReturns")
    punt_yards: Optional[StrictInt] = Field(default=None, alias="PuntYards")
    punts: Optional[StrictInt] = Field(default=None, alias="Punts")
    punts_had_blocked: Optional[StrictInt] = Field(default=None, alias="PuntsHadBlocked")
    quarterback_hits: Optional[StrictInt] = Field(default=None, alias="QuarterbackHits")
    quarterback_hits_differential: Optional[StrictInt] = Field(default=None, alias="QuarterbackHitsDifferential")
    quarterback_hits_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="QuarterbackHitsPercentage")
    quarterback_sacks_differential: Optional[StrictInt] = Field(default=None, alias="QuarterbackSacksDifferential")
    red_zone_attempts: Optional[StrictInt] = Field(default=None, alias="RedZoneAttempts")
    red_zone_conversions: Optional[StrictInt] = Field(default=None, alias="RedZoneConversions")
    red_zone_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="RedZonePercentage")
    return_yards: Optional[StrictInt] = Field(default=None, alias="ReturnYards")
    rushing_attempts: Optional[StrictInt] = Field(default=None, alias="RushingAttempts")
    rushing_touchdowns: Optional[StrictInt] = Field(default=None, alias="RushingTouchdowns")
    rushing_yards: Optional[StrictInt] = Field(default=None, alias="RushingYards")
    rushing_yards_per_attempt: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="RushingYardsPerAttempt")
    sack_yards: Optional[StrictInt] = Field(default=None, alias="SackYards")
    sacks: Optional[StrictInt] = Field(default=None, alias="Sacks")
    safeties: Optional[StrictInt] = Field(default=None, alias="Safeties")
    score: Optional[StrictInt] = Field(default=None, alias="Score")
    score_overtime: Optional[StrictInt] = Field(default=None, alias="ScoreOvertime")
    score_quarter1: Optional[StrictInt] = Field(default=None, alias="ScoreQuarter1")
    score_quarter2: Optional[StrictInt] = Field(default=None, alias="ScoreQuarter2")
    score_quarter3: Optional[StrictInt] = Field(default=None, alias="ScoreQuarter3")
    score_quarter4: Optional[StrictInt] = Field(default=None, alias="ScoreQuarter4")
    season: Optional[StrictInt] = Field(default=None, alias="Season")
    season_type: Optional[StrictInt] = Field(default=None, alias="SeasonType")
    solo_tackles: Optional[StrictInt] = Field(default=None, alias="SoloTackles")
    tackles_for_loss: Optional[StrictInt] = Field(default=None, alias="TacklesForLoss")
    tackles_for_loss_differential: Optional[StrictInt] = Field(default=None, alias="TacklesForLossDifferential")
    tackles_for_loss_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="TacklesForLossPercentage")
    takeaways: Optional[StrictInt] = Field(default=None, alias="Takeaways")
    team: Optional[StrictStr] = Field(default=None, alias="Team")
    team_id: Optional[StrictInt] = Field(default=None, alias="TeamID")
    team_name: Optional[StrictStr] = Field(default=None, alias="TeamName")
    team_season_id: Optional[StrictInt] = Field(default=None, alias="TeamSeasonID")
    team_stat_id: Optional[StrictInt] = Field(default=None, alias="TeamStatID")
    temperature: Optional[StrictInt] = Field(default=None, alias="Temperature")
    third_down_attempts: Optional[StrictInt] = Field(default=None, alias="ThirdDownAttempts")
    third_down_conversions: Optional[StrictInt] = Field(default=None, alias="ThirdDownConversions")
    third_down_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="ThirdDownPercentage")
    time_of_possession: Optional[StrictStr] = Field(default=None, alias="TimeOfPossession")
    times_sacked: Optional[StrictInt] = Field(default=None, alias="TimesSacked")
    times_sacked_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="TimesSackedPercentage")
    times_sacked_yards: Optional[StrictInt] = Field(default=None, alias="TimesSackedYards")
    total_score: Optional[StrictInt] = Field(default=None, alias="TotalScore")
    touchdowns: Optional[StrictInt] = Field(default=None, alias="Touchdowns")
    turnover_differential: Optional[StrictInt] = Field(default=None, alias="TurnoverDifferential")
    two_point_conversion_returns: Optional[StrictInt] = Field(default=None, alias="TwoPointConversionReturns")
    wind_speed: Optional[StrictInt] = Field(default=None, alias="WindSpeed")
    __properties: ClassVar[List[str]] = ["AssistedTackles", "BlockedKickReturnTouchdowns", "BlockedKickReturnYards", "BlockedKicks", "CompletionPercentage", "ExtraPointKickingAttempts", "ExtraPointKickingConversions", "ExtraPointPassingAttempts", "ExtraPointPassingConversions", "ExtraPointPercentage", "ExtraPointRushingAttempts", "ExtraPointRushingConversions", "ExtraPointsHadBlocked", "FieldGoalAttempts", "FieldGoalPercentage", "FieldGoalReturnTouchdowns", "FieldGoalReturnYards", "FieldGoalsHadBlocked", "FieldGoalsMade", "FirstDowns", "FirstDownsByPassing", "FirstDownsByPenalty", "FirstDownsByRushing", "FourthDownAttempts", "FourthDownConversions", "FourthDownPercentage", "FumbleReturnTouchdowns", "FumbleReturnYards", "Fumbles", "FumblesForced", "FumblesLost", "FumblesRecovered", "Games", "Giveaways", "GlobalTeamID", "GoalToGoAttempts", "GoalToGoConversions", "GoalToGoPercentage", "Humidity", "InterceptionReturnTouchdowns", "InterceptionReturnYards", "InterceptionReturns", "KickReturnAverage", "KickReturnLong", "KickReturnTouchdowns", "KickReturnYardDifferential", "KickReturnYards", "KickReturns", "KickoffTouchbacks", "Kickoffs", "KickoffsInEndZone", "OffensivePlays", "OffensiveYards", "OffensiveYardsPerPlay", "OpponentAssistedTackles", "OpponentBlockedKickReturnTouchdowns", "OpponentBlockedKickReturnYards", "OpponentBlockedKicks", "OpponentCompletionPercentage", "OpponentExtraPointKickingAttempts", "OpponentExtraPointKickingConversions", "OpponentExtraPointPassingAttempts", "OpponentExtraPointPassingConversions", "OpponentExtraPointPercentage", "OpponentExtraPointRushingAttempts", "OpponentExtraPointRushingConversions", "OpponentExtraPointsHadBlocked", "OpponentFieldGoalAttempts", "OpponentFieldGoalPercentage", "OpponentFieldGoalReturnTouchdowns", "OpponentFieldGoalReturnYards", "OpponentFieldGoalsHadBlocked", "OpponentFieldGoalsMade", "OpponentFirstDowns", "OpponentFirstDownsByPassing", "OpponentFirstDownsByPenalty", "OpponentFirstDownsByRushing", "OpponentFourthDownAttempts", "OpponentFourthDownConversions", "OpponentFourthDownPercentage", "OpponentFumbleReturnTouchdowns", "OpponentFumbleReturnYards", "OpponentFumbles", "OpponentFumblesForced", "OpponentFumblesLost", "OpponentFumblesRecovered", "OpponentGiveaways", "OpponentGoalToGoAttempts", "OpponentGoalToGoConversions", "OpponentGoalToGoPercentage", "OpponentInterceptionReturnTouchdowns", "OpponentInterceptionReturnYards", "OpponentInterceptionReturns", "OpponentKickReturnAverage", "OpponentKickReturnLong", "OpponentKickReturnTouchdowns", "OpponentKickReturnYards", "OpponentKickReturns", "OpponentKickoffTouchbacks", "OpponentKickoffs", "OpponentKickoffsInEndZone", "OpponentOffensivePlays", "OpponentOffensiveYards", "OpponentOffensiveYardsPerPlay", "OpponentPasserRating", "OpponentPassesDefended", "OpponentPassingAttempts", "OpponentPassingCompletions", "OpponentPassingDropbacks", "OpponentPassingInterceptionPercentage", "OpponentPassingInterceptions", "OpponentPassingTouchdowns", "OpponentPassingYards", "OpponentPassingYardsPerAttempt", "OpponentPassingYardsPerCompletion", "OpponentPenalties", "OpponentPenaltyYards", "OpponentPuntAverage", "OpponentPuntNetAverage", "OpponentPuntNetYards", "OpponentPuntReturnAverage", "OpponentPuntReturnLong", "OpponentPuntReturnTouchdowns", "OpponentPuntReturnYards", "OpponentPuntReturns", "OpponentPuntYards", "OpponentPunts", "OpponentPuntsHadBlocked", "OpponentQuarterbackHits", "OpponentQuarterbackHitsDifferential", "OpponentQuarterbackHitsPercentage", "OpponentQuarterbackSacksDifferential", "OpponentRedZoneAttempts", "OpponentRedZoneConversions", "OpponentRedZonePercentage", "OpponentReturnYards", "OpponentRushingAttempts", "OpponentRushingTouchdowns", "OpponentRushingYards", "OpponentRushingYardsPerAttempt", "OpponentSackYards", "OpponentSacks", "OpponentSafeties", "OpponentScore", "OpponentScoreOvertime", "OpponentScoreQuarter1", "OpponentScoreQuarter2", "OpponentScoreQuarter3", "OpponentScoreQuarter4", "OpponentSoloTackles", "OpponentTacklesForLoss", "OpponentTacklesForLossDifferential", "OpponentTacklesForLossPercentage", "OpponentTakeaways", "OpponentThirdDownAttempts", "OpponentThirdDownConversions", "OpponentThirdDownPercentage", "OpponentTimeOfPossession", "OpponentTimesSacked", "OpponentTimesSackedPercentage", "OpponentTimesSackedYards", "OpponentTouchdowns", "OpponentTurnoverDifferential", "OpponentTwoPointConversionReturns", "OverUnder", "PasserRating", "PassesDefended", "PassingAttempts", "PassingCompletions", "PassingDropbacks", "PassingInterceptionPercentage", "PassingInterceptions", "PassingTouchdowns", "PassingYards", "PassingYardsPerAttempt", "PassingYardsPerCompletion", "Penalties", "PenaltyYardDifferential", "PenaltyYards", "PointDifferential", "PointSpread", "PuntAverage", "PuntNetAverage", "PuntNetYards", "PuntReturnAverage", "PuntReturnLong", "PuntReturnTouchdowns", "PuntReturnYardDifferential", "PuntReturnYards", "PuntReturns", "PuntYards", "Punts", "PuntsHadBlocked", "QuarterbackHits", "QuarterbackHitsDifferential", "QuarterbackHitsPercentage", "QuarterbackSacksDifferential", "RedZoneAttempts", "RedZoneConversions", "RedZonePercentage", "ReturnYards", "RushingAttempts", "RushingTouchdowns", "RushingYards", "RushingYardsPerAttempt", "SackYards", "Sacks", "Safeties", "Score", "ScoreOvertime", "ScoreQuarter1", "ScoreQuarter2", "ScoreQuarter3", "ScoreQuarter4", "Season", "SeasonType", "SoloTackles", "TacklesForLoss", "TacklesForLossDifferential", "TacklesForLossPercentage", "Takeaways", "Team", "TeamID", "TeamName", "TeamSeasonID", "TeamStatID", "Temperature", "ThirdDownAttempts", "ThirdDownConversions", "ThirdDownPercentage", "TimeOfPossession", "TimesSacked", "TimesSackedPercentage", "TimesSackedYards", "TotalScore", "Touchdowns", "TurnoverDifferential", "TwoPointConversionReturns", "WindSpeed"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of TeamSeason from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # set to None if assisted_tackles (nullable) is None
        # and model_fields_set contains the field
        if self.assisted_tackles is None and "assisted_tackles" in self.model_fields_set:
            _dict['AssistedTackles'] = None

        # set to None if blocked_kick_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.blocked_kick_return_touchdowns is None and "blocked_kick_return_touchdowns" in self.model_fields_set:
            _dict['BlockedKickReturnTouchdowns'] = None

        # set to None if blocked_kick_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.blocked_kick_return_yards is None and "blocked_kick_return_yards" in self.model_fields_set:
            _dict['BlockedKickReturnYards'] = None

        # set to None if blocked_kicks (nullable) is None
        # and model_fields_set contains the field
        if self.blocked_kicks is None and "blocked_kicks" in self.model_fields_set:
            _dict['BlockedKicks'] = None

        # set to None if extra_point_kicking_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.extra_point_kicking_attempts is None and "extra_point_kicking_attempts" in self.model_fields_set:
            _dict['ExtraPointKickingAttempts'] = None

        # set to None if extra_point_kicking_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.extra_point_kicking_conversions is None and "extra_point_kicking_conversions" in self.model_fields_set:
            _dict['ExtraPointKickingConversions'] = None

        # set to None if extra_point_passing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.extra_point_passing_attempts is None and "extra_point_passing_attempts" in self.model_fields_set:
            _dict['ExtraPointPassingAttempts'] = None

        # set to None if extra_point_passing_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.extra_point_passing_conversions is None and "extra_point_passing_conversions" in self.model_fields_set:
            _dict['ExtraPointPassingConversions'] = None

        # set to None if extra_point_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.extra_point_percentage is None and "extra_point_percentage" in self.model_fields_set:
            _dict['ExtraPointPercentage'] = None

        # set to None if extra_point_rushing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.extra_point_rushing_attempts is None and "extra_point_rushing_attempts" in self.model_fields_set:
            _dict['ExtraPointRushingAttempts'] = None

        # set to None if extra_point_rushing_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.extra_point_rushing_conversions is None and "extra_point_rushing_conversions" in self.model_fields_set:
            _dict['ExtraPointRushingConversions'] = None

        # set to None if extra_points_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.extra_points_had_blocked is None and "extra_points_had_blocked" in self.model_fields_set:
            _dict['ExtraPointsHadBlocked'] = None

        # set to None if field_goal_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.field_goal_attempts is None and "field_goal_attempts" in self.model_fields_set:
            _dict['FieldGoalAttempts'] = None

        # set to None if field_goal_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.field_goal_percentage is None and "field_goal_percentage" in self.model_fields_set:
            _dict['FieldGoalPercentage'] = None

        # set to None if field_goal_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.field_goal_return_touchdowns is None and "field_goal_return_touchdowns" in self.model_fields_set:
            _dict['FieldGoalReturnTouchdowns'] = None

        # set to None if field_goal_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.field_goal_return_yards is None and "field_goal_return_yards" in self.model_fields_set:
            _dict['FieldGoalReturnYards'] = None

        # set to None if field_goals_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.field_goals_had_blocked is None and "field_goals_had_blocked" in self.model_fields_set:
            _dict['FieldGoalsHadBlocked'] = None

        # set to None if field_goals_made (nullable) is None
        # and model_fields_set contains the field
        if self.field_goals_made is None and "field_goals_made" in self.model_fields_set:
            _dict['FieldGoalsMade'] = None

        # set to None if first_downs (nullable) is None
        # and model_fields_set contains the field
        if self.first_downs is None and "first_downs" in self.model_fields_set:
            _dict['FirstDowns'] = None

        # set to None if first_downs_by_passing (nullable) is None
        # and model_fields_set contains the field
        if self.first_downs_by_passing is None and "first_downs_by_passing" in self.model_fields_set:
            _dict['FirstDownsByPassing'] = None

        # set to None if first_downs_by_penalty (nullable) is None
        # and model_fields_set contains the field
        if self.first_downs_by_penalty is None and "first_downs_by_penalty" in self.model_fields_set:
            _dict['FirstDownsByPenalty'] = None

        # set to None if first_downs_by_rushing (nullable) is None
        # and model_fields_set contains the field
        if self.first_downs_by_rushing is None and "first_downs_by_rushing" in self.model_fields_set:
            _dict['FirstDownsByRushing'] = None

        # set to None if fourth_down_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.fourth_down_attempts is None and "fourth_down_attempts" in self.model_fields_set:
            _dict['FourthDownAttempts'] = None

        # set to None if fourth_down_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.fourth_down_conversions is None and "fourth_down_conversions" in self.model_fields_set:
            _dict['FourthDownConversions'] = None

        # set to None if fourth_down_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.fourth_down_percentage is None and "fourth_down_percentage" in self.model_fields_set:
            _dict['FourthDownPercentage'] = None

        # set to None if fumble_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.fumble_return_touchdowns is None and "fumble_return_touchdowns" in self.model_fields_set:
            _dict['FumbleReturnTouchdowns'] = None

        # set to None if fumble_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.fumble_return_yards is None and "fumble_return_yards" in self.model_fields_set:
            _dict['FumbleReturnYards'] = None

        # set to None if fumbles (nullable) is None
        # and model_fields_set contains the field
        if self.fumbles is None and "fumbles" in self.model_fields_set:
            _dict['Fumbles'] = None

        # set to None if fumbles_forced (nullable) is None
        # and model_fields_set contains the field
        if self.fumbles_forced is None and "fumbles_forced" in self.model_fields_set:
            _dict['FumblesForced'] = None

        # set to None if fumbles_lost (nullable) is None
        # and model_fields_set contains the field
        if self.fumbles_lost is None and "fumbles_lost" in self.model_fields_set:
            _dict['FumblesLost'] = None

        # set to None if fumbles_recovered (nullable) is None
        # and model_fields_set contains the field
        if self.fumbles_recovered is None and "fumbles_recovered" in self.model_fields_set:
            _dict['FumblesRecovered'] = None

        # set to None if games (nullable) is None
        # and model_fields_set contains the field
        if self.games is None and "games" in self.model_fields_set:
            _dict['Games'] = None

        # set to None if global_team_id (nullable) is None
        # and model_fields_set contains the field
        if self.global_team_id is None and "global_team_id" in self.model_fields_set:
            _dict['GlobalTeamID'] = None

        # set to None if goal_to_go_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.goal_to_go_attempts is None and "goal_to_go_attempts" in self.model_fields_set:
            _dict['GoalToGoAttempts'] = None

        # set to None if goal_to_go_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.goal_to_go_conversions is None and "goal_to_go_conversions" in self.model_fields_set:
            _dict['GoalToGoConversions'] = None

        # set to None if goal_to_go_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.goal_to_go_percentage is None and "goal_to_go_percentage" in self.model_fields_set:
            _dict['GoalToGoPercentage'] = None

        # set to None if humidity (nullable) is None
        # and model_fields_set contains the field
        if self.humidity is None and "humidity" in self.model_fields_set:
            _dict['Humidity'] = None

        # set to None if interception_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.interception_return_touchdowns is None and "interception_return_touchdowns" in self.model_fields_set:
            _dict['InterceptionReturnTouchdowns'] = None

        # set to None if interception_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.interception_return_yards is None and "interception_return_yards" in self.model_fields_set:
            _dict['InterceptionReturnYards'] = None

        # set to None if interception_returns (nullable) is None
        # and model_fields_set contains the field
        if self.interception_returns is None and "interception_returns" in self.model_fields_set:
            _dict['InterceptionReturns'] = None

        # set to None if kick_return_average (nullable) is None
        # and model_fields_set contains the field
        if self.kick_return_average is None and "kick_return_average" in self.model_fields_set:
            _dict['KickReturnAverage'] = None

        # set to None if kick_return_long (nullable) is None
        # and model_fields_set contains the field
        if self.kick_return_long is None and "kick_return_long" in self.model_fields_set:
            _dict['KickReturnLong'] = None

        # set to None if kick_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.kick_return_touchdowns is None and "kick_return_touchdowns" in self.model_fields_set:
            _dict['KickReturnTouchdowns'] = None

        # set to None if kick_return_yard_differential (nullable) is None
        # and model_fields_set contains the field
        if self.kick_return_yard_differential is None and "kick_return_yard_differential" in self.model_fields_set:
            _dict['KickReturnYardDifferential'] = None

        # set to None if kick_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.kick_return_yards is None and "kick_return_yards" in self.model_fields_set:
            _dict['KickReturnYards'] = None

        # set to None if kick_returns (nullable) is None
        # and model_fields_set contains the field
        if self.kick_returns is None and "kick_returns" in self.model_fields_set:
            _dict['KickReturns'] = None

        # set to None if kickoff_touchbacks (nullable) is None
        # and model_fields_set contains the field
        if self.kickoff_touchbacks is None and "kickoff_touchbacks" in self.model_fields_set:
            _dict['KickoffTouchbacks'] = None

        # set to None if kickoffs (nullable) is None
        # and model_fields_set contains the field
        if self.kickoffs is None and "kickoffs" in self.model_fields_set:
            _dict['Kickoffs'] = None

        # set to None if kickoffs_in_end_zone (nullable) is None
        # and model_fields_set contains the field
        if self.kickoffs_in_end_zone is None and "kickoffs_in_end_zone" in self.model_fields_set:
            _dict['KickoffsInEndZone'] = None

        # set to None if opponent_assisted_tackles (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_assisted_tackles is None and "opponent_assisted_tackles" in self.model_fields_set:
            _dict['OpponentAssistedTackles'] = None

        # set to None if opponent_blocked_kick_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_blocked_kick_return_touchdowns is None and "opponent_blocked_kick_return_touchdowns" in self.model_fields_set:
            _dict['OpponentBlockedKickReturnTouchdowns'] = None

        # set to None if opponent_blocked_kick_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_blocked_kick_return_yards is None and "opponent_blocked_kick_return_yards" in self.model_fields_set:
            _dict['OpponentBlockedKickReturnYards'] = None

        # set to None if opponent_blocked_kicks (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_blocked_kicks is None and "opponent_blocked_kicks" in self.model_fields_set:
            _dict['OpponentBlockedKicks'] = None

        # set to None if opponent_extra_point_kicking_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_extra_point_kicking_attempts is None and "opponent_extra_point_kicking_attempts" in self.model_fields_set:
            _dict['OpponentExtraPointKickingAttempts'] = None

        # set to None if opponent_extra_point_kicking_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_extra_point_kicking_conversions is None and "opponent_extra_point_kicking_conversions" in self.model_fields_set:
            _dict['OpponentExtraPointKickingConversions'] = None

        # set to None if opponent_extra_point_passing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_extra_point_passing_attempts is None and "opponent_extra_point_passing_attempts" in self.model_fields_set:
            _dict['OpponentExtraPointPassingAttempts'] = None

        # set to None if opponent_extra_point_passing_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_extra_point_passing_conversions is None and "opponent_extra_point_passing_conversions" in self.model_fields_set:
            _dict['OpponentExtraPointPassingConversions'] = None

        # set to None if opponent_extra_point_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_extra_point_percentage is None and "opponent_extra_point_percentage" in self.model_fields_set:
            _dict['OpponentExtraPointPercentage'] = None

        # set to None if opponent_extra_point_rushing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_extra_point_rushing_attempts is None and "opponent_extra_point_rushing_attempts" in self.model_fields_set:
            _dict['OpponentExtraPointRushingAttempts'] = None

        # set to None if opponent_extra_point_rushing_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_extra_point_rushing_conversions is None and "opponent_extra_point_rushing_conversions" in self.model_fields_set:
            _dict['OpponentExtraPointRushingConversions'] = None

        # set to None if opponent_extra_points_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_extra_points_had_blocked is None and "opponent_extra_points_had_blocked" in self.model_fields_set:
            _dict['OpponentExtraPointsHadBlocked'] = None

        # set to None if opponent_field_goal_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_field_goal_attempts is None and "opponent_field_goal_attempts" in self.model_fields_set:
            _dict['OpponentFieldGoalAttempts'] = None

        # set to None if opponent_field_goal_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_field_goal_percentage is None and "opponent_field_goal_percentage" in self.model_fields_set:
            _dict['OpponentFieldGoalPercentage'] = None

        # set to None if opponent_field_goal_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_field_goal_return_touchdowns is None and "opponent_field_goal_return_touchdowns" in self.model_fields_set:
            _dict['OpponentFieldGoalReturnTouchdowns'] = None

        # set to None if opponent_field_goal_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_field_goal_return_yards is None and "opponent_field_goal_return_yards" in self.model_fields_set:
            _dict['OpponentFieldGoalReturnYards'] = None

        # set to None if opponent_field_goals_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_field_goals_had_blocked is None and "opponent_field_goals_had_blocked" in self.model_fields_set:
            _dict['OpponentFieldGoalsHadBlocked'] = None

        # set to None if opponent_field_goals_made (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_field_goals_made is None and "opponent_field_goals_made" in self.model_fields_set:
            _dict['OpponentFieldGoalsMade'] = None

        # set to None if opponent_first_downs (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_first_downs is None and "opponent_first_downs" in self.model_fields_set:
            _dict['OpponentFirstDowns'] = None

        # set to None if opponent_first_downs_by_passing (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_first_downs_by_passing is None and "opponent_first_downs_by_passing" in self.model_fields_set:
            _dict['OpponentFirstDownsByPassing'] = None

        # set to None if opponent_first_downs_by_penalty (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_first_downs_by_penalty is None and "opponent_first_downs_by_penalty" in self.model_fields_set:
            _dict['OpponentFirstDownsByPenalty'] = None

        # set to None if opponent_first_downs_by_rushing (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_first_downs_by_rushing is None and "opponent_first_downs_by_rushing" in self.model_fields_set:
            _dict['OpponentFirstDownsByRushing'] = None

        # set to None if opponent_fourth_down_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fourth_down_attempts is None and "opponent_fourth_down_attempts" in self.model_fields_set:
            _dict['OpponentFourthDownAttempts'] = None

        # set to None if opponent_fourth_down_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fourth_down_conversions is None and "opponent_fourth_down_conversions" in self.model_fields_set:
            _dict['OpponentFourthDownConversions'] = None

        # set to None if opponent_fourth_down_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fourth_down_percentage is None and "opponent_fourth_down_percentage" in self.model_fields_set:
            _dict['OpponentFourthDownPercentage'] = None

        # set to None if opponent_fumble_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fumble_return_touchdowns is None and "opponent_fumble_return_touchdowns" in self.model_fields_set:
            _dict['OpponentFumbleReturnTouchdowns'] = None

        # set to None if opponent_fumble_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fumble_return_yards is None and "opponent_fumble_return_yards" in self.model_fields_set:
            _dict['OpponentFumbleReturnYards'] = None

        # set to None if opponent_fumbles (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fumbles is None and "opponent_fumbles" in self.model_fields_set:
            _dict['OpponentFumbles'] = None

        # set to None if opponent_fumbles_forced (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fumbles_forced is None and "opponent_fumbles_forced" in self.model_fields_set:
            _dict['OpponentFumblesForced'] = None

        # set to None if opponent_fumbles_lost (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fumbles_lost is None and "opponent_fumbles_lost" in self.model_fields_set:
            _dict['OpponentFumblesLost'] = None

        # set to None if opponent_fumbles_recovered (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_fumbles_recovered is None and "opponent_fumbles_recovered" in self.model_fields_set:
            _dict['OpponentFumblesRecovered'] = None

        # set to None if opponent_goal_to_go_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_goal_to_go_attempts is None and "opponent_goal_to_go_attempts" in self.model_fields_set:
            _dict['OpponentGoalToGoAttempts'] = None

        # set to None if opponent_goal_to_go_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_goal_to_go_conversions is None and "opponent_goal_to_go_conversions" in self.model_fields_set:
            _dict['OpponentGoalToGoConversions'] = None

        # set to None if opponent_goal_to_go_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_goal_to_go_percentage is None and "opponent_goal_to_go_percentage" in self.model_fields_set:
            _dict['OpponentGoalToGoPercentage'] = None

        # set to None if opponent_interception_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_interception_return_touchdowns is None and "opponent_interception_return_touchdowns" in self.model_fields_set:
            _dict['OpponentInterceptionReturnTouchdowns'] = None

        # set to None if opponent_interception_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_interception_return_yards is None and "opponent_interception_return_yards" in self.model_fields_set:
            _dict['OpponentInterceptionReturnYards'] = None

        # set to None if opponent_interception_returns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_interception_returns is None and "opponent_interception_returns" in self.model_fields_set:
            _dict['OpponentInterceptionReturns'] = None

        # set to None if opponent_kick_return_average (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_kick_return_average is None and "opponent_kick_return_average" in self.model_fields_set:
            _dict['OpponentKickReturnAverage'] = None

        # set to None if opponent_kick_return_long (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_kick_return_long is None and "opponent_kick_return_long" in self.model_fields_set:
            _dict['OpponentKickReturnLong'] = None

        # set to None if opponent_kick_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_kick_return_touchdowns is None and "opponent_kick_return_touchdowns" in self.model_fields_set:
            _dict['OpponentKickReturnTouchdowns'] = None

        # set to None if opponent_kick_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_kick_return_yards is None and "opponent_kick_return_yards" in self.model_fields_set:
            _dict['OpponentKickReturnYards'] = None

        # set to None if opponent_kick_returns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_kick_returns is None and "opponent_kick_returns" in self.model_fields_set:
            _dict['OpponentKickReturns'] = None

        # set to None if opponent_kickoff_touchbacks (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_kickoff_touchbacks is None and "opponent_kickoff_touchbacks" in self.model_fields_set:
            _dict['OpponentKickoffTouchbacks'] = None

        # set to None if opponent_kickoffs (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_kickoffs is None and "opponent_kickoffs" in self.model_fields_set:
            _dict['OpponentKickoffs'] = None

        # set to None if opponent_kickoffs_in_end_zone (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_kickoffs_in_end_zone is None and "opponent_kickoffs_in_end_zone" in self.model_fields_set:
            _dict['OpponentKickoffsInEndZone'] = None

        # set to None if opponent_passer_rating (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passer_rating is None and "opponent_passer_rating" in self.model_fields_set:
            _dict['OpponentPasserRating'] = None

        # set to None if opponent_passes_defended (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passes_defended is None and "opponent_passes_defended" in self.model_fields_set:
            _dict['OpponentPassesDefended'] = None

        # set to None if opponent_passing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passing_attempts is None and "opponent_passing_attempts" in self.model_fields_set:
            _dict['OpponentPassingAttempts'] = None

        # set to None if opponent_passing_completions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passing_completions is None and "opponent_passing_completions" in self.model_fields_set:
            _dict['OpponentPassingCompletions'] = None

        # set to None if opponent_passing_dropbacks (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passing_dropbacks is None and "opponent_passing_dropbacks" in self.model_fields_set:
            _dict['OpponentPassingDropbacks'] = None

        # set to None if opponent_passing_interception_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passing_interception_percentage is None and "opponent_passing_interception_percentage" in self.model_fields_set:
            _dict['OpponentPassingInterceptionPercentage'] = None

        # set to None if opponent_passing_interceptions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passing_interceptions is None and "opponent_passing_interceptions" in self.model_fields_set:
            _dict['OpponentPassingInterceptions'] = None

        # set to None if opponent_passing_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passing_touchdowns is None and "opponent_passing_touchdowns" in self.model_fields_set:
            _dict['OpponentPassingTouchdowns'] = None

        # set to None if opponent_passing_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_passing_yards is None and "opponent_passing_yards" in self.model_fields_set:
            _dict['OpponentPassingYards'] = None

        # set to None if opponent_penalties (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_penalties is None and "opponent_penalties" in self.model_fields_set:
            _dict['OpponentPenalties'] = None

        # set to None if opponent_penalty_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_penalty_yards is None and "opponent_penalty_yards" in self.model_fields_set:
            _dict['OpponentPenaltyYards'] = None

        # set to None if opponent_punt_net_average (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punt_net_average is None and "opponent_punt_net_average" in self.model_fields_set:
            _dict['OpponentPuntNetAverage'] = None

        # set to None if opponent_punt_net_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punt_net_yards is None and "opponent_punt_net_yards" in self.model_fields_set:
            _dict['OpponentPuntNetYards'] = None

        # set to None if opponent_punt_return_average (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punt_return_average is None and "opponent_punt_return_average" in self.model_fields_set:
            _dict['OpponentPuntReturnAverage'] = None

        # set to None if opponent_punt_return_long (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punt_return_long is None and "opponent_punt_return_long" in self.model_fields_set:
            _dict['OpponentPuntReturnLong'] = None

        # set to None if opponent_punt_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punt_return_touchdowns is None and "opponent_punt_return_touchdowns" in self.model_fields_set:
            _dict['OpponentPuntReturnTouchdowns'] = None

        # set to None if opponent_punt_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punt_return_yards is None and "opponent_punt_return_yards" in self.model_fields_set:
            _dict['OpponentPuntReturnYards'] = None

        # set to None if opponent_punt_returns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punt_returns is None and "opponent_punt_returns" in self.model_fields_set:
            _dict['OpponentPuntReturns'] = None

        # set to None if opponent_punt_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punt_yards is None and "opponent_punt_yards" in self.model_fields_set:
            _dict['OpponentPuntYards'] = None

        # set to None if opponent_punts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punts is None and "opponent_punts" in self.model_fields_set:
            _dict['OpponentPunts'] = None

        # set to None if opponent_punts_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_punts_had_blocked is None and "opponent_punts_had_blocked" in self.model_fields_set:
            _dict['OpponentPuntsHadBlocked'] = None

        # set to None if opponent_quarterback_hits (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_quarterback_hits is None and "opponent_quarterback_hits" in self.model_fields_set:
            _dict['OpponentQuarterbackHits'] = None

        # set to None if opponent_quarterback_hits_differential (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_quarterback_hits_differential is None and "opponent_quarterback_hits_differential" in self.model_fields_set:
            _dict['OpponentQuarterbackHitsDifferential'] = None

        # set to None if opponent_quarterback_hits_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_quarterback_hits_percentage is None and "opponent_quarterback_hits_percentage" in self.model_fields_set:
            _dict['OpponentQuarterbackHitsPercentage'] = None

        # set to None if opponent_quarterback_sacks_differential (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_quarterback_sacks_differential is None and "opponent_quarterback_sacks_differential" in self.model_fields_set:
            _dict['OpponentQuarterbackSacksDifferential'] = None

        # set to None if opponent_red_zone_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_red_zone_attempts is None and "opponent_red_zone_attempts" in self.model_fields_set:
            _dict['OpponentRedZoneAttempts'] = None

        # set to None if opponent_red_zone_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_red_zone_conversions is None and "opponent_red_zone_conversions" in self.model_fields_set:
            _dict['OpponentRedZoneConversions'] = None

        # set to None if opponent_red_zone_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_red_zone_percentage is None and "opponent_red_zone_percentage" in self.model_fields_set:
            _dict['OpponentRedZonePercentage'] = None

        # set to None if opponent_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_return_yards is None and "opponent_return_yards" in self.model_fields_set:
            _dict['OpponentReturnYards'] = None

        # set to None if opponent_rushing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_rushing_attempts is None and "opponent_rushing_attempts" in self.model_fields_set:
            _dict['OpponentRushingAttempts'] = None

        # set to None if opponent_rushing_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_rushing_touchdowns is None and "opponent_rushing_touchdowns" in self.model_fields_set:
            _dict['OpponentRushingTouchdowns'] = None

        # set to None if opponent_rushing_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_rushing_yards is None and "opponent_rushing_yards" in self.model_fields_set:
            _dict['OpponentRushingYards'] = None

        # set to None if opponent_sack_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_sack_yards is None and "opponent_sack_yards" in self.model_fields_set:
            _dict['OpponentSackYards'] = None

        # set to None if opponent_sacks (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_sacks is None and "opponent_sacks" in self.model_fields_set:
            _dict['OpponentSacks'] = None

        # set to None if opponent_safeties (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_safeties is None and "opponent_safeties" in self.model_fields_set:
            _dict['OpponentSafeties'] = None

        # set to None if opponent_score_quarter1 (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_score_quarter1 is None and "opponent_score_quarter1" in self.model_fields_set:
            _dict['OpponentScoreQuarter1'] = None

        # set to None if opponent_score_quarter2 (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_score_quarter2 is None and "opponent_score_quarter2" in self.model_fields_set:
            _dict['OpponentScoreQuarter2'] = None

        # set to None if opponent_score_quarter3 (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_score_quarter3 is None and "opponent_score_quarter3" in self.model_fields_set:
            _dict['OpponentScoreQuarter3'] = None

        # set to None if opponent_score_quarter4 (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_score_quarter4 is None and "opponent_score_quarter4" in self.model_fields_set:
            _dict['OpponentScoreQuarter4'] = None

        # set to None if opponent_solo_tackles (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_solo_tackles is None and "opponent_solo_tackles" in self.model_fields_set:
            _dict['OpponentSoloTackles'] = None

        # set to None if opponent_tackles_for_loss (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_tackles_for_loss is None and "opponent_tackles_for_loss" in self.model_fields_set:
            _dict['OpponentTacklesForLoss'] = None

        # set to None if opponent_tackles_for_loss_differential (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_tackles_for_loss_differential is None and "opponent_tackles_for_loss_differential" in self.model_fields_set:
            _dict['OpponentTacklesForLossDifferential'] = None

        # set to None if opponent_tackles_for_loss_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_tackles_for_loss_percentage is None and "opponent_tackles_for_loss_percentage" in self.model_fields_set:
            _dict['OpponentTacklesForLossPercentage'] = None

        # set to None if opponent_third_down_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_third_down_attempts is None and "opponent_third_down_attempts" in self.model_fields_set:
            _dict['OpponentThirdDownAttempts'] = None

        # set to None if opponent_third_down_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_third_down_conversions is None and "opponent_third_down_conversions" in self.model_fields_set:
            _dict['OpponentThirdDownConversions'] = None

        # set to None if opponent_third_down_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_third_down_percentage is None and "opponent_third_down_percentage" in self.model_fields_set:
            _dict['OpponentThirdDownPercentage'] = None

        # set to None if opponent_time_of_possession (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_time_of_possession is None and "opponent_time_of_possession" in self.model_fields_set:
            _dict['OpponentTimeOfPossession'] = None

        # set to None if opponent_times_sacked (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_times_sacked is None and "opponent_times_sacked" in self.model_fields_set:
            _dict['OpponentTimesSacked'] = None

        # set to None if opponent_times_sacked_yards (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_times_sacked_yards is None and "opponent_times_sacked_yards" in self.model_fields_set:
            _dict['OpponentTimesSackedYards'] = None

        # set to None if opponent_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_touchdowns is None and "opponent_touchdowns" in self.model_fields_set:
            _dict['OpponentTouchdowns'] = None

        # set to None if opponent_two_point_conversion_returns (nullable) is None
        # and model_fields_set contains the field
        if self.opponent_two_point_conversion_returns is None and "opponent_two_point_conversion_returns" in self.model_fields_set:
            _dict['OpponentTwoPointConversionReturns'] = None

        # set to None if over_under (nullable) is None
        # and model_fields_set contains the field
        if self.over_under is None and "over_under" in self.model_fields_set:
            _dict['OverUnder'] = None

        # set to None if passer_rating (nullable) is None
        # and model_fields_set contains the field
        if self.passer_rating is None and "passer_rating" in self.model_fields_set:
            _dict['PasserRating'] = None

        # set to None if passes_defended (nullable) is None
        # and model_fields_set contains the field
        if self.passes_defended is None and "passes_defended" in self.model_fields_set:
            _dict['PassesDefended'] = None

        # set to None if passing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.passing_attempts is None and "passing_attempts" in self.model_fields_set:
            _dict['PassingAttempts'] = None

        # set to None if passing_completions (nullable) is None
        # and model_fields_set contains the field
        if self.passing_completions is None and "passing_completions" in self.model_fields_set:
            _dict['PassingCompletions'] = None

        # set to None if passing_dropbacks (nullable) is None
        # and model_fields_set contains the field
        if self.passing_dropbacks is None and "passing_dropbacks" in self.model_fields_set:
            _dict['PassingDropbacks'] = None

        # set to None if passing_interception_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.passing_interception_percentage is None and "passing_interception_percentage" in self.model_fields_set:
            _dict['PassingInterceptionPercentage'] = None

        # set to None if passing_interceptions (nullable) is None
        # and model_fields_set contains the field
        if self.passing_interceptions is None and "passing_interceptions" in self.model_fields_set:
            _dict['PassingInterceptions'] = None

        # set to None if passing_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.passing_touchdowns is None and "passing_touchdowns" in self.model_fields_set:
            _dict['PassingTouchdowns'] = None

        # set to None if passing_yards (nullable) is None
        # and model_fields_set contains the field
        if self.passing_yards is None and "passing_yards" in self.model_fields_set:
            _dict['PassingYards'] = None

        # set to None if penalties (nullable) is None
        # and model_fields_set contains the field
        if self.penalties is None and "penalties" in self.model_fields_set:
            _dict['Penalties'] = None

        # set to None if penalty_yard_differential (nullable) is None
        # and model_fields_set contains the field
        if self.penalty_yard_differential is None and "penalty_yard_differential" in self.model_fields_set:
            _dict['PenaltyYardDifferential'] = None

        # set to None if penalty_yards (nullable) is None
        # and model_fields_set contains the field
        if self.penalty_yards is None and "penalty_yards" in self.model_fields_set:
            _dict['PenaltyYards'] = None

        # set to None if point_differential (nullable) is None
        # and model_fields_set contains the field
        if self.point_differential is None and "point_differential" in self.model_fields_set:
            _dict['PointDifferential'] = None

        # set to None if point_spread (nullable) is None
        # and model_fields_set contains the field
        if self.point_spread is None and "point_spread" in self.model_fields_set:
            _dict['PointSpread'] = None

        # set to None if punt_net_average (nullable) is None
        # and model_fields_set contains the field
        if self.punt_net_average is None and "punt_net_average" in self.model_fields_set:
            _dict['PuntNetAverage'] = None

        # set to None if punt_net_yards (nullable) is None
        # and model_fields_set contains the field
        if self.punt_net_yards is None and "punt_net_yards" in self.model_fields_set:
            _dict['PuntNetYards'] = None

        # set to None if punt_return_average (nullable) is None
        # and model_fields_set contains the field
        if self.punt_return_average is None and "punt_return_average" in self.model_fields_set:
            _dict['PuntReturnAverage'] = None

        # set to None if punt_return_long (nullable) is None
        # and model_fields_set contains the field
        if self.punt_return_long is None and "punt_return_long" in self.model_fields_set:
            _dict['PuntReturnLong'] = None

        # set to None if punt_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.punt_return_touchdowns is None and "punt_return_touchdowns" in self.model_fields_set:
            _dict['PuntReturnTouchdowns'] = None

        # set to None if punt_return_yard_differential (nullable) is None
        # and model_fields_set contains the field
        if self.punt_return_yard_differential is None and "punt_return_yard_differential" in self.model_fields_set:
            _dict['PuntReturnYardDifferential'] = None

        # set to None if punt_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.punt_return_yards is None and "punt_return_yards" in self.model_fields_set:
            _dict['PuntReturnYards'] = None

        # set to None if punt_returns (nullable) is None
        # and model_fields_set contains the field
        if self.punt_returns is None and "punt_returns" in self.model_fields_set:
            _dict['PuntReturns'] = None

        # set to None if punt_yards (nullable) is None
        # and model_fields_set contains the field
        if self.punt_yards is None and "punt_yards" in self.model_fields_set:
            _dict['PuntYards'] = None

        # set to None if punts (nullable) is None
        # and model_fields_set contains the field
        if self.punts is None and "punts" in self.model_fields_set:
            _dict['Punts'] = None

        # set to None if punts_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.punts_had_blocked is None and "punts_had_blocked" in self.model_fields_set:
            _dict['PuntsHadBlocked'] = None

        # set to None if quarterback_hits (nullable) is None
        # and model_fields_set contains the field
        if self.quarterback_hits is None and "quarterback_hits" in self.model_fields_set:
            _dict['QuarterbackHits'] = None

        # set to None if quarterback_hits_differential (nullable) is None
        # and model_fields_set contains the field
        if self.quarterback_hits_differential is None and "quarterback_hits_differential" in self.model_fields_set:
            _dict['QuarterbackHitsDifferential'] = None

        # set to None if quarterback_hits_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.quarterback_hits_percentage is None and "quarterback_hits_percentage" in self.model_fields_set:
            _dict['QuarterbackHitsPercentage'] = None

        # set to None if red_zone_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.red_zone_attempts is None and "red_zone_attempts" in self.model_fields_set:
            _dict['RedZoneAttempts'] = None

        # set to None if red_zone_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.red_zone_conversions is None and "red_zone_conversions" in self.model_fields_set:
            _dict['RedZoneConversions'] = None

        # set to None if red_zone_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.red_zone_percentage is None and "red_zone_percentage" in self.model_fields_set:
            _dict['RedZonePercentage'] = None

        # set to None if return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.return_yards is None and "return_yards" in self.model_fields_set:
            _dict['ReturnYards'] = None

        # set to None if rushing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.rushing_attempts is None and "rushing_attempts" in self.model_fields_set:
            _dict['RushingAttempts'] = None

        # set to None if rushing_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.rushing_touchdowns is None and "rushing_touchdowns" in self.model_fields_set:
            _dict['RushingTouchdowns'] = None

        # set to None if rushing_yards (nullable) is None
        # and model_fields_set contains the field
        if self.rushing_yards is None and "rushing_yards" in self.model_fields_set:
            _dict['RushingYards'] = None

        # set to None if sack_yards (nullable) is None
        # and model_fields_set contains the field
        if self.sack_yards is None and "sack_yards" in self.model_fields_set:
            _dict['SackYards'] = None

        # set to None if sacks (nullable) is None
        # and model_fields_set contains the field
        if self.sacks is None and "sacks" in self.model_fields_set:
            _dict['Sacks'] = None

        # set to None if safeties (nullable) is None
        # and model_fields_set contains the field
        if self.safeties is None and "safeties" in self.model_fields_set:
            _dict['Safeties'] = None

        # set to None if score_quarter1 (nullable) is None
        # and model_fields_set contains the field
        if self.score_quarter1 is None and "score_quarter1" in self.model_fields_set:
            _dict['ScoreQuarter1'] = None

        # set to None if score_quarter2 (nullable) is None
        # and model_fields_set contains the field
        if self.score_quarter2 is None and "score_quarter2" in self.model_fields_set:
            _dict['ScoreQuarter2'] = None

        # set to None if score_quarter3 (nullable) is None
        # and model_fields_set contains the field
        if self.score_quarter3 is None and "score_quarter3" in self.model_fields_set:
            _dict['ScoreQuarter3'] = None

        # set to None if score_quarter4 (nullable) is None
        # and model_fields_set contains the field
        if self.score_quarter4 is None and "score_quarter4" in self.model_fields_set:
            _dict['ScoreQuarter4'] = None

        # set to None if solo_tackles (nullable) is None
        # and model_fields_set contains the field
        if self.solo_tackles is None and "solo_tackles" in self.model_fields_set:
            _dict['SoloTackles'] = None

        # set to None if tackles_for_loss (nullable) is None
        # and model_fields_set contains the field
        if self.tackles_for_loss is None and "tackles_for_loss" in self.model_fields_set:
            _dict['TacklesForLoss'] = None

        # set to None if tackles_for_loss_differential (nullable) is None
        # and model_fields_set contains the field
        if self.tackles_for_loss_differential is None and "tackles_for_loss_differential" in self.model_fields_set:
            _dict['TacklesForLossDifferential'] = None

        # set to None if tackles_for_loss_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.tackles_for_loss_percentage is None and "tackles_for_loss_percentage" in self.model_fields_set:
            _dict['TacklesForLossPercentage'] = None

        # set to None if team (nullable) is None
        # and model_fields_set contains the field
        if self.team is None and "team" in self.model_fields_set:
            _dict['Team'] = None

        # set to None if team_id (nullable) is None
        # and model_fields_set contains the field
        if self.team_id is None and "team_id" in self.model_fields_set:
            _dict['TeamID'] = None

        # set to None if team_name (nullable) is None
        # and model_fields_set contains the field
        if self.team_name is None and "team_name" in self.model_fields_set:
            _dict['TeamName'] = None

        # set to None if temperature (nullable) is None
        # and model_fields_set contains the field
        if self.temperature is None and "temperature" in self.model_fields_set:
            _dict['Temperature'] = None

        # set to None if third_down_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.third_down_attempts is None and "third_down_attempts" in self.model_fields_set:
            _dict['ThirdDownAttempts'] = None

        # set to None if third_down_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.third_down_conversions is None and "third_down_conversions" in self.model_fields_set:
            _dict['ThirdDownConversions'] = None

        # set to None if third_down_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.third_down_percentage is None and "third_down_percentage" in self.model_fields_set:
            _dict['ThirdDownPercentage'] = None

        # set to None if time_of_possession (nullable) is None
        # and model_fields_set contains the field
        if self.time_of_possession is None and "time_of_possession" in self.model_fields_set:
            _dict['TimeOfPossession'] = None

        # set to None if times_sacked (nullable) is None
        # and model_fields_set contains the field
        if self.times_sacked is None and "times_sacked" in self.model_fields_set:
            _dict['TimesSacked'] = None

        # set to None if times_sacked_yards (nullable) is None
        # and model_fields_set contains the field
        if self.times_sacked_yards is None and "times_sacked_yards" in self.model_fields_set:
            _dict['TimesSackedYards'] = None

        # set to None if touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.touchdowns is None and "touchdowns" in self.model_fields_set:
            _dict['Touchdowns'] = None

        # set to None if two_point_conversion_returns (nullable) is None
        # and model_fields_set contains the field
        if self.two_point_conversion_returns is None and "two_point_conversion_returns" in self.model_fields_set:
            _dict['TwoPointConversionReturns'] = None

        # set to None if wind_speed (nullable) is None
        # and model_fields_set contains the field
        if self.wind_speed is None and "wind_speed" in self.model_fields_set:
            _dict['WindSpeed'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of TeamSeason from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "AssistedTackles": obj.get("AssistedTackles"),
            "BlockedKickReturnTouchdowns": obj.get("BlockedKickReturnTouchdowns"),
            "BlockedKickReturnYards": obj.get("BlockedKickReturnYards"),
            "BlockedKicks": obj.get("BlockedKicks"),
            "CompletionPercentage": obj.get("CompletionPercentage"),
            "ExtraPointKickingAttempts": obj.get("ExtraPointKickingAttempts"),
            "ExtraPointKickingConversions": obj.get("ExtraPointKickingConversions"),
            "ExtraPointPassingAttempts": obj.get("ExtraPointPassingAttempts"),
            "ExtraPointPassingConversions": obj.get("ExtraPointPassingConversions"),
            "ExtraPointPercentage": obj.get("ExtraPointPercentage"),
            "ExtraPointRushingAttempts": obj.get("ExtraPointRushingAttempts"),
            "ExtraPointRushingConversions": obj.get("ExtraPointRushingConversions"),
            "ExtraPointsHadBlocked": obj.get("ExtraPointsHadBlocked"),
            "FieldGoalAttempts": obj.get("FieldGoalAttempts"),
            "FieldGoalPercentage": obj.get("FieldGoalPercentage"),
            "FieldGoalReturnTouchdowns": obj.get("FieldGoalReturnTouchdowns"),
            "FieldGoalReturnYards": obj.get("FieldGoalReturnYards"),
            "FieldGoalsHadBlocked": obj.get("FieldGoalsHadBlocked"),
            "FieldGoalsMade": obj.get("FieldGoalsMade"),
            "FirstDowns": obj.get("FirstDowns"),
            "FirstDownsByPassing": obj.get("FirstDownsByPassing"),
            "FirstDownsByPenalty": obj.get("FirstDownsByPenalty"),
            "FirstDownsByRushing": obj.get("FirstDownsByRushing"),
            "FourthDownAttempts": obj.get("FourthDownAttempts"),
            "FourthDownConversions": obj.get("FourthDownConversions"),
            "FourthDownPercentage": obj.get("FourthDownPercentage"),
            "FumbleReturnTouchdowns": obj.get("FumbleReturnTouchdowns"),
            "FumbleReturnYards": obj.get("FumbleReturnYards"),
            "Fumbles": obj.get("Fumbles"),
            "FumblesForced": obj.get("FumblesForced"),
            "FumblesLost": obj.get("FumblesLost"),
            "FumblesRecovered": obj.get("FumblesRecovered"),
            "Games": obj.get("Games"),
            "Giveaways": obj.get("Giveaways"),
            "GlobalTeamID": obj.get("GlobalTeamID"),
            "GoalToGoAttempts": obj.get("GoalToGoAttempts"),
            "GoalToGoConversions": obj.get("GoalToGoConversions"),
            "GoalToGoPercentage": obj.get("GoalToGoPercentage"),
            "Humidity": obj.get("Humidity"),
            "InterceptionReturnTouchdowns": obj.get("InterceptionReturnTouchdowns"),
            "InterceptionReturnYards": obj.get("InterceptionReturnYards"),
            "InterceptionReturns": obj.get("InterceptionReturns"),
            "KickReturnAverage": obj.get("KickReturnAverage"),
            "KickReturnLong": obj.get("KickReturnLong"),
            "KickReturnTouchdowns": obj.get("KickReturnTouchdowns"),
            "KickReturnYardDifferential": obj.get("KickReturnYardDifferential"),
            "KickReturnYards": obj.get("KickReturnYards"),
            "KickReturns": obj.get("KickReturns"),
            "KickoffTouchbacks": obj.get("KickoffTouchbacks"),
            "Kickoffs": obj.get("Kickoffs"),
            "KickoffsInEndZone": obj.get("KickoffsInEndZone"),
            "OffensivePlays": obj.get("OffensivePlays"),
            "OffensiveYards": obj.get("OffensiveYards"),
            "OffensiveYardsPerPlay": obj.get("OffensiveYardsPerPlay"),
            "OpponentAssistedTackles": obj.get("OpponentAssistedTackles"),
            "OpponentBlockedKickReturnTouchdowns": obj.get("OpponentBlockedKickReturnTouchdowns"),
            "OpponentBlockedKickReturnYards": obj.get("OpponentBlockedKickReturnYards"),
            "OpponentBlockedKicks": obj.get("OpponentBlockedKicks"),
            "OpponentCompletionPercentage": obj.get("OpponentCompletionPercentage"),
            "OpponentExtraPointKickingAttempts": obj.get("OpponentExtraPointKickingAttempts"),
            "OpponentExtraPointKickingConversions": obj.get("OpponentExtraPointKickingConversions"),
            "OpponentExtraPointPassingAttempts": obj.get("OpponentExtraPointPassingAttempts"),
            "OpponentExtraPointPassingConversions": obj.get("OpponentExtraPointPassingConversions"),
            "OpponentExtraPointPercentage": obj.get("OpponentExtraPointPercentage"),
            "OpponentExtraPointRushingAttempts": obj.get("OpponentExtraPointRushingAttempts"),
            "OpponentExtraPointRushingConversions": obj.get("OpponentExtraPointRushingConversions"),
            "OpponentExtraPointsHadBlocked": obj.get("OpponentExtraPointsHadBlocked"),
            "OpponentFieldGoalAttempts": obj.get("OpponentFieldGoalAttempts"),
            "OpponentFieldGoalPercentage": obj.get("OpponentFieldGoalPercentage"),
            "OpponentFieldGoalReturnTouchdowns": obj.get("OpponentFieldGoalReturnTouchdowns"),
            "OpponentFieldGoalReturnYards": obj.get("OpponentFieldGoalReturnYards"),
            "OpponentFieldGoalsHadBlocked": obj.get("OpponentFieldGoalsHadBlocked"),
            "OpponentFieldGoalsMade": obj.get("OpponentFieldGoalsMade"),
            "OpponentFirstDowns": obj.get("OpponentFirstDowns"),
            "OpponentFirstDownsByPassing": obj.get("OpponentFirstDownsByPassing"),
            "OpponentFirstDownsByPenalty": obj.get("OpponentFirstDownsByPenalty"),
            "OpponentFirstDownsByRushing": obj.get("OpponentFirstDownsByRushing"),
            "OpponentFourthDownAttempts": obj.get("OpponentFourthDownAttempts"),
            "OpponentFourthDownConversions": obj.get("OpponentFourthDownConversions"),
            "OpponentFourthDownPercentage": obj.get("OpponentFourthDownPercentage"),
            "OpponentFumbleReturnTouchdowns": obj.get("OpponentFumbleReturnTouchdowns"),
            "OpponentFumbleReturnYards": obj.get("OpponentFumbleReturnYards"),
            "OpponentFumbles": obj.get("OpponentFumbles"),
            "OpponentFumblesForced": obj.get("OpponentFumblesForced"),
            "OpponentFumblesLost": obj.get("OpponentFumblesLost"),
            "OpponentFumblesRecovered": obj.get("OpponentFumblesRecovered"),
            "OpponentGiveaways": obj.get("OpponentGiveaways"),
            "OpponentGoalToGoAttempts": obj.get("OpponentGoalToGoAttempts"),
            "OpponentGoalToGoConversions": obj.get("OpponentGoalToGoConversions"),
            "OpponentGoalToGoPercentage": obj.get("OpponentGoalToGoPercentage"),
            "OpponentInterceptionReturnTouchdowns": obj.get("OpponentInterceptionReturnTouchdowns"),
            "OpponentInterceptionReturnYards": obj.get("OpponentInterceptionReturnYards"),
            "OpponentInterceptionReturns": obj.get("OpponentInterceptionReturns"),
            "OpponentKickReturnAverage": obj.get("OpponentKickReturnAverage"),
            "OpponentKickReturnLong": obj.get("OpponentKickReturnLong"),
            "OpponentKickReturnTouchdowns": obj.get("OpponentKickReturnTouchdowns"),
            "OpponentKickReturnYards": obj.get("OpponentKickReturnYards"),
            "OpponentKickReturns": obj.get("OpponentKickReturns"),
            "OpponentKickoffTouchbacks": obj.get("OpponentKickoffTouchbacks"),
            "OpponentKickoffs": obj.get("OpponentKickoffs"),
            "OpponentKickoffsInEndZone": obj.get("OpponentKickoffsInEndZone"),
            "OpponentOffensivePlays": obj.get("OpponentOffensivePlays"),
            "OpponentOffensiveYards": obj.get("OpponentOffensiveYards"),
            "OpponentOffensiveYardsPerPlay": obj.get("OpponentOffensiveYardsPerPlay"),
            "OpponentPasserRating": obj.get("OpponentPasserRating"),
            "OpponentPassesDefended": obj.get("OpponentPassesDefended"),
            "OpponentPassingAttempts": obj.get("OpponentPassingAttempts"),
            "OpponentPassingCompletions": obj.get("OpponentPassingCompletions"),
            "OpponentPassingDropbacks": obj.get("OpponentPassingDropbacks"),
            "OpponentPassingInterceptionPercentage": obj.get("OpponentPassingInterceptionPercentage"),
            "OpponentPassingInterceptions": obj.get("OpponentPassingInterceptions"),
            "OpponentPassingTouchdowns": obj.get("OpponentPassingTouchdowns"),
            "OpponentPassingYards": obj.get("OpponentPassingYards"),
            "OpponentPassingYardsPerAttempt": obj.get("OpponentPassingYardsPerAttempt"),
            "OpponentPassingYardsPerCompletion": obj.get("OpponentPassingYardsPerCompletion"),
            "OpponentPenalties": obj.get("OpponentPenalties"),
            "OpponentPenaltyYards": obj.get("OpponentPenaltyYards"),
            "OpponentPuntAverage": obj.get("OpponentPuntAverage"),
            "OpponentPuntNetAverage": obj.get("OpponentPuntNetAverage"),
            "OpponentPuntNetYards": obj.get("OpponentPuntNetYards"),
            "OpponentPuntReturnAverage": obj.get("OpponentPuntReturnAverage"),
            "OpponentPuntReturnLong": obj.get("OpponentPuntReturnLong"),
            "OpponentPuntReturnTouchdowns": obj.get("OpponentPuntReturnTouchdowns"),
            "OpponentPuntReturnYards": obj.get("OpponentPuntReturnYards"),
            "OpponentPuntReturns": obj.get("OpponentPuntReturns"),
            "OpponentPuntYards": obj.get("OpponentPuntYards"),
            "OpponentPunts": obj.get("OpponentPunts"),
            "OpponentPuntsHadBlocked": obj.get("OpponentPuntsHadBlocked"),
            "OpponentQuarterbackHits": obj.get("OpponentQuarterbackHits"),
            "OpponentQuarterbackHitsDifferential": obj.get("OpponentQuarterbackHitsDifferential"),
            "OpponentQuarterbackHitsPercentage": obj.get("OpponentQuarterbackHitsPercentage"),
            "OpponentQuarterbackSacksDifferential": obj.get("OpponentQuarterbackSacksDifferential"),
            "OpponentRedZoneAttempts": obj.get("OpponentRedZoneAttempts"),
            "OpponentRedZoneConversions": obj.get("OpponentRedZoneConversions"),
            "OpponentRedZonePercentage": obj.get("OpponentRedZonePercentage"),
            "OpponentReturnYards": obj.get("OpponentReturnYards"),
            "OpponentRushingAttempts": obj.get("OpponentRushingAttempts"),
            "OpponentRushingTouchdowns": obj.get("OpponentRushingTouchdowns"),
            "OpponentRushingYards": obj.get("OpponentRushingYards"),
            "OpponentRushingYardsPerAttempt": obj.get("OpponentRushingYardsPerAttempt"),
            "OpponentSackYards": obj.get("OpponentSackYards"),
            "OpponentSacks": obj.get("OpponentSacks"),
            "OpponentSafeties": obj.get("OpponentSafeties"),
            "OpponentScore": obj.get("OpponentScore"),
            "OpponentScoreOvertime": obj.get("OpponentScoreOvertime"),
            "OpponentScoreQuarter1": obj.get("OpponentScoreQuarter1"),
            "OpponentScoreQuarter2": obj.get("OpponentScoreQuarter2"),
            "OpponentScoreQuarter3": obj.get("OpponentScoreQuarter3"),
            "OpponentScoreQuarter4": obj.get("OpponentScoreQuarter4"),
            "OpponentSoloTackles": obj.get("OpponentSoloTackles"),
            "OpponentTacklesForLoss": obj.get("OpponentTacklesForLoss"),
            "OpponentTacklesForLossDifferential": obj.get("OpponentTacklesForLossDifferential"),
            "OpponentTacklesForLossPercentage": obj.get("OpponentTacklesForLossPercentage"),
            "OpponentTakeaways": obj.get("OpponentTakeaways"),
            "OpponentThirdDownAttempts": obj.get("OpponentThirdDownAttempts"),
            "OpponentThirdDownConversions": obj.get("OpponentThirdDownConversions"),
            "OpponentThirdDownPercentage": obj.get("OpponentThirdDownPercentage"),
            "OpponentTimeOfPossession": obj.get("OpponentTimeOfPossession"),
            "OpponentTimesSacked": obj.get("OpponentTimesSacked"),
            "OpponentTimesSackedPercentage": obj.get("OpponentTimesSackedPercentage"),
            "OpponentTimesSackedYards": obj.get("OpponentTimesSackedYards"),
            "OpponentTouchdowns": obj.get("OpponentTouchdowns"),
            "OpponentTurnoverDifferential": obj.get("OpponentTurnoverDifferential"),
            "OpponentTwoPointConversionReturns": obj.get("OpponentTwoPointConversionReturns"),
            "OverUnder": obj.get("OverUnder"),
            "PasserRating": obj.get("PasserRating"),
            "PassesDefended": obj.get("PassesDefended"),
            "PassingAttempts": obj.get("PassingAttempts"),
            "PassingCompletions": obj.get("PassingCompletions"),
            "PassingDropbacks": obj.get("PassingDropbacks"),
            "PassingInterceptionPercentage": obj.get("PassingInterceptionPercentage"),
            "PassingInterceptions": obj.get("PassingInterceptions"),
            "PassingTouchdowns": obj.get("PassingTouchdowns"),
            "PassingYards": obj.get("PassingYards"),
            "PassingYardsPerAttempt": obj.get("PassingYardsPerAttempt"),
            "PassingYardsPerCompletion": obj.get("PassingYardsPerCompletion"),
            "Penalties": obj.get("Penalties"),
            "PenaltyYardDifferential": obj.get("PenaltyYardDifferential"),
            "PenaltyYards": obj.get("PenaltyYards"),
            "PointDifferential": obj.get("PointDifferential"),
            "PointSpread": obj.get("PointSpread"),
            "PuntAverage": obj.get("PuntAverage"),
            "PuntNetAverage": obj.get("PuntNetAverage"),
            "PuntNetYards": obj.get("PuntNetYards"),
            "PuntReturnAverage": obj.get("PuntReturnAverage"),
            "PuntReturnLong": obj.get("PuntReturnLong"),
            "PuntReturnTouchdowns": obj.get("PuntReturnTouchdowns"),
            "PuntReturnYardDifferential": obj.get("PuntReturnYardDifferential"),
            "PuntReturnYards": obj.get("PuntReturnYards"),
            "PuntReturns": obj.get("PuntReturns"),
            "PuntYards": obj.get("PuntYards"),
            "Punts": obj.get("Punts"),
            "PuntsHadBlocked": obj.get("PuntsHadBlocked"),
            "QuarterbackHits": obj.get("QuarterbackHits"),
            "QuarterbackHitsDifferential": obj.get("QuarterbackHitsDifferential"),
            "QuarterbackHitsPercentage": obj.get("QuarterbackHitsPercentage"),
            "QuarterbackSacksDifferential": obj.get("QuarterbackSacksDifferential"),
            "RedZoneAttempts": obj.get("RedZoneAttempts"),
            "RedZoneConversions": obj.get("RedZoneConversions"),
            "RedZonePercentage": obj.get("RedZonePercentage"),
            "ReturnYards": obj.get("ReturnYards"),
            "RushingAttempts": obj.get("RushingAttempts"),
            "RushingTouchdowns": obj.get("RushingTouchdowns"),
            "RushingYards": obj.get("RushingYards"),
            "RushingYardsPerAttempt": obj.get("RushingYardsPerAttempt"),
            "SackYards": obj.get("SackYards"),
            "Sacks": obj.get("Sacks"),
            "Safeties": obj.get("Safeties"),
            "Score": obj.get("Score"),
            "ScoreOvertime": obj.get("ScoreOvertime"),
            "ScoreQuarter1": obj.get("ScoreQuarter1"),
            "ScoreQuarter2": obj.get("ScoreQuarter2"),
            "ScoreQuarter3": obj.get("ScoreQuarter3"),
            "ScoreQuarter4": obj.get("ScoreQuarter4"),
            "Season": obj.get("Season"),
            "SeasonType": obj.get("SeasonType"),
            "SoloTackles": obj.get("SoloTackles"),
            "TacklesForLoss": obj.get("TacklesForLoss"),
            "TacklesForLossDifferential": obj.get("TacklesForLossDifferential"),
            "TacklesForLossPercentage": obj.get("TacklesForLossPercentage"),
            "Takeaways": obj.get("Takeaways"),
            "Team": obj.get("Team"),
            "TeamID": obj.get("TeamID"),
            "TeamName": obj.get("TeamName"),
            "TeamSeasonID": obj.get("TeamSeasonID"),
            "TeamStatID": obj.get("TeamStatID"),
            "Temperature": obj.get("Temperature"),
            "ThirdDownAttempts": obj.get("ThirdDownAttempts"),
            "ThirdDownConversions": obj.get("ThirdDownConversions"),
            "ThirdDownPercentage": obj.get("ThirdDownPercentage"),
            "TimeOfPossession": obj.get("TimeOfPossession"),
            "TimesSacked": obj.get("TimesSacked"),
            "TimesSackedPercentage": obj.get("TimesSackedPercentage"),
            "TimesSackedYards": obj.get("TimesSackedYards"),
            "TotalScore": obj.get("TotalScore"),
            "Touchdowns": obj.get("Touchdowns"),
            "TurnoverDifferential": obj.get("TurnoverDifferential"),
            "TwoPointConversionReturns": obj.get("TwoPointConversionReturns"),
            "WindSpeed": obj.get("WindSpeed")
        })
        return _obj


