# coding: utf-8

"""
    NFL v3 Scores

    NFL schedules, scores, odds, weather, and news API.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from openapi_client.models.stadium import Stadium
from typing import Optional, Set
from typing_extensions import Self

class Game(BaseModel):
    """
    Game
    """ # noqa: E501
    away_assisted_tackles: Optional[StrictInt] = Field(default=None, alias="AwayAssistedTackles")
    away_blocked_kick_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayBlockedKickReturnTouchdowns")
    away_blocked_kick_return_yards: Optional[StrictInt] = Field(default=None, alias="AwayBlockedKickReturnYards")
    away_blocked_kicks: Optional[StrictInt] = Field(default=None, alias="AwayBlockedKicks")
    away_completion_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayCompletionPercentage")
    away_extra_point_kicking_attempts: Optional[StrictInt] = Field(default=None, alias="AwayExtraPointKickingAttempts")
    away_extra_point_kicking_conversions: Optional[StrictInt] = Field(default=None, alias="AwayExtraPointKickingConversions")
    away_extra_point_passing_attempts: Optional[StrictInt] = Field(default=None, alias="AwayExtraPointPassingAttempts")
    away_extra_point_passing_conversions: Optional[StrictInt] = Field(default=None, alias="AwayExtraPointPassingConversions")
    away_extra_point_rushing_attempts: Optional[StrictInt] = Field(default=None, alias="AwayExtraPointRushingAttempts")
    away_extra_point_rushing_conversions: Optional[StrictInt] = Field(default=None, alias="AwayExtraPointRushingConversions")
    away_extra_points_had_blocked: Optional[StrictInt] = Field(default=None, alias="AwayExtraPointsHadBlocked")
    away_field_goal_attempts: Optional[StrictInt] = Field(default=None, alias="AwayFieldGoalAttempts")
    away_field_goal_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayFieldGoalReturnTouchdowns")
    away_field_goal_return_yards: Optional[StrictInt] = Field(default=None, alias="AwayFieldGoalReturnYards")
    away_field_goals_had_blocked: Optional[StrictInt] = Field(default=None, alias="AwayFieldGoalsHadBlocked")
    away_field_goals_made: Optional[StrictInt] = Field(default=None, alias="AwayFieldGoalsMade")
    away_first_downs: Optional[StrictInt] = Field(default=None, alias="AwayFirstDowns")
    away_first_downs_by_passing: Optional[StrictInt] = Field(default=None, alias="AwayFirstDownsByPassing")
    away_first_downs_by_penalty: Optional[StrictInt] = Field(default=None, alias="AwayFirstDownsByPenalty")
    away_first_downs_by_rushing: Optional[StrictInt] = Field(default=None, alias="AwayFirstDownsByRushing")
    away_fourth_down_attempts: Optional[StrictInt] = Field(default=None, alias="AwayFourthDownAttempts")
    away_fourth_down_conversions: Optional[StrictInt] = Field(default=None, alias="AwayFourthDownConversions")
    away_fourth_down_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayFourthDownPercentage")
    away_fumble_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayFumbleReturnTouchdowns")
    away_fumble_return_yards: Optional[StrictInt] = Field(default=None, alias="AwayFumbleReturnYards")
    away_fumbles: Optional[StrictInt] = Field(default=None, alias="AwayFumbles")
    away_fumbles_forced: Optional[StrictInt] = Field(default=None, alias="AwayFumblesForced")
    away_fumbles_lost: Optional[StrictInt] = Field(default=None, alias="AwayFumblesLost")
    away_fumbles_recovered: Optional[StrictInt] = Field(default=None, alias="AwayFumblesRecovered")
    away_giveaways: Optional[StrictInt] = Field(default=None, alias="AwayGiveaways")
    away_goal_to_go_attempts: Optional[StrictInt] = Field(default=None, alias="AwayGoalToGoAttempts")
    away_goal_to_go_conversions: Optional[StrictInt] = Field(default=None, alias="AwayGoalToGoConversions")
    away_interception_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayInterceptionReturnTouchdowns")
    away_interception_return_yards: Optional[StrictInt] = Field(default=None, alias="AwayInterceptionReturnYards")
    away_interception_returns: Optional[StrictInt] = Field(default=None, alias="AwayInterceptionReturns")
    away_kick_return_long: Optional[StrictInt] = Field(default=None, alias="AwayKickReturnLong")
    away_kick_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayKickReturnTouchdowns")
    away_kick_return_yards: Optional[StrictInt] = Field(default=None, alias="AwayKickReturnYards")
    away_kick_returns: Optional[StrictInt] = Field(default=None, alias="AwayKickReturns")
    away_kickoff_touchbacks: Optional[StrictInt] = Field(default=None, alias="AwayKickoffTouchbacks")
    away_kickoffs: Optional[StrictInt] = Field(default=None, alias="AwayKickoffs")
    away_kickoffs_in_end_zone: Optional[StrictInt] = Field(default=None, alias="AwayKickoffsInEndZone")
    away_offensive_plays: Optional[StrictInt] = Field(default=None, alias="AwayOffensivePlays")
    away_offensive_yards: Optional[StrictInt] = Field(default=None, alias="AwayOffensiveYards")
    away_offensive_yards_per_play: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayOffensiveYardsPerPlay")
    away_passer_rating: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayPasserRating")
    away_passes_defended: Optional[StrictInt] = Field(default=None, alias="AwayPassesDefended")
    away_passing_attempts: Optional[StrictInt] = Field(default=None, alias="AwayPassingAttempts")
    away_passing_completions: Optional[StrictInt] = Field(default=None, alias="AwayPassingCompletions")
    away_passing_interceptions: Optional[StrictInt] = Field(default=None, alias="AwayPassingInterceptions")
    away_passing_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayPassingTouchdowns")
    away_passing_yards: Optional[StrictInt] = Field(default=None, alias="AwayPassingYards")
    away_passing_yards_per_attempt: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayPassingYardsPerAttempt")
    away_passing_yards_per_completion: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayPassingYardsPerCompletion")
    away_penalties: Optional[StrictInt] = Field(default=None, alias="AwayPenalties")
    away_penalty_yards: Optional[StrictInt] = Field(default=None, alias="AwayPenaltyYards")
    away_punt_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayPuntAverage")
    away_punt_net_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayPuntNetAverage")
    away_punt_net_yards: Optional[StrictInt] = Field(default=None, alias="AwayPuntNetYards")
    away_punt_return_long: Optional[StrictInt] = Field(default=None, alias="AwayPuntReturnLong")
    away_punt_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayPuntReturnTouchdowns")
    away_punt_return_yards: Optional[StrictInt] = Field(default=None, alias="AwayPuntReturnYards")
    away_punt_returns: Optional[StrictInt] = Field(default=None, alias="AwayPuntReturns")
    away_punt_yards: Optional[StrictInt] = Field(default=None, alias="AwayPuntYards")
    away_punts: Optional[StrictInt] = Field(default=None, alias="AwayPunts")
    away_punts_had_blocked: Optional[StrictInt] = Field(default=None, alias="AwayPuntsHadBlocked")
    away_quarterback_hits: Optional[StrictInt] = Field(default=None, alias="AwayQuarterbackHits")
    away_red_zone_attempts: Optional[StrictInt] = Field(default=None, alias="AwayRedZoneAttempts")
    away_red_zone_conversions: Optional[StrictInt] = Field(default=None, alias="AwayRedZoneConversions")
    away_return_yards: Optional[StrictInt] = Field(default=None, alias="AwayReturnYards")
    away_rushing_attempts: Optional[StrictInt] = Field(default=None, alias="AwayRushingAttempts")
    away_rushing_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayRushingTouchdowns")
    away_rushing_yards: Optional[StrictInt] = Field(default=None, alias="AwayRushingYards")
    away_rushing_yards_per_attempt: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayRushingYardsPerAttempt")
    away_sack_yards: Optional[StrictInt] = Field(default=None, alias="AwaySackYards")
    away_sacks: Optional[StrictInt] = Field(default=None, alias="AwaySacks")
    away_safeties: Optional[StrictInt] = Field(default=None, alias="AwaySafeties")
    away_score: Optional[StrictInt] = Field(default=None, alias="AwayScore")
    away_score_overtime: Optional[StrictInt] = Field(default=None, alias="AwayScoreOvertime")
    away_score_quarter1: Optional[StrictInt] = Field(default=None, alias="AwayScoreQuarter1")
    away_score_quarter2: Optional[StrictInt] = Field(default=None, alias="AwayScoreQuarter2")
    away_score_quarter3: Optional[StrictInt] = Field(default=None, alias="AwayScoreQuarter3")
    away_score_quarter4: Optional[StrictInt] = Field(default=None, alias="AwayScoreQuarter4")
    away_solo_tackles: Optional[StrictInt] = Field(default=None, alias="AwaySoloTackles")
    away_tackles_for_loss: Optional[StrictInt] = Field(default=None, alias="AwayTacklesForLoss")
    away_takeaways: Optional[StrictInt] = Field(default=None, alias="AwayTakeaways")
    away_team: Optional[StrictStr] = Field(default=None, alias="AwayTeam")
    away_third_down_attempts: Optional[StrictInt] = Field(default=None, alias="AwayThirdDownAttempts")
    away_third_down_conversions: Optional[StrictInt] = Field(default=None, alias="AwayThirdDownConversions")
    away_third_down_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="AwayThirdDownPercentage")
    away_time_of_possession: Optional[StrictStr] = Field(default=None, alias="AwayTimeOfPossession")
    away_times_sacked: Optional[StrictInt] = Field(default=None, alias="AwayTimesSacked")
    away_times_sacked_yards: Optional[StrictInt] = Field(default=None, alias="AwayTimesSackedYards")
    away_touchdowns: Optional[StrictInt] = Field(default=None, alias="AwayTouchdowns")
    away_turnover_differential: Optional[StrictInt] = Field(default=None, alias="AwayTurnoverDifferential")
    away_two_point_conversion_returns: Optional[StrictInt] = Field(default=None, alias="AwayTwoPointConversionReturns")
    var_date: Optional[StrictStr] = Field(default=None, alias="Date")
    game_id: Optional[StrictInt] = Field(default=None, alias="GameID")
    game_key: Optional[StrictStr] = Field(default=None, alias="GameKey")
    home_assisted_tackles: Optional[StrictInt] = Field(default=None, alias="HomeAssistedTackles")
    home_blocked_kick_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomeBlockedKickReturnTouchdowns")
    home_blocked_kick_return_yards: Optional[StrictInt] = Field(default=None, alias="HomeBlockedKickReturnYards")
    home_blocked_kicks: Optional[StrictInt] = Field(default=None, alias="HomeBlockedKicks")
    home_completion_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomeCompletionPercentage")
    home_extra_point_kicking_attempts: Optional[StrictInt] = Field(default=None, alias="HomeExtraPointKickingAttempts")
    home_extra_point_kicking_conversions: Optional[StrictInt] = Field(default=None, alias="HomeExtraPointKickingConversions")
    home_extra_point_passing_attempts: Optional[StrictInt] = Field(default=None, alias="HomeExtraPointPassingAttempts")
    home_extra_point_passing_conversions: Optional[StrictInt] = Field(default=None, alias="HomeExtraPointPassingConversions")
    home_extra_point_rushing_attempts: Optional[StrictInt] = Field(default=None, alias="HomeExtraPointRushingAttempts")
    home_extra_point_rushing_conversions: Optional[StrictInt] = Field(default=None, alias="HomeExtraPointRushingConversions")
    home_extra_points_had_blocked: Optional[StrictInt] = Field(default=None, alias="HomeExtraPointsHadBlocked")
    home_field_goal_attempts: Optional[StrictInt] = Field(default=None, alias="HomeFieldGoalAttempts")
    home_field_goal_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomeFieldGoalReturnTouchdowns")
    home_field_goal_return_yards: Optional[StrictInt] = Field(default=None, alias="HomeFieldGoalReturnYards")
    home_field_goals_had_blocked: Optional[StrictInt] = Field(default=None, alias="HomeFieldGoalsHadBlocked")
    home_field_goals_made: Optional[StrictInt] = Field(default=None, alias="HomeFieldGoalsMade")
    home_first_downs: Optional[StrictInt] = Field(default=None, alias="HomeFirstDowns")
    home_first_downs_by_passing: Optional[StrictInt] = Field(default=None, alias="HomeFirstDownsByPassing")
    home_first_downs_by_penalty: Optional[StrictInt] = Field(default=None, alias="HomeFirstDownsByPenalty")
    home_first_downs_by_rushing: Optional[StrictInt] = Field(default=None, alias="HomeFirstDownsByRushing")
    home_fourth_down_attempts: Optional[StrictInt] = Field(default=None, alias="HomeFourthDownAttempts")
    home_fourth_down_conversions: Optional[StrictInt] = Field(default=None, alias="HomeFourthDownConversions")
    home_fourth_down_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomeFourthDownPercentage")
    home_fumble_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomeFumbleReturnTouchdowns")
    home_fumble_return_yards: Optional[StrictInt] = Field(default=None, alias="HomeFumbleReturnYards")
    home_fumbles: Optional[StrictInt] = Field(default=None, alias="HomeFumbles")
    home_fumbles_forced: Optional[StrictInt] = Field(default=None, alias="HomeFumblesForced")
    home_fumbles_lost: Optional[StrictInt] = Field(default=None, alias="HomeFumblesLost")
    home_fumbles_recovered: Optional[StrictInt] = Field(default=None, alias="HomeFumblesRecovered")
    home_giveaways: Optional[StrictInt] = Field(default=None, alias="HomeGiveaways")
    home_goal_to_go_attempts: Optional[StrictInt] = Field(default=None, alias="HomeGoalToGoAttempts")
    home_goal_to_go_conversions: Optional[StrictInt] = Field(default=None, alias="HomeGoalToGoConversions")
    home_interception_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomeInterceptionReturnTouchdowns")
    home_interception_return_yards: Optional[StrictInt] = Field(default=None, alias="HomeInterceptionReturnYards")
    home_interception_returns: Optional[StrictInt] = Field(default=None, alias="HomeInterceptionReturns")
    home_kick_return_long: Optional[StrictInt] = Field(default=None, alias="HomeKickReturnLong")
    home_kick_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomeKickReturnTouchdowns")
    home_kick_return_yards: Optional[StrictInt] = Field(default=None, alias="HomeKickReturnYards")
    home_kick_returns: Optional[StrictInt] = Field(default=None, alias="HomeKickReturns")
    home_kickoff_touchbacks: Optional[StrictInt] = Field(default=None, alias="HomeKickoffTouchbacks")
    home_kickoffs: Optional[StrictInt] = Field(default=None, alias="HomeKickoffs")
    home_kickoffs_in_end_zone: Optional[StrictInt] = Field(default=None, alias="HomeKickoffsInEndZone")
    home_offensive_plays: Optional[StrictInt] = Field(default=None, alias="HomeOffensivePlays")
    home_offensive_yards: Optional[StrictInt] = Field(default=None, alias="HomeOffensiveYards")
    home_offensive_yards_per_play: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomeOffensiveYardsPerPlay")
    home_passer_rating: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomePasserRating")
    home_passes_defended: Optional[StrictInt] = Field(default=None, alias="HomePassesDefended")
    home_passing_attempts: Optional[StrictInt] = Field(default=None, alias="HomePassingAttempts")
    home_passing_completions: Optional[StrictInt] = Field(default=None, alias="HomePassingCompletions")
    home_passing_interceptions: Optional[StrictInt] = Field(default=None, alias="HomePassingInterceptions")
    home_passing_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomePassingTouchdowns")
    home_passing_yards: Optional[StrictInt] = Field(default=None, alias="HomePassingYards")
    home_passing_yards_per_attempt: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomePassingYardsPerAttempt")
    home_passing_yards_per_completion: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomePassingYardsPerCompletion")
    home_penalties: Optional[StrictInt] = Field(default=None, alias="HomePenalties")
    home_penalty_yards: Optional[StrictInt] = Field(default=None, alias="HomePenaltyYards")
    home_punt_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomePuntAverage")
    home_punt_net_average: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomePuntNetAverage")
    home_punt_net_yards: Optional[StrictInt] = Field(default=None, alias="HomePuntNetYards")
    home_punt_return_long: Optional[StrictInt] = Field(default=None, alias="HomePuntReturnLong")
    home_punt_return_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomePuntReturnTouchdowns")
    home_punt_return_yards: Optional[StrictInt] = Field(default=None, alias="HomePuntReturnYards")
    home_punt_returns: Optional[StrictInt] = Field(default=None, alias="HomePuntReturns")
    home_punt_yards: Optional[StrictInt] = Field(default=None, alias="HomePuntYards")
    home_punts: Optional[StrictInt] = Field(default=None, alias="HomePunts")
    home_punts_had_blocked: Optional[StrictInt] = Field(default=None, alias="HomePuntsHadBlocked")
    home_quarterback_hits: Optional[StrictInt] = Field(default=None, alias="HomeQuarterbackHits")
    home_red_zone_attempts: Optional[StrictInt] = Field(default=None, alias="HomeRedZoneAttempts")
    home_red_zone_conversions: Optional[StrictInt] = Field(default=None, alias="HomeRedZoneConversions")
    home_return_yards: Optional[StrictInt] = Field(default=None, alias="HomeReturnYards")
    home_rushing_attempts: Optional[StrictInt] = Field(default=None, alias="HomeRushingAttempts")
    home_rushing_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomeRushingTouchdowns")
    home_rushing_yards: Optional[StrictInt] = Field(default=None, alias="HomeRushingYards")
    home_rushing_yards_per_attempt: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomeRushingYardsPerAttempt")
    home_sack_yards: Optional[StrictInt] = Field(default=None, alias="HomeSackYards")
    home_sacks: Optional[StrictInt] = Field(default=None, alias="HomeSacks")
    home_safeties: Optional[StrictInt] = Field(default=None, alias="HomeSafeties")
    home_score: Optional[StrictInt] = Field(default=None, alias="HomeScore")
    home_score_overtime: Optional[StrictInt] = Field(default=None, alias="HomeScoreOvertime")
    home_score_quarter1: Optional[StrictInt] = Field(default=None, alias="HomeScoreQuarter1")
    home_score_quarter2: Optional[StrictInt] = Field(default=None, alias="HomeScoreQuarter2")
    home_score_quarter3: Optional[StrictInt] = Field(default=None, alias="HomeScoreQuarter3")
    home_score_quarter4: Optional[StrictInt] = Field(default=None, alias="HomeScoreQuarter4")
    home_solo_tackles: Optional[StrictInt] = Field(default=None, alias="HomeSoloTackles")
    home_tackles_for_loss: Optional[StrictInt] = Field(default=None, alias="HomeTacklesForLoss")
    home_takeaways: Optional[StrictInt] = Field(default=None, alias="HomeTakeaways")
    home_team: Optional[StrictStr] = Field(default=None, alias="HomeTeam")
    home_third_down_attempts: Optional[StrictInt] = Field(default=None, alias="HomeThirdDownAttempts")
    home_third_down_conversions: Optional[StrictInt] = Field(default=None, alias="HomeThirdDownConversions")
    home_third_down_percentage: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="HomeThirdDownPercentage")
    home_time_of_possession: Optional[StrictStr] = Field(default=None, alias="HomeTimeOfPossession")
    home_times_sacked: Optional[StrictInt] = Field(default=None, alias="HomeTimesSacked")
    home_times_sacked_yards: Optional[StrictInt] = Field(default=None, alias="HomeTimesSackedYards")
    home_touchdowns: Optional[StrictInt] = Field(default=None, alias="HomeTouchdowns")
    home_turnover_differential: Optional[StrictInt] = Field(default=None, alias="HomeTurnoverDifferential")
    home_two_point_conversion_returns: Optional[StrictInt] = Field(default=None, alias="HomeTwoPointConversionReturns")
    humidity: Optional[StrictInt] = Field(default=None, alias="Humidity")
    is_game_over: Optional[StrictBool] = Field(default=None, alias="IsGameOver")
    over_under: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="OverUnder")
    playing_surface: Optional[StrictStr] = Field(default=None, alias="PlayingSurface")
    point_spread: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PointSpread")
    score_id: Optional[StrictInt] = Field(default=None, alias="ScoreID")
    season: Optional[StrictInt] = Field(default=None, alias="Season")
    season_type: Optional[StrictInt] = Field(default=None, alias="SeasonType")
    stadium: Optional[StrictStr] = Field(default=None, alias="Stadium")
    stadium_details: Optional[Stadium] = Field(default=None, alias="StadiumDetails")
    stadium_id: Optional[StrictInt] = Field(default=None, alias="StadiumID")
    temperature: Optional[StrictInt] = Field(default=None, alias="Temperature")
    total_score: Optional[StrictInt] = Field(default=None, alias="TotalScore")
    week: Optional[StrictInt] = Field(default=None, alias="Week")
    wind_speed: Optional[StrictInt] = Field(default=None, alias="WindSpeed")
    __properties: ClassVar[List[str]] = ["AwayAssistedTackles", "AwayBlockedKickReturnTouchdowns", "AwayBlockedKickReturnYards", "AwayBlockedKicks", "AwayCompletionPercentage", "AwayExtraPointKickingAttempts", "AwayExtraPointKickingConversions", "AwayExtraPointPassingAttempts", "AwayExtraPointPassingConversions", "AwayExtraPointRushingAttempts", "AwayExtraPointRushingConversions", "AwayExtraPointsHadBlocked", "AwayFieldGoalAttempts", "AwayFieldGoalReturnTouchdowns", "AwayFieldGoalReturnYards", "AwayFieldGoalsHadBlocked", "AwayFieldGoalsMade", "AwayFirstDowns", "AwayFirstDownsByPassing", "AwayFirstDownsByPenalty", "AwayFirstDownsByRushing", "AwayFourthDownAttempts", "AwayFourthDownConversions", "AwayFourthDownPercentage", "AwayFumbleReturnTouchdowns", "AwayFumbleReturnYards", "AwayFumbles", "AwayFumblesForced", "AwayFumblesLost", "AwayFumblesRecovered", "AwayGiveaways", "AwayGoalToGoAttempts", "AwayGoalToGoConversions", "AwayInterceptionReturnTouchdowns", "AwayInterceptionReturnYards", "AwayInterceptionReturns", "AwayKickReturnLong", "AwayKickReturnTouchdowns", "AwayKickReturnYards", "AwayKickReturns", "AwayKickoffTouchbacks", "AwayKickoffs", "AwayKickoffsInEndZone", "AwayOffensivePlays", "AwayOffensiveYards", "AwayOffensiveYardsPerPlay", "AwayPasserRating", "AwayPassesDefended", "AwayPassingAttempts", "AwayPassingCompletions", "AwayPassingInterceptions", "AwayPassingTouchdowns", "AwayPassingYards", "AwayPassingYardsPerAttempt", "AwayPassingYardsPerCompletion", "AwayPenalties", "AwayPenaltyYards", "AwayPuntAverage", "AwayPuntNetAverage", "AwayPuntNetYards", "AwayPuntReturnLong", "AwayPuntReturnTouchdowns", "AwayPuntReturnYards", "AwayPuntReturns", "AwayPuntYards", "AwayPunts", "AwayPuntsHadBlocked", "AwayQuarterbackHits", "AwayRedZoneAttempts", "AwayRedZoneConversions", "AwayReturnYards", "AwayRushingAttempts", "AwayRushingTouchdowns", "AwayRushingYards", "AwayRushingYardsPerAttempt", "AwaySackYards", "AwaySacks", "AwaySafeties", "AwayScore", "AwayScoreOvertime", "AwayScoreQuarter1", "AwayScoreQuarter2", "AwayScoreQuarter3", "AwayScoreQuarter4", "AwaySoloTackles", "AwayTacklesForLoss", "AwayTakeaways", "AwayTeam", "AwayThirdDownAttempts", "AwayThirdDownConversions", "AwayThirdDownPercentage", "AwayTimeOfPossession", "AwayTimesSacked", "AwayTimesSackedYards", "AwayTouchdowns", "AwayTurnoverDifferential", "AwayTwoPointConversionReturns", "Date", "GameID", "GameKey", "HomeAssistedTackles", "HomeBlockedKickReturnTouchdowns", "HomeBlockedKickReturnYards", "HomeBlockedKicks", "HomeCompletionPercentage", "HomeExtraPointKickingAttempts", "HomeExtraPointKickingConversions", "HomeExtraPointPassingAttempts", "HomeExtraPointPassingConversions", "HomeExtraPointRushingAttempts", "HomeExtraPointRushingConversions", "HomeExtraPointsHadBlocked", "HomeFieldGoalAttempts", "HomeFieldGoalReturnTouchdowns", "HomeFieldGoalReturnYards", "HomeFieldGoalsHadBlocked", "HomeFieldGoalsMade", "HomeFirstDowns", "HomeFirstDownsByPassing", "HomeFirstDownsByPenalty", "HomeFirstDownsByRushing", "HomeFourthDownAttempts", "HomeFourthDownConversions", "HomeFourthDownPercentage", "HomeFumbleReturnTouchdowns", "HomeFumbleReturnYards", "HomeFumbles", "HomeFumblesForced", "HomeFumblesLost", "HomeFumblesRecovered", "HomeGiveaways", "HomeGoalToGoAttempts", "HomeGoalToGoConversions", "HomeInterceptionReturnTouchdowns", "HomeInterceptionReturnYards", "HomeInterceptionReturns", "HomeKickReturnLong", "HomeKickReturnTouchdowns", "HomeKickReturnYards", "HomeKickReturns", "HomeKickoffTouchbacks", "HomeKickoffs", "HomeKickoffsInEndZone", "HomeOffensivePlays", "HomeOffensiveYards", "HomeOffensiveYardsPerPlay", "HomePasserRating", "HomePassesDefended", "HomePassingAttempts", "HomePassingCompletions", "HomePassingInterceptions", "HomePassingTouchdowns", "HomePassingYards", "HomePassingYardsPerAttempt", "HomePassingYardsPerCompletion", "HomePenalties", "HomePenaltyYards", "HomePuntAverage", "HomePuntNetAverage", "HomePuntNetYards", "HomePuntReturnLong", "HomePuntReturnTouchdowns", "HomePuntReturnYards", "HomePuntReturns", "HomePuntYards", "HomePunts", "HomePuntsHadBlocked", "HomeQuarterbackHits", "HomeRedZoneAttempts", "HomeRedZoneConversions", "HomeReturnYards", "HomeRushingAttempts", "HomeRushingTouchdowns", "HomeRushingYards", "HomeRushingYardsPerAttempt", "HomeSackYards", "HomeSacks", "HomeSafeties", "HomeScore", "HomeScoreOvertime", "HomeScoreQuarter1", "HomeScoreQuarter2", "HomeScoreQuarter3", "HomeScoreQuarter4", "HomeSoloTackles", "HomeTacklesForLoss", "HomeTakeaways", "HomeTeam", "HomeThirdDownAttempts", "HomeThirdDownConversions", "HomeThirdDownPercentage", "HomeTimeOfPossession", "HomeTimesSacked", "HomeTimesSackedYards", "HomeTouchdowns", "HomeTurnoverDifferential", "HomeTwoPointConversionReturns", "Humidity", "IsGameOver", "OverUnder", "PlayingSurface", "PointSpread", "ScoreID", "Season", "SeasonType", "Stadium", "StadiumDetails", "StadiumID", "Temperature", "TotalScore", "Week", "WindSpeed"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of Game from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of stadium_details
        if self.stadium_details:
            _dict['StadiumDetails'] = self.stadium_details.to_dict()
        # set to None if away_assisted_tackles (nullable) is None
        # and model_fields_set contains the field
        if self.away_assisted_tackles is None and "away_assisted_tackles" in self.model_fields_set:
            _dict['AwayAssistedTackles'] = None

        # set to None if away_blocked_kick_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_blocked_kick_return_touchdowns is None and "away_blocked_kick_return_touchdowns" in self.model_fields_set:
            _dict['AwayBlockedKickReturnTouchdowns'] = None

        # set to None if away_blocked_kick_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_blocked_kick_return_yards is None and "away_blocked_kick_return_yards" in self.model_fields_set:
            _dict['AwayBlockedKickReturnYards'] = None

        # set to None if away_blocked_kicks (nullable) is None
        # and model_fields_set contains the field
        if self.away_blocked_kicks is None and "away_blocked_kicks" in self.model_fields_set:
            _dict['AwayBlockedKicks'] = None

        # set to None if away_completion_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.away_completion_percentage is None and "away_completion_percentage" in self.model_fields_set:
            _dict['AwayCompletionPercentage'] = None

        # set to None if away_extra_point_kicking_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_extra_point_kicking_attempts is None and "away_extra_point_kicking_attempts" in self.model_fields_set:
            _dict['AwayExtraPointKickingAttempts'] = None

        # set to None if away_extra_point_kicking_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.away_extra_point_kicking_conversions is None and "away_extra_point_kicking_conversions" in self.model_fields_set:
            _dict['AwayExtraPointKickingConversions'] = None

        # set to None if away_extra_point_passing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_extra_point_passing_attempts is None and "away_extra_point_passing_attempts" in self.model_fields_set:
            _dict['AwayExtraPointPassingAttempts'] = None

        # set to None if away_extra_point_passing_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.away_extra_point_passing_conversions is None and "away_extra_point_passing_conversions" in self.model_fields_set:
            _dict['AwayExtraPointPassingConversions'] = None

        # set to None if away_extra_point_rushing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_extra_point_rushing_attempts is None and "away_extra_point_rushing_attempts" in self.model_fields_set:
            _dict['AwayExtraPointRushingAttempts'] = None

        # set to None if away_extra_point_rushing_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.away_extra_point_rushing_conversions is None and "away_extra_point_rushing_conversions" in self.model_fields_set:
            _dict['AwayExtraPointRushingConversions'] = None

        # set to None if away_extra_points_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.away_extra_points_had_blocked is None and "away_extra_points_had_blocked" in self.model_fields_set:
            _dict['AwayExtraPointsHadBlocked'] = None

        # set to None if away_field_goal_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_field_goal_attempts is None and "away_field_goal_attempts" in self.model_fields_set:
            _dict['AwayFieldGoalAttempts'] = None

        # set to None if away_field_goal_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_field_goal_return_touchdowns is None and "away_field_goal_return_touchdowns" in self.model_fields_set:
            _dict['AwayFieldGoalReturnTouchdowns'] = None

        # set to None if away_field_goal_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_field_goal_return_yards is None and "away_field_goal_return_yards" in self.model_fields_set:
            _dict['AwayFieldGoalReturnYards'] = None

        # set to None if away_field_goals_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.away_field_goals_had_blocked is None and "away_field_goals_had_blocked" in self.model_fields_set:
            _dict['AwayFieldGoalsHadBlocked'] = None

        # set to None if away_field_goals_made (nullable) is None
        # and model_fields_set contains the field
        if self.away_field_goals_made is None and "away_field_goals_made" in self.model_fields_set:
            _dict['AwayFieldGoalsMade'] = None

        # set to None if away_first_downs (nullable) is None
        # and model_fields_set contains the field
        if self.away_first_downs is None and "away_first_downs" in self.model_fields_set:
            _dict['AwayFirstDowns'] = None

        # set to None if away_first_downs_by_passing (nullable) is None
        # and model_fields_set contains the field
        if self.away_first_downs_by_passing is None and "away_first_downs_by_passing" in self.model_fields_set:
            _dict['AwayFirstDownsByPassing'] = None

        # set to None if away_first_downs_by_penalty (nullable) is None
        # and model_fields_set contains the field
        if self.away_first_downs_by_penalty is None and "away_first_downs_by_penalty" in self.model_fields_set:
            _dict['AwayFirstDownsByPenalty'] = None

        # set to None if away_first_downs_by_rushing (nullable) is None
        # and model_fields_set contains the field
        if self.away_first_downs_by_rushing is None and "away_first_downs_by_rushing" in self.model_fields_set:
            _dict['AwayFirstDownsByRushing'] = None

        # set to None if away_fourth_down_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_fourth_down_attempts is None and "away_fourth_down_attempts" in self.model_fields_set:
            _dict['AwayFourthDownAttempts'] = None

        # set to None if away_fourth_down_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.away_fourth_down_conversions is None and "away_fourth_down_conversions" in self.model_fields_set:
            _dict['AwayFourthDownConversions'] = None

        # set to None if away_fourth_down_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.away_fourth_down_percentage is None and "away_fourth_down_percentage" in self.model_fields_set:
            _dict['AwayFourthDownPercentage'] = None

        # set to None if away_fumble_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_fumble_return_touchdowns is None and "away_fumble_return_touchdowns" in self.model_fields_set:
            _dict['AwayFumbleReturnTouchdowns'] = None

        # set to None if away_fumble_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_fumble_return_yards is None and "away_fumble_return_yards" in self.model_fields_set:
            _dict['AwayFumbleReturnYards'] = None

        # set to None if away_fumbles (nullable) is None
        # and model_fields_set contains the field
        if self.away_fumbles is None and "away_fumbles" in self.model_fields_set:
            _dict['AwayFumbles'] = None

        # set to None if away_fumbles_forced (nullable) is None
        # and model_fields_set contains the field
        if self.away_fumbles_forced is None and "away_fumbles_forced" in self.model_fields_set:
            _dict['AwayFumblesForced'] = None

        # set to None if away_fumbles_lost (nullable) is None
        # and model_fields_set contains the field
        if self.away_fumbles_lost is None and "away_fumbles_lost" in self.model_fields_set:
            _dict['AwayFumblesLost'] = None

        # set to None if away_fumbles_recovered (nullable) is None
        # and model_fields_set contains the field
        if self.away_fumbles_recovered is None and "away_fumbles_recovered" in self.model_fields_set:
            _dict['AwayFumblesRecovered'] = None

        # set to None if away_giveaways (nullable) is None
        # and model_fields_set contains the field
        if self.away_giveaways is None and "away_giveaways" in self.model_fields_set:
            _dict['AwayGiveaways'] = None

        # set to None if away_goal_to_go_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_goal_to_go_attempts is None and "away_goal_to_go_attempts" in self.model_fields_set:
            _dict['AwayGoalToGoAttempts'] = None

        # set to None if away_goal_to_go_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.away_goal_to_go_conversions is None and "away_goal_to_go_conversions" in self.model_fields_set:
            _dict['AwayGoalToGoConversions'] = None

        # set to None if away_interception_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_interception_return_touchdowns is None and "away_interception_return_touchdowns" in self.model_fields_set:
            _dict['AwayInterceptionReturnTouchdowns'] = None

        # set to None if away_interception_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_interception_return_yards is None and "away_interception_return_yards" in self.model_fields_set:
            _dict['AwayInterceptionReturnYards'] = None

        # set to None if away_interception_returns (nullable) is None
        # and model_fields_set contains the field
        if self.away_interception_returns is None and "away_interception_returns" in self.model_fields_set:
            _dict['AwayInterceptionReturns'] = None

        # set to None if away_kick_return_long (nullable) is None
        # and model_fields_set contains the field
        if self.away_kick_return_long is None and "away_kick_return_long" in self.model_fields_set:
            _dict['AwayKickReturnLong'] = None

        # set to None if away_kick_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_kick_return_touchdowns is None and "away_kick_return_touchdowns" in self.model_fields_set:
            _dict['AwayKickReturnTouchdowns'] = None

        # set to None if away_kick_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_kick_return_yards is None and "away_kick_return_yards" in self.model_fields_set:
            _dict['AwayKickReturnYards'] = None

        # set to None if away_kick_returns (nullable) is None
        # and model_fields_set contains the field
        if self.away_kick_returns is None and "away_kick_returns" in self.model_fields_set:
            _dict['AwayKickReturns'] = None

        # set to None if away_kickoff_touchbacks (nullable) is None
        # and model_fields_set contains the field
        if self.away_kickoff_touchbacks is None and "away_kickoff_touchbacks" in self.model_fields_set:
            _dict['AwayKickoffTouchbacks'] = None

        # set to None if away_kickoffs (nullable) is None
        # and model_fields_set contains the field
        if self.away_kickoffs is None and "away_kickoffs" in self.model_fields_set:
            _dict['AwayKickoffs'] = None

        # set to None if away_kickoffs_in_end_zone (nullable) is None
        # and model_fields_set contains the field
        if self.away_kickoffs_in_end_zone is None and "away_kickoffs_in_end_zone" in self.model_fields_set:
            _dict['AwayKickoffsInEndZone'] = None

        # set to None if away_offensive_plays (nullable) is None
        # and model_fields_set contains the field
        if self.away_offensive_plays is None and "away_offensive_plays" in self.model_fields_set:
            _dict['AwayOffensivePlays'] = None

        # set to None if away_offensive_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_offensive_yards is None and "away_offensive_yards" in self.model_fields_set:
            _dict['AwayOffensiveYards'] = None

        # set to None if away_offensive_yards_per_play (nullable) is None
        # and model_fields_set contains the field
        if self.away_offensive_yards_per_play is None and "away_offensive_yards_per_play" in self.model_fields_set:
            _dict['AwayOffensiveYardsPerPlay'] = None

        # set to None if away_passer_rating (nullable) is None
        # and model_fields_set contains the field
        if self.away_passer_rating is None and "away_passer_rating" in self.model_fields_set:
            _dict['AwayPasserRating'] = None

        # set to None if away_passes_defended (nullable) is None
        # and model_fields_set contains the field
        if self.away_passes_defended is None and "away_passes_defended" in self.model_fields_set:
            _dict['AwayPassesDefended'] = None

        # set to None if away_passing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_passing_attempts is None and "away_passing_attempts" in self.model_fields_set:
            _dict['AwayPassingAttempts'] = None

        # set to None if away_passing_completions (nullable) is None
        # and model_fields_set contains the field
        if self.away_passing_completions is None and "away_passing_completions" in self.model_fields_set:
            _dict['AwayPassingCompletions'] = None

        # set to None if away_passing_interceptions (nullable) is None
        # and model_fields_set contains the field
        if self.away_passing_interceptions is None and "away_passing_interceptions" in self.model_fields_set:
            _dict['AwayPassingInterceptions'] = None

        # set to None if away_passing_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_passing_touchdowns is None and "away_passing_touchdowns" in self.model_fields_set:
            _dict['AwayPassingTouchdowns'] = None

        # set to None if away_passing_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_passing_yards is None and "away_passing_yards" in self.model_fields_set:
            _dict['AwayPassingYards'] = None

        # set to None if away_passing_yards_per_attempt (nullable) is None
        # and model_fields_set contains the field
        if self.away_passing_yards_per_attempt is None and "away_passing_yards_per_attempt" in self.model_fields_set:
            _dict['AwayPassingYardsPerAttempt'] = None

        # set to None if away_passing_yards_per_completion (nullable) is None
        # and model_fields_set contains the field
        if self.away_passing_yards_per_completion is None and "away_passing_yards_per_completion" in self.model_fields_set:
            _dict['AwayPassingYardsPerCompletion'] = None

        # set to None if away_penalties (nullable) is None
        # and model_fields_set contains the field
        if self.away_penalties is None and "away_penalties" in self.model_fields_set:
            _dict['AwayPenalties'] = None

        # set to None if away_penalty_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_penalty_yards is None and "away_penalty_yards" in self.model_fields_set:
            _dict['AwayPenaltyYards'] = None

        # set to None if away_punt_average (nullable) is None
        # and model_fields_set contains the field
        if self.away_punt_average is None and "away_punt_average" in self.model_fields_set:
            _dict['AwayPuntAverage'] = None

        # set to None if away_punt_net_average (nullable) is None
        # and model_fields_set contains the field
        if self.away_punt_net_average is None and "away_punt_net_average" in self.model_fields_set:
            _dict['AwayPuntNetAverage'] = None

        # set to None if away_punt_net_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_punt_net_yards is None and "away_punt_net_yards" in self.model_fields_set:
            _dict['AwayPuntNetYards'] = None

        # set to None if away_punt_return_long (nullable) is None
        # and model_fields_set contains the field
        if self.away_punt_return_long is None and "away_punt_return_long" in self.model_fields_set:
            _dict['AwayPuntReturnLong'] = None

        # set to None if away_punt_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_punt_return_touchdowns is None and "away_punt_return_touchdowns" in self.model_fields_set:
            _dict['AwayPuntReturnTouchdowns'] = None

        # set to None if away_punt_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_punt_return_yards is None and "away_punt_return_yards" in self.model_fields_set:
            _dict['AwayPuntReturnYards'] = None

        # set to None if away_punt_returns (nullable) is None
        # and model_fields_set contains the field
        if self.away_punt_returns is None and "away_punt_returns" in self.model_fields_set:
            _dict['AwayPuntReturns'] = None

        # set to None if away_punt_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_punt_yards is None and "away_punt_yards" in self.model_fields_set:
            _dict['AwayPuntYards'] = None

        # set to None if away_punts (nullable) is None
        # and model_fields_set contains the field
        if self.away_punts is None and "away_punts" in self.model_fields_set:
            _dict['AwayPunts'] = None

        # set to None if away_punts_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.away_punts_had_blocked is None and "away_punts_had_blocked" in self.model_fields_set:
            _dict['AwayPuntsHadBlocked'] = None

        # set to None if away_quarterback_hits (nullable) is None
        # and model_fields_set contains the field
        if self.away_quarterback_hits is None and "away_quarterback_hits" in self.model_fields_set:
            _dict['AwayQuarterbackHits'] = None

        # set to None if away_red_zone_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_red_zone_attempts is None and "away_red_zone_attempts" in self.model_fields_set:
            _dict['AwayRedZoneAttempts'] = None

        # set to None if away_red_zone_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.away_red_zone_conversions is None and "away_red_zone_conversions" in self.model_fields_set:
            _dict['AwayRedZoneConversions'] = None

        # set to None if away_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_return_yards is None and "away_return_yards" in self.model_fields_set:
            _dict['AwayReturnYards'] = None

        # set to None if away_rushing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_rushing_attempts is None and "away_rushing_attempts" in self.model_fields_set:
            _dict['AwayRushingAttempts'] = None

        # set to None if away_rushing_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_rushing_touchdowns is None and "away_rushing_touchdowns" in self.model_fields_set:
            _dict['AwayRushingTouchdowns'] = None

        # set to None if away_rushing_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_rushing_yards is None and "away_rushing_yards" in self.model_fields_set:
            _dict['AwayRushingYards'] = None

        # set to None if away_rushing_yards_per_attempt (nullable) is None
        # and model_fields_set contains the field
        if self.away_rushing_yards_per_attempt is None and "away_rushing_yards_per_attempt" in self.model_fields_set:
            _dict['AwayRushingYardsPerAttempt'] = None

        # set to None if away_sack_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_sack_yards is None and "away_sack_yards" in self.model_fields_set:
            _dict['AwaySackYards'] = None

        # set to None if away_sacks (nullable) is None
        # and model_fields_set contains the field
        if self.away_sacks is None and "away_sacks" in self.model_fields_set:
            _dict['AwaySacks'] = None

        # set to None if away_safeties (nullable) is None
        # and model_fields_set contains the field
        if self.away_safeties is None and "away_safeties" in self.model_fields_set:
            _dict['AwaySafeties'] = None

        # set to None if away_score_overtime (nullable) is None
        # and model_fields_set contains the field
        if self.away_score_overtime is None and "away_score_overtime" in self.model_fields_set:
            _dict['AwayScoreOvertime'] = None

        # set to None if away_score_quarter1 (nullable) is None
        # and model_fields_set contains the field
        if self.away_score_quarter1 is None and "away_score_quarter1" in self.model_fields_set:
            _dict['AwayScoreQuarter1'] = None

        # set to None if away_score_quarter2 (nullable) is None
        # and model_fields_set contains the field
        if self.away_score_quarter2 is None and "away_score_quarter2" in self.model_fields_set:
            _dict['AwayScoreQuarter2'] = None

        # set to None if away_score_quarter3 (nullable) is None
        # and model_fields_set contains the field
        if self.away_score_quarter3 is None and "away_score_quarter3" in self.model_fields_set:
            _dict['AwayScoreQuarter3'] = None

        # set to None if away_score_quarter4 (nullable) is None
        # and model_fields_set contains the field
        if self.away_score_quarter4 is None and "away_score_quarter4" in self.model_fields_set:
            _dict['AwayScoreQuarter4'] = None

        # set to None if away_solo_tackles (nullable) is None
        # and model_fields_set contains the field
        if self.away_solo_tackles is None and "away_solo_tackles" in self.model_fields_set:
            _dict['AwaySoloTackles'] = None

        # set to None if away_tackles_for_loss (nullable) is None
        # and model_fields_set contains the field
        if self.away_tackles_for_loss is None and "away_tackles_for_loss" in self.model_fields_set:
            _dict['AwayTacklesForLoss'] = None

        # set to None if away_takeaways (nullable) is None
        # and model_fields_set contains the field
        if self.away_takeaways is None and "away_takeaways" in self.model_fields_set:
            _dict['AwayTakeaways'] = None

        # set to None if away_team (nullable) is None
        # and model_fields_set contains the field
        if self.away_team is None and "away_team" in self.model_fields_set:
            _dict['AwayTeam'] = None

        # set to None if away_third_down_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.away_third_down_attempts is None and "away_third_down_attempts" in self.model_fields_set:
            _dict['AwayThirdDownAttempts'] = None

        # set to None if away_third_down_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.away_third_down_conversions is None and "away_third_down_conversions" in self.model_fields_set:
            _dict['AwayThirdDownConversions'] = None

        # set to None if away_third_down_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.away_third_down_percentage is None and "away_third_down_percentage" in self.model_fields_set:
            _dict['AwayThirdDownPercentage'] = None

        # set to None if away_time_of_possession (nullable) is None
        # and model_fields_set contains the field
        if self.away_time_of_possession is None and "away_time_of_possession" in self.model_fields_set:
            _dict['AwayTimeOfPossession'] = None

        # set to None if away_times_sacked (nullable) is None
        # and model_fields_set contains the field
        if self.away_times_sacked is None and "away_times_sacked" in self.model_fields_set:
            _dict['AwayTimesSacked'] = None

        # set to None if away_times_sacked_yards (nullable) is None
        # and model_fields_set contains the field
        if self.away_times_sacked_yards is None and "away_times_sacked_yards" in self.model_fields_set:
            _dict['AwayTimesSackedYards'] = None

        # set to None if away_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.away_touchdowns is None and "away_touchdowns" in self.model_fields_set:
            _dict['AwayTouchdowns'] = None

        # set to None if away_turnover_differential (nullable) is None
        # and model_fields_set contains the field
        if self.away_turnover_differential is None and "away_turnover_differential" in self.model_fields_set:
            _dict['AwayTurnoverDifferential'] = None

        # set to None if away_two_point_conversion_returns (nullable) is None
        # and model_fields_set contains the field
        if self.away_two_point_conversion_returns is None and "away_two_point_conversion_returns" in self.model_fields_set:
            _dict['AwayTwoPointConversionReturns'] = None

        # set to None if var_date (nullable) is None
        # and model_fields_set contains the field
        if self.var_date is None and "var_date" in self.model_fields_set:
            _dict['Date'] = None

        # set to None if game_key (nullable) is None
        # and model_fields_set contains the field
        if self.game_key is None and "game_key" in self.model_fields_set:
            _dict['GameKey'] = None

        # set to None if home_assisted_tackles (nullable) is None
        # and model_fields_set contains the field
        if self.home_assisted_tackles is None and "home_assisted_tackles" in self.model_fields_set:
            _dict['HomeAssistedTackles'] = None

        # set to None if home_blocked_kick_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_blocked_kick_return_touchdowns is None and "home_blocked_kick_return_touchdowns" in self.model_fields_set:
            _dict['HomeBlockedKickReturnTouchdowns'] = None

        # set to None if home_blocked_kick_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_blocked_kick_return_yards is None and "home_blocked_kick_return_yards" in self.model_fields_set:
            _dict['HomeBlockedKickReturnYards'] = None

        # set to None if home_blocked_kicks (nullable) is None
        # and model_fields_set contains the field
        if self.home_blocked_kicks is None and "home_blocked_kicks" in self.model_fields_set:
            _dict['HomeBlockedKicks'] = None

        # set to None if home_completion_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.home_completion_percentage is None and "home_completion_percentage" in self.model_fields_set:
            _dict['HomeCompletionPercentage'] = None

        # set to None if home_extra_point_kicking_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_extra_point_kicking_attempts is None and "home_extra_point_kicking_attempts" in self.model_fields_set:
            _dict['HomeExtraPointKickingAttempts'] = None

        # set to None if home_extra_point_kicking_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.home_extra_point_kicking_conversions is None and "home_extra_point_kicking_conversions" in self.model_fields_set:
            _dict['HomeExtraPointKickingConversions'] = None

        # set to None if home_extra_point_passing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_extra_point_passing_attempts is None and "home_extra_point_passing_attempts" in self.model_fields_set:
            _dict['HomeExtraPointPassingAttempts'] = None

        # set to None if home_extra_point_passing_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.home_extra_point_passing_conversions is None and "home_extra_point_passing_conversions" in self.model_fields_set:
            _dict['HomeExtraPointPassingConversions'] = None

        # set to None if home_extra_point_rushing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_extra_point_rushing_attempts is None and "home_extra_point_rushing_attempts" in self.model_fields_set:
            _dict['HomeExtraPointRushingAttempts'] = None

        # set to None if home_extra_point_rushing_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.home_extra_point_rushing_conversions is None and "home_extra_point_rushing_conversions" in self.model_fields_set:
            _dict['HomeExtraPointRushingConversions'] = None

        # set to None if home_extra_points_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.home_extra_points_had_blocked is None and "home_extra_points_had_blocked" in self.model_fields_set:
            _dict['HomeExtraPointsHadBlocked'] = None

        # set to None if home_field_goal_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_field_goal_attempts is None and "home_field_goal_attempts" in self.model_fields_set:
            _dict['HomeFieldGoalAttempts'] = None

        # set to None if home_field_goal_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_field_goal_return_touchdowns is None and "home_field_goal_return_touchdowns" in self.model_fields_set:
            _dict['HomeFieldGoalReturnTouchdowns'] = None

        # set to None if home_field_goal_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_field_goal_return_yards is None and "home_field_goal_return_yards" in self.model_fields_set:
            _dict['HomeFieldGoalReturnYards'] = None

        # set to None if home_field_goals_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.home_field_goals_had_blocked is None and "home_field_goals_had_blocked" in self.model_fields_set:
            _dict['HomeFieldGoalsHadBlocked'] = None

        # set to None if home_field_goals_made (nullable) is None
        # and model_fields_set contains the field
        if self.home_field_goals_made is None and "home_field_goals_made" in self.model_fields_set:
            _dict['HomeFieldGoalsMade'] = None

        # set to None if home_first_downs (nullable) is None
        # and model_fields_set contains the field
        if self.home_first_downs is None and "home_first_downs" in self.model_fields_set:
            _dict['HomeFirstDowns'] = None

        # set to None if home_first_downs_by_passing (nullable) is None
        # and model_fields_set contains the field
        if self.home_first_downs_by_passing is None and "home_first_downs_by_passing" in self.model_fields_set:
            _dict['HomeFirstDownsByPassing'] = None

        # set to None if home_first_downs_by_penalty (nullable) is None
        # and model_fields_set contains the field
        if self.home_first_downs_by_penalty is None and "home_first_downs_by_penalty" in self.model_fields_set:
            _dict['HomeFirstDownsByPenalty'] = None

        # set to None if home_first_downs_by_rushing (nullable) is None
        # and model_fields_set contains the field
        if self.home_first_downs_by_rushing is None and "home_first_downs_by_rushing" in self.model_fields_set:
            _dict['HomeFirstDownsByRushing'] = None

        # set to None if home_fourth_down_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_fourth_down_attempts is None and "home_fourth_down_attempts" in self.model_fields_set:
            _dict['HomeFourthDownAttempts'] = None

        # set to None if home_fourth_down_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.home_fourth_down_conversions is None and "home_fourth_down_conversions" in self.model_fields_set:
            _dict['HomeFourthDownConversions'] = None

        # set to None if home_fourth_down_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.home_fourth_down_percentage is None and "home_fourth_down_percentage" in self.model_fields_set:
            _dict['HomeFourthDownPercentage'] = None

        # set to None if home_fumble_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_fumble_return_touchdowns is None and "home_fumble_return_touchdowns" in self.model_fields_set:
            _dict['HomeFumbleReturnTouchdowns'] = None

        # set to None if home_fumble_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_fumble_return_yards is None and "home_fumble_return_yards" in self.model_fields_set:
            _dict['HomeFumbleReturnYards'] = None

        # set to None if home_fumbles (nullable) is None
        # and model_fields_set contains the field
        if self.home_fumbles is None and "home_fumbles" in self.model_fields_set:
            _dict['HomeFumbles'] = None

        # set to None if home_fumbles_forced (nullable) is None
        # and model_fields_set contains the field
        if self.home_fumbles_forced is None and "home_fumbles_forced" in self.model_fields_set:
            _dict['HomeFumblesForced'] = None

        # set to None if home_fumbles_lost (nullable) is None
        # and model_fields_set contains the field
        if self.home_fumbles_lost is None and "home_fumbles_lost" in self.model_fields_set:
            _dict['HomeFumblesLost'] = None

        # set to None if home_fumbles_recovered (nullable) is None
        # and model_fields_set contains the field
        if self.home_fumbles_recovered is None and "home_fumbles_recovered" in self.model_fields_set:
            _dict['HomeFumblesRecovered'] = None

        # set to None if home_giveaways (nullable) is None
        # and model_fields_set contains the field
        if self.home_giveaways is None and "home_giveaways" in self.model_fields_set:
            _dict['HomeGiveaways'] = None

        # set to None if home_goal_to_go_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_goal_to_go_attempts is None and "home_goal_to_go_attempts" in self.model_fields_set:
            _dict['HomeGoalToGoAttempts'] = None

        # set to None if home_goal_to_go_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.home_goal_to_go_conversions is None and "home_goal_to_go_conversions" in self.model_fields_set:
            _dict['HomeGoalToGoConversions'] = None

        # set to None if home_interception_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_interception_return_touchdowns is None and "home_interception_return_touchdowns" in self.model_fields_set:
            _dict['HomeInterceptionReturnTouchdowns'] = None

        # set to None if home_interception_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_interception_return_yards is None and "home_interception_return_yards" in self.model_fields_set:
            _dict['HomeInterceptionReturnYards'] = None

        # set to None if home_interception_returns (nullable) is None
        # and model_fields_set contains the field
        if self.home_interception_returns is None and "home_interception_returns" in self.model_fields_set:
            _dict['HomeInterceptionReturns'] = None

        # set to None if home_kick_return_long (nullable) is None
        # and model_fields_set contains the field
        if self.home_kick_return_long is None and "home_kick_return_long" in self.model_fields_set:
            _dict['HomeKickReturnLong'] = None

        # set to None if home_kick_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_kick_return_touchdowns is None and "home_kick_return_touchdowns" in self.model_fields_set:
            _dict['HomeKickReturnTouchdowns'] = None

        # set to None if home_kick_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_kick_return_yards is None and "home_kick_return_yards" in self.model_fields_set:
            _dict['HomeKickReturnYards'] = None

        # set to None if home_kick_returns (nullable) is None
        # and model_fields_set contains the field
        if self.home_kick_returns is None and "home_kick_returns" in self.model_fields_set:
            _dict['HomeKickReturns'] = None

        # set to None if home_kickoff_touchbacks (nullable) is None
        # and model_fields_set contains the field
        if self.home_kickoff_touchbacks is None and "home_kickoff_touchbacks" in self.model_fields_set:
            _dict['HomeKickoffTouchbacks'] = None

        # set to None if home_kickoffs (nullable) is None
        # and model_fields_set contains the field
        if self.home_kickoffs is None and "home_kickoffs" in self.model_fields_set:
            _dict['HomeKickoffs'] = None

        # set to None if home_kickoffs_in_end_zone (nullable) is None
        # and model_fields_set contains the field
        if self.home_kickoffs_in_end_zone is None and "home_kickoffs_in_end_zone" in self.model_fields_set:
            _dict['HomeKickoffsInEndZone'] = None

        # set to None if home_offensive_plays (nullable) is None
        # and model_fields_set contains the field
        if self.home_offensive_plays is None and "home_offensive_plays" in self.model_fields_set:
            _dict['HomeOffensivePlays'] = None

        # set to None if home_offensive_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_offensive_yards is None and "home_offensive_yards" in self.model_fields_set:
            _dict['HomeOffensiveYards'] = None

        # set to None if home_offensive_yards_per_play (nullable) is None
        # and model_fields_set contains the field
        if self.home_offensive_yards_per_play is None and "home_offensive_yards_per_play" in self.model_fields_set:
            _dict['HomeOffensiveYardsPerPlay'] = None

        # set to None if home_passer_rating (nullable) is None
        # and model_fields_set contains the field
        if self.home_passer_rating is None and "home_passer_rating" in self.model_fields_set:
            _dict['HomePasserRating'] = None

        # set to None if home_passes_defended (nullable) is None
        # and model_fields_set contains the field
        if self.home_passes_defended is None and "home_passes_defended" in self.model_fields_set:
            _dict['HomePassesDefended'] = None

        # set to None if home_passing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_passing_attempts is None and "home_passing_attempts" in self.model_fields_set:
            _dict['HomePassingAttempts'] = None

        # set to None if home_passing_completions (nullable) is None
        # and model_fields_set contains the field
        if self.home_passing_completions is None and "home_passing_completions" in self.model_fields_set:
            _dict['HomePassingCompletions'] = None

        # set to None if home_passing_interceptions (nullable) is None
        # and model_fields_set contains the field
        if self.home_passing_interceptions is None and "home_passing_interceptions" in self.model_fields_set:
            _dict['HomePassingInterceptions'] = None

        # set to None if home_passing_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_passing_touchdowns is None and "home_passing_touchdowns" in self.model_fields_set:
            _dict['HomePassingTouchdowns'] = None

        # set to None if home_passing_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_passing_yards is None and "home_passing_yards" in self.model_fields_set:
            _dict['HomePassingYards'] = None

        # set to None if home_passing_yards_per_attempt (nullable) is None
        # and model_fields_set contains the field
        if self.home_passing_yards_per_attempt is None and "home_passing_yards_per_attempt" in self.model_fields_set:
            _dict['HomePassingYardsPerAttempt'] = None

        # set to None if home_passing_yards_per_completion (nullable) is None
        # and model_fields_set contains the field
        if self.home_passing_yards_per_completion is None and "home_passing_yards_per_completion" in self.model_fields_set:
            _dict['HomePassingYardsPerCompletion'] = None

        # set to None if home_penalties (nullable) is None
        # and model_fields_set contains the field
        if self.home_penalties is None and "home_penalties" in self.model_fields_set:
            _dict['HomePenalties'] = None

        # set to None if home_penalty_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_penalty_yards is None and "home_penalty_yards" in self.model_fields_set:
            _dict['HomePenaltyYards'] = None

        # set to None if home_punt_average (nullable) is None
        # and model_fields_set contains the field
        if self.home_punt_average is None and "home_punt_average" in self.model_fields_set:
            _dict['HomePuntAverage'] = None

        # set to None if home_punt_net_average (nullable) is None
        # and model_fields_set contains the field
        if self.home_punt_net_average is None and "home_punt_net_average" in self.model_fields_set:
            _dict['HomePuntNetAverage'] = None

        # set to None if home_punt_net_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_punt_net_yards is None and "home_punt_net_yards" in self.model_fields_set:
            _dict['HomePuntNetYards'] = None

        # set to None if home_punt_return_long (nullable) is None
        # and model_fields_set contains the field
        if self.home_punt_return_long is None and "home_punt_return_long" in self.model_fields_set:
            _dict['HomePuntReturnLong'] = None

        # set to None if home_punt_return_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_punt_return_touchdowns is None and "home_punt_return_touchdowns" in self.model_fields_set:
            _dict['HomePuntReturnTouchdowns'] = None

        # set to None if home_punt_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_punt_return_yards is None and "home_punt_return_yards" in self.model_fields_set:
            _dict['HomePuntReturnYards'] = None

        # set to None if home_punt_returns (nullable) is None
        # and model_fields_set contains the field
        if self.home_punt_returns is None and "home_punt_returns" in self.model_fields_set:
            _dict['HomePuntReturns'] = None

        # set to None if home_punt_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_punt_yards is None and "home_punt_yards" in self.model_fields_set:
            _dict['HomePuntYards'] = None

        # set to None if home_punts (nullable) is None
        # and model_fields_set contains the field
        if self.home_punts is None and "home_punts" in self.model_fields_set:
            _dict['HomePunts'] = None

        # set to None if home_punts_had_blocked (nullable) is None
        # and model_fields_set contains the field
        if self.home_punts_had_blocked is None and "home_punts_had_blocked" in self.model_fields_set:
            _dict['HomePuntsHadBlocked'] = None

        # set to None if home_quarterback_hits (nullable) is None
        # and model_fields_set contains the field
        if self.home_quarterback_hits is None and "home_quarterback_hits" in self.model_fields_set:
            _dict['HomeQuarterbackHits'] = None

        # set to None if home_red_zone_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_red_zone_attempts is None and "home_red_zone_attempts" in self.model_fields_set:
            _dict['HomeRedZoneAttempts'] = None

        # set to None if home_red_zone_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.home_red_zone_conversions is None and "home_red_zone_conversions" in self.model_fields_set:
            _dict['HomeRedZoneConversions'] = None

        # set to None if home_return_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_return_yards is None and "home_return_yards" in self.model_fields_set:
            _dict['HomeReturnYards'] = None

        # set to None if home_rushing_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_rushing_attempts is None and "home_rushing_attempts" in self.model_fields_set:
            _dict['HomeRushingAttempts'] = None

        # set to None if home_rushing_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_rushing_touchdowns is None and "home_rushing_touchdowns" in self.model_fields_set:
            _dict['HomeRushingTouchdowns'] = None

        # set to None if home_rushing_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_rushing_yards is None and "home_rushing_yards" in self.model_fields_set:
            _dict['HomeRushingYards'] = None

        # set to None if home_rushing_yards_per_attempt (nullable) is None
        # and model_fields_set contains the field
        if self.home_rushing_yards_per_attempt is None and "home_rushing_yards_per_attempt" in self.model_fields_set:
            _dict['HomeRushingYardsPerAttempt'] = None

        # set to None if home_sack_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_sack_yards is None and "home_sack_yards" in self.model_fields_set:
            _dict['HomeSackYards'] = None

        # set to None if home_sacks (nullable) is None
        # and model_fields_set contains the field
        if self.home_sacks is None and "home_sacks" in self.model_fields_set:
            _dict['HomeSacks'] = None

        # set to None if home_safeties (nullable) is None
        # and model_fields_set contains the field
        if self.home_safeties is None and "home_safeties" in self.model_fields_set:
            _dict['HomeSafeties'] = None

        # set to None if home_score_overtime (nullable) is None
        # and model_fields_set contains the field
        if self.home_score_overtime is None and "home_score_overtime" in self.model_fields_set:
            _dict['HomeScoreOvertime'] = None

        # set to None if home_score_quarter1 (nullable) is None
        # and model_fields_set contains the field
        if self.home_score_quarter1 is None and "home_score_quarter1" in self.model_fields_set:
            _dict['HomeScoreQuarter1'] = None

        # set to None if home_score_quarter2 (nullable) is None
        # and model_fields_set contains the field
        if self.home_score_quarter2 is None and "home_score_quarter2" in self.model_fields_set:
            _dict['HomeScoreQuarter2'] = None

        # set to None if home_score_quarter3 (nullable) is None
        # and model_fields_set contains the field
        if self.home_score_quarter3 is None and "home_score_quarter3" in self.model_fields_set:
            _dict['HomeScoreQuarter3'] = None

        # set to None if home_score_quarter4 (nullable) is None
        # and model_fields_set contains the field
        if self.home_score_quarter4 is None and "home_score_quarter4" in self.model_fields_set:
            _dict['HomeScoreQuarter4'] = None

        # set to None if home_solo_tackles (nullable) is None
        # and model_fields_set contains the field
        if self.home_solo_tackles is None and "home_solo_tackles" in self.model_fields_set:
            _dict['HomeSoloTackles'] = None

        # set to None if home_tackles_for_loss (nullable) is None
        # and model_fields_set contains the field
        if self.home_tackles_for_loss is None and "home_tackles_for_loss" in self.model_fields_set:
            _dict['HomeTacklesForLoss'] = None

        # set to None if home_takeaways (nullable) is None
        # and model_fields_set contains the field
        if self.home_takeaways is None and "home_takeaways" in self.model_fields_set:
            _dict['HomeTakeaways'] = None

        # set to None if home_team (nullable) is None
        # and model_fields_set contains the field
        if self.home_team is None and "home_team" in self.model_fields_set:
            _dict['HomeTeam'] = None

        # set to None if home_third_down_attempts (nullable) is None
        # and model_fields_set contains the field
        if self.home_third_down_attempts is None and "home_third_down_attempts" in self.model_fields_set:
            _dict['HomeThirdDownAttempts'] = None

        # set to None if home_third_down_conversions (nullable) is None
        # and model_fields_set contains the field
        if self.home_third_down_conversions is None and "home_third_down_conversions" in self.model_fields_set:
            _dict['HomeThirdDownConversions'] = None

        # set to None if home_third_down_percentage (nullable) is None
        # and model_fields_set contains the field
        if self.home_third_down_percentage is None and "home_third_down_percentage" in self.model_fields_set:
            _dict['HomeThirdDownPercentage'] = None

        # set to None if home_time_of_possession (nullable) is None
        # and model_fields_set contains the field
        if self.home_time_of_possession is None and "home_time_of_possession" in self.model_fields_set:
            _dict['HomeTimeOfPossession'] = None

        # set to None if home_times_sacked (nullable) is None
        # and model_fields_set contains the field
        if self.home_times_sacked is None and "home_times_sacked" in self.model_fields_set:
            _dict['HomeTimesSacked'] = None

        # set to None if home_times_sacked_yards (nullable) is None
        # and model_fields_set contains the field
        if self.home_times_sacked_yards is None and "home_times_sacked_yards" in self.model_fields_set:
            _dict['HomeTimesSackedYards'] = None

        # set to None if home_touchdowns (nullable) is None
        # and model_fields_set contains the field
        if self.home_touchdowns is None and "home_touchdowns" in self.model_fields_set:
            _dict['HomeTouchdowns'] = None

        # set to None if home_turnover_differential (nullable) is None
        # and model_fields_set contains the field
        if self.home_turnover_differential is None and "home_turnover_differential" in self.model_fields_set:
            _dict['HomeTurnoverDifferential'] = None

        # set to None if home_two_point_conversion_returns (nullable) is None
        # and model_fields_set contains the field
        if self.home_two_point_conversion_returns is None and "home_two_point_conversion_returns" in self.model_fields_set:
            _dict['HomeTwoPointConversionReturns'] = None

        # set to None if humidity (nullable) is None
        # and model_fields_set contains the field
        if self.humidity is None and "humidity" in self.model_fields_set:
            _dict['Humidity'] = None

        # set to None if is_game_over (nullable) is None
        # and model_fields_set contains the field
        if self.is_game_over is None and "is_game_over" in self.model_fields_set:
            _dict['IsGameOver'] = None

        # set to None if over_under (nullable) is None
        # and model_fields_set contains the field
        if self.over_under is None and "over_under" in self.model_fields_set:
            _dict['OverUnder'] = None

        # set to None if playing_surface (nullable) is None
        # and model_fields_set contains the field
        if self.playing_surface is None and "playing_surface" in self.model_fields_set:
            _dict['PlayingSurface'] = None

        # set to None if point_spread (nullable) is None
        # and model_fields_set contains the field
        if self.point_spread is None and "point_spread" in self.model_fields_set:
            _dict['PointSpread'] = None

        # set to None if stadium (nullable) is None
        # and model_fields_set contains the field
        if self.stadium is None and "stadium" in self.model_fields_set:
            _dict['Stadium'] = None

        # set to None if stadium_id (nullable) is None
        # and model_fields_set contains the field
        if self.stadium_id is None and "stadium_id" in self.model_fields_set:
            _dict['StadiumID'] = None

        # set to None if temperature (nullable) is None
        # and model_fields_set contains the field
        if self.temperature is None and "temperature" in self.model_fields_set:
            _dict['Temperature'] = None

        # set to None if total_score (nullable) is None
        # and model_fields_set contains the field
        if self.total_score is None and "total_score" in self.model_fields_set:
            _dict['TotalScore'] = None

        # set to None if wind_speed (nullable) is None
        # and model_fields_set contains the field
        if self.wind_speed is None and "wind_speed" in self.model_fields_set:
            _dict['WindSpeed'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of Game from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "AwayAssistedTackles": obj.get("AwayAssistedTackles"),
            "AwayBlockedKickReturnTouchdowns": obj.get("AwayBlockedKickReturnTouchdowns"),
            "AwayBlockedKickReturnYards": obj.get("AwayBlockedKickReturnYards"),
            "AwayBlockedKicks": obj.get("AwayBlockedKicks"),
            "AwayCompletionPercentage": obj.get("AwayCompletionPercentage"),
            "AwayExtraPointKickingAttempts": obj.get("AwayExtraPointKickingAttempts"),
            "AwayExtraPointKickingConversions": obj.get("AwayExtraPointKickingConversions"),
            "AwayExtraPointPassingAttempts": obj.get("AwayExtraPointPassingAttempts"),
            "AwayExtraPointPassingConversions": obj.get("AwayExtraPointPassingConversions"),
            "AwayExtraPointRushingAttempts": obj.get("AwayExtraPointRushingAttempts"),
            "AwayExtraPointRushingConversions": obj.get("AwayExtraPointRushingConversions"),
            "AwayExtraPointsHadBlocked": obj.get("AwayExtraPointsHadBlocked"),
            "AwayFieldGoalAttempts": obj.get("AwayFieldGoalAttempts"),
            "AwayFieldGoalReturnTouchdowns": obj.get("AwayFieldGoalReturnTouchdowns"),
            "AwayFieldGoalReturnYards": obj.get("AwayFieldGoalReturnYards"),
            "AwayFieldGoalsHadBlocked": obj.get("AwayFieldGoalsHadBlocked"),
            "AwayFieldGoalsMade": obj.get("AwayFieldGoalsMade"),
            "AwayFirstDowns": obj.get("AwayFirstDowns"),
            "AwayFirstDownsByPassing": obj.get("AwayFirstDownsByPassing"),
            "AwayFirstDownsByPenalty": obj.get("AwayFirstDownsByPenalty"),
            "AwayFirstDownsByRushing": obj.get("AwayFirstDownsByRushing"),
            "AwayFourthDownAttempts": obj.get("AwayFourthDownAttempts"),
            "AwayFourthDownConversions": obj.get("AwayFourthDownConversions"),
            "AwayFourthDownPercentage": obj.get("AwayFourthDownPercentage"),
            "AwayFumbleReturnTouchdowns": obj.get("AwayFumbleReturnTouchdowns"),
            "AwayFumbleReturnYards": obj.get("AwayFumbleReturnYards"),
            "AwayFumbles": obj.get("AwayFumbles"),
            "AwayFumblesForced": obj.get("AwayFumblesForced"),
            "AwayFumblesLost": obj.get("AwayFumblesLost"),
            "AwayFumblesRecovered": obj.get("AwayFumblesRecovered"),
            "AwayGiveaways": obj.get("AwayGiveaways"),
            "AwayGoalToGoAttempts": obj.get("AwayGoalToGoAttempts"),
            "AwayGoalToGoConversions": obj.get("AwayGoalToGoConversions"),
            "AwayInterceptionReturnTouchdowns": obj.get("AwayInterceptionReturnTouchdowns"),
            "AwayInterceptionReturnYards": obj.get("AwayInterceptionReturnYards"),
            "AwayInterceptionReturns": obj.get("AwayInterceptionReturns"),
            "AwayKickReturnLong": obj.get("AwayKickReturnLong"),
            "AwayKickReturnTouchdowns": obj.get("AwayKickReturnTouchdowns"),
            "AwayKickReturnYards": obj.get("AwayKickReturnYards"),
            "AwayKickReturns": obj.get("AwayKickReturns"),
            "AwayKickoffTouchbacks": obj.get("AwayKickoffTouchbacks"),
            "AwayKickoffs": obj.get("AwayKickoffs"),
            "AwayKickoffsInEndZone": obj.get("AwayKickoffsInEndZone"),
            "AwayOffensivePlays": obj.get("AwayOffensivePlays"),
            "AwayOffensiveYards": obj.get("AwayOffensiveYards"),
            "AwayOffensiveYardsPerPlay": obj.get("AwayOffensiveYardsPerPlay"),
            "AwayPasserRating": obj.get("AwayPasserRating"),
            "AwayPassesDefended": obj.get("AwayPassesDefended"),
            "AwayPassingAttempts": obj.get("AwayPassingAttempts"),
            "AwayPassingCompletions": obj.get("AwayPassingCompletions"),
            "AwayPassingInterceptions": obj.get("AwayPassingInterceptions"),
            "AwayPassingTouchdowns": obj.get("AwayPassingTouchdowns"),
            "AwayPassingYards": obj.get("AwayPassingYards"),
            "AwayPassingYardsPerAttempt": obj.get("AwayPassingYardsPerAttempt"),
            "AwayPassingYardsPerCompletion": obj.get("AwayPassingYardsPerCompletion"),
            "AwayPenalties": obj.get("AwayPenalties"),
            "AwayPenaltyYards": obj.get("AwayPenaltyYards"),
            "AwayPuntAverage": obj.get("AwayPuntAverage"),
            "AwayPuntNetAverage": obj.get("AwayPuntNetAverage"),
            "AwayPuntNetYards": obj.get("AwayPuntNetYards"),
            "AwayPuntReturnLong": obj.get("AwayPuntReturnLong"),
            "AwayPuntReturnTouchdowns": obj.get("AwayPuntReturnTouchdowns"),
            "AwayPuntReturnYards": obj.get("AwayPuntReturnYards"),
            "AwayPuntReturns": obj.get("AwayPuntReturns"),
            "AwayPuntYards": obj.get("AwayPuntYards"),
            "AwayPunts": obj.get("AwayPunts"),
            "AwayPuntsHadBlocked": obj.get("AwayPuntsHadBlocked"),
            "AwayQuarterbackHits": obj.get("AwayQuarterbackHits"),
            "AwayRedZoneAttempts": obj.get("AwayRedZoneAttempts"),
            "AwayRedZoneConversions": obj.get("AwayRedZoneConversions"),
            "AwayReturnYards": obj.get("AwayReturnYards"),
            "AwayRushingAttempts": obj.get("AwayRushingAttempts"),
            "AwayRushingTouchdowns": obj.get("AwayRushingTouchdowns"),
            "AwayRushingYards": obj.get("AwayRushingYards"),
            "AwayRushingYardsPerAttempt": obj.get("AwayRushingYardsPerAttempt"),
            "AwaySackYards": obj.get("AwaySackYards"),
            "AwaySacks": obj.get("AwaySacks"),
            "AwaySafeties": obj.get("AwaySafeties"),
            "AwayScore": obj.get("AwayScore"),
            "AwayScoreOvertime": obj.get("AwayScoreOvertime"),
            "AwayScoreQuarter1": obj.get("AwayScoreQuarter1"),
            "AwayScoreQuarter2": obj.get("AwayScoreQuarter2"),
            "AwayScoreQuarter3": obj.get("AwayScoreQuarter3"),
            "AwayScoreQuarter4": obj.get("AwayScoreQuarter4"),
            "AwaySoloTackles": obj.get("AwaySoloTackles"),
            "AwayTacklesForLoss": obj.get("AwayTacklesForLoss"),
            "AwayTakeaways": obj.get("AwayTakeaways"),
            "AwayTeam": obj.get("AwayTeam"),
            "AwayThirdDownAttempts": obj.get("AwayThirdDownAttempts"),
            "AwayThirdDownConversions": obj.get("AwayThirdDownConversions"),
            "AwayThirdDownPercentage": obj.get("AwayThirdDownPercentage"),
            "AwayTimeOfPossession": obj.get("AwayTimeOfPossession"),
            "AwayTimesSacked": obj.get("AwayTimesSacked"),
            "AwayTimesSackedYards": obj.get("AwayTimesSackedYards"),
            "AwayTouchdowns": obj.get("AwayTouchdowns"),
            "AwayTurnoverDifferential": obj.get("AwayTurnoverDifferential"),
            "AwayTwoPointConversionReturns": obj.get("AwayTwoPointConversionReturns"),
            "Date": obj.get("Date"),
            "GameID": obj.get("GameID"),
            "GameKey": obj.get("GameKey"),
            "HomeAssistedTackles": obj.get("HomeAssistedTackles"),
            "HomeBlockedKickReturnTouchdowns": obj.get("HomeBlockedKickReturnTouchdowns"),
            "HomeBlockedKickReturnYards": obj.get("HomeBlockedKickReturnYards"),
            "HomeBlockedKicks": obj.get("HomeBlockedKicks"),
            "HomeCompletionPercentage": obj.get("HomeCompletionPercentage"),
            "HomeExtraPointKickingAttempts": obj.get("HomeExtraPointKickingAttempts"),
            "HomeExtraPointKickingConversions": obj.get("HomeExtraPointKickingConversions"),
            "HomeExtraPointPassingAttempts": obj.get("HomeExtraPointPassingAttempts"),
            "HomeExtraPointPassingConversions": obj.get("HomeExtraPointPassingConversions"),
            "HomeExtraPointRushingAttempts": obj.get("HomeExtraPointRushingAttempts"),
            "HomeExtraPointRushingConversions": obj.get("HomeExtraPointRushingConversions"),
            "HomeExtraPointsHadBlocked": obj.get("HomeExtraPointsHadBlocked"),
            "HomeFieldGoalAttempts": obj.get("HomeFieldGoalAttempts"),
            "HomeFieldGoalReturnTouchdowns": obj.get("HomeFieldGoalReturnTouchdowns"),
            "HomeFieldGoalReturnYards": obj.get("HomeFieldGoalReturnYards"),
            "HomeFieldGoalsHadBlocked": obj.get("HomeFieldGoalsHadBlocked"),
            "HomeFieldGoalsMade": obj.get("HomeFieldGoalsMade"),
            "HomeFirstDowns": obj.get("HomeFirstDowns"),
            "HomeFirstDownsByPassing": obj.get("HomeFirstDownsByPassing"),
            "HomeFirstDownsByPenalty": obj.get("HomeFirstDownsByPenalty"),
            "HomeFirstDownsByRushing": obj.get("HomeFirstDownsByRushing"),
            "HomeFourthDownAttempts": obj.get("HomeFourthDownAttempts"),
            "HomeFourthDownConversions": obj.get("HomeFourthDownConversions"),
            "HomeFourthDownPercentage": obj.get("HomeFourthDownPercentage"),
            "HomeFumbleReturnTouchdowns": obj.get("HomeFumbleReturnTouchdowns"),
            "HomeFumbleReturnYards": obj.get("HomeFumbleReturnYards"),
            "HomeFumbles": obj.get("HomeFumbles"),
            "HomeFumblesForced": obj.get("HomeFumblesForced"),
            "HomeFumblesLost": obj.get("HomeFumblesLost"),
            "HomeFumblesRecovered": obj.get("HomeFumblesRecovered"),
            "HomeGiveaways": obj.get("HomeGiveaways"),
            "HomeGoalToGoAttempts": obj.get("HomeGoalToGoAttempts"),
            "HomeGoalToGoConversions": obj.get("HomeGoalToGoConversions"),
            "HomeInterceptionReturnTouchdowns": obj.get("HomeInterceptionReturnTouchdowns"),
            "HomeInterceptionReturnYards": obj.get("HomeInterceptionReturnYards"),
            "HomeInterceptionReturns": obj.get("HomeInterceptionReturns"),
            "HomeKickReturnLong": obj.get("HomeKickReturnLong"),
            "HomeKickReturnTouchdowns": obj.get("HomeKickReturnTouchdowns"),
            "HomeKickReturnYards": obj.get("HomeKickReturnYards"),
            "HomeKickReturns": obj.get("HomeKickReturns"),
            "HomeKickoffTouchbacks": obj.get("HomeKickoffTouchbacks"),
            "HomeKickoffs": obj.get("HomeKickoffs"),
            "HomeKickoffsInEndZone": obj.get("HomeKickoffsInEndZone"),
            "HomeOffensivePlays": obj.get("HomeOffensivePlays"),
            "HomeOffensiveYards": obj.get("HomeOffensiveYards"),
            "HomeOffensiveYardsPerPlay": obj.get("HomeOffensiveYardsPerPlay"),
            "HomePasserRating": obj.get("HomePasserRating"),
            "HomePassesDefended": obj.get("HomePassesDefended"),
            "HomePassingAttempts": obj.get("HomePassingAttempts"),
            "HomePassingCompletions": obj.get("HomePassingCompletions"),
            "HomePassingInterceptions": obj.get("HomePassingInterceptions"),
            "HomePassingTouchdowns": obj.get("HomePassingTouchdowns"),
            "HomePassingYards": obj.get("HomePassingYards"),
            "HomePassingYardsPerAttempt": obj.get("HomePassingYardsPerAttempt"),
            "HomePassingYardsPerCompletion": obj.get("HomePassingYardsPerCompletion"),
            "HomePenalties": obj.get("HomePenalties"),
            "HomePenaltyYards": obj.get("HomePenaltyYards"),
            "HomePuntAverage": obj.get("HomePuntAverage"),
            "HomePuntNetAverage": obj.get("HomePuntNetAverage"),
            "HomePuntNetYards": obj.get("HomePuntNetYards"),
            "HomePuntReturnLong": obj.get("HomePuntReturnLong"),
            "HomePuntReturnTouchdowns": obj.get("HomePuntReturnTouchdowns"),
            "HomePuntReturnYards": obj.get("HomePuntReturnYards"),
            "HomePuntReturns": obj.get("HomePuntReturns"),
            "HomePuntYards": obj.get("HomePuntYards"),
            "HomePunts": obj.get("HomePunts"),
            "HomePuntsHadBlocked": obj.get("HomePuntsHadBlocked"),
            "HomeQuarterbackHits": obj.get("HomeQuarterbackHits"),
            "HomeRedZoneAttempts": obj.get("HomeRedZoneAttempts"),
            "HomeRedZoneConversions": obj.get("HomeRedZoneConversions"),
            "HomeReturnYards": obj.get("HomeReturnYards"),
            "HomeRushingAttempts": obj.get("HomeRushingAttempts"),
            "HomeRushingTouchdowns": obj.get("HomeRushingTouchdowns"),
            "HomeRushingYards": obj.get("HomeRushingYards"),
            "HomeRushingYardsPerAttempt": obj.get("HomeRushingYardsPerAttempt"),
            "HomeSackYards": obj.get("HomeSackYards"),
            "HomeSacks": obj.get("HomeSacks"),
            "HomeSafeties": obj.get("HomeSafeties"),
            "HomeScore": obj.get("HomeScore"),
            "HomeScoreOvertime": obj.get("HomeScoreOvertime"),
            "HomeScoreQuarter1": obj.get("HomeScoreQuarter1"),
            "HomeScoreQuarter2": obj.get("HomeScoreQuarter2"),
            "HomeScoreQuarter3": obj.get("HomeScoreQuarter3"),
            "HomeScoreQuarter4": obj.get("HomeScoreQuarter4"),
            "HomeSoloTackles": obj.get("HomeSoloTackles"),
            "HomeTacklesForLoss": obj.get("HomeTacklesForLoss"),
            "HomeTakeaways": obj.get("HomeTakeaways"),
            "HomeTeam": obj.get("HomeTeam"),
            "HomeThirdDownAttempts": obj.get("HomeThirdDownAttempts"),
            "HomeThirdDownConversions": obj.get("HomeThirdDownConversions"),
            "HomeThirdDownPercentage": obj.get("HomeThirdDownPercentage"),
            "HomeTimeOfPossession": obj.get("HomeTimeOfPossession"),
            "HomeTimesSacked": obj.get("HomeTimesSacked"),
            "HomeTimesSackedYards": obj.get("HomeTimesSackedYards"),
            "HomeTouchdowns": obj.get("HomeTouchdowns"),
            "HomeTurnoverDifferential": obj.get("HomeTurnoverDifferential"),
            "HomeTwoPointConversionReturns": obj.get("HomeTwoPointConversionReturns"),
            "Humidity": obj.get("Humidity"),
            "IsGameOver": obj.get("IsGameOver"),
            "OverUnder": obj.get("OverUnder"),
            "PlayingSurface": obj.get("PlayingSurface"),
            "PointSpread": obj.get("PointSpread"),
            "ScoreID": obj.get("ScoreID"),
            "Season": obj.get("Season"),
            "SeasonType": obj.get("SeasonType"),
            "Stadium": obj.get("Stadium"),
            "StadiumDetails": Stadium.from_dict(obj["StadiumDetails"]) if obj.get("StadiumDetails") is not None else None,
            "StadiumID": obj.get("StadiumID"),
            "Temperature": obj.get("Temperature"),
            "TotalScore": obj.get("TotalScore"),
            "Week": obj.get("Week"),
            "WindSpeed": obj.get("WindSpeed")
        })
        return _obj


