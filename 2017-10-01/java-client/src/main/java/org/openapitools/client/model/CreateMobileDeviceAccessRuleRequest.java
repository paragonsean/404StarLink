/*
 * Amazon WorkMail
 * <p>WorkMail is a secure, managed business email and calendaring service with support for existing desktop and mobile email clients. You can access your email, contacts, and calendars using Microsoft Outlook, your browser, or other native iOS and Android email applications. You can integrate WorkMail with your existing corporate directory and control both the keys that encrypt your data and the location in which your data is stored.</p> <p>The WorkMail API is designed for the following scenarios:</p> <ul> <li> <p>Listing and describing organizations</p> </li> </ul> <ul> <li> <p>Managing users</p> </li> </ul> <ul> <li> <p>Managing groups</p> </li> </ul> <ul> <li> <p>Managing resources</p> </li> </ul> <p>All WorkMail API operations are Amazon-authenticated and certificate-signed. They not only require the use of the AWS SDK, but also allow for the exclusive use of AWS Identity and Access Management users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the WorkMail site, the IAM user gains full administrative visibility into the entire WorkMail organization (or as set in the IAM policy). This includes, but is not limited to, the ability to create, update, and delete users, groups, and resources. This allows developers to perform the scenarios listed above, as well as give users the ability to grant access on a selective basis using the IAM model.</p>
 *
 * The version of the OpenAPI document: 2017-10-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MobileDeviceAccessRuleEffect;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateMobileDeviceAccessRuleRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:12:37.440706-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateMobileDeviceAccessRuleRequest {
  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "OrganizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private String organizationId;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "ClientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EFFECT = "Effect";
  @SerializedName(SERIALIZED_NAME_EFFECT)
  private MobileDeviceAccessRuleEffect effect;

  public static final String SERIALIZED_NAME_DEVICE_TYPES = "DeviceTypes";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPES)
  private List deviceTypes;

  public static final String SERIALIZED_NAME_NOT_DEVICE_TYPES = "NotDeviceTypes";
  @SerializedName(SERIALIZED_NAME_NOT_DEVICE_TYPES)
  private List notDeviceTypes;

  public static final String SERIALIZED_NAME_DEVICE_MODELS = "DeviceModels";
  @SerializedName(SERIALIZED_NAME_DEVICE_MODELS)
  private List deviceModels;

  public static final String SERIALIZED_NAME_NOT_DEVICE_MODELS = "NotDeviceModels";
  @SerializedName(SERIALIZED_NAME_NOT_DEVICE_MODELS)
  private List notDeviceModels;

  public static final String SERIALIZED_NAME_DEVICE_OPERATING_SYSTEMS = "DeviceOperatingSystems";
  @SerializedName(SERIALIZED_NAME_DEVICE_OPERATING_SYSTEMS)
  private List deviceOperatingSystems;

  public static final String SERIALIZED_NAME_NOT_DEVICE_OPERATING_SYSTEMS = "NotDeviceOperatingSystems";
  @SerializedName(SERIALIZED_NAME_NOT_DEVICE_OPERATING_SYSTEMS)
  private List notDeviceOperatingSystems;

  public static final String SERIALIZED_NAME_DEVICE_USER_AGENTS = "DeviceUserAgents";
  @SerializedName(SERIALIZED_NAME_DEVICE_USER_AGENTS)
  private List deviceUserAgents;

  public static final String SERIALIZED_NAME_NOT_DEVICE_USER_AGENTS = "NotDeviceUserAgents";
  @SerializedName(SERIALIZED_NAME_NOT_DEVICE_USER_AGENTS)
  private List notDeviceUserAgents;

  public CreateMobileDeviceAccessRuleRequest() {
  }

  public CreateMobileDeviceAccessRuleRequest organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Get organizationId
   * @return organizationId
   */
  @javax.annotation.Nonnull
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }


  public CreateMobileDeviceAccessRuleRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * Get clientToken
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public CreateMobileDeviceAccessRuleRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateMobileDeviceAccessRuleRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateMobileDeviceAccessRuleRequest effect(MobileDeviceAccessRuleEffect effect) {
    this.effect = effect;
    return this;
  }

  /**
   * Get effect
   * @return effect
   */
  @javax.annotation.Nonnull
  public MobileDeviceAccessRuleEffect getEffect() {
    return effect;
  }

  public void setEffect(MobileDeviceAccessRuleEffect effect) {
    this.effect = effect;
  }


  public CreateMobileDeviceAccessRuleRequest deviceTypes(List deviceTypes) {
    this.deviceTypes = deviceTypes;
    return this;
  }

  /**
   * Get deviceTypes
   * @return deviceTypes
   */
  @javax.annotation.Nullable
  public List getDeviceTypes() {
    return deviceTypes;
  }

  public void setDeviceTypes(List deviceTypes) {
    this.deviceTypes = deviceTypes;
  }


  public CreateMobileDeviceAccessRuleRequest notDeviceTypes(List notDeviceTypes) {
    this.notDeviceTypes = notDeviceTypes;
    return this;
  }

  /**
   * Get notDeviceTypes
   * @return notDeviceTypes
   */
  @javax.annotation.Nullable
  public List getNotDeviceTypes() {
    return notDeviceTypes;
  }

  public void setNotDeviceTypes(List notDeviceTypes) {
    this.notDeviceTypes = notDeviceTypes;
  }


  public CreateMobileDeviceAccessRuleRequest deviceModels(List deviceModels) {
    this.deviceModels = deviceModels;
    return this;
  }

  /**
   * Get deviceModels
   * @return deviceModels
   */
  @javax.annotation.Nullable
  public List getDeviceModels() {
    return deviceModels;
  }

  public void setDeviceModels(List deviceModels) {
    this.deviceModels = deviceModels;
  }


  public CreateMobileDeviceAccessRuleRequest notDeviceModels(List notDeviceModels) {
    this.notDeviceModels = notDeviceModels;
    return this;
  }

  /**
   * Get notDeviceModels
   * @return notDeviceModels
   */
  @javax.annotation.Nullable
  public List getNotDeviceModels() {
    return notDeviceModels;
  }

  public void setNotDeviceModels(List notDeviceModels) {
    this.notDeviceModels = notDeviceModels;
  }


  public CreateMobileDeviceAccessRuleRequest deviceOperatingSystems(List deviceOperatingSystems) {
    this.deviceOperatingSystems = deviceOperatingSystems;
    return this;
  }

  /**
   * Get deviceOperatingSystems
   * @return deviceOperatingSystems
   */
  @javax.annotation.Nullable
  public List getDeviceOperatingSystems() {
    return deviceOperatingSystems;
  }

  public void setDeviceOperatingSystems(List deviceOperatingSystems) {
    this.deviceOperatingSystems = deviceOperatingSystems;
  }


  public CreateMobileDeviceAccessRuleRequest notDeviceOperatingSystems(List notDeviceOperatingSystems) {
    this.notDeviceOperatingSystems = notDeviceOperatingSystems;
    return this;
  }

  /**
   * Get notDeviceOperatingSystems
   * @return notDeviceOperatingSystems
   */
  @javax.annotation.Nullable
  public List getNotDeviceOperatingSystems() {
    return notDeviceOperatingSystems;
  }

  public void setNotDeviceOperatingSystems(List notDeviceOperatingSystems) {
    this.notDeviceOperatingSystems = notDeviceOperatingSystems;
  }


  public CreateMobileDeviceAccessRuleRequest deviceUserAgents(List deviceUserAgents) {
    this.deviceUserAgents = deviceUserAgents;
    return this;
  }

  /**
   * Get deviceUserAgents
   * @return deviceUserAgents
   */
  @javax.annotation.Nullable
  public List getDeviceUserAgents() {
    return deviceUserAgents;
  }

  public void setDeviceUserAgents(List deviceUserAgents) {
    this.deviceUserAgents = deviceUserAgents;
  }


  public CreateMobileDeviceAccessRuleRequest notDeviceUserAgents(List notDeviceUserAgents) {
    this.notDeviceUserAgents = notDeviceUserAgents;
    return this;
  }

  /**
   * Get notDeviceUserAgents
   * @return notDeviceUserAgents
   */
  @javax.annotation.Nullable
  public List getNotDeviceUserAgents() {
    return notDeviceUserAgents;
  }

  public void setNotDeviceUserAgents(List notDeviceUserAgents) {
    this.notDeviceUserAgents = notDeviceUserAgents;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateMobileDeviceAccessRuleRequest createMobileDeviceAccessRuleRequest = (CreateMobileDeviceAccessRuleRequest) o;
    return Objects.equals(this.organizationId, createMobileDeviceAccessRuleRequest.organizationId) &&
        Objects.equals(this.clientToken, createMobileDeviceAccessRuleRequest.clientToken) &&
        Objects.equals(this.name, createMobileDeviceAccessRuleRequest.name) &&
        Objects.equals(this.description, createMobileDeviceAccessRuleRequest.description) &&
        Objects.equals(this.effect, createMobileDeviceAccessRuleRequest.effect) &&
        Objects.equals(this.deviceTypes, createMobileDeviceAccessRuleRequest.deviceTypes) &&
        Objects.equals(this.notDeviceTypes, createMobileDeviceAccessRuleRequest.notDeviceTypes) &&
        Objects.equals(this.deviceModels, createMobileDeviceAccessRuleRequest.deviceModels) &&
        Objects.equals(this.notDeviceModels, createMobileDeviceAccessRuleRequest.notDeviceModels) &&
        Objects.equals(this.deviceOperatingSystems, createMobileDeviceAccessRuleRequest.deviceOperatingSystems) &&
        Objects.equals(this.notDeviceOperatingSystems, createMobileDeviceAccessRuleRequest.notDeviceOperatingSystems) &&
        Objects.equals(this.deviceUserAgents, createMobileDeviceAccessRuleRequest.deviceUserAgents) &&
        Objects.equals(this.notDeviceUserAgents, createMobileDeviceAccessRuleRequest.notDeviceUserAgents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organizationId, clientToken, name, description, effect, deviceTypes, notDeviceTypes, deviceModels, notDeviceModels, deviceOperatingSystems, notDeviceOperatingSystems, deviceUserAgents, notDeviceUserAgents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateMobileDeviceAccessRuleRequest {\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    effect: ").append(toIndentedString(effect)).append("\n");
    sb.append("    deviceTypes: ").append(toIndentedString(deviceTypes)).append("\n");
    sb.append("    notDeviceTypes: ").append(toIndentedString(notDeviceTypes)).append("\n");
    sb.append("    deviceModels: ").append(toIndentedString(deviceModels)).append("\n");
    sb.append("    notDeviceModels: ").append(toIndentedString(notDeviceModels)).append("\n");
    sb.append("    deviceOperatingSystems: ").append(toIndentedString(deviceOperatingSystems)).append("\n");
    sb.append("    notDeviceOperatingSystems: ").append(toIndentedString(notDeviceOperatingSystems)).append("\n");
    sb.append("    deviceUserAgents: ").append(toIndentedString(deviceUserAgents)).append("\n");
    sb.append("    notDeviceUserAgents: ").append(toIndentedString(notDeviceUserAgents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OrganizationId");
    openapiFields.add("ClientToken");
    openapiFields.add("Name");
    openapiFields.add("Description");
    openapiFields.add("Effect");
    openapiFields.add("DeviceTypes");
    openapiFields.add("NotDeviceTypes");
    openapiFields.add("DeviceModels");
    openapiFields.add("NotDeviceModels");
    openapiFields.add("DeviceOperatingSystems");
    openapiFields.add("NotDeviceOperatingSystems");
    openapiFields.add("DeviceUserAgents");
    openapiFields.add("NotDeviceUserAgents");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("OrganizationId");
    openapiRequiredFields.add("Name");
    openapiRequiredFields.add("Effect");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateMobileDeviceAccessRuleRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateMobileDeviceAccessRuleRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateMobileDeviceAccessRuleRequest is not found in the empty JSON string", CreateMobileDeviceAccessRuleRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateMobileDeviceAccessRuleRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateMobileDeviceAccessRuleRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateMobileDeviceAccessRuleRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `OrganizationId`
      String.validateJsonElement(jsonObj.get("OrganizationId"));
      // validate the optional field `ClientToken`
      if (jsonObj.get("ClientToken") != null && !jsonObj.get("ClientToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClientToken"));
      }
      // validate the required field `Name`
      String.validateJsonElement(jsonObj.get("Name"));
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the required field `Effect`
      MobileDeviceAccessRuleEffect.validateJsonElement(jsonObj.get("Effect"));
      // validate the optional field `DeviceTypes`
      if (jsonObj.get("DeviceTypes") != null && !jsonObj.get("DeviceTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DeviceTypes"));
      }
      // validate the optional field `NotDeviceTypes`
      if (jsonObj.get("NotDeviceTypes") != null && !jsonObj.get("NotDeviceTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NotDeviceTypes"));
      }
      // validate the optional field `DeviceModels`
      if (jsonObj.get("DeviceModels") != null && !jsonObj.get("DeviceModels").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DeviceModels"));
      }
      // validate the optional field `NotDeviceModels`
      if (jsonObj.get("NotDeviceModels") != null && !jsonObj.get("NotDeviceModels").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NotDeviceModels"));
      }
      // validate the optional field `DeviceOperatingSystems`
      if (jsonObj.get("DeviceOperatingSystems") != null && !jsonObj.get("DeviceOperatingSystems").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DeviceOperatingSystems"));
      }
      // validate the optional field `NotDeviceOperatingSystems`
      if (jsonObj.get("NotDeviceOperatingSystems") != null && !jsonObj.get("NotDeviceOperatingSystems").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NotDeviceOperatingSystems"));
      }
      // validate the optional field `DeviceUserAgents`
      if (jsonObj.get("DeviceUserAgents") != null && !jsonObj.get("DeviceUserAgents").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DeviceUserAgents"));
      }
      // validate the optional field `NotDeviceUserAgents`
      if (jsonObj.get("NotDeviceUserAgents") != null && !jsonObj.get("NotDeviceUserAgents").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NotDeviceUserAgents"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateMobileDeviceAccessRuleRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateMobileDeviceAccessRuleRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateMobileDeviceAccessRuleRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateMobileDeviceAccessRuleRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateMobileDeviceAccessRuleRequest>() {
           @Override
           public void write(JsonWriter out, CreateMobileDeviceAccessRuleRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateMobileDeviceAccessRuleRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateMobileDeviceAccessRuleRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateMobileDeviceAccessRuleRequest
   * @throws IOException if the JSON string is invalid with respect to CreateMobileDeviceAccessRuleRequest
   */
  public static CreateMobileDeviceAccessRuleRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateMobileDeviceAccessRuleRequest.class);
  }

  /**
   * Convert an instance of CreateMobileDeviceAccessRuleRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

