/*
 * Configuration API
 * The Configuration API enables you to create a platform where you can onboard your users as account holders and create balance accounts, cards, and business accounts.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Versioning The Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/bcl/v1/accountHolders ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v1`.
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LegalEntity;
import org.openapitools.client.model.LegalEntityInfo;
import org.openapitools.client.model.LegalEntityInfoRequiredType;
import org.openapitools.client.model.ServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LegalEntitiesApi
 */
@Disabled
public class LegalEntitiesApiTest {

    private final LegalEntitiesApi api = new LegalEntitiesApi();

    /**
     * Get a legal entity
     *
     * Returns a legal entity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLegalEntitiesIdTest() throws ApiException {
        String id = null;
        LegalEntity response = api.getLegalEntitiesId(id);
        // TODO: test validations
    }

    /**
     * Update a legal entity
     *
     * Updates a legal entity.   &gt;To change the legal entity type, include only the new &#x60;type&#x60; in your request. To update the &#x60;entityAssociations&#x60; array, you need to replace the entire array. For example, if the array has 3 entries and you want to remove 1 entry, you need to PATCH the resource with the remaining 2 entries.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchLegalEntitiesIdTest() throws ApiException {
        String id = null;
        LegalEntityInfo legalEntityInfo = null;
        LegalEntity response = api.patchLegalEntitiesId(id, legalEntityInfo);
        // TODO: test validations
    }

    /**
     * Create a legal entity
     *
     * Creates a legal entity.   This resource contains information about the user that will be onboarded in your platform. Adyen uses this information to perform verification checks as required by payment industry regulations. Adyen informs you of the verification results through webhooks or API responses.   
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postLegalEntitiesTest() throws ApiException {
        LegalEntityInfoRequiredType legalEntityInfoRequiredType = null;
        LegalEntity response = api.postLegalEntities(legalEntityInfoRequiredType);
        // TODO: test validations
    }

}
