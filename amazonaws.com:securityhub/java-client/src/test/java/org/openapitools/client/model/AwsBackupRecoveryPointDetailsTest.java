/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AwsBackupRecoveryPointDetailsCalculatedLifecycle;
import org.openapitools.client.model.AwsBackupRecoveryPointDetailsCreatedBy;
import org.openapitools.client.model.AwsBackupRecoveryPointDetailsLifecycle;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AwsBackupRecoveryPointDetails
 */
public class AwsBackupRecoveryPointDetailsTest {
    private final AwsBackupRecoveryPointDetails model = new AwsBackupRecoveryPointDetails();

    /**
     * Model tests for AwsBackupRecoveryPointDetails
     */
    @Test
    public void testAwsBackupRecoveryPointDetails() {
        // TODO: test AwsBackupRecoveryPointDetails
    }

    /**
     * Test the property 'backupSizeInBytes'
     */
    @Test
    public void backupSizeInBytesTest() {
        // TODO: test backupSizeInBytes
    }

    /**
     * Test the property 'backupVaultArn'
     */
    @Test
    public void backupVaultArnTest() {
        // TODO: test backupVaultArn
    }

    /**
     * Test the property 'backupVaultName'
     */
    @Test
    public void backupVaultNameTest() {
        // TODO: test backupVaultName
    }

    /**
     * Test the property 'calculatedLifecycle'
     */
    @Test
    public void calculatedLifecycleTest() {
        // TODO: test calculatedLifecycle
    }

    /**
     * Test the property 'completionDate'
     */
    @Test
    public void completionDateTest() {
        // TODO: test completionDate
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'encryptionKeyArn'
     */
    @Test
    public void encryptionKeyArnTest() {
        // TODO: test encryptionKeyArn
    }

    /**
     * Test the property 'iamRoleArn'
     */
    @Test
    public void iamRoleArnTest() {
        // TODO: test iamRoleArn
    }

    /**
     * Test the property 'isEncrypted'
     */
    @Test
    public void isEncryptedTest() {
        // TODO: test isEncrypted
    }

    /**
     * Test the property 'lastRestoreTime'
     */
    @Test
    public void lastRestoreTimeTest() {
        // TODO: test lastRestoreTime
    }

    /**
     * Test the property 'lifecycle'
     */
    @Test
    public void lifecycleTest() {
        // TODO: test lifecycle
    }

    /**
     * Test the property 'recoveryPointArn'
     */
    @Test
    public void recoveryPointArnTest() {
        // TODO: test recoveryPointArn
    }

    /**
     * Test the property 'resourceArn'
     */
    @Test
    public void resourceArnTest() {
        // TODO: test resourceArn
    }

    /**
     * Test the property 'resourceType'
     */
    @Test
    public void resourceTypeTest() {
        // TODO: test resourceType
    }

    /**
     * Test the property 'sourceBackupVaultArn'
     */
    @Test
    public void sourceBackupVaultArnTest() {
        // TODO: test sourceBackupVaultArn
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'storageClass'
     */
    @Test
    public void storageClassTest() {
        // TODO: test storageClass
    }

}
