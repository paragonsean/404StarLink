/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AwsEcsTaskDefinitionDetailsProxyConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceDetailsAwsEcsTaskDefinition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:57:13.081466-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceDetailsAwsEcsTaskDefinition {
  public static final String SERIALIZED_NAME_CONTAINER_DEFINITIONS = "ContainerDefinitions";
  @SerializedName(SERIALIZED_NAME_CONTAINER_DEFINITIONS)
  private List containerDefinitions;

  public static final String SERIALIZED_NAME_CPU = "Cpu";
  @SerializedName(SERIALIZED_NAME_CPU)
  private String cpu;

  public static final String SERIALIZED_NAME_EXECUTION_ROLE_ARN = "ExecutionRoleArn";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ROLE_ARN)
  private String executionRoleArn;

  public static final String SERIALIZED_NAME_FAMILY = "Family";
  @SerializedName(SERIALIZED_NAME_FAMILY)
  private String family;

  public static final String SERIALIZED_NAME_INFERENCE_ACCELERATORS = "InferenceAccelerators";
  @SerializedName(SERIALIZED_NAME_INFERENCE_ACCELERATORS)
  private List inferenceAccelerators;

  public static final String SERIALIZED_NAME_IPC_MODE = "IpcMode";
  @SerializedName(SERIALIZED_NAME_IPC_MODE)
  private String ipcMode;

  public static final String SERIALIZED_NAME_MEMORY = "Memory";
  @SerializedName(SERIALIZED_NAME_MEMORY)
  private String memory;

  public static final String SERIALIZED_NAME_NETWORK_MODE = "NetworkMode";
  @SerializedName(SERIALIZED_NAME_NETWORK_MODE)
  private String networkMode;

  public static final String SERIALIZED_NAME_PID_MODE = "PidMode";
  @SerializedName(SERIALIZED_NAME_PID_MODE)
  private String pidMode;

  public static final String SERIALIZED_NAME_PLACEMENT_CONSTRAINTS = "PlacementConstraints";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_CONSTRAINTS)
  private List placementConstraints;

  public static final String SERIALIZED_NAME_PROXY_CONFIGURATION = "ProxyConfiguration";
  @SerializedName(SERIALIZED_NAME_PROXY_CONFIGURATION)
  private AwsEcsTaskDefinitionDetailsProxyConfiguration proxyConfiguration;

  public static final String SERIALIZED_NAME_REQUIRES_COMPATIBILITIES = "RequiresCompatibilities";
  @SerializedName(SERIALIZED_NAME_REQUIRES_COMPATIBILITIES)
  private List requiresCompatibilities;

  public static final String SERIALIZED_NAME_TASK_ROLE_ARN = "TaskRoleArn";
  @SerializedName(SERIALIZED_NAME_TASK_ROLE_ARN)
  private String taskRoleArn;

  public static final String SERIALIZED_NAME_VOLUMES = "Volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List volumes;

  public ResourceDetailsAwsEcsTaskDefinition() {
  }

  public ResourceDetailsAwsEcsTaskDefinition containerDefinitions(List containerDefinitions) {
    this.containerDefinitions = containerDefinitions;
    return this;
  }

  /**
   * Get containerDefinitions
   * @return containerDefinitions
   */
  @javax.annotation.Nullable
  public List getContainerDefinitions() {
    return containerDefinitions;
  }

  public void setContainerDefinitions(List containerDefinitions) {
    this.containerDefinitions = containerDefinitions;
  }


  public ResourceDetailsAwsEcsTaskDefinition cpu(String cpu) {
    this.cpu = cpu;
    return this;
  }

  /**
   * Get cpu
   * @return cpu
   */
  @javax.annotation.Nullable
  public String getCpu() {
    return cpu;
  }

  public void setCpu(String cpu) {
    this.cpu = cpu;
  }


  public ResourceDetailsAwsEcsTaskDefinition executionRoleArn(String executionRoleArn) {
    this.executionRoleArn = executionRoleArn;
    return this;
  }

  /**
   * Get executionRoleArn
   * @return executionRoleArn
   */
  @javax.annotation.Nullable
  public String getExecutionRoleArn() {
    return executionRoleArn;
  }

  public void setExecutionRoleArn(String executionRoleArn) {
    this.executionRoleArn = executionRoleArn;
  }


  public ResourceDetailsAwsEcsTaskDefinition family(String family) {
    this.family = family;
    return this;
  }

  /**
   * Get family
   * @return family
   */
  @javax.annotation.Nullable
  public String getFamily() {
    return family;
  }

  public void setFamily(String family) {
    this.family = family;
  }


  public ResourceDetailsAwsEcsTaskDefinition inferenceAccelerators(List inferenceAccelerators) {
    this.inferenceAccelerators = inferenceAccelerators;
    return this;
  }

  /**
   * Get inferenceAccelerators
   * @return inferenceAccelerators
   */
  @javax.annotation.Nullable
  public List getInferenceAccelerators() {
    return inferenceAccelerators;
  }

  public void setInferenceAccelerators(List inferenceAccelerators) {
    this.inferenceAccelerators = inferenceAccelerators;
  }


  public ResourceDetailsAwsEcsTaskDefinition ipcMode(String ipcMode) {
    this.ipcMode = ipcMode;
    return this;
  }

  /**
   * Get ipcMode
   * @return ipcMode
   */
  @javax.annotation.Nullable
  public String getIpcMode() {
    return ipcMode;
  }

  public void setIpcMode(String ipcMode) {
    this.ipcMode = ipcMode;
  }


  public ResourceDetailsAwsEcsTaskDefinition memory(String memory) {
    this.memory = memory;
    return this;
  }

  /**
   * Get memory
   * @return memory
   */
  @javax.annotation.Nullable
  public String getMemory() {
    return memory;
  }

  public void setMemory(String memory) {
    this.memory = memory;
  }


  public ResourceDetailsAwsEcsTaskDefinition networkMode(String networkMode) {
    this.networkMode = networkMode;
    return this;
  }

  /**
   * Get networkMode
   * @return networkMode
   */
  @javax.annotation.Nullable
  public String getNetworkMode() {
    return networkMode;
  }

  public void setNetworkMode(String networkMode) {
    this.networkMode = networkMode;
  }


  public ResourceDetailsAwsEcsTaskDefinition pidMode(String pidMode) {
    this.pidMode = pidMode;
    return this;
  }

  /**
   * Get pidMode
   * @return pidMode
   */
  @javax.annotation.Nullable
  public String getPidMode() {
    return pidMode;
  }

  public void setPidMode(String pidMode) {
    this.pidMode = pidMode;
  }


  public ResourceDetailsAwsEcsTaskDefinition placementConstraints(List placementConstraints) {
    this.placementConstraints = placementConstraints;
    return this;
  }

  /**
   * Get placementConstraints
   * @return placementConstraints
   */
  @javax.annotation.Nullable
  public List getPlacementConstraints() {
    return placementConstraints;
  }

  public void setPlacementConstraints(List placementConstraints) {
    this.placementConstraints = placementConstraints;
  }


  public ResourceDetailsAwsEcsTaskDefinition proxyConfiguration(AwsEcsTaskDefinitionDetailsProxyConfiguration proxyConfiguration) {
    this.proxyConfiguration = proxyConfiguration;
    return this;
  }

  /**
   * Get proxyConfiguration
   * @return proxyConfiguration
   */
  @javax.annotation.Nullable
  public AwsEcsTaskDefinitionDetailsProxyConfiguration getProxyConfiguration() {
    return proxyConfiguration;
  }

  public void setProxyConfiguration(AwsEcsTaskDefinitionDetailsProxyConfiguration proxyConfiguration) {
    this.proxyConfiguration = proxyConfiguration;
  }


  public ResourceDetailsAwsEcsTaskDefinition requiresCompatibilities(List requiresCompatibilities) {
    this.requiresCompatibilities = requiresCompatibilities;
    return this;
  }

  /**
   * Get requiresCompatibilities
   * @return requiresCompatibilities
   */
  @javax.annotation.Nullable
  public List getRequiresCompatibilities() {
    return requiresCompatibilities;
  }

  public void setRequiresCompatibilities(List requiresCompatibilities) {
    this.requiresCompatibilities = requiresCompatibilities;
  }


  public ResourceDetailsAwsEcsTaskDefinition taskRoleArn(String taskRoleArn) {
    this.taskRoleArn = taskRoleArn;
    return this;
  }

  /**
   * Get taskRoleArn
   * @return taskRoleArn
   */
  @javax.annotation.Nullable
  public String getTaskRoleArn() {
    return taskRoleArn;
  }

  public void setTaskRoleArn(String taskRoleArn) {
    this.taskRoleArn = taskRoleArn;
  }


  public ResourceDetailsAwsEcsTaskDefinition volumes(List volumes) {
    this.volumes = volumes;
    return this;
  }

  /**
   * Get volumes
   * @return volumes
   */
  @javax.annotation.Nullable
  public List getVolumes() {
    return volumes;
  }

  public void setVolumes(List volumes) {
    this.volumes = volumes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceDetailsAwsEcsTaskDefinition resourceDetailsAwsEcsTaskDefinition = (ResourceDetailsAwsEcsTaskDefinition) o;
    return Objects.equals(this.containerDefinitions, resourceDetailsAwsEcsTaskDefinition.containerDefinitions) &&
        Objects.equals(this.cpu, resourceDetailsAwsEcsTaskDefinition.cpu) &&
        Objects.equals(this.executionRoleArn, resourceDetailsAwsEcsTaskDefinition.executionRoleArn) &&
        Objects.equals(this.family, resourceDetailsAwsEcsTaskDefinition.family) &&
        Objects.equals(this.inferenceAccelerators, resourceDetailsAwsEcsTaskDefinition.inferenceAccelerators) &&
        Objects.equals(this.ipcMode, resourceDetailsAwsEcsTaskDefinition.ipcMode) &&
        Objects.equals(this.memory, resourceDetailsAwsEcsTaskDefinition.memory) &&
        Objects.equals(this.networkMode, resourceDetailsAwsEcsTaskDefinition.networkMode) &&
        Objects.equals(this.pidMode, resourceDetailsAwsEcsTaskDefinition.pidMode) &&
        Objects.equals(this.placementConstraints, resourceDetailsAwsEcsTaskDefinition.placementConstraints) &&
        Objects.equals(this.proxyConfiguration, resourceDetailsAwsEcsTaskDefinition.proxyConfiguration) &&
        Objects.equals(this.requiresCompatibilities, resourceDetailsAwsEcsTaskDefinition.requiresCompatibilities) &&
        Objects.equals(this.taskRoleArn, resourceDetailsAwsEcsTaskDefinition.taskRoleArn) &&
        Objects.equals(this.volumes, resourceDetailsAwsEcsTaskDefinition.volumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containerDefinitions, cpu, executionRoleArn, family, inferenceAccelerators, ipcMode, memory, networkMode, pidMode, placementConstraints, proxyConfiguration, requiresCompatibilities, taskRoleArn, volumes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceDetailsAwsEcsTaskDefinition {\n");
    sb.append("    containerDefinitions: ").append(toIndentedString(containerDefinitions)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    executionRoleArn: ").append(toIndentedString(executionRoleArn)).append("\n");
    sb.append("    family: ").append(toIndentedString(family)).append("\n");
    sb.append("    inferenceAccelerators: ").append(toIndentedString(inferenceAccelerators)).append("\n");
    sb.append("    ipcMode: ").append(toIndentedString(ipcMode)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    networkMode: ").append(toIndentedString(networkMode)).append("\n");
    sb.append("    pidMode: ").append(toIndentedString(pidMode)).append("\n");
    sb.append("    placementConstraints: ").append(toIndentedString(placementConstraints)).append("\n");
    sb.append("    proxyConfiguration: ").append(toIndentedString(proxyConfiguration)).append("\n");
    sb.append("    requiresCompatibilities: ").append(toIndentedString(requiresCompatibilities)).append("\n");
    sb.append("    taskRoleArn: ").append(toIndentedString(taskRoleArn)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ContainerDefinitions");
    openapiFields.add("Cpu");
    openapiFields.add("ExecutionRoleArn");
    openapiFields.add("Family");
    openapiFields.add("InferenceAccelerators");
    openapiFields.add("IpcMode");
    openapiFields.add("Memory");
    openapiFields.add("NetworkMode");
    openapiFields.add("PidMode");
    openapiFields.add("PlacementConstraints");
    openapiFields.add("ProxyConfiguration");
    openapiFields.add("RequiresCompatibilities");
    openapiFields.add("TaskRoleArn");
    openapiFields.add("Volumes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceDetailsAwsEcsTaskDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceDetailsAwsEcsTaskDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceDetailsAwsEcsTaskDefinition is not found in the empty JSON string", ResourceDetailsAwsEcsTaskDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceDetailsAwsEcsTaskDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceDetailsAwsEcsTaskDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ContainerDefinitions`
      if (jsonObj.get("ContainerDefinitions") != null && !jsonObj.get("ContainerDefinitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ContainerDefinitions"));
      }
      // validate the optional field `Cpu`
      if (jsonObj.get("Cpu") != null && !jsonObj.get("Cpu").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Cpu"));
      }
      // validate the optional field `ExecutionRoleArn`
      if (jsonObj.get("ExecutionRoleArn") != null && !jsonObj.get("ExecutionRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionRoleArn"));
      }
      // validate the optional field `Family`
      if (jsonObj.get("Family") != null && !jsonObj.get("Family").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Family"));
      }
      // validate the optional field `InferenceAccelerators`
      if (jsonObj.get("InferenceAccelerators") != null && !jsonObj.get("InferenceAccelerators").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InferenceAccelerators"));
      }
      // validate the optional field `IpcMode`
      if (jsonObj.get("IpcMode") != null && !jsonObj.get("IpcMode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IpcMode"));
      }
      // validate the optional field `Memory`
      if (jsonObj.get("Memory") != null && !jsonObj.get("Memory").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Memory"));
      }
      // validate the optional field `NetworkMode`
      if (jsonObj.get("NetworkMode") != null && !jsonObj.get("NetworkMode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NetworkMode"));
      }
      // validate the optional field `PidMode`
      if (jsonObj.get("PidMode") != null && !jsonObj.get("PidMode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PidMode"));
      }
      // validate the optional field `PlacementConstraints`
      if (jsonObj.get("PlacementConstraints") != null && !jsonObj.get("PlacementConstraints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PlacementConstraints"));
      }
      // validate the optional field `ProxyConfiguration`
      if (jsonObj.get("ProxyConfiguration") != null && !jsonObj.get("ProxyConfiguration").isJsonNull()) {
        AwsEcsTaskDefinitionDetailsProxyConfiguration.validateJsonElement(jsonObj.get("ProxyConfiguration"));
      }
      // validate the optional field `RequiresCompatibilities`
      if (jsonObj.get("RequiresCompatibilities") != null && !jsonObj.get("RequiresCompatibilities").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("RequiresCompatibilities"));
      }
      // validate the optional field `TaskRoleArn`
      if (jsonObj.get("TaskRoleArn") != null && !jsonObj.get("TaskRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskRoleArn"));
      }
      // validate the optional field `Volumes`
      if (jsonObj.get("Volumes") != null && !jsonObj.get("Volumes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Volumes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceDetailsAwsEcsTaskDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceDetailsAwsEcsTaskDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceDetailsAwsEcsTaskDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceDetailsAwsEcsTaskDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceDetailsAwsEcsTaskDefinition>() {
           @Override
           public void write(JsonWriter out, ResourceDetailsAwsEcsTaskDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceDetailsAwsEcsTaskDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceDetailsAwsEcsTaskDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceDetailsAwsEcsTaskDefinition
   * @throws IOException if the JSON string is invalid with respect to ResourceDetailsAwsEcsTaskDefinition
   */
  public static ResourceDetailsAwsEcsTaskDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceDetailsAwsEcsTaskDefinition.class);
  }

  /**
   * Convert an instance of ResourceDetailsAwsEcsTaskDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

