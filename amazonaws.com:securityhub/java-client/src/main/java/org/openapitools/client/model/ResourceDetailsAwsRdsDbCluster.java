/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceDetailsAwsRdsDbCluster
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T02:05:07.848040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceDetailsAwsRdsDbCluster {
  public static final String SERIALIZED_NAME_ALLOCATED_STORAGE = "AllocatedStorage";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_STORAGE)
  private Integer allocatedStorage;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "AvailabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List availabilityZones;

  public static final String SERIALIZED_NAME_BACKUP_RETENTION_PERIOD = "BackupRetentionPeriod";
  @SerializedName(SERIALIZED_NAME_BACKUP_RETENTION_PERIOD)
  private Integer backupRetentionPeriod;

  public static final String SERIALIZED_NAME_DATABASE_NAME = "DatabaseName";
  @SerializedName(SERIALIZED_NAME_DATABASE_NAME)
  private String databaseName;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_ENDPOINT = "Endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_READER_ENDPOINT = "ReaderEndpoint";
  @SerializedName(SERIALIZED_NAME_READER_ENDPOINT)
  private String readerEndpoint;

  public static final String SERIALIZED_NAME_CUSTOM_ENDPOINTS = "CustomEndpoints";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ENDPOINTS)
  private List customEndpoints;

  public static final String SERIALIZED_NAME_MULTI_AZ = "MultiAz";
  @SerializedName(SERIALIZED_NAME_MULTI_AZ)
  private Boolean multiAz;

  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private String engine;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_MASTER_USERNAME = "MasterUsername";
  @SerializedName(SERIALIZED_NAME_MASTER_USERNAME)
  private String masterUsername;

  public static final String SERIALIZED_NAME_PREFERRED_BACKUP_WINDOW = "PreferredBackupWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_BACKUP_WINDOW)
  private String preferredBackupWindow;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_READ_REPLICA_IDENTIFIERS = "ReadReplicaIdentifiers";
  @SerializedName(SERIALIZED_NAME_READ_REPLICA_IDENTIFIERS)
  private List readReplicaIdentifiers;

  public static final String SERIALIZED_NAME_VPC_SECURITY_GROUPS = "VpcSecurityGroups";
  @SerializedName(SERIALIZED_NAME_VPC_SECURITY_GROUPS)
  private List vpcSecurityGroups;

  public static final String SERIALIZED_NAME_HOSTED_ZONE_ID = "HostedZoneId";
  @SerializedName(SERIALIZED_NAME_HOSTED_ZONE_ID)
  private String hostedZoneId;

  public static final String SERIALIZED_NAME_STORAGE_ENCRYPTED = "StorageEncrypted";
  @SerializedName(SERIALIZED_NAME_STORAGE_ENCRYPTED)
  private Boolean storageEncrypted;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_DB_CLUSTER_RESOURCE_ID = "DbClusterResourceId";
  @SerializedName(SERIALIZED_NAME_DB_CLUSTER_RESOURCE_ID)
  private String dbClusterResourceId;

  public static final String SERIALIZED_NAME_ASSOCIATED_ROLES = "AssociatedRoles";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_ROLES)
  private List associatedRoles;

  public static final String SERIALIZED_NAME_CLUSTER_CREATE_TIME = "ClusterCreateTime";
  @SerializedName(SERIALIZED_NAME_CLUSTER_CREATE_TIME)
  private String clusterCreateTime;

  public static final String SERIALIZED_NAME_ENABLED_CLOUD_WATCH_LOGS_EXPORTS = "EnabledCloudWatchLogsExports";
  @SerializedName(SERIALIZED_NAME_ENABLED_CLOUD_WATCH_LOGS_EXPORTS)
  private List enabledCloudWatchLogsExports;

  public static final String SERIALIZED_NAME_ENGINE_MODE = "EngineMode";
  @SerializedName(SERIALIZED_NAME_ENGINE_MODE)
  private String engineMode;

  public static final String SERIALIZED_NAME_DELETION_PROTECTION = "DeletionProtection";
  @SerializedName(SERIALIZED_NAME_DELETION_PROTECTION)
  private Boolean deletionProtection;

  public static final String SERIALIZED_NAME_HTTP_ENDPOINT_ENABLED = "HttpEndpointEnabled";
  @SerializedName(SERIALIZED_NAME_HTTP_ENDPOINT_ENABLED)
  private Boolean httpEndpointEnabled;

  public static final String SERIALIZED_NAME_ACTIVITY_STREAM_STATUS = "ActivityStreamStatus";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_STREAM_STATUS)
  private String activityStreamStatus;

  public static final String SERIALIZED_NAME_COPY_TAGS_TO_SNAPSHOT = "CopyTagsToSnapshot";
  @SerializedName(SERIALIZED_NAME_COPY_TAGS_TO_SNAPSHOT)
  private Boolean copyTagsToSnapshot;

  public static final String SERIALIZED_NAME_CROSS_ACCOUNT_CLONE = "CrossAccountClone";
  @SerializedName(SERIALIZED_NAME_CROSS_ACCOUNT_CLONE)
  private Boolean crossAccountClone;

  public static final String SERIALIZED_NAME_DOMAIN_MEMBERSHIPS = "DomainMemberships";
  @SerializedName(SERIALIZED_NAME_DOMAIN_MEMBERSHIPS)
  private List domainMemberships;

  public static final String SERIALIZED_NAME_DB_CLUSTER_PARAMETER_GROUP = "DbClusterParameterGroup";
  @SerializedName(SERIALIZED_NAME_DB_CLUSTER_PARAMETER_GROUP)
  private String dbClusterParameterGroup;

  public static final String SERIALIZED_NAME_DB_SUBNET_GROUP = "DbSubnetGroup";
  @SerializedName(SERIALIZED_NAME_DB_SUBNET_GROUP)
  private String dbSubnetGroup;

  public static final String SERIALIZED_NAME_DB_CLUSTER_OPTION_GROUP_MEMBERSHIPS = "DbClusterOptionGroupMemberships";
  @SerializedName(SERIALIZED_NAME_DB_CLUSTER_OPTION_GROUP_MEMBERSHIPS)
  private List dbClusterOptionGroupMemberships;

  public static final String SERIALIZED_NAME_DB_CLUSTER_IDENTIFIER = "DbClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_DB_CLUSTER_IDENTIFIER)
  private String dbClusterIdentifier;

  public static final String SERIALIZED_NAME_DB_CLUSTER_MEMBERS = "DbClusterMembers";
  @SerializedName(SERIALIZED_NAME_DB_CLUSTER_MEMBERS)
  private List dbClusterMembers;

  public static final String SERIALIZED_NAME_IAM_DATABASE_AUTHENTICATION_ENABLED = "IamDatabaseAuthenticationEnabled";
  @SerializedName(SERIALIZED_NAME_IAM_DATABASE_AUTHENTICATION_ENABLED)
  private Boolean iamDatabaseAuthenticationEnabled;

  public ResourceDetailsAwsRdsDbCluster() {
  }

  public ResourceDetailsAwsRdsDbCluster allocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
    return this;
  }

  /**
   * Get allocatedStorage
   * @return allocatedStorage
   */
  @javax.annotation.Nullable
  public Integer getAllocatedStorage() {
    return allocatedStorage;
  }

  public void setAllocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
  }


  public ResourceDetailsAwsRdsDbCluster availabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  /**
   * Get availabilityZones
   * @return availabilityZones
   */
  @javax.annotation.Nullable
  public List getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public ResourceDetailsAwsRdsDbCluster backupRetentionPeriod(Integer backupRetentionPeriod) {
    this.backupRetentionPeriod = backupRetentionPeriod;
    return this;
  }

  /**
   * Get backupRetentionPeriod
   * @return backupRetentionPeriod
   */
  @javax.annotation.Nullable
  public Integer getBackupRetentionPeriod() {
    return backupRetentionPeriod;
  }

  public void setBackupRetentionPeriod(Integer backupRetentionPeriod) {
    this.backupRetentionPeriod = backupRetentionPeriod;
  }


  public ResourceDetailsAwsRdsDbCluster databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

  /**
   * Get databaseName
   * @return databaseName
   */
  @javax.annotation.Nullable
  public String getDatabaseName() {
    return databaseName;
  }

  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }


  public ResourceDetailsAwsRdsDbCluster status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ResourceDetailsAwsRdsDbCluster endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public ResourceDetailsAwsRdsDbCluster readerEndpoint(String readerEndpoint) {
    this.readerEndpoint = readerEndpoint;
    return this;
  }

  /**
   * Get readerEndpoint
   * @return readerEndpoint
   */
  @javax.annotation.Nullable
  public String getReaderEndpoint() {
    return readerEndpoint;
  }

  public void setReaderEndpoint(String readerEndpoint) {
    this.readerEndpoint = readerEndpoint;
  }


  public ResourceDetailsAwsRdsDbCluster customEndpoints(List customEndpoints) {
    this.customEndpoints = customEndpoints;
    return this;
  }

  /**
   * Get customEndpoints
   * @return customEndpoints
   */
  @javax.annotation.Nullable
  public List getCustomEndpoints() {
    return customEndpoints;
  }

  public void setCustomEndpoints(List customEndpoints) {
    this.customEndpoints = customEndpoints;
  }


  public ResourceDetailsAwsRdsDbCluster multiAz(Boolean multiAz) {
    this.multiAz = multiAz;
    return this;
  }

  /**
   * Get multiAz
   * @return multiAz
   */
  @javax.annotation.Nullable
  public Boolean getMultiAz() {
    return multiAz;
  }

  public void setMultiAz(Boolean multiAz) {
    this.multiAz = multiAz;
  }


  public ResourceDetailsAwsRdsDbCluster engine(String engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }


  public ResourceDetailsAwsRdsDbCluster engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public ResourceDetailsAwsRdsDbCluster port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public ResourceDetailsAwsRdsDbCluster masterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
    return this;
  }

  /**
   * Get masterUsername
   * @return masterUsername
   */
  @javax.annotation.Nullable
  public String getMasterUsername() {
    return masterUsername;
  }

  public void setMasterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
  }


  public ResourceDetailsAwsRdsDbCluster preferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
    return this;
  }

  /**
   * Get preferredBackupWindow
   * @return preferredBackupWindow
   */
  @javax.annotation.Nullable
  public String getPreferredBackupWindow() {
    return preferredBackupWindow;
  }

  public void setPreferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
  }


  public ResourceDetailsAwsRdsDbCluster preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public ResourceDetailsAwsRdsDbCluster readReplicaIdentifiers(List readReplicaIdentifiers) {
    this.readReplicaIdentifiers = readReplicaIdentifiers;
    return this;
  }

  /**
   * Get readReplicaIdentifiers
   * @return readReplicaIdentifiers
   */
  @javax.annotation.Nullable
  public List getReadReplicaIdentifiers() {
    return readReplicaIdentifiers;
  }

  public void setReadReplicaIdentifiers(List readReplicaIdentifiers) {
    this.readReplicaIdentifiers = readReplicaIdentifiers;
  }


  public ResourceDetailsAwsRdsDbCluster vpcSecurityGroups(List vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
    return this;
  }

  /**
   * Get vpcSecurityGroups
   * @return vpcSecurityGroups
   */
  @javax.annotation.Nullable
  public List getVpcSecurityGroups() {
    return vpcSecurityGroups;
  }

  public void setVpcSecurityGroups(List vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
  }


  public ResourceDetailsAwsRdsDbCluster hostedZoneId(String hostedZoneId) {
    this.hostedZoneId = hostedZoneId;
    return this;
  }

  /**
   * Get hostedZoneId
   * @return hostedZoneId
   */
  @javax.annotation.Nullable
  public String getHostedZoneId() {
    return hostedZoneId;
  }

  public void setHostedZoneId(String hostedZoneId) {
    this.hostedZoneId = hostedZoneId;
  }


  public ResourceDetailsAwsRdsDbCluster storageEncrypted(Boolean storageEncrypted) {
    this.storageEncrypted = storageEncrypted;
    return this;
  }

  /**
   * Get storageEncrypted
   * @return storageEncrypted
   */
  @javax.annotation.Nullable
  public Boolean getStorageEncrypted() {
    return storageEncrypted;
  }

  public void setStorageEncrypted(Boolean storageEncrypted) {
    this.storageEncrypted = storageEncrypted;
  }


  public ResourceDetailsAwsRdsDbCluster kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public ResourceDetailsAwsRdsDbCluster dbClusterResourceId(String dbClusterResourceId) {
    this.dbClusterResourceId = dbClusterResourceId;
    return this;
  }

  /**
   * Get dbClusterResourceId
   * @return dbClusterResourceId
   */
  @javax.annotation.Nullable
  public String getDbClusterResourceId() {
    return dbClusterResourceId;
  }

  public void setDbClusterResourceId(String dbClusterResourceId) {
    this.dbClusterResourceId = dbClusterResourceId;
  }


  public ResourceDetailsAwsRdsDbCluster associatedRoles(List associatedRoles) {
    this.associatedRoles = associatedRoles;
    return this;
  }

  /**
   * Get associatedRoles
   * @return associatedRoles
   */
  @javax.annotation.Nullable
  public List getAssociatedRoles() {
    return associatedRoles;
  }

  public void setAssociatedRoles(List associatedRoles) {
    this.associatedRoles = associatedRoles;
  }


  public ResourceDetailsAwsRdsDbCluster clusterCreateTime(String clusterCreateTime) {
    this.clusterCreateTime = clusterCreateTime;
    return this;
  }

  /**
   * Get clusterCreateTime
   * @return clusterCreateTime
   */
  @javax.annotation.Nullable
  public String getClusterCreateTime() {
    return clusterCreateTime;
  }

  public void setClusterCreateTime(String clusterCreateTime) {
    this.clusterCreateTime = clusterCreateTime;
  }


  public ResourceDetailsAwsRdsDbCluster enabledCloudWatchLogsExports(List enabledCloudWatchLogsExports) {
    this.enabledCloudWatchLogsExports = enabledCloudWatchLogsExports;
    return this;
  }

  /**
   * Get enabledCloudWatchLogsExports
   * @return enabledCloudWatchLogsExports
   */
  @javax.annotation.Nullable
  public List getEnabledCloudWatchLogsExports() {
    return enabledCloudWatchLogsExports;
  }

  public void setEnabledCloudWatchLogsExports(List enabledCloudWatchLogsExports) {
    this.enabledCloudWatchLogsExports = enabledCloudWatchLogsExports;
  }


  public ResourceDetailsAwsRdsDbCluster engineMode(String engineMode) {
    this.engineMode = engineMode;
    return this;
  }

  /**
   * Get engineMode
   * @return engineMode
   */
  @javax.annotation.Nullable
  public String getEngineMode() {
    return engineMode;
  }

  public void setEngineMode(String engineMode) {
    this.engineMode = engineMode;
  }


  public ResourceDetailsAwsRdsDbCluster deletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

  /**
   * Get deletionProtection
   * @return deletionProtection
   */
  @javax.annotation.Nullable
  public Boolean getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
  }


  public ResourceDetailsAwsRdsDbCluster httpEndpointEnabled(Boolean httpEndpointEnabled) {
    this.httpEndpointEnabled = httpEndpointEnabled;
    return this;
  }

  /**
   * Get httpEndpointEnabled
   * @return httpEndpointEnabled
   */
  @javax.annotation.Nullable
  public Boolean getHttpEndpointEnabled() {
    return httpEndpointEnabled;
  }

  public void setHttpEndpointEnabled(Boolean httpEndpointEnabled) {
    this.httpEndpointEnabled = httpEndpointEnabled;
  }


  public ResourceDetailsAwsRdsDbCluster activityStreamStatus(String activityStreamStatus) {
    this.activityStreamStatus = activityStreamStatus;
    return this;
  }

  /**
   * Get activityStreamStatus
   * @return activityStreamStatus
   */
  @javax.annotation.Nullable
  public String getActivityStreamStatus() {
    return activityStreamStatus;
  }

  public void setActivityStreamStatus(String activityStreamStatus) {
    this.activityStreamStatus = activityStreamStatus;
  }


  public ResourceDetailsAwsRdsDbCluster copyTagsToSnapshot(Boolean copyTagsToSnapshot) {
    this.copyTagsToSnapshot = copyTagsToSnapshot;
    return this;
  }

  /**
   * Get copyTagsToSnapshot
   * @return copyTagsToSnapshot
   */
  @javax.annotation.Nullable
  public Boolean getCopyTagsToSnapshot() {
    return copyTagsToSnapshot;
  }

  public void setCopyTagsToSnapshot(Boolean copyTagsToSnapshot) {
    this.copyTagsToSnapshot = copyTagsToSnapshot;
  }


  public ResourceDetailsAwsRdsDbCluster crossAccountClone(Boolean crossAccountClone) {
    this.crossAccountClone = crossAccountClone;
    return this;
  }

  /**
   * Get crossAccountClone
   * @return crossAccountClone
   */
  @javax.annotation.Nullable
  public Boolean getCrossAccountClone() {
    return crossAccountClone;
  }

  public void setCrossAccountClone(Boolean crossAccountClone) {
    this.crossAccountClone = crossAccountClone;
  }


  public ResourceDetailsAwsRdsDbCluster domainMemberships(List domainMemberships) {
    this.domainMemberships = domainMemberships;
    return this;
  }

  /**
   * Get domainMemberships
   * @return domainMemberships
   */
  @javax.annotation.Nullable
  public List getDomainMemberships() {
    return domainMemberships;
  }

  public void setDomainMemberships(List domainMemberships) {
    this.domainMemberships = domainMemberships;
  }


  public ResourceDetailsAwsRdsDbCluster dbClusterParameterGroup(String dbClusterParameterGroup) {
    this.dbClusterParameterGroup = dbClusterParameterGroup;
    return this;
  }

  /**
   * Get dbClusterParameterGroup
   * @return dbClusterParameterGroup
   */
  @javax.annotation.Nullable
  public String getDbClusterParameterGroup() {
    return dbClusterParameterGroup;
  }

  public void setDbClusterParameterGroup(String dbClusterParameterGroup) {
    this.dbClusterParameterGroup = dbClusterParameterGroup;
  }


  public ResourceDetailsAwsRdsDbCluster dbSubnetGroup(String dbSubnetGroup) {
    this.dbSubnetGroup = dbSubnetGroup;
    return this;
  }

  /**
   * Get dbSubnetGroup
   * @return dbSubnetGroup
   */
  @javax.annotation.Nullable
  public String getDbSubnetGroup() {
    return dbSubnetGroup;
  }

  public void setDbSubnetGroup(String dbSubnetGroup) {
    this.dbSubnetGroup = dbSubnetGroup;
  }


  public ResourceDetailsAwsRdsDbCluster dbClusterOptionGroupMemberships(List dbClusterOptionGroupMemberships) {
    this.dbClusterOptionGroupMemberships = dbClusterOptionGroupMemberships;
    return this;
  }

  /**
   * Get dbClusterOptionGroupMemberships
   * @return dbClusterOptionGroupMemberships
   */
  @javax.annotation.Nullable
  public List getDbClusterOptionGroupMemberships() {
    return dbClusterOptionGroupMemberships;
  }

  public void setDbClusterOptionGroupMemberships(List dbClusterOptionGroupMemberships) {
    this.dbClusterOptionGroupMemberships = dbClusterOptionGroupMemberships;
  }


  public ResourceDetailsAwsRdsDbCluster dbClusterIdentifier(String dbClusterIdentifier) {
    this.dbClusterIdentifier = dbClusterIdentifier;
    return this;
  }

  /**
   * Get dbClusterIdentifier
   * @return dbClusterIdentifier
   */
  @javax.annotation.Nullable
  public String getDbClusterIdentifier() {
    return dbClusterIdentifier;
  }

  public void setDbClusterIdentifier(String dbClusterIdentifier) {
    this.dbClusterIdentifier = dbClusterIdentifier;
  }


  public ResourceDetailsAwsRdsDbCluster dbClusterMembers(List dbClusterMembers) {
    this.dbClusterMembers = dbClusterMembers;
    return this;
  }

  /**
   * Get dbClusterMembers
   * @return dbClusterMembers
   */
  @javax.annotation.Nullable
  public List getDbClusterMembers() {
    return dbClusterMembers;
  }

  public void setDbClusterMembers(List dbClusterMembers) {
    this.dbClusterMembers = dbClusterMembers;
  }


  public ResourceDetailsAwsRdsDbCluster iamDatabaseAuthenticationEnabled(Boolean iamDatabaseAuthenticationEnabled) {
    this.iamDatabaseAuthenticationEnabled = iamDatabaseAuthenticationEnabled;
    return this;
  }

  /**
   * Get iamDatabaseAuthenticationEnabled
   * @return iamDatabaseAuthenticationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getIamDatabaseAuthenticationEnabled() {
    return iamDatabaseAuthenticationEnabled;
  }

  public void setIamDatabaseAuthenticationEnabled(Boolean iamDatabaseAuthenticationEnabled) {
    this.iamDatabaseAuthenticationEnabled = iamDatabaseAuthenticationEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceDetailsAwsRdsDbCluster resourceDetailsAwsRdsDbCluster = (ResourceDetailsAwsRdsDbCluster) o;
    return Objects.equals(this.allocatedStorage, resourceDetailsAwsRdsDbCluster.allocatedStorage) &&
        Objects.equals(this.availabilityZones, resourceDetailsAwsRdsDbCluster.availabilityZones) &&
        Objects.equals(this.backupRetentionPeriod, resourceDetailsAwsRdsDbCluster.backupRetentionPeriod) &&
        Objects.equals(this.databaseName, resourceDetailsAwsRdsDbCluster.databaseName) &&
        Objects.equals(this.status, resourceDetailsAwsRdsDbCluster.status) &&
        Objects.equals(this.endpoint, resourceDetailsAwsRdsDbCluster.endpoint) &&
        Objects.equals(this.readerEndpoint, resourceDetailsAwsRdsDbCluster.readerEndpoint) &&
        Objects.equals(this.customEndpoints, resourceDetailsAwsRdsDbCluster.customEndpoints) &&
        Objects.equals(this.multiAz, resourceDetailsAwsRdsDbCluster.multiAz) &&
        Objects.equals(this.engine, resourceDetailsAwsRdsDbCluster.engine) &&
        Objects.equals(this.engineVersion, resourceDetailsAwsRdsDbCluster.engineVersion) &&
        Objects.equals(this.port, resourceDetailsAwsRdsDbCluster.port) &&
        Objects.equals(this.masterUsername, resourceDetailsAwsRdsDbCluster.masterUsername) &&
        Objects.equals(this.preferredBackupWindow, resourceDetailsAwsRdsDbCluster.preferredBackupWindow) &&
        Objects.equals(this.preferredMaintenanceWindow, resourceDetailsAwsRdsDbCluster.preferredMaintenanceWindow) &&
        Objects.equals(this.readReplicaIdentifiers, resourceDetailsAwsRdsDbCluster.readReplicaIdentifiers) &&
        Objects.equals(this.vpcSecurityGroups, resourceDetailsAwsRdsDbCluster.vpcSecurityGroups) &&
        Objects.equals(this.hostedZoneId, resourceDetailsAwsRdsDbCluster.hostedZoneId) &&
        Objects.equals(this.storageEncrypted, resourceDetailsAwsRdsDbCluster.storageEncrypted) &&
        Objects.equals(this.kmsKeyId, resourceDetailsAwsRdsDbCluster.kmsKeyId) &&
        Objects.equals(this.dbClusterResourceId, resourceDetailsAwsRdsDbCluster.dbClusterResourceId) &&
        Objects.equals(this.associatedRoles, resourceDetailsAwsRdsDbCluster.associatedRoles) &&
        Objects.equals(this.clusterCreateTime, resourceDetailsAwsRdsDbCluster.clusterCreateTime) &&
        Objects.equals(this.enabledCloudWatchLogsExports, resourceDetailsAwsRdsDbCluster.enabledCloudWatchLogsExports) &&
        Objects.equals(this.engineMode, resourceDetailsAwsRdsDbCluster.engineMode) &&
        Objects.equals(this.deletionProtection, resourceDetailsAwsRdsDbCluster.deletionProtection) &&
        Objects.equals(this.httpEndpointEnabled, resourceDetailsAwsRdsDbCluster.httpEndpointEnabled) &&
        Objects.equals(this.activityStreamStatus, resourceDetailsAwsRdsDbCluster.activityStreamStatus) &&
        Objects.equals(this.copyTagsToSnapshot, resourceDetailsAwsRdsDbCluster.copyTagsToSnapshot) &&
        Objects.equals(this.crossAccountClone, resourceDetailsAwsRdsDbCluster.crossAccountClone) &&
        Objects.equals(this.domainMemberships, resourceDetailsAwsRdsDbCluster.domainMemberships) &&
        Objects.equals(this.dbClusterParameterGroup, resourceDetailsAwsRdsDbCluster.dbClusterParameterGroup) &&
        Objects.equals(this.dbSubnetGroup, resourceDetailsAwsRdsDbCluster.dbSubnetGroup) &&
        Objects.equals(this.dbClusterOptionGroupMemberships, resourceDetailsAwsRdsDbCluster.dbClusterOptionGroupMemberships) &&
        Objects.equals(this.dbClusterIdentifier, resourceDetailsAwsRdsDbCluster.dbClusterIdentifier) &&
        Objects.equals(this.dbClusterMembers, resourceDetailsAwsRdsDbCluster.dbClusterMembers) &&
        Objects.equals(this.iamDatabaseAuthenticationEnabled, resourceDetailsAwsRdsDbCluster.iamDatabaseAuthenticationEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedStorage, availabilityZones, backupRetentionPeriod, databaseName, status, endpoint, readerEndpoint, customEndpoints, multiAz, engine, engineVersion, port, masterUsername, preferredBackupWindow, preferredMaintenanceWindow, readReplicaIdentifiers, vpcSecurityGroups, hostedZoneId, storageEncrypted, kmsKeyId, dbClusterResourceId, associatedRoles, clusterCreateTime, enabledCloudWatchLogsExports, engineMode, deletionProtection, httpEndpointEnabled, activityStreamStatus, copyTagsToSnapshot, crossAccountClone, domainMemberships, dbClusterParameterGroup, dbSubnetGroup, dbClusterOptionGroupMemberships, dbClusterIdentifier, dbClusterMembers, iamDatabaseAuthenticationEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceDetailsAwsRdsDbCluster {\n");
    sb.append("    allocatedStorage: ").append(toIndentedString(allocatedStorage)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    backupRetentionPeriod: ").append(toIndentedString(backupRetentionPeriod)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    readerEndpoint: ").append(toIndentedString(readerEndpoint)).append("\n");
    sb.append("    customEndpoints: ").append(toIndentedString(customEndpoints)).append("\n");
    sb.append("    multiAz: ").append(toIndentedString(multiAz)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    masterUsername: ").append(toIndentedString(masterUsername)).append("\n");
    sb.append("    preferredBackupWindow: ").append(toIndentedString(preferredBackupWindow)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    readReplicaIdentifiers: ").append(toIndentedString(readReplicaIdentifiers)).append("\n");
    sb.append("    vpcSecurityGroups: ").append(toIndentedString(vpcSecurityGroups)).append("\n");
    sb.append("    hostedZoneId: ").append(toIndentedString(hostedZoneId)).append("\n");
    sb.append("    storageEncrypted: ").append(toIndentedString(storageEncrypted)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    dbClusterResourceId: ").append(toIndentedString(dbClusterResourceId)).append("\n");
    sb.append("    associatedRoles: ").append(toIndentedString(associatedRoles)).append("\n");
    sb.append("    clusterCreateTime: ").append(toIndentedString(clusterCreateTime)).append("\n");
    sb.append("    enabledCloudWatchLogsExports: ").append(toIndentedString(enabledCloudWatchLogsExports)).append("\n");
    sb.append("    engineMode: ").append(toIndentedString(engineMode)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("    httpEndpointEnabled: ").append(toIndentedString(httpEndpointEnabled)).append("\n");
    sb.append("    activityStreamStatus: ").append(toIndentedString(activityStreamStatus)).append("\n");
    sb.append("    copyTagsToSnapshot: ").append(toIndentedString(copyTagsToSnapshot)).append("\n");
    sb.append("    crossAccountClone: ").append(toIndentedString(crossAccountClone)).append("\n");
    sb.append("    domainMemberships: ").append(toIndentedString(domainMemberships)).append("\n");
    sb.append("    dbClusterParameterGroup: ").append(toIndentedString(dbClusterParameterGroup)).append("\n");
    sb.append("    dbSubnetGroup: ").append(toIndentedString(dbSubnetGroup)).append("\n");
    sb.append("    dbClusterOptionGroupMemberships: ").append(toIndentedString(dbClusterOptionGroupMemberships)).append("\n");
    sb.append("    dbClusterIdentifier: ").append(toIndentedString(dbClusterIdentifier)).append("\n");
    sb.append("    dbClusterMembers: ").append(toIndentedString(dbClusterMembers)).append("\n");
    sb.append("    iamDatabaseAuthenticationEnabled: ").append(toIndentedString(iamDatabaseAuthenticationEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AllocatedStorage");
    openapiFields.add("AvailabilityZones");
    openapiFields.add("BackupRetentionPeriod");
    openapiFields.add("DatabaseName");
    openapiFields.add("Status");
    openapiFields.add("Endpoint");
    openapiFields.add("ReaderEndpoint");
    openapiFields.add("CustomEndpoints");
    openapiFields.add("MultiAz");
    openapiFields.add("Engine");
    openapiFields.add("EngineVersion");
    openapiFields.add("Port");
    openapiFields.add("MasterUsername");
    openapiFields.add("PreferredBackupWindow");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("ReadReplicaIdentifiers");
    openapiFields.add("VpcSecurityGroups");
    openapiFields.add("HostedZoneId");
    openapiFields.add("StorageEncrypted");
    openapiFields.add("KmsKeyId");
    openapiFields.add("DbClusterResourceId");
    openapiFields.add("AssociatedRoles");
    openapiFields.add("ClusterCreateTime");
    openapiFields.add("EnabledCloudWatchLogsExports");
    openapiFields.add("EngineMode");
    openapiFields.add("DeletionProtection");
    openapiFields.add("HttpEndpointEnabled");
    openapiFields.add("ActivityStreamStatus");
    openapiFields.add("CopyTagsToSnapshot");
    openapiFields.add("CrossAccountClone");
    openapiFields.add("DomainMemberships");
    openapiFields.add("DbClusterParameterGroup");
    openapiFields.add("DbSubnetGroup");
    openapiFields.add("DbClusterOptionGroupMemberships");
    openapiFields.add("DbClusterIdentifier");
    openapiFields.add("DbClusterMembers");
    openapiFields.add("IamDatabaseAuthenticationEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceDetailsAwsRdsDbCluster
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceDetailsAwsRdsDbCluster.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceDetailsAwsRdsDbCluster is not found in the empty JSON string", ResourceDetailsAwsRdsDbCluster.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceDetailsAwsRdsDbCluster.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceDetailsAwsRdsDbCluster` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AllocatedStorage`
      if (jsonObj.get("AllocatedStorage") != null && !jsonObj.get("AllocatedStorage").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AllocatedStorage"));
      }
      // validate the optional field `AvailabilityZones`
      if (jsonObj.get("AvailabilityZones") != null && !jsonObj.get("AvailabilityZones").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AvailabilityZones"));
      }
      // validate the optional field `BackupRetentionPeriod`
      if (jsonObj.get("BackupRetentionPeriod") != null && !jsonObj.get("BackupRetentionPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BackupRetentionPeriod"));
      }
      // validate the optional field `DatabaseName`
      if (jsonObj.get("DatabaseName") != null && !jsonObj.get("DatabaseName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatabaseName"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Endpoint`
      if (jsonObj.get("Endpoint") != null && !jsonObj.get("Endpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Endpoint"));
      }
      // validate the optional field `ReaderEndpoint`
      if (jsonObj.get("ReaderEndpoint") != null && !jsonObj.get("ReaderEndpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReaderEndpoint"));
      }
      // validate the optional field `CustomEndpoints`
      if (jsonObj.get("CustomEndpoints") != null && !jsonObj.get("CustomEndpoints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CustomEndpoints"));
      }
      // validate the optional field `MultiAz`
      if (jsonObj.get("MultiAz") != null && !jsonObj.get("MultiAz").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("MultiAz"));
      }
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Engine"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `MasterUsername`
      if (jsonObj.get("MasterUsername") != null && !jsonObj.get("MasterUsername").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MasterUsername"));
      }
      // validate the optional field `PreferredBackupWindow`
      if (jsonObj.get("PreferredBackupWindow") != null && !jsonObj.get("PreferredBackupWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredBackupWindow"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `ReadReplicaIdentifiers`
      if (jsonObj.get("ReadReplicaIdentifiers") != null && !jsonObj.get("ReadReplicaIdentifiers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ReadReplicaIdentifiers"));
      }
      // validate the optional field `VpcSecurityGroups`
      if (jsonObj.get("VpcSecurityGroups") != null && !jsonObj.get("VpcSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VpcSecurityGroups"));
      }
      // validate the optional field `HostedZoneId`
      if (jsonObj.get("HostedZoneId") != null && !jsonObj.get("HostedZoneId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HostedZoneId"));
      }
      // validate the optional field `StorageEncrypted`
      if (jsonObj.get("StorageEncrypted") != null && !jsonObj.get("StorageEncrypted").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("StorageEncrypted"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `DbClusterResourceId`
      if (jsonObj.get("DbClusterResourceId") != null && !jsonObj.get("DbClusterResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DbClusterResourceId"));
      }
      // validate the optional field `AssociatedRoles`
      if (jsonObj.get("AssociatedRoles") != null && !jsonObj.get("AssociatedRoles").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AssociatedRoles"));
      }
      // validate the optional field `ClusterCreateTime`
      if (jsonObj.get("ClusterCreateTime") != null && !jsonObj.get("ClusterCreateTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterCreateTime"));
      }
      // validate the optional field `EnabledCloudWatchLogsExports`
      if (jsonObj.get("EnabledCloudWatchLogsExports") != null && !jsonObj.get("EnabledCloudWatchLogsExports").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EnabledCloudWatchLogsExports"));
      }
      // validate the optional field `EngineMode`
      if (jsonObj.get("EngineMode") != null && !jsonObj.get("EngineMode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineMode"));
      }
      // validate the optional field `DeletionProtection`
      if (jsonObj.get("DeletionProtection") != null && !jsonObj.get("DeletionProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeletionProtection"));
      }
      // validate the optional field `HttpEndpointEnabled`
      if (jsonObj.get("HttpEndpointEnabled") != null && !jsonObj.get("HttpEndpointEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("HttpEndpointEnabled"));
      }
      // validate the optional field `ActivityStreamStatus`
      if (jsonObj.get("ActivityStreamStatus") != null && !jsonObj.get("ActivityStreamStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ActivityStreamStatus"));
      }
      // validate the optional field `CopyTagsToSnapshot`
      if (jsonObj.get("CopyTagsToSnapshot") != null && !jsonObj.get("CopyTagsToSnapshot").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CopyTagsToSnapshot"));
      }
      // validate the optional field `CrossAccountClone`
      if (jsonObj.get("CrossAccountClone") != null && !jsonObj.get("CrossAccountClone").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CrossAccountClone"));
      }
      // validate the optional field `DomainMemberships`
      if (jsonObj.get("DomainMemberships") != null && !jsonObj.get("DomainMemberships").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DomainMemberships"));
      }
      // validate the optional field `DbClusterParameterGroup`
      if (jsonObj.get("DbClusterParameterGroup") != null && !jsonObj.get("DbClusterParameterGroup").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DbClusterParameterGroup"));
      }
      // validate the optional field `DbSubnetGroup`
      if (jsonObj.get("DbSubnetGroup") != null && !jsonObj.get("DbSubnetGroup").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DbSubnetGroup"));
      }
      // validate the optional field `DbClusterOptionGroupMemberships`
      if (jsonObj.get("DbClusterOptionGroupMemberships") != null && !jsonObj.get("DbClusterOptionGroupMemberships").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DbClusterOptionGroupMemberships"));
      }
      // validate the optional field `DbClusterIdentifier`
      if (jsonObj.get("DbClusterIdentifier") != null && !jsonObj.get("DbClusterIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DbClusterIdentifier"));
      }
      // validate the optional field `DbClusterMembers`
      if (jsonObj.get("DbClusterMembers") != null && !jsonObj.get("DbClusterMembers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DbClusterMembers"));
      }
      // validate the optional field `IamDatabaseAuthenticationEnabled`
      if (jsonObj.get("IamDatabaseAuthenticationEnabled") != null && !jsonObj.get("IamDatabaseAuthenticationEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IamDatabaseAuthenticationEnabled"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceDetailsAwsRdsDbCluster.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceDetailsAwsRdsDbCluster' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceDetailsAwsRdsDbCluster> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceDetailsAwsRdsDbCluster.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceDetailsAwsRdsDbCluster>() {
           @Override
           public void write(JsonWriter out, ResourceDetailsAwsRdsDbCluster value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceDetailsAwsRdsDbCluster read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceDetailsAwsRdsDbCluster given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceDetailsAwsRdsDbCluster
   * @throws IOException if the JSON string is invalid with respect to ResourceDetailsAwsRdsDbCluster
   */
  public static ResourceDetailsAwsRdsDbCluster fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceDetailsAwsRdsDbCluster.class);
  }

  /**
   * Convert an instance of ResourceDetailsAwsRdsDbCluster to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

