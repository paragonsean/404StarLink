/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Defines the behavior of the firewall.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:57:13.081466-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FirewallPolicyDetails {
  public static final String SERIALIZED_NAME_STATEFUL_RULE_GROUP_REFERENCES = "StatefulRuleGroupReferences";
  @SerializedName(SERIALIZED_NAME_STATEFUL_RULE_GROUP_REFERENCES)
  private List statefulRuleGroupReferences;

  public static final String SERIALIZED_NAME_STATELESS_CUSTOM_ACTIONS = "StatelessCustomActions";
  @SerializedName(SERIALIZED_NAME_STATELESS_CUSTOM_ACTIONS)
  private List statelessCustomActions;

  public static final String SERIALIZED_NAME_STATELESS_DEFAULT_ACTIONS = "StatelessDefaultActions";
  @SerializedName(SERIALIZED_NAME_STATELESS_DEFAULT_ACTIONS)
  private List statelessDefaultActions;

  public static final String SERIALIZED_NAME_STATELESS_FRAGMENT_DEFAULT_ACTIONS = "StatelessFragmentDefaultActions";
  @SerializedName(SERIALIZED_NAME_STATELESS_FRAGMENT_DEFAULT_ACTIONS)
  private List statelessFragmentDefaultActions;

  public static final String SERIALIZED_NAME_STATELESS_RULE_GROUP_REFERENCES = "StatelessRuleGroupReferences";
  @SerializedName(SERIALIZED_NAME_STATELESS_RULE_GROUP_REFERENCES)
  private List statelessRuleGroupReferences;

  public FirewallPolicyDetails() {
  }

  public FirewallPolicyDetails statefulRuleGroupReferences(List statefulRuleGroupReferences) {
    this.statefulRuleGroupReferences = statefulRuleGroupReferences;
    return this;
  }

  /**
   * Get statefulRuleGroupReferences
   * @return statefulRuleGroupReferences
   */
  @javax.annotation.Nullable
  public List getStatefulRuleGroupReferences() {
    return statefulRuleGroupReferences;
  }

  public void setStatefulRuleGroupReferences(List statefulRuleGroupReferences) {
    this.statefulRuleGroupReferences = statefulRuleGroupReferences;
  }


  public FirewallPolicyDetails statelessCustomActions(List statelessCustomActions) {
    this.statelessCustomActions = statelessCustomActions;
    return this;
  }

  /**
   * Get statelessCustomActions
   * @return statelessCustomActions
   */
  @javax.annotation.Nullable
  public List getStatelessCustomActions() {
    return statelessCustomActions;
  }

  public void setStatelessCustomActions(List statelessCustomActions) {
    this.statelessCustomActions = statelessCustomActions;
  }


  public FirewallPolicyDetails statelessDefaultActions(List statelessDefaultActions) {
    this.statelessDefaultActions = statelessDefaultActions;
    return this;
  }

  /**
   * Get statelessDefaultActions
   * @return statelessDefaultActions
   */
  @javax.annotation.Nullable
  public List getStatelessDefaultActions() {
    return statelessDefaultActions;
  }

  public void setStatelessDefaultActions(List statelessDefaultActions) {
    this.statelessDefaultActions = statelessDefaultActions;
  }


  public FirewallPolicyDetails statelessFragmentDefaultActions(List statelessFragmentDefaultActions) {
    this.statelessFragmentDefaultActions = statelessFragmentDefaultActions;
    return this;
  }

  /**
   * Get statelessFragmentDefaultActions
   * @return statelessFragmentDefaultActions
   */
  @javax.annotation.Nullable
  public List getStatelessFragmentDefaultActions() {
    return statelessFragmentDefaultActions;
  }

  public void setStatelessFragmentDefaultActions(List statelessFragmentDefaultActions) {
    this.statelessFragmentDefaultActions = statelessFragmentDefaultActions;
  }


  public FirewallPolicyDetails statelessRuleGroupReferences(List statelessRuleGroupReferences) {
    this.statelessRuleGroupReferences = statelessRuleGroupReferences;
    return this;
  }

  /**
   * Get statelessRuleGroupReferences
   * @return statelessRuleGroupReferences
   */
  @javax.annotation.Nullable
  public List getStatelessRuleGroupReferences() {
    return statelessRuleGroupReferences;
  }

  public void setStatelessRuleGroupReferences(List statelessRuleGroupReferences) {
    this.statelessRuleGroupReferences = statelessRuleGroupReferences;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FirewallPolicyDetails firewallPolicyDetails = (FirewallPolicyDetails) o;
    return Objects.equals(this.statefulRuleGroupReferences, firewallPolicyDetails.statefulRuleGroupReferences) &&
        Objects.equals(this.statelessCustomActions, firewallPolicyDetails.statelessCustomActions) &&
        Objects.equals(this.statelessDefaultActions, firewallPolicyDetails.statelessDefaultActions) &&
        Objects.equals(this.statelessFragmentDefaultActions, firewallPolicyDetails.statelessFragmentDefaultActions) &&
        Objects.equals(this.statelessRuleGroupReferences, firewallPolicyDetails.statelessRuleGroupReferences);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statefulRuleGroupReferences, statelessCustomActions, statelessDefaultActions, statelessFragmentDefaultActions, statelessRuleGroupReferences);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FirewallPolicyDetails {\n");
    sb.append("    statefulRuleGroupReferences: ").append(toIndentedString(statefulRuleGroupReferences)).append("\n");
    sb.append("    statelessCustomActions: ").append(toIndentedString(statelessCustomActions)).append("\n");
    sb.append("    statelessDefaultActions: ").append(toIndentedString(statelessDefaultActions)).append("\n");
    sb.append("    statelessFragmentDefaultActions: ").append(toIndentedString(statelessFragmentDefaultActions)).append("\n");
    sb.append("    statelessRuleGroupReferences: ").append(toIndentedString(statelessRuleGroupReferences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StatefulRuleGroupReferences");
    openapiFields.add("StatelessCustomActions");
    openapiFields.add("StatelessDefaultActions");
    openapiFields.add("StatelessFragmentDefaultActions");
    openapiFields.add("StatelessRuleGroupReferences");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FirewallPolicyDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FirewallPolicyDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FirewallPolicyDetails is not found in the empty JSON string", FirewallPolicyDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FirewallPolicyDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FirewallPolicyDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `StatefulRuleGroupReferences`
      if (jsonObj.get("StatefulRuleGroupReferences") != null && !jsonObj.get("StatefulRuleGroupReferences").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StatefulRuleGroupReferences"));
      }
      // validate the optional field `StatelessCustomActions`
      if (jsonObj.get("StatelessCustomActions") != null && !jsonObj.get("StatelessCustomActions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StatelessCustomActions"));
      }
      // validate the optional field `StatelessDefaultActions`
      if (jsonObj.get("StatelessDefaultActions") != null && !jsonObj.get("StatelessDefaultActions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StatelessDefaultActions"));
      }
      // validate the optional field `StatelessFragmentDefaultActions`
      if (jsonObj.get("StatelessFragmentDefaultActions") != null && !jsonObj.get("StatelessFragmentDefaultActions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StatelessFragmentDefaultActions"));
      }
      // validate the optional field `StatelessRuleGroupReferences`
      if (jsonObj.get("StatelessRuleGroupReferences") != null && !jsonObj.get("StatelessRuleGroupReferences").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StatelessRuleGroupReferences"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FirewallPolicyDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FirewallPolicyDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FirewallPolicyDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FirewallPolicyDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<FirewallPolicyDetails>() {
           @Override
           public void write(JsonWriter out, FirewallPolicyDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FirewallPolicyDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FirewallPolicyDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FirewallPolicyDetails
   * @throws IOException if the JSON string is invalid with respect to FirewallPolicyDetails
   */
  public static FirewallPolicyDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FirewallPolicyDetails.class);
  }

  /**
   * Convert an instance of FirewallPolicyDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

