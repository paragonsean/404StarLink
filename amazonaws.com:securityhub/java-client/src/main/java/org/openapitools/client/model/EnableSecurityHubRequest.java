/*
 * AWS SecurityHub
 * <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EnableSecurityHubRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T01:57:13.081466-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnableSecurityHubRequest {
  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_ENABLE_DEFAULT_STANDARDS = "EnableDefaultStandards";
  @SerializedName(SERIALIZED_NAME_ENABLE_DEFAULT_STANDARDS)
  private Boolean enableDefaultStandards;

  /**
   * &lt;p&gt;This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to &lt;code&gt;SECURITY_CONTROL&lt;/code&gt;, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.&lt;/p&gt; &lt;p&gt;If the value for this field is set to &lt;code&gt;STANDARD_CONTROL&lt;/code&gt;, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.&lt;/p&gt; &lt;p&gt;The value for this field in a member account matches the value in the administrator account. For accounts that aren&#39;t part of an organization, the default value of this field is &lt;code&gt;SECURITY_CONTROL&lt;/code&gt; if you enabled Security Hub on or after February 23, 2023.&lt;/p&gt;
   */
  @JsonAdapter(ControlFindingGeneratorEnum.Adapter.class)
  public enum ControlFindingGeneratorEnum {
    STANDARD_CONTROL("STANDARD_CONTROL"),
    
    SECURITY_CONTROL("SECURITY_CONTROL");

    private String value;

    ControlFindingGeneratorEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ControlFindingGeneratorEnum fromValue(String value) {
      for (ControlFindingGeneratorEnum b : ControlFindingGeneratorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ControlFindingGeneratorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ControlFindingGeneratorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ControlFindingGeneratorEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ControlFindingGeneratorEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ControlFindingGeneratorEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CONTROL_FINDING_GENERATOR = "ControlFindingGenerator";
  @SerializedName(SERIALIZED_NAME_CONTROL_FINDING_GENERATOR)
  private ControlFindingGeneratorEnum controlFindingGenerator;

  public EnableSecurityHubRequest() {
  }

  public EnableSecurityHubRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public EnableSecurityHubRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * The tags to add to the hub resource when you enable Security Hub.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public EnableSecurityHubRequest enableDefaultStandards(Boolean enableDefaultStandards) {
    this.enableDefaultStandards = enableDefaultStandards;
    return this;
  }

  /**
   * Whether to enable the security standards that Security Hub has designated as automatically enabled. If you do not provide a value for &lt;code&gt;EnableDefaultStandards&lt;/code&gt;, it is set to &lt;code&gt;true&lt;/code&gt;. To not enable the automatically enabled standards, set &lt;code&gt;EnableDefaultStandards&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.
   * @return enableDefaultStandards
   */
  @javax.annotation.Nullable
  public Boolean getEnableDefaultStandards() {
    return enableDefaultStandards;
  }

  public void setEnableDefaultStandards(Boolean enableDefaultStandards) {
    this.enableDefaultStandards = enableDefaultStandards;
  }


  public EnableSecurityHubRequest controlFindingGenerator(ControlFindingGeneratorEnum controlFindingGenerator) {
    this.controlFindingGenerator = controlFindingGenerator;
    return this;
  }

  /**
   * &lt;p&gt;This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to &lt;code&gt;SECURITY_CONTROL&lt;/code&gt;, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.&lt;/p&gt; &lt;p&gt;If the value for this field is set to &lt;code&gt;STANDARD_CONTROL&lt;/code&gt;, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.&lt;/p&gt; &lt;p&gt;The value for this field in a member account matches the value in the administrator account. For accounts that aren&#39;t part of an organization, the default value of this field is &lt;code&gt;SECURITY_CONTROL&lt;/code&gt; if you enabled Security Hub on or after February 23, 2023.&lt;/p&gt;
   * @return controlFindingGenerator
   */
  @javax.annotation.Nullable
  public ControlFindingGeneratorEnum getControlFindingGenerator() {
    return controlFindingGenerator;
  }

  public void setControlFindingGenerator(ControlFindingGeneratorEnum controlFindingGenerator) {
    this.controlFindingGenerator = controlFindingGenerator;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnableSecurityHubRequest enableSecurityHubRequest = (EnableSecurityHubRequest) o;
    return Objects.equals(this.tags, enableSecurityHubRequest.tags) &&
        Objects.equals(this.enableDefaultStandards, enableSecurityHubRequest.enableDefaultStandards) &&
        Objects.equals(this.controlFindingGenerator, enableSecurityHubRequest.controlFindingGenerator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, enableDefaultStandards, controlFindingGenerator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnableSecurityHubRequest {\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    enableDefaultStandards: ").append(toIndentedString(enableDefaultStandards)).append("\n");
    sb.append("    controlFindingGenerator: ").append(toIndentedString(controlFindingGenerator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Tags");
    openapiFields.add("EnableDefaultStandards");
    openapiFields.add("ControlFindingGenerator");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnableSecurityHubRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnableSecurityHubRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnableSecurityHubRequest is not found in the empty JSON string", EnableSecurityHubRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnableSecurityHubRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnableSecurityHubRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ControlFindingGenerator") != null && !jsonObj.get("ControlFindingGenerator").isJsonNull()) && !jsonObj.get("ControlFindingGenerator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ControlFindingGenerator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ControlFindingGenerator").toString()));
      }
      // validate the optional field `ControlFindingGenerator`
      if (jsonObj.get("ControlFindingGenerator") != null && !jsonObj.get("ControlFindingGenerator").isJsonNull()) {
        ControlFindingGeneratorEnum.validateJsonElement(jsonObj.get("ControlFindingGenerator"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnableSecurityHubRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnableSecurityHubRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnableSecurityHubRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnableSecurityHubRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<EnableSecurityHubRequest>() {
           @Override
           public void write(JsonWriter out, EnableSecurityHubRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnableSecurityHubRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnableSecurityHubRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnableSecurityHubRequest
   * @throws IOException if the JSON string is invalid with respect to EnableSecurityHubRequest
   */
  public static EnableSecurityHubRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnableSecurityHubRequest.class);
  }

  /**
   * Convert an instance of EnableSecurityHubRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

